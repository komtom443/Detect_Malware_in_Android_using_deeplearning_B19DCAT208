import dgl

from typing import Union, Tuple
from pathlib import Path

class Dataset:
    def __init__(
            self,
            source_path: Union[str, Path],
            ratios: Tuple[float, float] = [.75, .25] 
            ) -> None:
        source_path = Path(source_path)
        if not source_path.exists():
            raise FileNotFoundError(f"File nguồn {source_path} không tồn tại!")
        self.none_split = [self.__get_sample(path) for path in source_path.iterdir()]
    
    def __get_sample(self,
                     path: Union[str, Path]
                    ) -> Tuple[dgl.DGLGraph, int]:
        label = 1 if 'benig' in str(Path(path).stem).lower() else 0
        graphs, _ = dgl.data.utils.load_graphs(str(path))
        graph: dgl.DGLGraph = dgl.add_self_loop(graphs[0])
        print(graph, label)
        return [graph, label]
