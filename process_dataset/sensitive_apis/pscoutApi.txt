|com.android.server.pm.PackageManagerService| |freeStorageAndNotify| |long,android.content.pm.IPackageDataObserver|
|android.content.pm.IPackageManager$Stub$Proxy| |freeStorageAndNotify| |long,android.content.pm.IPackageDataObserver|
|android.content.pm.IPackageManager$Stub| |freeStorageAndNotify| |long,android.content.pm.IPackageDataObserver|
|android.content.pm.IPackageManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager| |freeStorageAndNotify| |long,android.content.pm.IPackageDataObserver|
|com.android.server.pm.PackageManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ApplicationPackageManager| |freeStorageAndNotify| |long,android.content.pm.IPackageDataObserver|
|com.android.commands.pm.Pm| |runTrimCaches| ||
|com.android.server.storage.DeviceStorageMonitorService| |clearCache| ||
|com.android.commands.pm.Pm| |run| |java.lang.String[]|
|com.android.server.storage.DeviceStorageMonitorService| |checkMemory| |boolean|
|com.android.commands.pm.Pm| |main| |java.lang.String[]|
|com.android.server.storage.DeviceStorageMonitorService| |onStart| ||
|com.android.server.SystemService| |onStart| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.Class|
|com.android.server.SystemServer| |startBootstrapServices| ||
|com.android.server.SystemServer| |startCoreServices| ||
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.String|
|com.android.server.SystemServer| |run| ||
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.server.pm.PackageManagerService| |freeStorage| |long,android.content.IntentSender|
|android.content.pm.IPackageManager$Stub$Proxy| |freeStorage| |long,android.content.IntentSender|
|android.content.pm.IPackageManager$Stub| |freeStorage| |long,android.content.IntentSender|
|android.content.pm.IPackageManager| |freeStorage| |long,android.content.IntentSender|
|android.app.ApplicationPackageManager| |freeStorage| |long,android.content.IntentSender|
|com.android.server.pm.PackageManagerService| |getPackageSizeInfo| |java.lang.String,int,android.content.pm.IPackageStatsObserver|
|android.content.pm.IPackageManager$Stub$Proxy| |getPackageSizeInfo| |java.lang.String,int,android.content.pm.IPackageStatsObserver|
|android.content.pm.IPackageManager$Stub| |getPackageSizeInfo| |java.lang.String,int,android.content.pm.IPackageStatsObserver|
|android.content.pm.IPackageManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager| |getPackageSizeInfo| |java.lang.String,int,android.content.pm.IPackageStatsObserver|
|com.android.server.pm.PackageManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ApplicationPackageManager| |getPackageSizeInfo| |java.lang.String,int,android.content.pm.IPackageStatsObserver|
|com.android.server.wallpaper.WallpaperManagerService| |setDimensionHints| |int,int|
|android.app.IWallpaperManager$Stub$Proxy| |setDimensionHints| |int,int|
|android.app.IWallpaperManager$Stub| |setDimensionHints| |int,int|
|android.app.IWallpaperManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IWallpaperManager| |setDimensionHints| |int,int|
|com.android.server.wallpaper.WallpaperManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.WallpaperManager| |suggestDesiredDimensions| |int,int|
|com.android.server.wallpaper.WallpaperManagerService| |setDisplayPadding| |android.graphics.Rect|
|android.app.IWallpaperManager$Stub$Proxy| |setDisplayPadding| |android.graphics.Rect|
|android.app.IWallpaperManager$Stub| |setDisplayPadding| |android.graphics.Rect|
|android.app.IWallpaperManager| |setDisplayPadding| |android.graphics.Rect|
|android.app.WallpaperManager| |setDisplayPadding| |android.graphics.Rect|
|com.android.internal.telephony.IccSmsInterfaceManager| |enforceReceiveAndSend| |java.lang.String|
|com.android.internal.telephony.IccSmsInterfaceManager| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.IccSmsInterfaceManager| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.UiccSmsController| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.UiccSmsController| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub$Proxy| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.UiccSmsController| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub$Proxy| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.UiccSmsController| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub$Proxy| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|android.telephony.SmsManager| |copyMessageToIcc| |byte[],byte[],int|
|com.android.internal.telephony.UiccSmsController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISms| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|android.telephony.SmsManager| |deleteMessageFromIcc| |int|
|android.telephony.SmsManager| |updateMessageOnIcc| |int,int,byte[]|
|com.android.internal.telephony.ISms| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|android.telephony.gsm.SmsManager| |copyMessageToSim| |byte[],byte[],int|
|android.telephony.gsm.SmsManager| |deleteMessageFromSim| |int|
|android.telephony.gsm.SmsManager| |updateMessageOnSim| |int,int,byte[]|
|com.android.internal.telephony.IccSmsInterfaceManager| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.UiccSmsController| |getAllMessagesFromIccEfForSubscriber| |int,java.lang.String|
|com.android.internal.telephony.ISms$Stub$Proxy| |getAllMessagesFromIccEfForSubscriber| |int,java.lang.String|
|com.android.internal.telephony.ISms$Stub| |getAllMessagesFromIccEfForSubscriber| |int,java.lang.String|
|com.android.internal.telephony.UiccSmsController| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.ISms| |getAllMessagesFromIccEfForSubscriber| |int,java.lang.String|
|com.android.internal.telephony.ISms$Stub$Proxy| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.ISms$Stub| |getAllMessagesFromIccEf| |java.lang.String|
|android.telephony.SmsManager| |getAllMessagesFromIcc| ||
|com.android.internal.telephony.ISms| |getAllMessagesFromIccEf| |java.lang.String|
|android.telephony.gsm.SmsManager| |getAllMessagesFromSim| ||
|com.android.internal.telephony.IccSmsInterfaceManager| |enableGsmBroadcastRange| |int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |enableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.ISms$Stub| |enableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms$Stub| |enableCellBroadcastRange| |int,int,int|
|android.telephony.SmsManager| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms| |enableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms$Stub| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms| |enableCellBroadcastRange| |int,int,int|
|android.telephony.SmsManager| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |disableGsmBroadcastRange| |int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |disableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.ISms$Stub| |disableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms$Stub| |disableCellBroadcastRange| |int,int,int|
|android.telephony.SmsManager| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms| |disableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms$Stub| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms| |disableCellBroadcastRange| |int,int,int|
|android.telephony.SmsManager| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |enableCdmaBroadcastRange| |int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |disableCdmaBroadcastRange| |int,int|
|com.android.internal.telephony.InboundSmsHandler| |dispatchSmsDeliveryIntent| |byte[][],java.lang.String,int,android.content.BroadcastReceiver|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |dispatchSmsDeliveryIntent| |byte[][],java.lang.String,int,android.content.BroadcastReceiver|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dispatchSmsDeliveryIntent| |byte[][],java.lang.String,int,android.content.BroadcastReceiver|
|com.android.internal.telephony.InboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilterCallback| |onFilterComplete| |boolean|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler$DeliveringState| |processMessage| |android.os.Message|
|android.service.carrier.ICarrierMessagingCallback$Stub$Proxy| |onFilterComplete| |boolean|
|com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilter| |filterSms| |java.lang.String,com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilterCallback|
|com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilter| |onServiceReady| |android.service.carrier.ICarrierMessagingService|
|com.android.internal.util.State| |processMessage| |android.os.Message|
|com.android.internal.util.IState| |processMessage| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |processMsg| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DormantState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$ScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$NoLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |processMessage| |android.os.Message|
|com.android.internal.telephony.InboundSmsHandler$SmsBroadcastReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler| |handleServiceCategoryProgramData| |com.android.internal.telephony.cdma.SmsMessage|
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler| |handleSmsMessage| |android.os.Message|
|com.android.internal.telephony.WakeLockStateMachine| |handleSmsMessage| |android.os.Message|
|com.android.internal.telephony.WakeLockStateMachine$IdleState| |processMessage| |android.os.Message|
|com.android.server.am.ActivityManagerService| |killBackgroundProcesses| |java.lang.String,int|
|android.app.ActivityManagerNative| |killBackgroundProcesses| |java.lang.String,int|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |killBackgroundProcesses| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityManager| |killBackgroundProcesses| |java.lang.String|
|com.android.commands.am.Am| |runKill| ||
|android.app.ActivityManager| |restartPackage| |java.lang.String|
|com.android.commands.am.Am| |onRun| ||
|com.android.internal.os.BaseCommand| |onRun| ||
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|android.media.AudioService| |checkAudioSettingsPermission| |java.lang.String|
|android.media.AudioService| |setBluetoothScoOn| |boolean|
|android.media.AudioService| |setMicrophoneMute| |boolean,java.lang.String|
|android.media.AudioService| |setMode| |int,android.os.IBinder|
|android.media.AudioService| |setSpeakerphoneOn| |boolean|
|android.media.AudioService| |startBluetoothScoInt| |android.os.IBinder,int|
|android.media.AudioService| |stopBluetoothSco| |android.os.IBinder|
|android.media.IAudioService$Stub$Proxy| |setBluetoothScoOn| |boolean|
|android.media.IAudioService$Stub| |setBluetoothScoOn| |boolean|
|android.media.IAudioService$Stub$Proxy| |setMicrophoneMute| |boolean,java.lang.String|
|android.media.IAudioService$Stub| |setMicrophoneMute| |boolean,java.lang.String|
|android.media.IAudioService$Stub$Proxy| |setMode| |int,android.os.IBinder|
|android.media.IAudioService$Stub| |setMode| |int,android.os.IBinder|
|android.media.IAudioService$Stub$Proxy| |setSpeakerphoneOn| |boolean|
|android.media.IAudioService$Stub| |setSpeakerphoneOn| |boolean|
|android.media.AudioService| |startBluetoothSco| |android.os.IBinder,int|
|android.media.AudioService| |startBluetoothScoVirtualCall| |android.os.IBinder|
|android.media.IAudioService$Stub$Proxy| |stopBluetoothSco| |android.os.IBinder|
|android.media.IAudioService$Stub| |stopBluetoothSco| |android.os.IBinder|
|android.media.IAudioService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.media.IAudioService| |setBluetoothScoOn| |boolean|
|android.media.IAudioService| |setMicrophoneMute| |boolean,java.lang.String|
|android.media.IAudioService| |setMode| |int,android.os.IBinder|
|android.media.IAudioService| |setSpeakerphoneOn| |boolean|
|android.media.IAudioService$Stub$Proxy| |startBluetoothSco| |android.os.IBinder,int|
|android.media.IAudioService$Stub| |startBluetoothSco| |android.os.IBinder,int|
|android.media.IAudioService$Stub$Proxy| |startBluetoothScoVirtualCall| |android.os.IBinder|
|android.media.IAudioService$Stub| |startBluetoothScoVirtualCall| |android.os.IBinder|
|android.media.IAudioService| |stopBluetoothSco| |android.os.IBinder|
|android.media.AudioService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.media.AudioManager| |setBluetoothScoOn| |boolean|
|android.media.AudioManager| |setMicrophoneMute| |boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setUserRestriction| |android.content.ComponentName,java.lang.String,boolean|
|android.media.AudioManager| |setMode| |int|
|android.media.AudioManager| |setSpeakerphoneOn| |boolean|
|android.media.IAudioService| |startBluetoothSco| |android.os.IBinder,int|
|android.media.IAudioService| |startBluetoothScoVirtualCall| |android.os.IBinder|
|android.media.AudioManager| |stopBluetoothSco| ||
|com.android.server.devicepolicy.DevicePolicyManagerService| |clearUserRestrictions| |android.os.UserHandle|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setUserRestriction| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager$Stub| |setUserRestriction| |android.content.ComponentName,java.lang.String,boolean|
|android.net.sip.SipAudioCall| |setSpeakerMode| |boolean|
|android.media.AudioManager| |startBluetoothSco| ||
|android.media.AudioManager| |startBluetoothScoVirtualCall| ||
|android.app.admin.IDevicePolicyManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.admin.IDevicePolicyManager| |setUserRestriction| |android.content.ComponentName,java.lang.String,boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.media.AudioManager| |isBluetoothA2dpOn| ||
|android.inputmethodservice.KeyboardView| |sendAccessibilityEventForUnicodeCharacter| |int,int|
|android.inputmethodservice.KeyboardView| |showPreview| |int|
|com.android.internal.widget.PasswordEntryKeyboardView| |sendAccessibilityEventForUnicodeCharacter| |int,int|
|android.inputmethodservice.KeyboardView| |onModifiedTouchEvent| |android.view.MotionEvent,boolean|
|android.inputmethodservice.KeyboardView| |openPopupIfRequired| |android.view.MotionEvent|
|android.inputmethodservice.KeyboardView| |setKeyboard| |android.inputmethodservice.Keyboard|
|com.android.internal.widget.PasswordEntryKeyboardView| |showPreview| |int|
|android.inputmethodservice.KeyboardView| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.PasswordEntryKeyboardView| |onModifiedTouchEvent| |android.view.MotionEvent,boolean|
|android.inputmethodservice.KeyboardView| |access$400| |android.inputmethodservice.KeyboardView,android.view.MotionEvent|
|com.android.internal.widget.PasswordEntryKeyboardView| |openPopupIfRequired| |android.view.MotionEvent|
|android.inputmethodservice.KeyboardView| |onLongPress| |android.inputmethodservice.Keyboard$Key|
|com.android.internal.widget.PasswordEntryKeyboardHelper| |handleModeChange| ||
|com.android.internal.widget.PasswordEntryKeyboardHelper| |handleShift| ||
|com.android.internal.widget.PasswordEntryKeyboardHelper| |setKeyboardMode| |int|
|com.android.internal.widget.PasswordEntryKeyboardView| |setKeyboard| |android.inputmethodservice.Keyboard|
|android.inputmethodservice.KeyboardView| |onHoverEvent| |android.view.MotionEvent|
|com.android.internal.widget.PasswordEntryKeyboardView| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.PasswordEntryKeyboardView| |access$400| |android.inputmethodservice.KeyboardView,android.view.MotionEvent|
|com.android.internal.widget.PasswordEntryKeyboardView| |onLongPress| |android.inputmethodservice.Keyboard$Key|
|com.android.internal.widget.PasswordEntryKeyboardHelper| |onKey| |int,int[]|
|com.android.internal.widget.PasswordEntryKeyboardView| |onHoverEvent| |android.view.MotionEvent|
|android.media.AudioManager| |isWiredHeadsetOn| ||
|android.media.AudioManager| |setParameter| |java.lang.String,java.lang.String|
|android.media.AudioManager| |setParameters| |java.lang.String|
|android.server.BluetoothA2dpService| |checkSinkSuspendState| |int|
|android.server.BluetoothA2dpService| |handleSinkStateChange| |android.bluetooth.BluetoothDevice,int,int|
|android.server.BluetoothA2dpService| |onBluetoothEnable| ||
|android.server.BluetoothA2dpService| |onBluetoothDisable| ||
|android.server.BluetoothA2dpService| |resumeSink| |android.bluetooth.BluetoothDevice|
|android.server.BluetoothA2dpService| |suspendSink| |android.bluetooth.BluetoothDevice|
|com.android.server.wallpaper.WallpaperManagerService| |setWallpaper| |java.lang.String|
|android.app.IWallpaperManager$Stub$Proxy| |setWallpaper| |java.lang.String|
|android.app.IWallpaperManager$Stub| |setWallpaper| |java.lang.String|
|android.app.IWallpaperManager| |setWallpaper| |java.lang.String|
|android.app.IWallpaperManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.WallpaperManager| |setBitmap| |android.graphics.Bitmap|
|android.app.WallpaperManager| |setResource| |int|
|android.app.WallpaperManager| |setStream| |java.io.InputStream|
|com.android.server.wallpaper.WallpaperManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ContextImpl| |setWallpaper| |android.graphics.Bitmap|
|android.app.ContextImpl| |setWallpaper| |java.io.InputStream|
|android.app.WallpaperManager| |clear| ||
|android.content.Context| |setWallpaper| |android.graphics.Bitmap|
|android.content.Context| |setWallpaper| |java.io.InputStream|
|android.app.ContextImpl| |clearWallpaper| ||
|android.content.ContextWrapper| |setWallpaper| |android.graphics.Bitmap|
|android.content.ContextWrapper| |setWallpaper| |java.io.InputStream|
|android.content.Context| |clearWallpaper| ||
|android.accessibilityservice.AccessibilityService| |setWallpaper| |android.graphics.Bitmap|
|android.accounts.AccountAuthenticatorActivity| |setWallpaper| |android.graphics.Bitmap|
|android.accounts.CantAddAccountActivity| |setWallpaper| |android.graphics.Bitmap|
|android.accounts.ChooseAccountActivity| |setWallpaper| |android.graphics.Bitmap|
|android.accounts.ChooseAccountTypeActivity| |setWallpaper| |android.graphics.Bitmap|
|android.accounts.ChooseTypeAndAccountActivity| |setWallpaper| |android.graphics.Bitmap|
|android.accounts.GrantCredentialsPermissionActivity| |setWallpaper| |android.graphics.Bitmap|
|android.app.ActivityGroup| |setWallpaper| |android.graphics.Bitmap|
|android.app.Activity| |setWallpaper| |android.graphics.Bitmap|
|android.app.AliasActivity| |setWallpaper| |android.graphics.Bitmap|
|android.app.Application| |setWallpaper| |android.graphics.Bitmap|
|android.app.backup.BackupAgentHelper| |setWallpaper| |android.graphics.Bitmap|
|android.app.backup.BackupAgent| |setWallpaper| |android.graphics.Bitmap|
|android.app.backup.FullBackupAgent| |setWallpaper| |android.graphics.Bitmap|
|android.app.ExpandableListActivity| |setWallpaper| |android.graphics.Bitmap|
|android.app.IntentService| |setWallpaper| |android.graphics.Bitmap|
|android.app.job.JobService| |setWallpaper| |android.graphics.Bitmap|
|android.app.LauncherActivity| |setWallpaper| |android.graphics.Bitmap|
|android.app.ListActivity| |setWallpaper| |android.graphics.Bitmap|
|android.app.NativeActivity| |setWallpaper| |android.graphics.Bitmap|
|android.app.Presentation$1| |setWallpaper| |android.graphics.Bitmap|
|android.app.ReceiverRestrictedContext| |setWallpaper| |android.graphics.Bitmap|
|android.app.Service| |setWallpaper| |android.graphics.Bitmap|
|android.app.TabActivity| |setWallpaper| |android.graphics.Bitmap|
|android.content.MutableContextWrapper| |setWallpaper| |android.graphics.Bitmap|
|android.content.SyncActivityTooManyDeletes| |setWallpaper| |android.graphics.Bitmap|
|android.hardware.location.GeofenceHardwareService| |setWallpaper| |android.graphics.Bitmap|
|android.inputmethodservice.AbstractInputMethodService| |setWallpaper| |android.graphics.Bitmap|
|android.inputmethodservice.InputMethodService| |setWallpaper| |android.graphics.Bitmap|
|android.location.SettingInjectorService| |setWallpaper| |android.graphics.Bitmap|
|android.media.tv.TvInputService| |setWallpaper| |android.graphics.Bitmap|
|android.nfc.cardemulation.HostApduService| |setWallpaper| |android.graphics.Bitmap|
|android.nfc.cardemulation.OffHostApduService| |setWallpaper| |android.graphics.Bitmap|
|android.preference.PreferenceActivity| |setWallpaper| |android.graphics.Bitmap|
|android.printservice.PrintService| |setWallpaper| |android.graphics.Bitmap|
|android.service.carrier.CarrierMessagingService| |setWallpaper| |android.graphics.Bitmap|
|android.service.dreams.DreamService| |setWallpaper| |android.graphics.Bitmap|
|android.service.media.MediaBrowserService| |setWallpaper| |android.graphics.Bitmap|
|android.service.notification.ConditionProviderService| |setWallpaper| |android.graphics.Bitmap|
|android.service.notification.NotificationListenerService| |setWallpaper| |android.graphics.Bitmap|
|android.service.textservice.SpellCheckerService| |setWallpaper| |android.graphics.Bitmap|
|android.service.trust.TrustAgentService| |setWallpaper| |android.graphics.Bitmap|
|android.service.voice.VoiceInteractionService| |setWallpaper| |android.graphics.Bitmap|
|android.service.voice.VoiceInteractionSessionService| |setWallpaper| |android.graphics.Bitmap|
|android.service.wallpaper.WallpaperService| |setWallpaper| |android.graphics.Bitmap|
|android.service.wallpaper.WallpaperSettingsActivity| |setWallpaper| |android.graphics.Bitmap|
|android.speech.RecognitionService| |setWallpaper| |android.graphics.Bitmap|
|android.speech.tts.TextToSpeechService| |setWallpaper| |android.graphics.Bitmap|
|android.telecom.ConnectionService| |setWallpaper| |android.graphics.Bitmap|
|android.telecom.InCallService| |setWallpaper| |android.graphics.Bitmap|
|android.test.ActivityUnitTestCase$MockParent| |setWallpaper| |android.graphics.Bitmap|
|android.test.IsolatedContext| |setWallpaper| |android.graphics.Bitmap|
|android.test.mock.MockApplication| |setWallpaper| |android.graphics.Bitmap|
|android.test.RenamingDelegatingContext| |setWallpaper| |android.graphics.Bitmap|
|android.view.ContextThemeWrapper| |setWallpaper| |android.graphics.Bitmap|
|android.widget.RemoteViews$2| |setWallpaper| |android.graphics.Bitmap|
|android.widget.RemoteViewsService| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.AlertActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.ChooserActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.DisableCarModeActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.ExternalMediaFormatActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.HeavyWeightSwitcherActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.IntentForwarderActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.NetInitiatedActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.PlatLogoActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.ResolverActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.RestrictionsPinActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.app.ShutdownActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.backup.LocalTransportService| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.os.storage.ExternalStorageFormatter| |setWallpaper| |android.graphics.Bitmap|
|com.android.internal.util.AsyncService| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.beam.BeamReceiveService| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.beam.BeamSendService| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.BeamShareActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.cardemulation.AppChooserActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.cardemulation.DefaultRemovedActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.cardemulation.TapAgainDialog| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.handover.ConfirmConnectActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.handover.PeripheralHandoverService| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.NfcApplication| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.NfcBackupAgent| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.NfcRootActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.nfc.TechListChooserActivity| |setWallpaper| |android.graphics.Bitmap|
|com.android.server.backup.FullBackupJob| |setWallpaper| |android.graphics.Bitmap|
|com.android.server.backup.PackageManagerBackupAgent| |setWallpaper| |android.graphics.Bitmap|
|com.android.server.backup.SystemBackupAgent| |setWallpaper| |android.graphics.Bitmap|
|com.android.server.MountServiceIdler| |setWallpaper| |android.graphics.Bitmap|
|com.android.server.notification.CountdownConditionProvider| |setWallpaper| |android.graphics.Bitmap|
|com.android.server.notification.DowntimeConditionProvider| |setWallpaper| |android.graphics.Bitmap|
|com.android.server.notification.NextAlarmConditionProvider| |setWallpaper| |android.graphics.Bitmap|
|com.android.server.pm.BackgroundDexOptService| |setWallpaper| |android.graphics.Bitmap|
|android.accessibilityservice.AccessibilityService| |setWallpaper| |java.io.InputStream|
|android.accounts.AccountAuthenticatorActivity| |setWallpaper| |java.io.InputStream|
|android.accounts.CantAddAccountActivity| |setWallpaper| |java.io.InputStream|
|android.accounts.ChooseAccountActivity| |setWallpaper| |java.io.InputStream|
|android.accounts.ChooseAccountTypeActivity| |setWallpaper| |java.io.InputStream|
|android.accounts.ChooseTypeAndAccountActivity| |setWallpaper| |java.io.InputStream|
|android.accounts.GrantCredentialsPermissionActivity| |setWallpaper| |java.io.InputStream|
|android.app.ActivityGroup| |setWallpaper| |java.io.InputStream|
|android.app.Activity| |setWallpaper| |java.io.InputStream|
|android.app.AliasActivity| |setWallpaper| |java.io.InputStream|
|android.app.Application| |setWallpaper| |java.io.InputStream|
|android.app.backup.BackupAgentHelper| |setWallpaper| |java.io.InputStream|
|android.app.backup.BackupAgent| |setWallpaper| |java.io.InputStream|
|android.app.backup.FullBackupAgent| |setWallpaper| |java.io.InputStream|
|android.app.ExpandableListActivity| |setWallpaper| |java.io.InputStream|
|android.app.IntentService| |setWallpaper| |java.io.InputStream|
|android.app.job.JobService| |setWallpaper| |java.io.InputStream|
|android.app.LauncherActivity| |setWallpaper| |java.io.InputStream|
|android.app.ListActivity| |setWallpaper| |java.io.InputStream|
|android.app.NativeActivity| |setWallpaper| |java.io.InputStream|
|android.app.Presentation$1| |setWallpaper| |java.io.InputStream|
|android.app.ReceiverRestrictedContext| |setWallpaper| |java.io.InputStream|
|android.app.Service| |setWallpaper| |java.io.InputStream|
|android.app.TabActivity| |setWallpaper| |java.io.InputStream|
|android.content.MutableContextWrapper| |setWallpaper| |java.io.InputStream|
|android.content.SyncActivityTooManyDeletes| |setWallpaper| |java.io.InputStream|
|android.hardware.location.GeofenceHardwareService| |setWallpaper| |java.io.InputStream|
|android.inputmethodservice.AbstractInputMethodService| |setWallpaper| |java.io.InputStream|
|android.inputmethodservice.InputMethodService| |setWallpaper| |java.io.InputStream|
|android.location.SettingInjectorService| |setWallpaper| |java.io.InputStream|
|android.media.tv.TvInputService| |setWallpaper| |java.io.InputStream|
|android.nfc.cardemulation.HostApduService| |setWallpaper| |java.io.InputStream|
|android.nfc.cardemulation.OffHostApduService| |setWallpaper| |java.io.InputStream|
|android.preference.PreferenceActivity| |setWallpaper| |java.io.InputStream|
|android.printservice.PrintService| |setWallpaper| |java.io.InputStream|
|android.service.carrier.CarrierMessagingService| |setWallpaper| |java.io.InputStream|
|android.service.dreams.DreamService| |setWallpaper| |java.io.InputStream|
|android.service.media.MediaBrowserService| |setWallpaper| |java.io.InputStream|
|android.service.notification.ConditionProviderService| |setWallpaper| |java.io.InputStream|
|android.service.notification.NotificationListenerService| |setWallpaper| |java.io.InputStream|
|android.service.textservice.SpellCheckerService| |setWallpaper| |java.io.InputStream|
|android.service.trust.TrustAgentService| |setWallpaper| |java.io.InputStream|
|android.service.voice.VoiceInteractionService| |setWallpaper| |java.io.InputStream|
|android.service.voice.VoiceInteractionSessionService| |setWallpaper| |java.io.InputStream|
|android.service.wallpaper.WallpaperService| |setWallpaper| |java.io.InputStream|
|android.service.wallpaper.WallpaperSettingsActivity| |setWallpaper| |java.io.InputStream|
|android.speech.RecognitionService| |setWallpaper| |java.io.InputStream|
|android.speech.tts.TextToSpeechService| |setWallpaper| |java.io.InputStream|
|android.telecom.ConnectionService| |setWallpaper| |java.io.InputStream|
|android.telecom.InCallService| |setWallpaper| |java.io.InputStream|
|android.test.ActivityUnitTestCase$MockParent| |setWallpaper| |java.io.InputStream|
|android.test.IsolatedContext| |setWallpaper| |java.io.InputStream|
|android.test.mock.MockApplication| |setWallpaper| |java.io.InputStream|
|android.test.RenamingDelegatingContext| |setWallpaper| |java.io.InputStream|
|android.view.ContextThemeWrapper| |setWallpaper| |java.io.InputStream|
|android.widget.RemoteViews$2| |setWallpaper| |java.io.InputStream|
|android.widget.RemoteViewsService| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.AlertActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.ChooserActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.DisableCarModeActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.ExternalMediaFormatActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.HeavyWeightSwitcherActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.IntentForwarderActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.NetInitiatedActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.PlatLogoActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.ResolverActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.RestrictionsPinActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.app.ShutdownActivity| |setWallpaper| |java.io.InputStream|
|com.android.internal.backup.LocalTransportService| |setWallpaper| |java.io.InputStream|
|com.android.internal.os.storage.ExternalStorageFormatter| |setWallpaper| |java.io.InputStream|
|com.android.internal.util.AsyncService| |setWallpaper| |java.io.InputStream|
|com.android.nfc.beam.BeamReceiveService| |setWallpaper| |java.io.InputStream|
|com.android.nfc.beam.BeamSendService| |setWallpaper| |java.io.InputStream|
|com.android.nfc.BeamShareActivity| |setWallpaper| |java.io.InputStream|
|com.android.nfc.cardemulation.AppChooserActivity| |setWallpaper| |java.io.InputStream|
|com.android.nfc.cardemulation.DefaultRemovedActivity| |setWallpaper| |java.io.InputStream|
|com.android.nfc.cardemulation.TapAgainDialog| |setWallpaper| |java.io.InputStream|
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |setWallpaper| |java.io.InputStream|
|com.android.nfc.handover.ConfirmConnectActivity| |setWallpaper| |java.io.InputStream|
|com.android.nfc.handover.PeripheralHandoverService| |setWallpaper| |java.io.InputStream|
|com.android.nfc.NfcApplication| |setWallpaper| |java.io.InputStream|
|com.android.nfc.NfcBackupAgent| |setWallpaper| |java.io.InputStream|
|com.android.nfc.NfcRootActivity| |setWallpaper| |java.io.InputStream|
|com.android.nfc.TechListChooserActivity| |setWallpaper| |java.io.InputStream|
|com.android.server.backup.FullBackupJob| |setWallpaper| |java.io.InputStream|
|com.android.server.backup.PackageManagerBackupAgent| |setWallpaper| |java.io.InputStream|
|com.android.server.backup.SystemBackupAgent| |setWallpaper| |java.io.InputStream|
|com.android.server.MountServiceIdler| |setWallpaper| |java.io.InputStream|
|com.android.server.notification.CountdownConditionProvider| |setWallpaper| |java.io.InputStream|
|com.android.server.notification.DowntimeConditionProvider| |setWallpaper| |java.io.InputStream|
|com.android.server.notification.NextAlarmConditionProvider| |setWallpaper| |java.io.InputStream|
|com.android.server.pm.BackgroundDexOptService| |setWallpaper| |java.io.InputStream|
|android.content.ContextWrapper| |clearWallpaper| ||
|android.accessibilityservice.AccessibilityService| |clearWallpaper| ||
|android.accounts.AccountAuthenticatorActivity| |clearWallpaper| ||
|android.accounts.CantAddAccountActivity| |clearWallpaper| ||
|android.accounts.ChooseAccountActivity| |clearWallpaper| ||
|android.accounts.ChooseAccountTypeActivity| |clearWallpaper| ||
|android.accounts.ChooseTypeAndAccountActivity| |clearWallpaper| ||
|android.accounts.GrantCredentialsPermissionActivity| |clearWallpaper| ||
|android.app.ActivityGroup| |clearWallpaper| ||
|android.app.Activity| |clearWallpaper| ||
|android.app.AliasActivity| |clearWallpaper| ||
|android.app.Application| |clearWallpaper| ||
|android.app.backup.BackupAgentHelper| |clearWallpaper| ||
|android.app.backup.BackupAgent| |clearWallpaper| ||
|android.app.backup.FullBackupAgent| |clearWallpaper| ||
|android.app.ExpandableListActivity| |clearWallpaper| ||
|android.app.IntentService| |clearWallpaper| ||
|android.app.job.JobService| |clearWallpaper| ||
|android.app.LauncherActivity| |clearWallpaper| ||
|android.app.ListActivity| |clearWallpaper| ||
|android.app.NativeActivity| |clearWallpaper| ||
|android.app.Presentation$1| |clearWallpaper| ||
|android.app.ReceiverRestrictedContext| |clearWallpaper| ||
|android.app.Service| |clearWallpaper| ||
|android.app.TabActivity| |clearWallpaper| ||
|android.content.MutableContextWrapper| |clearWallpaper| ||
|android.content.SyncActivityTooManyDeletes| |clearWallpaper| ||
|android.hardware.location.GeofenceHardwareService| |clearWallpaper| ||
|android.inputmethodservice.AbstractInputMethodService| |clearWallpaper| ||
|android.inputmethodservice.InputMethodService| |clearWallpaper| ||
|android.location.SettingInjectorService| |clearWallpaper| ||
|android.media.tv.TvInputService| |clearWallpaper| ||
|android.nfc.cardemulation.HostApduService| |clearWallpaper| ||
|android.nfc.cardemulation.OffHostApduService| |clearWallpaper| ||
|android.preference.PreferenceActivity| |clearWallpaper| ||
|android.printservice.PrintService| |clearWallpaper| ||
|android.service.carrier.CarrierMessagingService| |clearWallpaper| ||
|android.service.dreams.DreamService| |clearWallpaper| ||
|android.service.media.MediaBrowserService| |clearWallpaper| ||
|android.service.notification.ConditionProviderService| |clearWallpaper| ||
|android.service.notification.NotificationListenerService| |clearWallpaper| ||
|android.service.textservice.SpellCheckerService| |clearWallpaper| ||
|android.service.trust.TrustAgentService| |clearWallpaper| ||
|android.service.voice.VoiceInteractionService| |clearWallpaper| ||
|android.service.voice.VoiceInteractionSessionService| |clearWallpaper| ||
|android.service.wallpaper.WallpaperService| |clearWallpaper| ||
|android.service.wallpaper.WallpaperSettingsActivity| |clearWallpaper| ||
|android.speech.RecognitionService| |clearWallpaper| ||
|android.speech.tts.TextToSpeechService| |clearWallpaper| ||
|android.telecom.ConnectionService| |clearWallpaper| ||
|android.telecom.InCallService| |clearWallpaper| ||
|android.test.ActivityUnitTestCase$MockParent| |clearWallpaper| ||
|android.test.IsolatedContext| |clearWallpaper| ||
|android.test.mock.MockApplication| |clearWallpaper| ||
|android.test.RenamingDelegatingContext| |clearWallpaper| ||
|android.view.ContextThemeWrapper| |clearWallpaper| ||
|android.widget.RemoteViews$2| |clearWallpaper| ||
|android.widget.RemoteViewsService| |clearWallpaper| ||
|com.android.internal.app.AlertActivity| |clearWallpaper| ||
|com.android.internal.app.ChooserActivity| |clearWallpaper| ||
|com.android.internal.app.DisableCarModeActivity| |clearWallpaper| ||
|com.android.internal.app.ExternalMediaFormatActivity| |clearWallpaper| ||
|com.android.internal.app.HeavyWeightSwitcherActivity| |clearWallpaper| ||
|com.android.internal.app.IntentForwarderActivity| |clearWallpaper| ||
|com.android.internal.app.NetInitiatedActivity| |clearWallpaper| ||
|com.android.internal.app.PlatLogoActivity| |clearWallpaper| ||
|com.android.internal.app.ResolverActivity| |clearWallpaper| ||
|com.android.internal.app.RestrictionsPinActivity| |clearWallpaper| ||
|com.android.internal.app.ShutdownActivity| |clearWallpaper| ||
|com.android.internal.backup.LocalTransportService| |clearWallpaper| ||
|com.android.internal.os.storage.ExternalStorageFormatter| |clearWallpaper| ||
|com.android.internal.util.AsyncService| |clearWallpaper| ||
|com.android.nfc.beam.BeamReceiveService| |clearWallpaper| ||
|com.android.nfc.beam.BeamSendService| |clearWallpaper| ||
|com.android.nfc.BeamShareActivity| |clearWallpaper| ||
|com.android.nfc.cardemulation.AppChooserActivity| |clearWallpaper| ||
|com.android.nfc.cardemulation.DefaultRemovedActivity| |clearWallpaper| ||
|com.android.nfc.cardemulation.TapAgainDialog| |clearWallpaper| ||
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |clearWallpaper| ||
|com.android.nfc.handover.ConfirmConnectActivity| |clearWallpaper| ||
|com.android.nfc.handover.PeripheralHandoverService| |clearWallpaper| ||
|com.android.nfc.NfcApplication| |clearWallpaper| ||
|com.android.nfc.NfcBackupAgent| |clearWallpaper| ||
|com.android.nfc.NfcRootActivity| |clearWallpaper| ||
|com.android.nfc.TechListChooserActivity| |clearWallpaper| ||
|com.android.server.backup.FullBackupJob| |clearWallpaper| ||
|com.android.server.backup.PackageManagerBackupAgent| |clearWallpaper| ||
|com.android.server.backup.SystemBackupAgent| |clearWallpaper| ||
|com.android.server.MountServiceIdler| |clearWallpaper| ||
|com.android.server.notification.CountdownConditionProvider| |clearWallpaper| ||
|com.android.server.notification.DowntimeConditionProvider| |clearWallpaper| ||
|com.android.server.notification.NextAlarmConditionProvider| |clearWallpaper| ||
|com.android.server.pm.BackgroundDexOptService| |clearWallpaper| ||
|com.android.internal.telephony.IccPhoneBookInterfaceManager| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.UiccPhoneBookController| |getAdnRecordsInEfForSubscriber| |int,int|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |getAdnRecordsInEfForSubscriber| |int,int|
|com.android.internal.telephony.IIccPhoneBook$Stub| |getAdnRecordsInEfForSubscriber| |int,int|
|com.android.internal.telephony.UiccPhoneBookController| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.IIccPhoneBook| |getAdnRecordsInEfForSubscriber| |int,int|
|com.android.internal.telephony.IIccPhoneBook$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.IIccPhoneBook$Stub| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.IccProvider| |loadFromEf| |int,int|
|com.android.internal.telephony.UiccPhoneBookController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.IIccPhoneBook| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.IccProvider| |loadAllSimContacts| |int|
|com.android.internal.telephony.IccProvider| |query| |android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String|
|com.android.server.notification.ValidateNotificationPeople| |resolveEmailContact| |android.content.Context,java.lang.String|
|com.android.server.notification.ValidateNotificationPeople| |access$600| |com.android.server.notification.ValidateNotificationPeople,android.content.Context,java.lang.String|
|com.android.server.notification.ValidateNotificationPeople$PeopleRankingReconsideration| |work| ||
|com.android.server.notification.RankingReconsideration| |work| ||
|com.android.server.notification.ValidateNotificationPeople$2| |run| ||
|com.android.server.notification.RankingReconsideration| |run| ||
|com.android.server.notification.NotificationIntrusivenessExtractor$1| |run| ||
|com.android.server.notification.NotificationManagerService| |handleRankingReconsideration| |android.os.Message|
|com.android.server.notification.ValidateNotificationPeople$PeopleRankingReconsideration| |run| ||
|com.android.server.notification.NotificationManagerService| |access$4300| |com.android.server.notification.NotificationManagerService,android.os.Message|
|com.android.internal.telephony.CallerInfoAsyncQuery| |startQuery| |int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object,int|
|com.android.internal.telephony.CallerInfoAsyncQuery| |startQuery| |int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object|
|android.provider.Contacts$People| |addToGroup| |android.content.ContentResolver,long,java.lang.String|
|android.widget.QuickContactBadge| |onClick| |android.view.View|
|android.provider.Contacts$People| |queryGroups| |android.content.ContentResolver,long|
|android.widget.QuickContactBadge| |assignContactFromEmail| |java.lang.String,boolean,android.os.Bundle|
|android.widget.QuickContactBadge| |assignContactFromEmail| |java.lang.String,boolean|
|android.provider.Contacts$Settings| |getSetting| |android.content.ContentResolver,java.lang.String,java.lang.String|
|com.android.internal.telephony.CallerInfo| |getCallerInfo| |android.content.Context,java.lang.String,int|
|com.android.internal.telephony.CallerInfo| |getCallerInfo| |android.content.Context,java.lang.String|
|android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder| |build| ||
|android.provider.ContactsContract$Contacts| |getLookupUri| |long,java.lang.String|
|android.provider.ContactsContract$Contacts| |getLookupUri| |android.content.ContentResolver,android.net.Uri|
|android.provider.ContactsContract$Data| |getContactLookupUri| |android.content.ContentResolver,android.net.Uri|
|android.provider.ContactsContract$RawContacts| |getContactLookupUri| |android.content.ContentResolver,android.net.Uri|
|android.widget.QuickContactBadge$QueryHandler| |onQueryComplete| |int,java.lang.Object,android.database.Cursor|
|com.android.server.notification.ValidateNotificationPeople| |resolvePhoneContact| |android.content.Context,java.lang.String|
|com.android.server.notification.ValidateNotificationPeople| |access$500| |com.android.server.notification.ValidateNotificationPeople,android.content.Context,java.lang.String|
|com.android.internal.telephony.CallerInfo| |doSecondaryLookupIfNecessary| |android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfo|
|com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler| |onQueryComplete| |int,java.lang.Object,android.database.Cursor|
|android.provider.Contacts$People| |tryGetMyContactsGroupId| |android.content.ContentResolver|
|android.provider.Contacts$People| |addToMyContactsGroup| |android.content.ContentResolver,long|
|android.provider.Contacts$People| |createPersonInMyContactsGroup| |android.content.ContentResolver,android.content.ContentValues|
|android.widget.QuickContactBadge| |assignContactFromPhone| |java.lang.String,boolean,android.os.Bundle|
|android.widget.QuickContactBadge| |assignContactFromPhone| |java.lang.String,boolean|
|android.provider.CallLog$Calls| |addCall| |com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,int,android.telecom.PhoneAccountHandle,long,int,java.lang.Long,boolean|
|android.provider.CallLog$Calls| |addCall| |com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,int,android.telecom.PhoneAccountHandle,long,int,java.lang.Long|
|com.android.contacts.ContactsListActivity| |getContactUri| |int|
|com.android.contacts.ContactsListActivity| |getUriToQuery| ||
|com.android.contacts.ContactsListActivity| |getSelectedUri| |int|
|com.android.server.MmsServiceBroker$BinderService| |importTextMessage| |java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms$Stub$Proxy| |importTextMessage| |java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms$Stub| |importTextMessage| |java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms| |importTextMessage| |java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.telephony.SmsManager| |importTextMessage| |java.lang.String,int,java.lang.String,long,boolean,boolean|
|com.android.server.MmsServiceBroker$BinderService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.MmsServiceBroker$BinderService| |importMultimediaMessage| |java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms$Stub$Proxy| |importMultimediaMessage| |java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms$Stub| |importMultimediaMessage| |java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms| |importMultimediaMessage| |java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean|
|android.telephony.SmsManager| |importMultimediaMessage| |android.net.Uri,java.lang.String,long,boolean,boolean|
|com.android.server.MmsServiceBroker$BinderService| |deleteStoredMessage| |java.lang.String,android.net.Uri|
|com.android.internal.telephony.IMms$Stub$Proxy| |deleteStoredMessage| |java.lang.String,android.net.Uri|
|com.android.internal.telephony.IMms$Stub| |deleteStoredMessage| |java.lang.String,android.net.Uri|
|com.android.internal.telephony.IMms| |deleteStoredMessage| |java.lang.String,android.net.Uri|
|android.telephony.SmsManager| |deleteStoredMessage| |android.net.Uri|
|com.android.server.MmsServiceBroker$BinderService| |deleteStoredConversation| |java.lang.String,long|
|com.android.internal.telephony.IMms$Stub$Proxy| |deleteStoredConversation| |java.lang.String,long|
|com.android.internal.telephony.IMms$Stub| |deleteStoredConversation| |java.lang.String,long|
|com.android.internal.telephony.IMms| |deleteStoredConversation| |java.lang.String,long|
|android.telephony.SmsManager| |deleteStoredConversation| |long|
|com.android.server.MmsServiceBroker$BinderService| |updateStoredMessageStatus| |java.lang.String,android.net.Uri,android.content.ContentValues|
|com.android.internal.telephony.IMms$Stub$Proxy| |updateStoredMessageStatus| |java.lang.String,android.net.Uri,android.content.ContentValues|
|com.android.internal.telephony.IMms$Stub| |updateStoredMessageStatus| |java.lang.String,android.net.Uri,android.content.ContentValues|
|com.android.internal.telephony.IMms| |updateStoredMessageStatus| |java.lang.String,android.net.Uri,android.content.ContentValues|
|android.telephony.SmsManager| |updateStoredMessageStatus| |android.net.Uri,android.content.ContentValues|
|com.android.server.MmsServiceBroker$BinderService| |archiveStoredConversation| |java.lang.String,long,boolean|
|com.android.internal.telephony.IMms$Stub$Proxy| |archiveStoredConversation| |java.lang.String,long,boolean|
|com.android.internal.telephony.IMms$Stub| |archiveStoredConversation| |java.lang.String,long,boolean|
|com.android.internal.telephony.IMms| |archiveStoredConversation| |java.lang.String,long,boolean|
|android.telephony.SmsManager| |archiveStoredConversation| |long,boolean|
|com.android.server.MmsServiceBroker$BinderService| |addTextMessageDraft| |java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IMms$Stub$Proxy| |addTextMessageDraft| |java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IMms$Stub| |addTextMessageDraft| |java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IMms| |addTextMessageDraft| |java.lang.String,java.lang.String,java.lang.String|
|android.telephony.SmsManager| |addTextMessageDraft| |java.lang.String,java.lang.String|
|com.android.server.MmsServiceBroker$BinderService| |addMultimediaMessageDraft| |java.lang.String,android.net.Uri|
|com.android.internal.telephony.IMms$Stub$Proxy| |addMultimediaMessageDraft| |java.lang.String,android.net.Uri|
|com.android.internal.telephony.IMms$Stub| |addMultimediaMessageDraft| |java.lang.String,android.net.Uri|
|com.android.internal.telephony.IMms| |addMultimediaMessageDraft| |java.lang.String,android.net.Uri|
|android.telephony.SmsManager| |addMultimediaMessageDraft| |android.net.Uri|
|com.android.server.MmsServiceBroker$BinderService| |setAutoPersisting| |java.lang.String,boolean|
|com.android.internal.telephony.IMms$Stub$Proxy| |setAutoPersisting| |java.lang.String,boolean|
|com.android.internal.telephony.IMms$Stub| |setAutoPersisting| |java.lang.String,boolean|
|com.android.internal.telephony.IMms| |setAutoPersisting| |java.lang.String,boolean|
|android.telephony.SmsManager| |setAutoPersisting| |boolean|
|android.provider.Telephony$Sms$Draft| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long|
|android.provider.Telephony$Sms$Sent| |addMessage| |int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long|
|com.android.server.MmsServiceBroker| |access$900| ||
|com.android.server.MmsServiceBroker| |access$800| ||
|android.provider.Telephony$Sms$Inbox| |addMessage| |int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean|
|com.android.internal.telephony.SmsBroadcastUndelivered| |scanRawTable| ||
|com.android.internal.telephony.SmsBroadcastUndelivered| |run| ||
|android.provider.Telephony$Sms$Outbox| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long|
|android.provider.Telephony$Sms$Sent| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long|
|com.google.android.mms.util.PduCache| |normalizeKey| |android.net.Uri|
|com.google.android.mms.util.PduCache| |put| |android.net.Uri,com.google.android.mms.util.PduCacheEntry|
|com.google.android.mms.pdu.PduPersister| |load| |android.net.Uri|
|com.google.android.mms.util.PduCache| |put| |java.lang.Object,java.lang.Object|
|com.google.android.mms.util.AbstractCache| |put| |java.lang.Object,java.lang.Object|
|com.android.internal.telephony.InboundSmsHandler| |writeInboxMessage| |android.content.Intent|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |writeInboxMessage| |android.content.Intent|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |writeInboxMessage| |android.content.Intent|
|com.android.internal.telephony.InboundSmsHandler| |dispatchSmsDeliveryIntent| |byte[][],java.lang.String,int,android.content.BroadcastReceiver|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |dispatchSmsDeliveryIntent| |byte[][],java.lang.String,int,android.content.BroadcastReceiver|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dispatchSmsDeliveryIntent| |byte[][],java.lang.String,int,android.content.BroadcastReceiver|
|com.android.internal.telephony.InboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilterCallback| |onFilterComplete| |boolean|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler$DeliveringState| |processMessage| |android.os.Message|
|android.service.carrier.ICarrierMessagingCallback$Stub$Proxy| |onFilterComplete| |boolean|
|com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilter| |filterSms| |java.lang.String,com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilterCallback|
|com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilter| |onServiceReady| |android.service.carrier.ICarrierMessagingService|
|com.android.internal.util.State| |processMessage| |android.os.Message|
|com.android.internal.util.IState| |processMessage| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |processMsg| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DormantState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$ScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$NoLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |processMessage| |android.os.Message|
|com.android.internal.telephony.SMSDispatcher$SmsTracker| |persistSentMessageIfRequired| |android.content.Context,int,int|
|com.android.internal.telephony.SMSDispatcher$SmsTracker| |persistOrUpdateMessage| |android.content.Context,int,int|
|com.android.internal.telephony.SMSDispatcher$SmsTracker| |onFailed| |android.content.Context,int,int|
|com.android.internal.telephony.SMSDispatcher$SmsTracker| |onSent| |android.content.Context|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendSmsByPstn| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendSubmitPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendSmsByPstn| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.ImsSMSDispatcher| |sendRetrySms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.SMSDispatcher| |denyIfQueueLimitReached| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.SMSDispatcher| |handleSendComplete| |android.os.AsyncResult|
|com.android.internal.telephony.SMSDispatcher| |sendRawPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendSms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.SMSDispatcher| |sendSmsByPstn| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendData| |java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendText| |java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String|
|com.android.internal.telephony.SMSDispatcher| |sendSubmitPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendSms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.SMSDispatcher| |sendRetrySms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |denyIfQueueLimitReached| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |denyIfQueueLimitReached| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.ImsSMSDispatcher| |denyIfQueueLimitReached| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.SMSDispatcher| |handleConfirmShortCode| |boolean,com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.SMSDispatcher| |handleReachSentLimit| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |handleSendComplete| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |handleSendComplete| |android.os.AsyncResult|
|com.android.internal.telephony.ImsSMSDispatcher| |handleSendComplete| |android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendRawPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendRawPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.ImsSMSDispatcher| |sendRawPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.SMSDispatcher| |sendSms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.SMSDispatcher| |sendData| |java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.SMSDispatcher| |sendText| |java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String|
|com.android.internal.telephony.SMSDispatcher| |processSendSmsResponse| |com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int|
|com.android.internal.telephony.SMSDispatcher| |sendMultipartText| |java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendRetrySms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendRetrySms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |handleConfirmShortCode| |boolean,com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |handleConfirmShortCode| |boolean,com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.ImsSMSDispatcher| |handleConfirmShortCode| |boolean,com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |handleReachSentLimit| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |handleReachSentLimit| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.ImsSMSDispatcher| |handleReachSentLimit| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendData| |java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendSubmitPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendText| |java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String|
|com.android.internal.telephony.ImsSMSDispatcher| |sendSubmitPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.IccSmsInterfaceManager| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ImsSMSDispatcher| |sendData| |java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.IccSmsInterfaceManager| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.IccSmsInterfaceManager| |sendStoredMultipartText| |java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|com.android.internal.telephony.IccSmsInterfaceManager| |sendStoredText| |java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.IccSmsInterfaceManager| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ImsSMSDispatcher| |sendText| |java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |processSendSmsResponse| |com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |processSendSmsResponse| |com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int|
|com.android.internal.telephony.ImsSMSDispatcher| |processSendSmsResponse| |com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int|
|com.android.internal.telephony.SMSDispatcher| |access$100| |com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendMultipartText| |java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendMultipartText| |java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String|
|com.android.internal.telephony.ImsSMSDispatcher| |sendMultipartText| |java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String|
|com.android.internal.telephony.SMSDispatcher| |sendMultipartSms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.UiccSmsController| |sendDataForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendMultipartTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.UiccSmsController| |sendStoredMultipartText| |int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|com.android.internal.telephony.UiccSmsController| |sendStoredText| |int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |access$100| |com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |access$100| |com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int|
|com.android.internal.telephony.ImsSMSDispatcher| |access$100| |com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendMultipartSms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendMultipartSms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.ImsSMSDispatcher| |sendMultipartSms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendDataForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendDataForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendMultipartTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub| |sendMultipartTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.UiccSmsController| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendStoredMultipartText| |int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub| |sendStoredMultipartText| |int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendStoredText| |int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendStoredText| |int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISms| |sendDataForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |sendMultipartTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms| |sendStoredMultipartText| |int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|com.android.internal.telephony.ISms| |sendStoredText| |int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |sendTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.telephony.SmsManager| |sendDataMessage| |java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|android.telephony.SmsManager| |sendMultipartTextMessage| |java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList|
|com.android.internal.telephony.ISms| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|android.telephony.SmsManager| |sendStoredMultipartTextMessage| |android.net.Uri,java.lang.String,java.util.ArrayList,java.util.ArrayList|
|android.telephony.SmsManager| |sendStoredTextMessage| |android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|android.telephony.SmsManager| |sendTextMessage| |java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|android.telephony.gsm.SmsManager| |sendDataMessage| |java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent|
|android.telephony.gsm.SmsManager| |sendMultipartTextMessage| |java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList|
|android.telephony.gsm.SmsManager| |sendTextMessage| |java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.server.MmsServiceBroker| |access$1100| ||
|android.provider.Telephony$Sms$Inbox| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean|
|android.provider.Telephony$Sms$Outbox| |addMessage| |int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long|
|com.android.internal.telephony.InboundSmsHandler| |addTrackerToRawTable| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |addTrackerToRawTable| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |addTrackerToRawTable| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler| |addTrackerToRawTableAndSendMessage| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |addTrackerToRawTableAndSendMessage| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |addTrackerToRawTableAndSendMessage| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler| |dispatchNormalMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |processCdmaWapPdu| |byte[],int,java.lang.String,long|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |dispatchNormalMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dispatchNormalMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |dispatchMessageRadioSpecific| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dispatchMessageRadioSpecific| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.InboundSmsHandler| |dispatchMessageRadioSpecific| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.InboundSmsHandler| |dispatchMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |dispatchMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dispatchMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.InboundSmsHandler| |handleInjectSms| |android.os.AsyncResult|
|com.android.internal.telephony.InboundSmsHandler| |handleNewSms| |android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |handleInjectSms| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |handleInjectSms| |android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |handleNewSms| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |handleNewSms| |android.os.AsyncResult|
|com.android.internal.telephony.InboundSmsHandler| |deleteFromRawTable| |java.lang.String,java.lang.String[]|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |deleteFromRawTable| |java.lang.String,java.lang.String[]|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |deleteFromRawTable| |java.lang.String,java.lang.String[]|
|com.android.internal.telephony.InboundSmsHandler$SmsBroadcastReceiver| |onReceive| |android.content.Context,android.content.Intent|
|android.provider.Telephony$Sms$Draft| |addMessage| |int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long|
|com.android.server.MmsServiceBroker| |access$1000| ||
|com.android.server.LocationManagerService| |getAllowedResolutionLevel| |int,int|
|com.android.server.LocationManagerService| |access$600| |com.android.server.LocationManagerService,int,int|
|com.android.server.LocationManagerService| |getCallerAllowedResolutionLevel| ||
|com.android.server.LocationManagerService$Receiver| |<init>| |com.android.server.LocationManagerService,android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|com.android.server.LocationManagerService| |getLastLocation| |android.location.LocationRequest,java.lang.String|
|com.android.server.LocationManagerService| |addGpsMeasurementsListener| |android.location.IGpsMeasurementsListener,java.lang.String|
|com.android.server.LocationManagerService| |addGpsNavigationMessageListener| |android.location.IGpsNavigationMessageListener,java.lang.String|
|com.android.server.LocationManagerService| |addGpsStatusListener| |android.location.IGpsStatusListener,java.lang.String|
|com.android.server.LocationManagerService| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|com.android.server.LocationManagerService| |getProviderProperties| |java.lang.String|
|com.android.server.LocationManagerService| |getProviders| |android.location.Criteria,boolean|
|com.android.server.LocationManagerService| |removeGeofence| |android.location.Geofence,android.app.PendingIntent,java.lang.String|
|com.android.server.LocationManagerService| |requestGeofence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String|
|com.android.server.LocationManagerService| |requestLocationUpdates| |android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.LocationManagerService| |getReceiverLocked| |android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|com.android.server.LocationManagerService| |getReceiverLocked| |android.location.ILocationListener,int,int,java.lang.String,android.os.WorkSource,boolean|
|android.location.ILocationManager$Stub$Proxy| |getLastLocation| |android.location.LocationRequest,java.lang.String|
|android.location.ILocationManager$Stub| |getLastLocation| |android.location.LocationRequest,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |addGpsMeasurementsListener| |android.location.IGpsMeasurementsListener,java.lang.String|
|android.location.ILocationManager$Stub| |addGpsMeasurementsListener| |android.location.IGpsMeasurementsListener,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |addGpsNavigationMessageListener| |android.location.IGpsNavigationMessageListener,java.lang.String|
|android.location.ILocationManager$Stub| |addGpsNavigationMessageListener| |android.location.IGpsNavigationMessageListener,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |addGpsStatusListener| |android.location.IGpsStatusListener,java.lang.String|
|android.location.ILocationManager$Stub| |addGpsStatusListener| |android.location.IGpsStatusListener,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.ILocationManager$Stub| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.ILocationManager$Stub$Proxy| |getProviderProperties| |java.lang.String|
|android.location.ILocationManager$Stub| |getProviderProperties| |java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |getProviders| |android.location.Criteria,boolean|
|android.location.ILocationManager$Stub| |getProviders| |android.location.Criteria,boolean|
|com.android.server.LocationManagerService| |getBestProvider| |android.location.Criteria,boolean|
|android.location.ILocationManager$Stub$Proxy| |removeGeofence| |android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub| |removeGeofence| |android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |requestGeofence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub| |requestGeofence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |requestLocationUpdates| |android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub| |requestLocationUpdates| |android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.LocationManagerService| |checkListenerOrIntentLocked| |android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|android.location.ILocationManager| |getLastLocation| |android.location.LocationRequest,java.lang.String|
|android.location.ILocationManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.location.ILocationManager| |addGpsMeasurementsListener| |android.location.IGpsMeasurementsListener,java.lang.String|
|android.location.ILocationManager| |addGpsNavigationMessageListener| |android.location.IGpsNavigationMessageListener,java.lang.String|
|android.location.ILocationManager| |addGpsStatusListener| |android.location.IGpsStatusListener,java.lang.String|
|android.location.ILocationManager| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.ILocationManager| |getProviderProperties| |java.lang.String|
|android.location.ILocationManager| |getProviders| |android.location.Criteria,boolean|
|android.location.ILocationManager$Stub$Proxy| |getBestProvider| |android.location.Criteria,boolean|
|android.location.ILocationManager$Stub| |getBestProvider| |android.location.Criteria,boolean|
|android.location.ILocationManager| |removeGeofence| |android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager| |requestGeofence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager| |requestLocationUpdates| |android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.LocationManagerService| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|android.location.LocationManager| |getLastKnownLocation| |java.lang.String|
|android.location.LocationManager| |getLastLocation| ||
|com.android.server.LocationManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.location.GpsMeasurementListenerTransport| |registerWithServer| ||
|android.location.GpsNavigationMessageListenerTransport| |registerWithServer| ||
|android.location.LocationManager| |addGpsStatusListener| |android.location.GpsStatus$Listener|
|android.location.LocationManager| |addNmeaListener| |android.location.GpsStatus$NmeaListener|
|android.location.LocationManager| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.LocationManager| |getProvider| |java.lang.String|
|android.location.LocationManager| |getProviders| |android.location.Criteria,boolean|
|android.location.LocationManager| |getProviders| |boolean|
|android.location.ILocationManager| |getBestProvider| |android.location.Criteria,boolean|
|android.location.LocationManager| |removeAllGeofences| |android.app.PendingIntent|
|android.location.LocationManager| |removeGeofence| |android.location.Geofence,android.app.PendingIntent|
|android.location.LocationManager| |removeProximityAlert| |android.app.PendingIntent|
|android.location.LocationManager| |addGeofence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent|
|android.location.LocationManager| |addProximityAlert| |double,double,float,long,android.app.PendingIntent|
|android.location.LocationManager| |requestLocationUpdates| |android.location.LocationRequest,android.location.LocationListener,android.os.Looper,android.app.PendingIntent|
|android.location.ILocationManager$Stub$Proxy| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.location.LocationBasedCountryDetector| |getLastKnownLocation| ||
|com.android.server.twilight.TwilightService$LocationHandler| |retrieveLocation| ||
|com.android.server.location.GeofenceManager| |getFreshLocationLocked| ||
|android.location.LocalListenerHelper| |registerWithServer| ||
|com.android.server.location.LocationBasedCountryDetector| |getEnabledProviders| ||
|android.location.LocationManager| |getBestProvider| |android.location.Criteria,boolean|
|android.location.LocationManager| |requestLocationUpdates| |android.location.LocationRequest,android.app.PendingIntent|
|android.location.LocationManager| |requestLocationUpdates| |android.location.LocationRequest,android.location.LocationListener,android.os.Looper|
|android.location.LocationManager| |requestLocationUpdates| |java.lang.String,long,float,android.app.PendingIntent|
|android.location.LocationManager| |requestLocationUpdates| |java.lang.String,long,float,android.location.LocationListener,android.os.Looper|
|android.location.LocationManager| |requestLocationUpdates| |java.lang.String,long,float,android.location.LocationListener|
|android.location.LocationManager| |requestLocationUpdates| |long,float,android.location.Criteria,android.app.PendingIntent|
|android.location.LocationManager| |requestLocationUpdates| |long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper|
|android.location.LocationManager| |requestSingleUpdate| |android.location.Criteria,android.app.PendingIntent|
|android.location.LocationManager| |requestSingleUpdate| |android.location.Criteria,android.location.LocationListener,android.os.Looper|
|android.location.LocationManager| |requestSingleUpdate| |java.lang.String,android.app.PendingIntent|
|android.location.LocationManager| |requestSingleUpdate| |java.lang.String,android.location.LocationListener,android.os.Looper|
|android.location.ILocationManager| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.location.LocationBasedCountryDetector$2| |run| ||
|com.android.server.location.LocationBasedCountryDetector| |detectCountry| ||
|com.android.server.twilight.TwilightService$LocationHandler| |enableLocationUpdates| ||
|com.android.server.twilight.TwilightService$LocationHandler| |requestLocationUpdate| ||
|com.android.server.location.GeofenceManager| |updateFences| ||
|android.location.LocalListenerHelper| |add| |java.lang.Object|
|com.android.server.location.FlpHardwareProvider| |<init>| |android.content.Context|
|com.android.server.location.GpsLocationProvider$4| |run| ||
|com.android.server.location.LocationBasedCountryDetector| |registerListener| |java.lang.String,android.location.LocationListener|
|android.location.LocationManager| |removeUpdates| |android.app.PendingIntent|
|android.location.LocationManager| |removeUpdates| |android.location.LocationListener|
|com.android.server.location.CountryDetectorBase| |detectCountry| ||
|com.android.server.twilight.TwilightService$1| |registerListener| |com.android.server.twilight.TwilightListener,android.os.Handler|
|com.android.server.twilight.TwilightService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.location.GeofenceManager| |access$000| |com.android.server.location.GeofenceManager|
|com.android.server.location.GeofenceManager| |onLocationChanged| |android.location.Location|
|android.location.GpsMeasurementListenerTransport| |add| |java.lang.Object|
|android.location.GpsNavigationMessageListenerTransport| |add| |java.lang.Object|
|com.android.server.location.FlpHardwareProvider| |getInstance| |android.content.Context|
|com.android.server.location.LocationBasedCountryDetector| |unregisterListener| |android.location.LocationListener|
|com.android.server.location.ComprehensiveCountryDetector| |startLocationBasedDetector| |android.location.CountryListener|
|com.android.server.twilight.TwilightManager| |registerListener| |com.android.server.twilight.TwilightListener,android.os.Handler|
|com.android.server.location.GeofenceManager| |scheduleUpdateFencesLocked| ||
|android.location.LocationManager| |addGpsMeasurementListener| |android.location.GpsMeasurementsEvent$Listener|
|android.location.LocationManager| |addGpsNavigationMessageListener| |android.location.GpsNavigationMessageEvent$Listener|
|com.android.server.LocationManagerService| |loadProvidersLocked| ||
|com.android.server.location.LocationBasedCountryDetector| |stop| ||
|com.android.server.location.ComprehensiveCountryDetector| |runAfterDetection| |android.location.Country,android.location.Country,boolean,boolean|
|com.android.server.display.AutomaticBrightnessController| |<init>| |com.android.server.display.AutomaticBrightnessController$Callbacks,android.os.Looper,android.hardware.SensorManager,android.util.Spline,int,int,int,float|
|com.android.server.UiModeManagerService| |onStart| ||
|com.android.server.location.GeofenceManager| |addFence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,int,int,java.lang.String|
|com.android.server.location.GeofenceManager| |removeFence| |android.location.Geofence,android.app.PendingIntent|
|com.android.server.location.GeofenceManager| |removeFence| |java.lang.String|
|com.android.server.LocationManagerService| |systemRunning| ||
|com.android.server.location.CountryDetectorBase| |stop| ||
|com.android.server.location.LocationBasedCountryDetector$1| |onLocationChanged| |android.location.Location|
|com.android.server.location.ComprehensiveCountryDetector$2| |run| ||
|com.android.server.display.DisplayPowerController| |<init>| |android.content.Context,android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager,com.android.server.display.DisplayBlanker|
|com.android.server.SystemService| |onStart| ||
|com.android.server.location.GeofenceManager| |sendIntent| |android.app.PendingIntent,android.content.Intent|
|com.android.server.SystemServer$2| |run| ||
|com.android.server.location.ComprehensiveCountryDetector| |stopLocationBasedDetector| ||
|com.android.server.display.DisplayManagerService$LocalService| |initPowerManagement| |android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager|
|com.android.server.SystemServiceManager| |startService| |java.lang.Class|
|com.android.server.location.GeofenceManager| |sendIntentEnter| |android.app.PendingIntent|
|com.android.server.location.GeofenceManager| |sendIntentExit| |android.app.PendingIntent|
|com.android.server.location.ComprehensiveCountryDetector| |access$200| |com.android.server.location.ComprehensiveCountryDetector|
|com.android.server.location.ComprehensiveCountryDetector| |setCountryListener| |android.location.CountryListener|
|com.android.server.location.ComprehensiveCountryDetector| |stop| ||
|android.hardware.display.DisplayManagerInternal| |initPowerManagement| |android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager|
|com.android.server.SystemServer| |startBootstrapServices| ||
|com.android.server.SystemServer| |startCoreServices| ||
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.String|
|com.android.server.location.ComprehensiveCountryDetector$1| |onCountryDetected| |android.location.Country|
|com.android.server.CountryDetectorService$2| |run| ||
|com.android.server.location.CountryDetectorBase| |setCountryListener| |android.location.CountryListener|
|com.android.server.power.PowerManagerService| |systemReady| |com.android.internal.app.IAppOpsService|
|com.android.server.SystemServer| |run| ||
|com.android.server.location.LocationBasedCountryDetector| |setCountryListener| |android.location.CountryListener|
|com.android.server.SystemServer| |main| |java.lang.String[]|
|android.hardware.location.GeofenceHardwareImpl| |getAllowedResolutionLevel| |int,int|
|android.hardware.location.GeofenceHardwareService| |checkPermission| |int,int,int|
|android.hardware.location.GeofenceHardwareService| |access$200| |android.hardware.location.GeofenceHardwareService,int,int,int|
|android.hardware.location.GeofenceHardwareService$1| |addCircularFence| |int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback|
|android.hardware.location.GeofenceHardwareService$1| |pauseGeofence| |int,int|
|android.hardware.location.GeofenceHardwareService$1| |registerForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.GeofenceHardwareService$1| |removeGeofence| |int,int|
|android.hardware.location.GeofenceHardwareService$1| |resumeGeofence| |int,int,int|
|android.hardware.location.GeofenceHardwareService$1| |unregisterForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |addCircularFence| |int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback|
|android.hardware.location.IGeofenceHardware$Stub| |addCircularFence| |int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |pauseGeofence| |int,int|
|android.hardware.location.IGeofenceHardware$Stub| |pauseGeofence| |int,int|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |registerForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware$Stub| |registerForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |removeGeofence| |int,int|
|android.hardware.location.IGeofenceHardware$Stub| |removeGeofence| |int,int|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |resumeGeofence| |int,int,int|
|android.hardware.location.IGeofenceHardware$Stub| |resumeGeofence| |int,int,int|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |unregisterForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware$Stub| |unregisterForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware| |addCircularFence| |int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback|
|android.hardware.location.IGeofenceHardware$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.hardware.location.IGeofenceHardware| |pauseGeofence| |int,int|
|android.hardware.location.IGeofenceHardware| |registerForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware| |removeGeofence| |int,int|
|android.hardware.location.IGeofenceHardware| |resumeGeofence| |int,int,int|
|android.hardware.location.IGeofenceHardware| |unregisterForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.GeofenceHardware| |addGeofence| |int,int,android.hardware.location.GeofenceHardwareRequest,android.hardware.location.GeofenceHardwareCallback|
|android.hardware.location.GeofenceHardwareService$1| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.hardware.location.GeofenceHardware| |pauseGeofence| |int,int|
|android.hardware.location.GeofenceHardware| |registerForMonitorStateChangeCallback| |int,android.hardware.location.GeofenceHardwareMonitorCallback|
|android.hardware.location.GeofenceHardware| |removeGeofence| |int,int|
|android.hardware.location.GeofenceHardware| |resumeGeofence| |int,int,int|
|android.hardware.location.GeofenceHardware| |unregisterForMonitorStateChangeCallback| |int,android.hardware.location.GeofenceHardwareMonitorCallback|
|com.android.server.TelephonyRegistry| |checkListenerPermission| |int|
|com.android.server.TelephonyRegistry| |listen| |java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean,int|
|com.android.server.TelephonyRegistry| |listenForSubscriber| |int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |listenForSubscriber| |int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |listenForSubscriber| |int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.server.TelephonyRegistry| |listen| |java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ITelephonyRegistry| |listenForSubscriber| |int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |listen| |java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |listen| |java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.server.TelephonyRegistry| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.telephony.TelephonyManager| |listen| |android.telephony.PhoneStateListener,int|
|com.android.internal.telephony.ITelephonyRegistry| |listen| |java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|android.media.MediaFocusControl| |<init>| |android.os.Looper,android.content.Context,android.media.AudioService$VolumeController,android.media.AudioService|
|android.net.MobileDataStateTracker| |startMonitoring| |android.content.Context,android.os.Handler|
|com.android.internal.location.GpsNetInitiatedHandler| |<init>| |android.content.Context,android.location.INetInitiatedListener,boolean|
|com.android.internal.policy.impl.GlobalActions| |<init>| |android.content.Context,android.view.WindowManagerPolicy$WindowManagerFuncs|
|com.android.server.connectivity.DataConnectionStats| |startMonitoring| ||
|com.android.server.location.ComprehensiveCountryDetector| |addPhoneStateListener| ||
|com.android.server.location.ComprehensiveCountryDetector| |removePhoneStateListener| ||
|com.android.server.notification.NotificationManagerService| |listenForCallState| ||
|com.android.server.voiceinteraction.SoundTriggerHelper| |startRecognition| |int,android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig|
|com.android.server.voiceinteraction.SoundTriggerHelper| |internalClearStateLocked| ||
|android.media.AudioService| |<init>| |android.content.Context|
|com.android.server.location.GpsLocationProvider| |<init>| |android.content.Context,android.location.ILocationManager,android.os.Looper|
|com.android.internal.policy.impl.PhoneWindowManager| |showGlobalActionsInternal| ||
|com.android.server.notification.NotificationManagerService| |onStart| ||
|com.android.server.voiceinteraction.SoundTriggerHelper| |stopRecognition| |int,android.hardware.soundtrigger.IRecognitionStatusCallback|
|com.android.server.voiceinteraction.SoundTriggerHelper| |onRecognitionFailureLocked| ||
|com.android.server.voiceinteraction.SoundTriggerHelper| |onServiceDiedLocked| ||
|com.android.server.voiceinteraction.SoundTriggerHelper| |stopAllRecognitions| ||
|com.android.internal.policy.impl.PhoneWindowManager$4| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager| |powerLongPress| ||
|com.android.server.voiceinteraction.SoundTriggerHelper| |onRecognition| |android.hardware.soundtrigger.SoundTrigger$RecognitionEvent|
|com.android.server.voiceinteraction.SoundTriggerHelper| |onServiceDied| ||
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |switchImplementationIfNeededLocked| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |access$800| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onSomePackagesChanged| ||
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver| |onChange| |boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |switchUser| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |systemRunning| |boolean|
|com.android.internal.content.PackageMonitor| |onSomePackagesChanged| ||
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |onSwitchUser| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |onBootPhase| |int|
|com.android.internal.content.PackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.LocationManagerService$4| |onSomePackagesChanged| ||
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onSomePackagesChanged| ||
|com.android.server.ServiceWatcher$2| |onSomePackagesChanged| ||
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.SystemService| |onSwitchUser| |int|
|com.android.server.SystemService| |onBootPhase| |int|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.app.ResolverActivity$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.ServiceWatcher$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.trust.TrustManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.tv.TvInputManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.AlarmManagerService| |onSwitchUser| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onSwitchUser| |int|
|com.android.server.appwidget.AppWidgetService| |onSwitchUser| |int|
|com.android.server.backup.BackupManagerService$Lifecycle| |onSwitchUser| |int|
|com.android.server.BatteryService| |onSwitchUser| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |onSwitchUser| |int|
|com.android.server.display.DisplayManagerService| |onSwitchUser| |int|
|com.android.server.DockObserver| |onSwitchUser| |int|
|com.android.server.dreams.DreamManagerService| |onSwitchUser| |int|
|com.android.server.ethernet.EthernetService| |onSwitchUser| |int|
|com.android.server.fingerprint.FingerprintService| |onSwitchUser| |int|
|com.android.server.hdmi.HdmiControlService| |onSwitchUser| |int|
|com.android.server.job.JobSchedulerService| |onSwitchUser| |int|
|com.android.server.lights.LightsService| |onSwitchUser| |int|
|com.android.server.MmsServiceBroker| |onSwitchUser| |int|
|com.android.server.notification.NotificationManagerService| |onSwitchUser| |int|
|com.android.server.PersistentDataBlockService| |onSwitchUser| |int|
|com.android.server.pm.Installer| |onSwitchUser| |int|
|com.android.server.pm.LauncherAppsService| |onSwitchUser| |int|
|com.android.server.power.PowerManagerService| |onSwitchUser| |int|
|com.android.server.print.PrintManagerService| |onSwitchUser| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onSwitchUser| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onSwitchUser| |int|
|com.android.server.SystemServiceManager| |switchUser| |int|
|com.android.server.telecom.TelecomLoaderService| |onSwitchUser| |int|
|com.android.server.tv.TvInputManagerService| |onSwitchUser| |int|
|com.android.server.twilight.TwilightService| |onSwitchUser| |int|
|com.android.server.UiModeManagerService| |onSwitchUser| |int|
|com.android.server.usage.UsageStatsService| |onSwitchUser| |int|
|com.android.server.usb.UsbService$Lifecycle| |onSwitchUser| |int|
|com.android.server.webkit.WebViewUpdateService| |onSwitchUser| |int|
|com.android.server.wifi.p2p.WifiP2pService| |onSwitchUser| |int|
|com.android.server.wifi.RttService| |onSwitchUser| |int|
|com.android.server.wifi.WifiScanningService| |onSwitchUser| |int|
|com.android.server.wifi.WifiService| |onSwitchUser| |int|
|com.android.server.AlarmManagerService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.fingerprint.FingerprintService| |onBootPhase| |int|
|com.android.server.lights.LightsService| |onBootPhase| |int|
|com.android.server.media.MediaSessionService| |onBootPhase| |int|
|com.android.server.media.projection.MediaProjectionManagerService| |onBootPhase| |int|
|com.android.server.MmsServiceBroker| |onBootPhase| |int|
|com.android.server.PersistentDataBlockService| |onBootPhase| |int|
|com.android.server.pm.Installer| |onBootPhase| |int|
|com.android.server.pm.LauncherAppsService| |onBootPhase| |int|
|com.android.server.print.PrintManagerService| |onBootPhase| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onBootPhase| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onBootPhase| |int|
|com.android.server.SystemServiceManager| |startBootPhase| |int|
|com.android.server.twilight.TwilightService| |onBootPhase| |int|
|com.android.server.usage.UsageStatsService| |onBootPhase| |int|
|com.android.server.webkit.WebViewUpdateService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService| |startUser| |int,boolean|
|com.android.server.am.ActivityManagerService| |finishBooting| ||
|com.android.server.am.ActivityManagerService| |startUserInBackground| |int|
|com.android.server.am.ActivityManagerService| |startUserInForeground| |int,android.app.Dialog|
|com.android.server.am.ActivityManagerService| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |ensureBootCompleted| ||
|android.app.ActivityManagerNative| |startUserInBackground| |int|
|com.android.server.am.ActivityManagerService| |startProfilesLocked| ||
|com.android.server.am.UserSwitchingDialog| |onWindowShown| ||
|android.app.ActivityManagerNative| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |appNotResponding| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |systemReady| |java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |crashApplication| |com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |startUserInBackground| |int|
|com.android.server.am.ActivityManagerService| |finishUserSwitch| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |scheduleStartProfilesLocked| ||
|android.app.IActivityManager| |bootAnimationComplete| ||
|com.android.server.am.ActiveServices| |serviceTimeout| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService$10| |run| ||
|com.android.server.am.BroadcastQueue$AppNotResponding| |run| ||
|com.android.server.am.ActivityManagerService$14| |run| ||
|com.android.server.am.ActivityManagerService| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrashInner| |java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.am.Am| |runStartUserInBackground| ||
|com.android.server.am.ActivityStackSupervisor| |activityIdleInternalLocked| |android.os.IBinder,boolean,android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |performEnableScreen| ||
|android.app.ActivityManagerNative| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener$NativeCrashReporter| |run| ||
|com.android.commands.am.Am| |onRun| ||
|com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler| |activityIdleInternal| |com.android.server.am.ActivityRecord|
|com.android.server.wm.WindowManagerService| |enableScreenAfterBoot| ||
|com.android.server.wm.WindowManagerService| |performBootTimeout| ||
|com.android.server.wm.WindowManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeededLocked| ||
|com.android.server.wm.WindowManagerService| |checkBootAnimationCompleteLocked| ||
|android.app.IActivityManager| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |consumeNativeCrashData| |java.io.FileDescriptor|
|com.android.internal.os.BaseCommand| |onRun| ||
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleTimeoutLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleLocked| ||
|com.android.server.am.ActivityManagerService| |enableScreenAfterBoot| ||
|com.android.server.am.ActivityManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedInner| |boolean|
|com.android.server.wm.WindowStateAnimator| |performShowLocked| ||
|com.android.server.wm.WindowStateAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$1100| |com.android.server.wm.WindowManagerService|
|com.android.internal.os.RuntimeInit| |wtf| |java.lang.String,java.lang.Throwable,boolean|
|android.app.IActivityManager| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |run| ||
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|com.android.server.am.ActivityStack| |backgroundResourcesReleased| ||
|com.android.server.am.ActivityStack| |clearLaunchTime| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStack| |completeResumeLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityRecord| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStack| |completePauseLocked| |boolean|
|com.android.server.am.ActivityStack| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|android.app.ActivityManagerNative| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub$Proxy| |enableScreenIfNeeded| ||
|android.view.IWindowManager$Stub| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedLoop| ||
|com.android.server.wm.AppWindowAnimator| |showAllWindowsLocked| ||
|com.android.server.wm.WindowAnimator| |updateWindowsLocked| |int|
|com.android.server.wm.WindowStateAnimator| |commitFinishDrawingLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean|
|com.android.server.wm.WindowState| |setAppOpVisibilityLw| |boolean|
|android.util.Log$1| |onTerribleFailure| |java.lang.String,android.util.Log$TerribleFailure,boolean|
|com.android.internal.os.RuntimeInit$UncaughtHandler| |uncaughtException| |java.lang.Thread,java.lang.Throwable|
|com.android.server.am.ActivityManagerService| |startObservingNativeCrashes| ||
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|com.android.server.am.ActivityStack| |releaseBackgroundResources| ||
|com.android.server.am.ActivityStack| |startPausingLocked| |boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |access$400| |com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |broadcastIntentLocked| |com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |finishInstrumentationLocked| |com.android.server.am.ProcessRecord,int,android.os.Bundle|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |forceStopUserLocked| |int,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |shutdownLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |activitySleptLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |goingToSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |scheduleSleepTimeout| ||
|com.android.server.am.ActivityStack| |activityPausedLocked| |android.os.IBinder,boolean|
|com.android.server.am.ActivityStackSupervisor| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.am.ActivityStack| |goToSleep| ||
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |android.content.pm.ApplicationInfo,int|
|android.app.IActivityManager| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowManager| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLocked| ||
|com.android.server.wm.WindowAnimator| |testTokenMayBeDrawnLocked| |int|
|com.android.server.wm.WindowManagerService| |handleAppTransitionReadyLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowAnimator| |animateLocked| ||
|android.view.WindowManagerPolicy$WindowState| |hideLw| |boolean|
|com.android.server.wm.DisplayContent| |switchUserStacks| |int|
|com.android.server.wm.WindowManagerService| |updateAppOpsState| ||
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|com.android.server.am.ActivityStack| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |pauseBackStacks| |boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |setSurfaceLocked| |android.view.Surface,int,int,int|
|com.android.server.am.ActivityStackSupervisor| |pauseChildStacks| |com.android.server.am.ActivityRecord,boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService$7| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |deliverPreBootCompleted| |java.lang.Runnable,java.util.ArrayList,int|
|com.android.server.am.ActivityManagerService| |updateConfigurationLocked| |android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean|
|com.android.server.am.ActivityManagerService| |access$200| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |closeSystemDialogsLocked| |java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserBoot| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppDiedLocked| |com.android.server.am.ProcessRecord,boolean,boolean|
|com.android.server.am.ActivityManagerService| |finishUserStop| |com.android.server.am.UserStartedState|
|android.view.IApplicationToken$Stub$Proxy| |windowsVisible| ||
|android.view.IApplicationToken$Stub| |windowsVisible| ||
|com.android.server.am.ActivityManagerService| |shutdown| |int|
|com.android.server.am.ActivityManagerService| |updateSleepIfNeededLocked| ||
|com.android.server.am.ActivityStack| |awakeFromSleepingLocked| ||
|com.android.server.am.ActivityStackSupervisor| |attachApplicationLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.CompatModePackages| |setFrontActivityScreenCompatModeLocked| |int|
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |java.lang.String,int|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| |android.content.pm.PackageParser$Package,int,int|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| ||
|com.android.server.wm.WindowManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.policy.impl.PhoneWindowManager| |finishScreenTurningOn| ||
|com.android.server.wm.WindowManagerService| |computeNewConfiguration| ||
|com.android.server.wm.WindowManagerService| |setTokenVisibilityLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$400| |com.android.server.wm.WindowManagerService|
|com.android.server.wm.WindowManagerService| |addTask| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |moveStackWindowsLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reconfigureDisplayLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.WindowManagerService| |removeWindowInnerLocked| |com.android.server.wm.Session,com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |resizeStack| |int,android.graphics.Rect|
|com.android.server.wm.WindowManagerService| |setCurrentUser| |int,int[]|
|com.android.server.wm.WindowManagerService| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |setUniverseTransformLocked| |com.android.server.wm.WindowState,float,float,float,float,float,float,float|
|com.android.server.wm.WindowManagerService| |unsetAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken,boolean,boolean|
|com.android.server.wm.WindowAnimator| |access$000| |com.android.server.wm.WindowAnimator|
|com.android.internal.policy.impl.BarController| |setBarShowingLw| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |finishPostLayoutPolicyLw| ||
|com.android.internal.policy.impl.PhoneWindowManager| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|com.android.server.wm.WindowManagerService$5| |onOpChanged| |int,java.lang.String|
|android.app.ActivityManagerNative| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |retrieveSettings| ||
|com.android.server.am.ActivityManagerService$29| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |attachApplicationLocked| |android.app.IApplicationThread,int|
|com.android.server.am.ActivityManagerService| |removeProcessLocked| |com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord,int,android.app.IApplicationThread|
|com.android.server.am.ActivityManagerService$28| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.view.IApplicationToken$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IApplicationToken| |windowsVisible| ||
|android.app.ActivityManagerNative| |shutdown| |int|
|com.android.server.am.ActivityManagerService$12| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |finishRunningVoiceLocked| ||
|com.android.server.am.ActivityManagerService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityManagerService| |startRunningVoiceLocked| ||
|com.android.server.am.ActivityStackSupervisor| |comeOutOfSleepIfNeededLocked| ||
|com.android.server.am.ActivityManagerService| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.am.CompatModeDialog$1| |onCheckedChanged| |android.widget.CompoundButton,boolean|
|android.content.pm.IPackageManager$Stub$Proxy| |performBootDexOpt| ||
|android.content.pm.IPackageManager$Stub| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishKeyguardDrawn| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishWindowsDrawn| ||
|com.android.server.am.ActivityManagerService| |updateConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |prepareAppTransition| |int,boolean|
|com.android.server.wm.WindowManagerService| |updateRotationUncheckedLocked| |boolean|
|com.android.server.wm.WindowManagerService| |makeWindowFreezingScreenIfNeededLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |requestTraversalLocked| ||
|com.android.server.am.ActivityStackSupervisor| |moveTaskToStackLocked| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |setForcedDisplayDensityLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.WindowManagerService| |setForcedDisplaySizeLocked| |com.android.server.wm.DisplayContent,int,int|
|com.android.server.wm.WindowManagerService| |setOverscanLocked| |com.android.server.wm.DisplayContent,int,int,int,int|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.TaskStack| |detachDisplay| ||
|android.view.IWindowManager$Stub$Proxy| |setNewConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |startAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken|
|com.android.server.wm.WindowAnimator$1| |run| ||
|com.android.internal.policy.impl.BarController| |checkHiddenLw| ||
|com.android.internal.policy.impl.BarController| |adjustSystemUiVisibilityLw| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |beginLayoutLw| |boolean,int,int,int|
|android.view.WindowManagerPolicy| |finishPostLayoutPolicyLw| ||
|android.view.WindowManagerPolicy| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|android.app.IActivityManager| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub$Proxy| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.content.IIntentReceiver$Stub| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppCrashLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killPackageProcessesLocked| |java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActivityManagerService$AppDeathRecipient| |binderDied| ||
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityRecord$Token| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |shutdown| |int|
|com.android.server.am.ActivityManagerService$LocalService| |onWakefulnessChanged| |int|
|android.app.ActivityManagerNative| |setPackageScreenCompatMode| |java.lang.String,int|
|android.content.pm.IPackageManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$300| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$400| |com.android.internal.policy.impl.PhoneWindowManager|
|android.app.ActivityManagerNative| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub$Proxy| |prepareAppTransition| |int,boolean|
|android.view.IWindowManager$Stub| |prepareAppTransition| |int,boolean|
|com.android.server.am.ActivityManagerService| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStack| |moveTaskToBackLocked| |int|
|com.android.server.am.ActivityStack| |moveTaskToFrontLocked| |com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle,java.lang.String|
|com.android.server.am.ActivityStack| |updateTransitLocked| |int,android.os.Bundle|
|com.android.server.wm.WindowManagerService| |resumeRotationLocked| ||
|com.android.server.wm.WindowManagerService| |stopFreezingDisplayLocked| ||
|com.android.server.wm.WindowManagerService| |updateResizingWindows| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |createSurfaceLocked| ||
|com.android.server.wm.WindowManagerService$LocalService| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.wm.WindowManagerService| |handleDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayChangedLocked| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayRemovedLocked| |int|
|com.android.server.wm.WindowManagerService| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |requestTraversal| ||
|com.android.server.wm.WindowManagerService| |setAppFullscreen| |android.os.IBinder,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$9| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |clearClearableFlagsLw| ||
|com.android.server.wm.WindowManagerService| |detachStackLocked| |com.android.server.wm.DisplayContent,com.android.server.wm.TaskStack|
|android.view.IWindowManager| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |updateOrientationFromAppTokensLocked| |android.content.res.Configuration,android.os.IBinder|
|com.android.internal.policy.impl.PhoneWindowManager| |adjustSystemUiVisibilityLw| |int|
|android.view.WindowManagerPolicy| |beginLayoutLw| |boolean,int,int,int|
|com.android.server.pm.PackageManagerService| |killApplication| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IIntentReceiver| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.IActivityManager| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|android.view.IApplicationToken$Stub$Proxy| |keyDispatchingTimedOut| |java.lang.String|
|android.view.IApplicationToken$Stub| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |makeAppCrashingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killAppAtUsersRequest| |com.android.server.am.ProcessRecord,android.app.Dialog|
|com.android.server.am.ActivityManagerService| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |bringUpServiceLocked| |com.android.server.am.ServiceRecord,int,boolean,boolean|
|com.android.server.am.ActivityManagerService| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |processNextBroadcast| |boolean|
|com.android.server.am.ActivityManagerService$LocalService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |realStartServiceLocked| |com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean|
|com.android.server.power.ShutdownThread| |run| ||
|android.app.IActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.pm.PackageManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.WindowManagerPolicy| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |systemBooted| ||
|com.android.internal.policy.impl.PhoneWindowManager$1| |run| ||
|android.app.IActivityManager| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager| |prepareAppTransition| |int,boolean|
|android.app.ActivityManagerNative| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |findTaskToMoveToFrontLocked| |com.android.server.am.TaskRecord,int,android.os.Bundle,java.lang.String|
|com.android.server.wm.DragState| |unregister| ||
|com.android.server.wm.WindowManagerService| |access$500| |com.android.server.wm.WindowManagerService|
|android.view.WindowManagerInternal| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay| |<init>| |com.android.server.am.ActivityStackSupervisor,int,int,int|
|com.android.server.wm.WindowManagerService| |onDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |access$1000| |com.android.server.wm.WindowManagerService,int|
|com.android.server.wm.WindowManagerService| |access$900| |com.android.server.wm.WindowManagerService,int|
|android.view.IWindowManager$Stub$Proxy| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager$Stub| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService$LocalService| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemBarsLw| |android.view.WindowManagerPolicy$WindowState,int,int|
|com.android.server.wm.DisplayContent| |checkForDeferredActions| ||
|com.android.server.wm.WindowManagerService| |detachStack| |int|
|android.view.WindowManagerPolicy| |adjustSystemUiVisibilityLw| |int|
|com.android.server.wm.WindowManagerService| |performLayoutLockedInner| |com.android.server.wm.DisplayContent,boolean,boolean|
|com.android.server.pm.PackageManagerService| |scanPackageDirtyLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageLI| |java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |replaceSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|android.app.LoadedApk$ReceiverDispatcher$InnerReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.PendingIntent$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IntentSender$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.am.Am$IntentReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.monkey.MonkeyNetworkMonitor| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$13| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$15| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$24| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$25| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$28| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$29| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$8| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService$12| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.BroadcastQueue| |performReceiveLocked| |com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.wm.InputMonitor| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.view.IApplicationToken| |keyDispatchingTimedOut| |java.lang.String|
|android.app.ActivityManagerNative| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceInnerLocked| |com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |performServiceRestartLocked| |com.android.server.am.ServiceRecord|
|android.app.ActivityManagerNative| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |broadcastTimeoutLocked| |boolean|
|com.android.server.am.BroadcastQueue| |scheduleBroadcastsLocked| ||
|android.app.ActivityManagerInternal| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |attachApplicationLocked| |com.android.server.am.ProcessRecord,java.lang.String|
|com.android.server.power.ShutdownThread| |beginShutdownSequence| |android.content.Context|
|android.app.ActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |runScreenCompat| ||
|com.android.server.power.Notifier$2| |run| ||
|android.view.WindowManagerPolicy| |systemBooted| ||
|com.android.internal.app.LocalePicker| |updateLocale| |java.util.Locale|
|com.android.internal.telephony.MccTable| |setSystemLocale| |android.content.Context,java.lang.String,java.lang.String|
|com.android.internal.telephony.MccTable| |updateMccMncConfiguration| |android.content.Context,java.lang.String,boolean|
|com.android.server.MountService| |copyLocaleFromMountService| ||
|com.android.server.UiModeManagerService| |sendConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |displayReady| ||
|com.android.server.wm.WindowManagerService| |sendNewConfiguration| ||
|android.app.IActivityManager| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |setLockTaskModeLocked| |com.android.server.am.TaskRecord,boolean,java.lang.String|
|com.android.server.wm.DragState| |endDragLw| ||
|com.android.server.wm.Session| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.WindowManagerService| |prepareDragSurface| |android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface|
|com.android.server.wm.WindowManagerService| |startFreezingScreen| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayAddedLocked| |int|
|com.android.server.wm.WindowManagerService| |onDisplayChanged| |int|
|com.android.server.wm.WindowManagerService| |onDisplayRemoved| |int|
|android.view.IWindowManager| |keyguardGoingAway| |boolean,boolean|
|android.view.WindowManagerInternal| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemUiVisibilityLw| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |detachLocked| ||
|com.android.server.wm.WindowManagerService| |statusBarVisibilityChanged| |int|
|com.android.server.wm.WindowManagerService| |updateFocusedWindowLocked| |int,boolean|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |java.io.File,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageX| |java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installNewPackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |replaceNonSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |unloadMediaPackages| |android.util.ArrayMap,int[],boolean|
|com.android.server.pm.PackageManagerService| |replacePackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.am.BroadcastQueue| |deliverToRegisteredReceiverLocked| |com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.app.IActivityManager| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceLocked| |android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int|
|com.android.server.am.ActiveServices$ServiceMap| |rescheduleDelayedStarts| ||
|com.android.server.am.ActiveServices$ServiceRestarter| |run| ||
|android.app.IActivityManager| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.ActivityManagerService| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |setBroadcastTimeoutLocked| |long|
|com.android.server.am.ActivityManagerService| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.BroadcastQueue| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |createRelroFile| |boolean,java.lang.String[]|
|com.android.server.power.ShutdownThread| |access$000| |android.content.Context|
|com.android.server.power.ShutdownThread| |shutdownInner| |android.content.Context,boolean|
|com.android.internal.telephony.PhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |setLocaleFromCsim| ||
|com.android.internal.telephony.uicc.SIMRecords| |setLocaleFromUsim| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setProperties| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.PhoneFactory| |setDefaultSubscription| |int|
|com.android.internal.telephony.ServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |setDefaultFallbackSubId| |int|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLoaded| |int|
|com.android.server.MountService| |access$2000| |com.android.server.MountService|
|com.android.server.UiModeManagerService| |sendConfigurationAndStartDreamOrDockAppLocked| |java.lang.String|
|com.android.server.wm.WindowManagerService$DragInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|android.view.IWindowSession$Stub$Proxy| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.Session| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager$Stub$Proxy| |startFreezingScreen| |int,int|
|android.view.IWindowManager$Stub| |startFreezingScreen| |int,int|
|android.view.WindowManagerPolicy| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |onDisplayAdded| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayChangedLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayRemovedLocked| |int|
|com.android.server.display.DisplayManagerService| |scheduleTraversalLocked| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1900| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |requestTransientBars| |android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |detachLocked| ||
|android.view.IWindowManager$Stub$Proxy| |statusBarVisibilityChanged| |int|
|android.view.IWindowManager$Stub| |statusBarVisibilityChanged| |int|
|com.android.server.pm.PackageManagerService| |deleteSystemPackageLI| |com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |<init>| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService| |loadMediaPackages| |android.util.ArrayMap,int[]|
|com.android.server.pm.PackageManagerService| |scanDirLI| |java.io.File,int,int,long|
|com.android.server.pm.PackageManagerService| |access$4000| |com.android.server.pm.PackageManagerService,java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installPackageLI| |com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |updateExternalMediaStatusInner| |boolean,boolean,boolean|
|com.android.server.input.InputManagerService| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices$ServiceMap| |ensureNotStartingBackground| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService| |bindToAgentSynchronous| |android.content.pm.ApplicationInfo,int|
|android.app.ActivityManagerNative| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| |java.lang.String[]|
|com.android.server.power.ShutdownThread$1| |onClick| |android.content.DialogInterface,int|
|com.android.server.power.ShutdownThread| |reboot| |android.content.Context,java.lang.String,boolean|
|com.android.server.power.ShutdownThread| |rebootSafeMode| |android.content.Context,boolean|
|com.android.server.power.ShutdownThread| |shutdown| |android.content.Context,boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.gsm.GSMPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.sip.SipPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionInfoUpdater$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.MountService$3| |run| ||
|com.android.server.UiModeManagerService| |updateAfterBroadcastLocked| |java.lang.String,int,int|
|com.android.server.UiModeManagerService| |updateLocked| |int,int|
|android.view.IWindowSession| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession$Stub$Proxy| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowSession$Stub| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager| |startFreezingScreen| |int,int|
|com.android.server.display.DisplayPowerController| |setScreenState| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayRemoved| |int|
|com.android.server.display.DisplayManagerService| |access$1600| |com.android.server.display.DisplayManagerService,boolean|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAddedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceChanged| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemovedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |requestGlobalDisplayStateInternal| |int|
|com.android.server.display.DisplayManagerService| |setDisplayInfoOverrideFromWindowManagerInternal| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |setDisplayPropertiesInternal| |int,boolean,float,boolean|
|com.android.server.display.DisplayManagerService| |windowManagerAndInputReady| ||
|com.android.internal.policy.impl.PhoneWindowManager$17| |onReceive| |android.content.Context,android.content.Intent|
|android.view.WindowManagerPolicy| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1700| |com.android.internal.policy.impl.PhoneWindowManager,android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTaskListEmptyLocked| ||
|android.view.IWindowManager| |statusBarVisibilityChanged| |int|
|com.android.server.pm.PackageManagerService| |main| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService$14| |run| ||
|com.android.server.pm.PackageManagerService$8| |run| ||
|com.android.server.pm.PackageManagerService| |access$2300| |com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |access$4500| |com.android.server.pm.PackageManagerService,boolean,boolean,boolean|
|com.android.server.pm.PackageManagerService| |scanAvailableAsecs| ||
|com.android.server.am.ActiveServices| |bringDownServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$FullBackupEngine| |backupOnePackage| |android.content.pm.PackageInfo|
|com.android.server.backup.BackupManagerService$FullRestoreEngine| |restoreOneFile| |java.io.InputStream|
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |restoreOneFile| |java.io.InputStream,byte[]|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeNextAgent| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreKeyValue| ||
|android.app.IActivityManager| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |cleanUpApplicationRecordLocked| |com.android.server.am.ProcessRecord,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |startAppProblemLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|android.webkit.WebViewFactory| |onWebViewUpdateInstalled| ||
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| ||
|com.android.server.power.PowerManagerService$3| |run| ||
|com.android.server.wm.WindowManagerService| |rebootSafeMode| |boolean|
|com.android.server.wm.WindowManagerService| |shutdown| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.uicc.IccRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.RuimRecords| |onRecordLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onRecordLoaded| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |addSubInfoRecord| |java.lang.String,int|
|com.android.server.MountService| |onDaemonConnected| ||
|com.android.server.UiModeManagerService| |access$000| |com.android.server.UiModeManagerService,java.lang.String,int,int|
|com.android.server.UiModeManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |updateDockState| |int|
|com.android.server.UiModeManagerService| |updateTwilight| ||
|android.view.View| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.wm.Session| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|com.android.server.display.DisplayPowerController| |animateScreenStateChange| |int,boolean|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |createVirtualDisplayInternal| |android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAdded| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$1400| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemoved| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |releaseVirtualDisplayInternal| |android.os.IBinder|
|com.android.server.display.DisplayManagerService| |access$3700| |com.android.server.display.DisplayManagerService,int|
|com.android.server.display.DisplayManagerService| |access$4100| |com.android.server.display.DisplayManagerService,int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |access$4300| |com.android.server.display.DisplayManagerService,int,boolean,float,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$18| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromRight| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromTop| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTaskListEmptyLocked| ||
|com.android.server.pm.PackageManagerService$6| |run| ||
|com.android.server.pm.PackageManagerService$11| |run| ||
|com.android.server.am.ActiveServices| |forceStopLocked| |java.lang.String,int,boolean,boolean|
|com.android.server.am.ActiveServices| |bringDownServiceIfNeededLocked| |com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |killServicesLocked| |com.android.server.am.ProcessRecord,boolean|
|com.android.server.am.ActiveServices| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|com.android.server.backup.BackupManagerService$PerformAdbBackupTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$EngineThread| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |execute| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |execute| ||
|com.android.commands.monkey.MonkeyNetworkMonitor| |register| |android.app.IActivityManager|
|com.android.server.am.ActivityManagerService| |trimApplications| ||
|com.android.server.am.ActivityManagerService| |makeAppNotRespondingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |access$300| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord|
|com.android.server.webkit.WebViewUpdateService| |onWebViewUpdateInstalled| ||
|android.view.WindowManagerPolicy$WindowManagerFuncs| |rebootSafeMode| |boolean|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |shutdown| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.uicc.IccRecords| |onRecordLoaded| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollState| ||
|com.android.internal.telephony.ISub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.INativeDaemonConnectorCallbacks| |onDaemonConnected| ||
|com.android.server.UiModeManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |access$100| |com.android.server.UiModeManagerService,int|
|com.android.server.UiModeManagerService$4| |onTwilightStateChanged| ||
|android.app.ActivityView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.FragmentBreadCrumbs| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.MediaRouteButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.NativeActivity$NativeContentView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.SearchDialog$SearchBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.appwidget.AppWidgetHostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.filterfw.core.FilterSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.gesture.GestureOverlayView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.KeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLineBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.TtmlRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView$3| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$CueLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$RegionLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$SpanLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.opengl.GLSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.preference.PreferenceFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSTextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.GhostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.LayoutInflater$BlinkLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.SurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.TextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewOverlay$OverlayViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewStub| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.webkit.WebView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsoluteLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSpinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuPresenter$OverflowMenuButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActivityChooserView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AnalogClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AppSecurityPermissions$PermissionItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Button| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarViewLegacyDelegate$WeekView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckedTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Chronometer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CompoundButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DatePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DateTimeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DayPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DialerFilter| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DigitalClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$HandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$InsertionHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionEndHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionStartHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.EditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ExpandableListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.FrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Gallery| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.HorizontalScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.LinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListPopupWindow$DropDownListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MediaController| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MultiAutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker$CustomEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.PopupWindow$PopupViewContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.QuickContactBadge| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadialTimePickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RatingBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RelativeLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView$SearchAutoComplete| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SimpleMonthView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SlidingDrawer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Space| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Spinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView$StackFrame| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Switch| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabHost| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableRow| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextViewWithCircularIndicator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TimePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ToggleButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Toolbar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TwoLineListItem| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.VideoView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.YearPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButtonsController$Container| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomControls| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.AlertController$RecycleListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.PlatLogoActivity$1| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.RecentApplicationsBackground| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ActionMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ExpandedMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ListMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AbsActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccessibleDateAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccountItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarOverlayLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView$HomeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.DialogTitle| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.FaceUnlockView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LockPatternView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PasswordEntryKeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PointerLocationView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PreferenceImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ResolverDrawerLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.RotarySelector| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView$TabView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SizeAdaptiveLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SlidingTab| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SubtitleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SwipeDismissLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.TextProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WaveView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WeightedLinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.display.DisplayPowerController| |updatePowerState| ||
|com.android.server.display.DisplayAdapter$Listener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |access$3200| |com.android.server.display.DisplayManagerService,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |access$1300| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayManagerService| |access$1500| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$3500| |com.android.server.display.DisplayManagerService,android.os.IBinder|
|com.android.server.display.DisplayManagerService$LocalService$1| |requestDisplayState| |int|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromRight| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromTop| ||
|com.android.server.am.ActivityStack| |finishAllActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |removeTask| |com.android.server.am.TaskRecord,java.lang.String|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |release| ||
|com.android.server.am.ActiveServices| |removeConnectionLocked| |com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActiveServices| |stopServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |execute| ||
|com.android.commands.monkey.Monkey| |getSystemInterfaces| ||
|com.android.server.am.ActivityManagerService| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]|
|com.android.server.webkit.WebViewUpdateService| |access$000| |com.android.server.webkit.WebViewUpdateService|
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onPress| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.PhoneFactory| |getGsmPhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhone| |android.content.Context|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.ServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.ServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.gsm.GSMPhone| |setOperatorBrandOverride| |java.lang.String|
|android.telephony.SubscriptionManager| |addSubscriptionInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.NativeDaemonConnector| |listenToSocket| ||
|com.android.server.UiModeManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.twilight.TwilightListener| |onTwilightStateChanged| ||
|android.widget.Editor| |performLongClick| |boolean|
|com.android.server.display.DisplayPowerController| |access$400| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |debounceProximitySensor| ||
|com.android.server.display.DisplayAdapter$2| |run| ||
|com.android.server.display.DisplayAdapter$Listener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayBlanker| |requestDisplayState| |int|
|android.hardware.display.DisplayManagerInternal| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|android.hardware.display.DisplayManagerInternal| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener| |onPointerEvent| |android.view.MotionEvent|
|com.android.server.am.ActivityRecord| |setTask| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord|
|android.app.IActivityContainer$Stub$Proxy| |release| ||
|android.app.IActivityContainer$Stub| |release| ||
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |release| ||
|com.android.server.am.ActiveServices| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |executeNextState| |com.android.server.backup.BackupManagerService$BackupState|
|com.android.commands.monkey.Monkey| |run| |java.lang.String[]|
|android.app.ActivityManagerNative| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |addAppLocked| |android.content.pm.ApplicationInfo,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String|
|com.android.server.webkit.WebViewUpdateService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.policy.impl.GlobalActions$LongPressAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$Action| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$SinglePressAction| |onPress| ||
|com.android.internal.telephony.PhoneFactory| |getCdmaPhone| |int|
|com.android.internal.telephony.PhoneProxy| |deleteAndCreatePhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhones| |android.content.Context|
|com.android.internal.telephony.imsphone.ImsPhoneFactory| |makePhone| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.sip.SipPhoneFactory| |makePhone| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.PhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |updateSubscriptionInfoByIccId| ||
|com.android.server.NativeDaemonConnector| |run| ||
|com.android.server.twilight.TwilightService$TwilightListenerRecord| |run| ||
|android.widget.TextView| |performLongClick| ||
|com.android.server.display.DisplayPowerController$ScreenOnUnblocker| |onScreenOn| ||
|com.android.server.display.DisplayPowerController| |sendUpdatePowerStateLocked| ||
|com.android.server.display.DisplayPowerController| |access$500| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |handleProximitySensorEvent| |long,boolean|
|com.android.server.display.DisplayAdapter$1| |run| ||
|com.android.server.display.DisplayPowerState$PhotonicModulator| |requestDisplayState| |int|
|com.android.server.wm.WindowManagerService| |computeScreenConfigurationLocked| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |newDisplayContentLocked| |android.view.Display|
|com.android.server.am.ActivityStack| |resetTargetTaskIfNeededLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.am.ActivityStack| |resetAffinityTaskIfNeededLocked| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int|
|android.app.IActivityContainer$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityContainer| |release| ||
|com.android.server.am.ActivityManagerService| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |agentErrorCleanup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |beginBackup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |operationComplete| ||
|com.android.commands.monkey.Monkey| |main| |java.lang.String[]|
|android.app.IActivityManager| |setProcessLimit| |int|
|com.android.internal.policy.impl.GlobalActions$2| |onItemLongClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.internal.policy.impl.GlobalActions| |onClick| |android.content.DialogInterface,int|
|com.android.internal.policy.impl.GlobalActions| |handleShow| ||
|com.android.internal.telephony.PhoneProxy| |phoneObjectUpdater| |int|
|com.android.internal.telephony.PhoneFactory| |makeImsPhone| |com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.PhoneFactory| |makeSipPhone| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.Phone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.Phone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimAbsent| |int|
|android.inputmethodservice.ExtractButton| |performLongClick| ||
|android.inputmethodservice.ExtractEditText| |performLongClick| ||
|android.media.ClosedCaptionWidget$CCLineBox| |performLongClick| ||
|android.widget.AutoCompleteTextView| |performLongClick| ||
|android.widget.Button| |performLongClick| ||
|android.widget.CheckBox| |performLongClick| ||
|android.widget.CheckedTextView| |performLongClick| ||
|android.widget.Chronometer| |performLongClick| ||
|android.widget.CompoundButton| |performLongClick| ||
|android.widget.DateTimeView| |performLongClick| ||
|android.widget.DigitalClock| |performLongClick| ||
|android.widget.EditText| |performLongClick| ||
|android.widget.MultiAutoCompleteTextView| |performLongClick| ||
|android.widget.NumberPicker$CustomEditText| |performLongClick| ||
|android.widget.RadioButton| |performLongClick| ||
|android.widget.SearchView$SearchAutoComplete| |performLongClick| ||
|android.widget.Switch| |performLongClick| ||
|android.widget.TextClock| |performLongClick| ||
|android.widget.TextViewWithCircularIndicator| |performLongClick| ||
|android.widget.ToggleButton| |performLongClick| ||
|com.android.internal.view.menu.ActionMenuItemView| |performLongClick| ||
|com.android.internal.view.menu.IconMenuItemView| |performLongClick| ||
|com.android.internal.widget.DialogTitle| |performLongClick| ||
|com.android.server.display.DisplayPowerController| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |sendUpdatePowerState| ||
|com.android.server.display.DisplayPowerController| |access$1000| |com.android.server.display.DisplayPowerController,long,boolean|
|com.android.server.display.DisplayPowerState$PhotonicModulator| |run| ||
|com.android.server.wm.WindowManagerService| |computeNewConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |getDisplayContentLocked| |int|
|com.android.server.am.ActivityStack| |resetTaskIfNeededLocked| |com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityView$ActivityContainerWrapper| |release| ||
|com.android.server.am.ActivityManagerService| |removeTaskByIdLocked| |int,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeAgentForBackup| |java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |operationComplete| ||
|com.android.internal.policy.impl.GlobalActions| |access$1800| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.GlobalActions| |showDialog| |boolean,boolean|
|com.android.internal.telephony.PhoneProxy| |updatePhoneObject| |int|
|com.android.internal.telephony.PhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.PhoneProxy| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.PhoneProxy| |setOperatorBrandOverride| |java.lang.String|
|com.android.server.display.DisplayManagerService$LocalService| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |access$000| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |updateBrightness| ||
|com.android.server.display.DisplayPowerController$8| |onSensorChanged| |android.hardware.SensorEvent|
|com.android.server.display.DisplayPowerState| |<init>| |com.android.server.display.DisplayBlanker,com.android.server.lights.Light,com.android.server.display.ColorFade|
|com.android.server.wm.WindowAnimator| |getPendingLayoutChanges| |int|
|com.android.server.wm.WindowAnimator| |setPendingLayoutChanges| |int,int|
|com.android.server.wm.WindowAnimator| |updateAppWindowsLocked| |int|
|com.android.server.wm.WindowAnimator| |updateWallpaperLocked| |int|
|com.android.server.wm.WindowManagerService| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayContentLocked| ||
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |int|
|com.android.server.wm.WindowManagerService| |addWindow| |com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.WindowManagerService| |getBaseDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |getInitialDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |createDisplayContentLocked| |android.view.Display|
|com.android.server.wm.WindowManagerService| |displayReady| |int|
|com.android.server.wm.WindowManagerService| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.wm.WindowManagerService| |getInitialDisplaySize| |int,android.graphics.Point|
|android.app.ActivityView$ActivityContainerWrapper| |finalize| ||
|android.app.ActivityView| |release| ||
|com.android.server.am.ActivityManagerService| |access$1400| |com.android.server.am.ActivityManagerService,int,boolean|
|com.android.server.am.ActivityManagerService| |removeTasksByPackageNameLocked| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |removeTasksByRemovedPackageComponentsLocked| |java.lang.String,int|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService| |opComplete| |int|
|com.android.internal.telephony.Phone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateImsPhone| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateImsPhone| ||
|com.android.internal.telephony.gsm.GSMPhone| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhone| |updateImsPhone| ||
|com.android.internal.telephony.PhoneBase$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.sip.SipPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.sip.SipPhone| |updateImsPhone| ||
|android.hardware.display.DisplayManagerInternal| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController$1| |onAnimationEnd| |android.animation.Animator|
|com.android.server.display.DisplayPowerController$2| |onAnimationEnd| ||
|com.android.server.display.DisplayPowerController$3| |run| ||
|com.android.server.display.AutomaticBrightnessController$Callbacks| |updateBrightness| ||
|com.android.server.display.DisplayPowerController| |initialize| ||
|com.android.server.wm.WindowAnimator| |setAppLayoutChanges| |com.android.server.wm.AppWindowAnimator,int,java.lang.String|
|com.android.server.wm.WindowAnimator| |hideWallpapersLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |prepareSurfaceLocked| |boolean|
|com.android.server.wm.WindowStateAnimator| |setSurfaceBoundariesLocked| |boolean|
|android.view.IWindowManager$Stub$Proxy| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|android.view.IWindowManager$Stub| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |screenshotActivities| |com.android.server.am.ActivityRecord|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |populateWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |populateVisibleWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayInfoLocked| ||
|com.android.server.wm.WindowManagerService| |getDefaultWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |adjustWallpaperWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |getOrientationFromAppTokensLocked| ||
|com.android.server.wm.WindowManagerService| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |handleAnimatingStoppedAndTransitionLocked| ||
|com.android.server.wm.WindowManagerService| |createWatermarkInTransaction| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean|
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |saveLastInputMethodWindowForTransition| ||
|com.android.server.wm.WindowManagerService| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.wm.WindowManagerService| |showCircularMask| |boolean|
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlay| ||
|com.android.server.wm.WindowManagerService| |showStrictModeViolation| |int,int|
|com.android.server.wm.WindowManagerService| |startFreezingDisplayLocked| |boolean,int,int|
|com.android.server.wm.WindowManagerService| |updateWallpaperVisibilityLocked| ||
|com.android.server.wm.WindowAnimator| |dumpLocked| |java.io.PrintWriter,java.lang.String,boolean|
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |android.view.Display|
|com.android.server.wm.Session| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.am.ProcessList| |applyDisplaySize| |com.android.server.wm.WindowManagerService|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.server.backup.BackupManagerService| |handleTimeout| |int,java.lang.Object|
|com.android.server.backup.Trampoline| |opComplete| |int|
|com.android.internal.telephony.PhoneBase| |updatePhoneObject| |int|
|com.android.server.power.PowerManagerService| |updateDisplayPowerStateLocked| |int|
|com.android.server.display.RampAnimator$Listener| |onAnimationEnd| ||
|com.android.server.display.AutomaticBrightnessController| |updateAutoBrightness| |boolean|
|com.android.server.wm.AppWindowAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowStateAnimator| |destroyDeferredSurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |destroySurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |finishExit| ||
|android.view.IWindowManager| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStackSupervisor| |handleLaunchTaskBehindCompleteLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.TaskRecord| |getTaskThumbnailLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |recomputeBoundsLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |computeChangedWindows| ||
|com.android.server.wm.WindowManagerService| |applyAnimationLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |checkWaitingForWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.server.wm.WindowManagerService| |moveInputMethodWindowsIfNeededLocked| |boolean|
|com.android.server.wm.WindowManagerService| |findDesiredInputMethodWindowIndexLocked| |boolean|
|com.android.server.wm.WindowManagerService| |getOrientationFromWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |addInputMethodWindowToListLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |moveInputMethodDialogsLocked| |int|
|com.android.server.wm.WindowManagerService| |updateStatusBarVisibilityLocked| |int|
|android.view.IWindowManager$Stub$Proxy| |getPreferredOptionsPanelGravity| ||
|android.view.IWindowManager$Stub| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1|
|com.android.server.InputMethodManagerService| |unbindCurrentMethodLocked| |boolean,boolean|
|android.view.IWindowManager$Stub$Proxy| |setAppVisibility| |android.os.IBinder,boolean|
|android.view.IWindowManager$Stub| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityStackSupervisor| |processStoppingActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |setVisibile| |com.android.server.am.ActivityRecord,boolean|
|com.android.server.wm.WindowManagerService| |updateCircularDisplayMaskIfNeeded| ||
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlayIfNeeded| ||
|com.android.server.wm.WindowManagerService| |access$800| |com.android.server.wm.WindowManagerService,int,int|
|com.android.server.wm.WindowManagerService| |dumpAnimatorLocked| |java.io.PrintWriter,java.lang.String[],boolean|
|com.android.server.wm.DragState| |getTouchedWinAtPointLw| |float,float|
|com.android.server.wm.DragState| |broadcastDragStartedLw| |float,float|
|android.view.IWindowSession$Stub$Proxy| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|com.android.server.wm.Session| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager| |getBaseDisplayDensity| |int|
|android.view.IWindowManager| |getInitialDisplayDensity| |int|
|android.view.IWindowManager| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.server.backup.BackupManagerService| |prepareOperationTimeout| |int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask|
|android.app.backup.IBackupManager$Stub$Proxy| |opComplete| |int|
|android.app.backup.IBackupManager$Stub| |opComplete| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.gsm.GSMPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.ServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.sip.SipPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.sip.SipPhone| |updatePhoneObject| |int|
|com.android.server.power.PowerManagerService| |updatePowerStateLocked| ||
|com.android.server.display.RampAnimator$1| |run| ||
|com.android.server.display.RampAnimator| |animateTo| |int,int|
|com.android.server.display.AutomaticBrightnessController| |access$300| |com.android.server.display.AutomaticBrightnessController,boolean|
|com.android.server.display.AutomaticBrightnessController| |configure| |boolean,float,boolean|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| |long|
|com.android.server.wm.WindowState| |removeLocked| ||
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowStateAnimator| |cancelExitAnimationForNextAnimationLocked| ||
|com.android.server.am.ActivityManagerService| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |drawWindowIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |<init>| |com.android.server.wm.AccessibilityController$DisplayMagnifier|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |onRotationChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |performComputeChangedWindowsNotLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |scheduleComputeChangedWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |updateTokenInPlaceLocked| |com.android.server.wm.AppWindowToken,int|
|android.view.IWindowManager$Stub$Proxy| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager$Stub| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService$2| |run| ||
|com.android.server.InputMethodManagerService| |startInputInnerLocked| ||
|com.android.server.InputMethodManagerService| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.InputMethodManagerService| |resetAllInternalStateLocked| |boolean,boolean|
|com.android.server.InputMethodManagerService| |updateInputMethodsFromSettingsLocked| |boolean|
|android.view.IWindowManager| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.wm.WindowManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.wm.WindowManagerService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wm.DragState| |notifyDropLw| |float,float|
|com.android.server.wm.DragState| |notifyMoveLw| |float,float|
|android.view.IWindowSession| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub$Proxy| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |runDisplayDensity| ||
|com.android.commands.wm.Wm| |runDisplaySize| ||
|com.android.internal.view.RotationPolicy| |getRotationLockOrientation| |android.content.Context|
|com.android.server.backup.BackupManagerService$FullBackupEngine$FullBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$FullBackupObbConnection| |backupObbs| |android.content.pm.PackageInfo,java.io.OutputStream|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |initiateOneRestore| |android.content.pm.PackageInfo,int|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreFinished| ||
|android.app.backup.IBackupManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.IBackupManager| |opComplete| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.server.power.PowerManagerService| |access$1100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |acquireWakeLockInternal| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |boostScreenBrightnessInternal| |long,int|
|com.android.server.power.PowerManagerService| |goToSleepInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |handleBatteryStateChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleSandman| ||
|com.android.server.power.PowerManagerService| |handleScreenBrightnessBoostTimeout| ||
|com.android.server.power.PowerManagerService| |handleSettingsChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleUserActivityTimeout| ||
|com.android.server.power.PowerManagerService| |napInternal| |long,int|
|com.android.server.power.PowerManagerService| |onBootPhase| |int|
|com.android.server.power.PowerManagerService| |removeWakeLockLocked| |com.android.server.power.PowerManagerService$WakeLock,int|
|com.android.server.power.PowerManagerService| |setDozeOverrideFromDreamManagerInternal| |int,int|
|com.android.server.power.PowerManagerService| |setMaximumScreenOffTimeoutFromDeviceAdminInternal| |int|
|com.android.server.power.PowerManagerService| |setScreenBrightnessOverrideFromWindowManagerInternal| |int|
|com.android.server.power.PowerManagerService| |setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal| |float|
|com.android.server.power.PowerManagerService| |setTemporaryScreenBrightnessSettingOverrideInternal| |int|
|com.android.server.power.PowerManagerService| |setUserActivityTimeoutOverrideFromWindowManagerInternal| |long|
|com.android.server.power.PowerManagerService| |userActivityInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |wakeUpInternal| |long,int|
|com.android.server.display.DisplayPowerController| |animateScreenBrightness| |int,int|
|com.android.server.display.AutomaticBrightnessController$2| |onTwilightStateChanged| ||
|com.android.server.display.AutomaticBrightnessController| |handleLightSensorEvent| |long,float|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| ||
|android.app.ActivityManagerNative| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController| |onWindowFocusChangedNotLocked| ||
|com.android.server.wm.AccessibilityController| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onSomeWindowResizedOrMovedLocked| ||
|com.android.server.wm.AccessibilityController| |onWindowTransitionLocked| |com.android.server.wm.WindowState,int|
|android.view.IWindowManager| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.internal.policy.impl.PhoneWindow| |getOptionsPanelGravity| ||
|com.android.server.InputMethodManagerService| |startInputUncheckedLocked| |com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.server.InputMethodManagerService| |systemRunning| |com.android.server.statusbar.StatusBarManagerService|
|com.android.server.InputMethodManagerService| |resetStateIfCurrentLocaleChangedLocked| ||
|com.android.server.InputMethodManagerService| |switchUserLocked| |int|
|com.android.server.InputMethodManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.InputMethodManagerService| |buildInputMethodListLocked| |java.util.ArrayList,java.util.HashMap,boolean|
|com.android.server.InputMethodManagerService| |updateFromSettingsLocked| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |updateSurface| |boolean,boolean,boolean|
|android.view.ViewRootImpl| |setView| |android.view.View,android.view.WindowManager$LayoutParams,android.view.View|
|android.view.IWindowSession| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.SurfaceView| |updateWindow| |boolean,boolean|
|android.view.IWindowSession| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |onRun| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |startRestore| ||
|com.android.server.backup.Trampoline| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.BackupAgent$BackupServiceBinder| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.server.power.PowerManagerService$2| |onProximityNegative| ||
|com.android.server.power.PowerManagerService$2| |onProximityPositive| ||
|com.android.server.power.PowerManagerService$2| |onStateChanged| ||
|com.android.server.power.PowerManagerService$DockReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |access$3200| |com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |access$5000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |access$3900| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |access$1900| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2400| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2500| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2300| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$4000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |handleWakeLockDeath| |com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |releaseWakeLockInternal| |android.os.IBinder,int|
|com.android.server.power.PowerManagerService| |access$5300| |com.android.server.power.PowerManagerService,int,int|
|com.android.server.power.PowerManagerService| |access$5500| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5200| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$4800| |com.android.server.power.PowerManagerService,float|
|com.android.server.power.PowerManagerService| |access$4700| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5400| |com.android.server.power.PowerManagerService,long|
|com.android.server.power.PowerManagerService| |access$3700| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |userActivityFromNative| |long,int,int|
|com.android.server.power.PowerManagerService| |access$3800| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.display.AutomaticBrightnessController| |access$200| |com.android.server.display.AutomaticBrightnessController,long,float|
|com.android.server.display.AutomaticBrightnessController| |access$000| |com.android.server.display.AutomaticBrightnessController|
|android.app.IActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationCallbacksLocked| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.WindowManagerService| |assignLayersLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.wm.WindowManagerService$LocalService| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.WindowState| |reportResized| ||
|com.android.server.wm.WindowStateAnimator| |applyEnterAnimationLocked| ||
|com.android.server.InputMethodManagerService| |startInputLocked| |com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.internal.policy.impl.PhoneWindow| |onOptionsPanelRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.KeyEvent|
|com.android.server.InputMethodManagerService| |access$1100| |com.android.server.InputMethodManagerService|
|com.android.server.InputMethodManagerService| |access$1000| |com.android.server.InputMethodManagerService,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.InputMethodManagerService| |<init>| |android.content.Context,com.android.server.wm.WindowManagerService|
|android.service.wallpaper.WallpaperService$Engine| |attach| |android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper|
|android.service.wallpaper.WallpaperService$Engine| |doDisplayPaddingChanged| |android.graphics.Rect|
|android.service.wallpaper.WallpaperService$Engine| |reportVisibility| ||
|android.service.wallpaper.WallpaperService$Engine| |setOffsetNotificationsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |setTouchEventsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper| |executeMessage| |android.os.Message|
|android.view.WindowManagerGlobal| |addView| |android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window|
|android.app.IBackupAgent$Stub$Proxy| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.server.power.PowerManagerService$BatteryReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |scheduleSandmanLocked| ||
|com.android.server.power.PowerManagerService| |updateScreenBrightnessBoostLocked| |int|
|com.android.server.power.PowerManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.power.PowerManagerService$UserSwitchedReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |updateUserActivitySummaryLocked| |long,int|
|com.android.server.power.PowerManagerService| |access$2700| |com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |access$3300| |com.android.server.power.PowerManagerService,android.os.IBinder,int|
|com.android.server.power.PowerManagerService$LocalService| |setDozeOverrideFromDreamManager| |int,int|
|com.android.server.power.PowerManagerService$LocalService| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|com.android.server.power.PowerManagerService$LocalService| |setScreenBrightnessOverrideFromWindowManager| |int|
|com.android.server.power.PowerManagerService$LocalService| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|com.android.server.display.AutomaticBrightnessController$1| |onSensorChanged| |android.hardware.SensorEvent|
|android.app.ActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|android.view.WindowManagerInternal| |setMagnificationSpec| |android.view.MagnificationSpec|
|android.view.WindowManagerInternal| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher| |dispatchRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUpPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanelsAfterRestore| ||
|com.android.internal.policy.impl.PhoneWindow| |reopenMenu| |boolean|
|com.android.internal.policy.impl.PhoneWindow| |togglePanel| |int,android.view.KeyEvent|
|com.android.server.InputMethodManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$3| |onUserSwitching| |int,android.os.IRemoteCallback|
|android.service.wallpaper.WallpaperService$Engine$3| |onDisplayChanged| |int|
|android.service.wallpaper.WallpaperService$Engine| |doVisibilityChanged| |boolean|
|android.view.WindowManagerImpl| |addView| |android.view.View,android.view.ViewGroup$LayoutParams|
|android.app.IBackupAgent$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IBackupAgent| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.server.power.PowerManagerService| |access$2000| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |updateDreamLocked| |int,boolean|
|com.android.server.power.PowerManagerService$WakeLock| |binderDied| ||
|android.os.PowerManagerInternal| |setDozeOverrideFromDreamManager| |int,int|
|android.os.PowerManagerInternal| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|android.os.PowerManagerInternal| |setScreenBrightnessOverrideFromWindowManager| |int|
|android.os.PowerManagerInternal| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|android.view.WindowManagerInternal| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.accessibility.AccessibilityManagerService| |updateWindowsForAccessibilityCallbackLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher$1| |run| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUp| |int,int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |access$2200| |com.android.internal.policy.impl.PhoneWindow|
|com.android.internal.policy.impl.PhoneWindow| |onConfigurationChanged| |android.content.res.Configuration|
|com.android.internal.policy.impl.PhoneWindow| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.app.IUserSwitchObserver$Stub$Proxy| |onUserSwitching| |int,android.os.IRemoteCallback|
|android.app.backup.BackupAgent$BackupServiceBinder| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreFileRunnable| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable| |run| ||
|com.android.server.power.PowerManagerService$DreamReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.dreams.DreamManagerService| |startDozingInternal| |android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |stopDozingInternal| |android.os.IBinder|
|com.android.server.accessibility.ScreenMagnifier| |<init>| |android.content.Context,int,com.android.server.accessibility.AccessibilityManagerService|
|com.android.server.accessibility.ScreenMagnifier| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |offsetMagnifiedRegionCenter| |float,float|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |reset| |boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScaleAndMagnifiedRegionCenter| |float,float,float,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |onUserStateChangedLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |dispatchKeyEvent| |android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |onAttachedToWindow| ||
|com.android.internal.view.menu.MenuBuilder$Callback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|com.android.server.dreams.DreamManagerService| |access$1800| |com.android.server.dreams.DreamManagerService,android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |access$1900| |com.android.server.dreams.DreamManagerService,android.os.IBinder|
|com.android.server.accessibility.AccessibilityInputFilter| |enableFeatures| ||
|com.android.server.accessibility.AccessibilityInputFilter| |disableFeatures| ||
|com.android.server.accessibility.EventStreamTransformation| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScroll| |android.view.MotionEvent,android.view.MotionEvent,float,float|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRectangleOnScreenRequested| |int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |handleOnScreenStateChange| |java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |resetMagnificationIfNeeded| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTapAndHold| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnifiedRegionCenter| |float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScale| |float,float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier| |handleOnMagnifiedBoundsChanged| |android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService| |access$500| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |ensureWindowsAvailableTimed| ||
|com.android.server.accessibility.AccessibilityManagerService| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |switchUser| |int|
|com.android.server.accessibility.AccessibilityManagerService| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuView$MenuBuilderCallback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|com.android.internal.view.menu.MenuBuilder| |changeMenuMode| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onInstalled| ||
|com.android.server.accessibility.AccessibilityInputFilter| |setEnabledFeatures| |int|
|com.android.server.accessibility.AccessibilityInputFilter| |onUninstalled| ||
|com.android.server.accessibility.AccessibilityManagerService| |updateInputFilter| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |access$100| |com.android.server.accessibility.ScreenMagnifier,int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |access$2900| |com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver,java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |access$600| |com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRotationChanged| |int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnUserContextChanged| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1700| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScale| |android.view.ScaleGestureDetector|
|com.android.server.accessibility.ScreenMagnifier| |access$000| |com.android.server.accessibility.ScreenMagnifier,android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$1| |onSomePackagesChanged| ||
|com.android.server.accessibility.AccessibilityManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$4| |onClick| |android.content.DialogInterface,int|
|com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.accessibility.AccessibilityManagerService$Service| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accessibility.AccessibilityManagerService| |access$3300| |com.android.server.accessibility.AccessibilityManagerService|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager$Stub| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |access$800| |com.android.server.accessibility.AccessibilityManagerService,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.view.accessibility.IAccessibilityManager$Stub| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuPresenter$OpenOverflowRunnable| |run| ||
|com.android.internal.view.menu.ContextMenuBuilder| |changeMenuMode| ||
|com.android.internal.view.menu.IconMenuView$1| |onClick| |android.view.View|
|com.android.internal.view.menu.SubMenuBuilder| |changeMenuMode| ||
|com.android.server.accessibility.AccessibilityManagerService| |access$2100| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |access$300| |com.android.server.accessibility.ScreenMagnifier,int|
|com.android.server.accessibility.ScreenMagnifier| |access$200| |com.android.server.accessibility.ScreenMagnifier|
|com.android.internal.content.PackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.content.PackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$UserState$1| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$UserState| |onSwitchToAnotherUser| ||
|com.android.server.accessibility.AccessibilityManagerService| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.accessibility.AccessibilityManagerService$Service$2| |run| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindow| |int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindows| ||
|android.view.accessibility.IAccessibilityManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.IAccessibilityManager| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|com.android.server.accessibility.EventStreamTransformation| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |sendDelayedMotionEvents| ||
|com.android.server.accessibility.ScreenMagnifier| |onUserContextChanged| ||
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.app.ResolverActivity$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.LocationManagerService$4| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.ServiceWatcher$2| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.trust.TrustManagerService$3| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.tv.TvInputManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.app.ResolverActivity$1| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.LocationManagerService$4| |onPackageRemoved| |java.lang.String,int|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.trust.TrustManagerService$3| |onPackageRemoved| |java.lang.String,int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.view.accessibility.IAccessibilityManager$Stub| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindows| ||
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindows| ||
|com.android.server.accessibility.AccessibilityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomationConnection| |registerUiTestAutomationServiceLocked| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |enableAccessibility| ||
|com.android.server.accessibility.AccessibilityInputFilter| |handleMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleMotionEventStateDelegating| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendMotionEvent| |android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1800| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |transitionToDelegatingStateAndClear| ||
|android.view.accessibility.IAccessibilityManager| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindows| ||
|android.app.UiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |access$200| |com.android.internal.policy.impl.EnableAccessibilityController|
|com.android.server.accessibility.AccessibilityInputFilter| |processBatchedEvents| |long|
|com.android.server.accessibility.TouchExplorer| |access$2800| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDelegating| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDragging| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateTouchExploring| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendActionDownAndUp| |android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |sendDownForAllNotInjectedPointers| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendHoverExitAndTouchExplorationGestureEndIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendTouchExplorationGestureStartAndHoverEnterIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendUpForInjectedDownPointers| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |unregisterUiTestAutomationServiceLocked| ||
|android.view.accessibility.AccessibilityInteractionClient| |getWindow| |int,int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.AccessibilityInteractionClient| |getWindows| |int|
|android.app.IUiAutomationConnection$Stub$Proxy| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|android.app.IUiAutomationConnection$Stub| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |onInterceptTouchEvent| |android.view.MotionEvent|
|com.android.server.accessibility.AccessibilityInputFilter| |access$100| |com.android.server.accessibility.AccessibilityInputFilter,long|
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$1700| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |access$2600| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$2400| |com.android.server.accessibility.TouchExplorer,int|
|com.android.server.accessibility.TouchExplorer| |clear| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |disconnect| ||
|android.view.accessibility.AccessibilityNodeInfo| |getWindow| ||
|android.view.accessibility.AccessibilityWindowInfo| |getChild| |int|
|android.view.accessibility.AccessibilityWindowInfo| |getParent| ||
|android.accessibilityservice.AccessibilityService| |getWindows| ||
|android.app.UiAutomation| |getWindows| ||
|android.app.IUiAutomationConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IUiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |dispatchTouchEvent| |android.view.MotionEvent|
|com.android.server.accessibility.AccessibilityInputFilter$1| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onDoubleTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |clear| ||
|com.android.server.accessibility.TouchExplorer| |handleMotionEventGestureDetecting| |android.view.MotionEvent,int|
|android.app.IUiAutomationConnection$Stub$Proxy| |disconnect| ||
|android.app.IUiAutomationConnection$Stub| |disconnect| ||
|android.app.UiAutomationConnection| |shutdown| ||
|android.app.UiAutomationConnection| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomation| |connect| ||
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.EventStreamTransformation| |clear| ||
|com.android.server.accessibility.TouchExplorer$ExitGestureDetectionModeDelayed| |run| ||
|android.app.IUiAutomationConnection| |disconnect| ||
|android.app.IUiAutomationConnection$Stub$Proxy| |shutdown| ||
|android.app.IUiAutomationConnection$Stub| |shutdown| ||
|android.app.Instrumentation| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetworkViews| |setup| ||
|com.android.uiautomator.core.UiAutomationShellWrapper| |connect| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |clear| ||
|android.app.UiAutomation| |disconnect| ||
|android.app.IUiAutomationConnection| |shutdown| ||
|android.test.InstrumentationCoreTestRunner| |getUiAutomation| ||
|android.test.InstrumentationTestRunner| |getUiAutomation| ||
|android.test.LaunchPerformanceBase| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetwork| |startServer| ||
|com.android.commands.uiautomator.DumpCommand| |run| |java.lang.String[]|
|com.android.commands.uiautomator.EventsCommand| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |start| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onInputEvent| |android.view.InputEvent,int|
|android.app.Instrumentation| |finish| |int,android.os.Bundle|
|com.android.uiautomator.core.UiAutomationShellWrapper| |disconnect| ||
|com.android.commands.monkey.MonkeySourceNetwork| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher$Command| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |run| |java.util.List,android.os.Bundle,boolean,boolean|
|android.test.InstrumentationCoreTestRunner| |finish| |int,android.os.Bundle|
|android.test.InstrumentationTestRunner| |finish| |int,android.os.Bundle|
|android.test.LaunchPerformanceBase| |finish| |int,android.os.Bundle|
|com.android.commands.monkey.MonkeyEventSource| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher| |main| |java.lang.String[]|
|com.android.commands.uiautomator.RunTestCommand| |run| |java.lang.String[]|
|android.test.InstrumentationTestRunner| |onStart| ||
|com.android.commands.monkey.Monkey| |runMonkeyCycles| ||
|android.test.InstrumentationCoreTestRunner| |onStart| ||
|android.provider.VoicemailContract$Voicemails| |buildSourceUri| |java.lang.String|
|android.provider.VoicemailContract$Status| |buildSourceUri| |java.lang.String|
|android.provider.CallLog$Calls| |getLastOutgoingCall| |android.content.Context|
|com.android.server.LocationManagerService| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.ILocationManager$Stub$Proxy| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.ILocationManager$Stub| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.ILocationManager| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.ILocationManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.location.LocationManager| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|com.android.server.LocationManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.SubscriptionController| |enforceSubscriptionPermission| ||
|com.android.internal.telephony.SubscriptionController| |getActiveSubscriptionInfoForIccId| |java.lang.String|
|com.android.internal.telephony.SubscriptionController| |getActiveSubscriptionInfoForSimSlotIndex| |int|
|com.android.internal.telephony.SubscriptionController| |getActiveSubscriptionInfo| |int|
|com.android.internal.telephony.SubscriptionController| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |clearSubInfo| ||
|com.android.internal.telephony.SubscriptionController| |getAllSubInfoCount| ||
|com.android.internal.telephony.SubscriptionController| |setCarrierText| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |setDataRoaming| |int,int|
|com.android.internal.telephony.SubscriptionController| |setDisplayNameUsingSrc| |java.lang.String,int,long|
|com.android.internal.telephony.SubscriptionController| |setDisplayNumber| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |setIconTint| |int,int|
|com.android.internal.telephony.SubscriptionController| |getActiveSubscriptionInfoList| ||
|com.android.internal.telephony.SubscriptionController| |getAllSubInfoList| ||
|com.android.internal.telephony.SubscriptionController| |getSubInfoUsingSlotIdWithCheck| |int,boolean|
|com.android.internal.telephony.ISub$Stub$Proxy| |getActiveSubscriptionInfoForIccId| |java.lang.String|
|com.android.internal.telephony.ISub$Stub| |getActiveSubscriptionInfoForIccId| |java.lang.String|
|com.android.internal.telephony.ISub$Stub$Proxy| |getActiveSubscriptionInfoForSimSlotIndex| |int|
|com.android.internal.telephony.ISub$Stub| |getActiveSubscriptionInfoForSimSlotIndex| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |getActiveSubscriptionInfo| |int|
|com.android.internal.telephony.ISub$Stub| |getActiveSubscriptionInfo| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub$Proxy| |clearSubInfo| ||
|com.android.internal.telephony.ISub$Stub| |clearSubInfo| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |getAllSubInfoCount| ||
|com.android.internal.telephony.ISub$Stub| |getAllSubInfoCount| ||
|com.android.internal.telephony.SubscriptionController| |setPlmnSpn| |int,boolean,java.lang.String,boolean,java.lang.String|
|com.android.internal.telephony.ISub$Stub$Proxy| |setDataRoaming| |int,int|
|com.android.internal.telephony.ISub$Stub| |setDataRoaming| |int,int|
|com.android.internal.telephony.ISub$Stub$Proxy| |setDisplayNameUsingSrc| |java.lang.String,int,long|
|com.android.internal.telephony.ISub$Stub| |setDisplayNameUsingSrc| |java.lang.String,int,long|
|com.android.internal.telephony.SubscriptionController| |setDisplayName| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub$Proxy| |setDisplayNumber| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |setDisplayNumber| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub$Proxy| |setIconTint| |int,int|
|com.android.internal.telephony.ISub$Stub| |setIconTint| |int,int|
|com.android.internal.telephony.ISub$Stub$Proxy| |getActiveSubscriptionInfoList| ||
|com.android.internal.telephony.ISub$Stub| |getActiveSubscriptionInfoList| ||
|com.android.internal.telephony.SubscriptionController| |getActiveSubInfoCount| ||
|com.android.internal.telephony.SubscriptionController| |getUnusedColor| ||
|com.android.internal.telephony.SubscriptionController| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |getAllSubInfoList| ||
|com.android.internal.telephony.ISub$Stub| |getAllSubInfoList| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |updateSubscriptionInfoByIccId| ||
|com.android.internal.telephony.ISub| |getActiveSubscriptionInfoForIccId| |java.lang.String|
|com.android.internal.telephony.ISub$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISub| |getActiveSubscriptionInfoForSimSlotIndex| |int|
|com.android.internal.telephony.ISub| |getActiveSubscriptionInfo| |int|
|com.android.internal.telephony.ISub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub| |clearSubInfo| ||
|com.android.internal.telephony.ISub| |getAllSubInfoCount| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateSpnDisplay| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateSpnDisplay| ||
|com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener| |onSubscriptionsChanged| ||
|com.android.internal.telephony.ISub| |setDataRoaming| |int,int|
|com.android.internal.telephony.ISub| |setDisplayNameUsingSrc| |java.lang.String,int,long|
|com.android.internal.telephony.ISub$Stub$Proxy| |setDisplayName| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |setDisplayName| |java.lang.String,int|
|com.android.internal.telephony.ISub| |setDisplayNumber| |java.lang.String,int|
|com.android.internal.telephony.ISub| |setIconTint| |int,int|
|com.android.internal.telephony.ISub| |getActiveSubscriptionInfoList| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |getActiveSubInfoCount| ||
|com.android.internal.telephony.ISub$Stub| |getActiveSubInfoCount| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.ISub$Stub| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.ISub| |getAllSubInfoList| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimAbsent| |int|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLoaded| |int|
|android.telephony.SubscriptionManager| |getActiveSubscriptionInfoForIccIndex| |java.lang.String|
|com.android.internal.telephony.SubscriptionController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.telephony.SubscriptionManager| |getActiveSubscriptionInfoForSimSlotIndex| |int|
|android.telephony.SubscriptionManager| |getActiveSubscriptionInfo| |int|
|android.telephony.SubscriptionManager| |addSubscriptionInfoRecord| |java.lang.String,int|
|android.telephony.SubscriptionManager| |clearSubscriptionInfo| ||
|android.telephony.SubscriptionManager| |getAllSubscriptionInfoCount| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateSpnDisplay| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.ServiceStateTracker| |updateSpnDisplay| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |queueNextSignalStrengthPoll| ||
|android.telephony.SubscriptionManager| |setDataRoaming| |int,int|
|android.telephony.SubscriptionManager| |setDisplayName| |java.lang.String,int,long|
|com.android.internal.telephony.ISub| |setDisplayName| |java.lang.String,int|
|android.telephony.SubscriptionManager| |setDisplayNumber| |java.lang.String,int|
|android.telephony.SubscriptionManager| |setIconTint| |int,int|
|android.telephony.SubscriptionManager| |getActiveSubscriptionInfoList| ||
|com.android.internal.telephony.ISub| |getActiveSubInfoCount| ||
|com.android.internal.telephony.ISub| |clearDefaultsForInactiveSubIds| ||
|android.telephony.SubscriptionManager| |getAllSubscriptionInfoList| ||
|com.android.internal.telephony.SubscriptionInfoUpdater$1| |onReceive| |android.content.Context,android.content.Intent|
|android.telephony.SubscriptionManager| |getDefaultDataSubscriptionInfo| ||
|android.telephony.SubscriptionManager| |getDefaultSmsSubscriptionInfo| ||
|android.telephony.SubscriptionManager| |getDefaultVoiceSubscriptionInfo| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |setDisplayNameForNewSub| |java.lang.String,int,int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollState| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |setDataOnRoamingEnabled| |boolean|
|android.telephony.SubscriptionManager| |setDisplayName| |java.lang.String,int|
|com.android.internal.telephony.uicc.RuimRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.IccProvider| |loadAllSimContacts| |int|
|android.telephony.SubscriptionManager| |getActiveSubscriptionInfoCount| ||
|android.telephony.SubscriptionManager| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.ServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CDMAPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.ServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GSMPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |setDataRoamingEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |setDataOnRoamingEnabled| |boolean|
|com.android.internal.telephony.gsm.GSMPhone| |setDataRoamingEnabled| |boolean|
|com.android.internal.telephony.uicc.IccRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.RuimRecords| |onRecordLoaded| ||
|com.android.internal.telephony.IccProvider| |query| |android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.PhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setDataRoamingEnabled| |boolean|
|com.android.internal.telephony.uicc.IccRecords| |onRecordLoaded| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.Phone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.Phone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.PhoneProxy| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneProxy| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.PhoneSubInfo| |getDeviceId| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getDeviceId| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getDeviceId| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getDeviceId| ||
|com.android.internal.telephony.IPhoneSubInfo| |getDeviceId| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.PhoneSubInfoController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.PhoneSubInfoProxy| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.PhoneSubInfo| |getImei| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getImei| ||
|com.android.internal.telephony.PhoneSubInfoController| |getImeiForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getImeiForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getImeiForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getImeiForSubscriber| |int|
|android.telephony.TelephonyManager| |getImei| |int|
|android.telephony.TelephonyManager| |getImei| ||
|com.android.internal.telephony.PhoneSubInfo| |getNai| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getNai| ||
|com.android.internal.telephony.PhoneSubInfoController| |getNaiForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getNaiForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getNaiForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getNaiForSubscriber| |int|
|android.telephony.TelephonyManager| |getNai| |int|
|android.telephony.TelephonyManager| |getNai| ||
|com.android.internal.telephony.PhoneSubInfo| |getDeviceSvn| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getDeviceSvn| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getDeviceSvn| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getDeviceSvn| ||
|com.android.internal.telephony.PhoneSubInfoController| |getDeviceSvnUsingSubId| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getDeviceSvn| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getDeviceSvnUsingSubId| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getDeviceSvnUsingSubId| |int|
|com.android.internal.telephony.PhoneSubInfoController| |getDeviceSvn| ||
|com.android.internal.telephony.IPhoneSubInfo| |getDeviceSvnUsingSubId| |int|
|android.telephony.TelephonyManager| |getDeviceSoftwareVersion| |int|
|android.telephony.TelephonyManager| |getDeviceSoftwareVersion| ||
|com.android.internal.telephony.PhoneSubInfo| |getSubscriberId| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getSubscriberId| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getSubscriberId| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getSubscriberId| ||
|com.android.internal.telephony.PhoneSubInfoController| |getSubscriberIdForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getSubscriberId| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getSubscriberIdForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getSubscriberIdForSubscriber| |int|
|com.android.internal.telephony.PhoneSubInfoController| |getSubscriberId| ||
|com.android.internal.telephony.IPhoneSubInfo| |getSubscriberIdForSubscriber| |int|
|android.telephony.TelephonyManager| |getSubscriberId| |int|
|android.telephony.TelephonyManager| |getSubscriberId| ||
|com.android.server.net.NetworkPolicyManagerService| |isTemplateRelevant| |android.net.NetworkTemplate|
|com.android.server.net.NetworkPolicyManagerService| |ensureActiveMobilePolicyLocked| ||
|com.android.server.location.GpsLocationProvider| |requestSetID| |int|
|com.android.server.net.NetworkPolicyManagerService| |updateNotificationsLocked| ||
|com.android.server.net.NetworkPolicyManagerService| |access$100| |com.android.server.net.NetworkPolicyManagerService|
|com.android.server.net.NetworkPolicyManagerService$13| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.net.NetworkPolicyManagerService$7| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.net.NetworkPolicyManagerService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.net.NetworkPolicyManagerService| |performSnooze| |android.net.NetworkTemplate,int|
|com.android.server.net.NetworkPolicyManagerService| |setNetworkPolicies| |android.net.NetworkPolicy[]|
|com.android.server.net.NetworkPolicyManagerService| |setRestrictBackground| |boolean|
|com.android.server.net.NetworkPolicyManagerService| |systemReady| ||
|com.android.server.net.NetworkPolicyManagerService$9| |onReceive| |android.content.Context,android.content.Intent|
|android.net.INetworkPolicyManager$Stub$Proxy| |setNetworkPolicies| |android.net.NetworkPolicy[]|
|android.net.INetworkPolicyManager$Stub| |setNetworkPolicies| |android.net.NetworkPolicy[]|
|com.android.server.net.NetworkPolicyManagerService| |addNetworkPolicyLocked| |android.net.NetworkPolicy|
|android.net.INetworkPolicyManager$Stub$Proxy| |setRestrictBackground| |boolean|
|android.net.INetworkPolicyManager$Stub| |setRestrictBackground| |boolean|
|com.android.server.net.NetworkPolicyManagerService$8| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.SystemServer$2| |run| ||
|android.net.INetworkPolicyManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.INetworkPolicyManager| |setNetworkPolicies| |android.net.NetworkPolicy[]|
|com.android.server.net.NetworkPolicyManagerService$11| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.net.NetworkPolicyManagerService| |ensureActiveMobilePolicyLocked| |java.lang.String|
|android.net.INetworkPolicyManager| |setRestrictBackground| |boolean|
|com.android.server.net.NetworkPolicyManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.NetworkPolicyManager| |setNetworkPolicies| |android.net.NetworkPolicy[]|
|android.net.NetworkPolicyManager| |setRestrictBackground| |boolean|
|com.android.internal.telephony.PhoneSubInfo| |getGroupIdLevel1| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getGroupIdLevel1| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getGroupIdLevel1| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getGroupIdLevel1| ||
|com.android.internal.telephony.PhoneSubInfoController| |getGroupIdLevel1ForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getGroupIdLevel1| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getGroupIdLevel1ForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getGroupIdLevel1ForSubscriber| |int|
|com.android.internal.telephony.PhoneSubInfoController| |getGroupIdLevel1| ||
|android.telephony.TelephonyManager| |getGroupIdLevel1| ||
|com.android.internal.telephony.IPhoneSubInfo| |getGroupIdLevel1ForSubscriber| |int|
|android.telephony.TelephonyManager| |getGroupIdLevel1| |int|
|com.android.internal.telephony.PhoneSubInfo| |getIccSerialNumber| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getIccSerialNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIccSerialNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIccSerialNumber| ||
|com.android.internal.telephony.PhoneSubInfoController| |getIccSerialNumberForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getIccSerialNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIccSerialNumberForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIccSerialNumberForSubscriber| |int|
|com.android.internal.telephony.PhoneSubInfoController| |getIccSerialNumber| ||
|com.android.internal.telephony.IPhoneSubInfo| |getIccSerialNumberForSubscriber| |int|
|android.telephony.TelephonyManager| |getSimSerialNumber| |int|
|android.telephony.TelephonyManager| |getSimSerialNumber| ||
|com.android.internal.telephony.PhoneSubInfo| |getLine1Number| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getLine1Number| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getLine1Number| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getLine1Number| ||
|com.android.internal.telephony.PhoneSubInfoController| |getLine1NumberForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getLine1Number| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getLine1NumberForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getLine1NumberForSubscriber| |int|
|com.android.internal.telephony.PhoneSubInfoController| |getLine1Number| ||
|com.android.internal.telephony.IPhoneSubInfo| |getLine1NumberForSubscriber| |int|
|android.telephony.TelephonyManager| |getLine1NumberForSubscriber| |int|
|android.telephony.TelephonyManager| |getLine1Number| ||
|com.android.internal.telephony.SubscriptionController| |getSubInfoRecord| |android.database.Cursor|
|com.google.android.mms.pdu.PduPersister| |loadRecipients| |int,java.util.HashSet,java.util.HashMap,boolean|
|com.android.internal.telephony.SubscriptionController| |getSubInfo| |java.lang.String,java.lang.Object|
|com.google.android.mms.pdu.PduPersister| |persist| |com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap|
|com.android.internal.telephony.WapPushOverSms| |writeInboxMessage| |int,byte[]|
|com.android.internal.telephony.WapPushOverSms| |dispatchWapPdu| |byte[],android.content.BroadcastReceiver,com.android.internal.telephony.InboundSmsHandler|
|com.android.internal.telephony.InboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler$DeliveringState| |processMessage| |android.os.Message|
|com.android.internal.util.State| |processMessage| |android.os.Message|
|com.android.internal.util.IState| |processMessage| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |processMsg| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DormantState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$ScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$NoLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |processMessage| |android.os.Message|
|com.android.internal.telephony.PhoneSubInfo| |getLine1AlphaTag| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getLine1AlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getLine1AlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getLine1AlphaTag| ||
|com.android.internal.telephony.PhoneSubInfoController| |getLine1AlphaTagForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getLine1AlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getLine1AlphaTagForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getLine1AlphaTagForSubscriber| |int|
|com.android.internal.telephony.PhoneSubInfoController| |getLine1AlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo| |getLine1AlphaTagForSubscriber| |int|
|android.telephony.TelephonyManager| |getLine1AlphaTagForSubscriber| |int|
|android.telephony.TelephonyManager| |getLine1AlphaTag| ||
|com.android.internal.telephony.PhoneSubInfo| |getMsisdn| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getMsisdn| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getMsisdn| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getMsisdn| ||
|com.android.internal.telephony.PhoneSubInfoController| |getMsisdnForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getMsisdn| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getMsisdnForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getMsisdnForSubscriber| |int|
|com.android.internal.telephony.PhoneSubInfoController| |getMsisdn| ||
|com.android.internal.telephony.IPhoneSubInfo| |getMsisdnForSubscriber| |int|
|android.telephony.TelephonyManager| |getMsisdn| |int|
|android.telephony.TelephonyManager| |getMsisdn| ||
|com.android.internal.telephony.PhoneSubInfo| |getVoiceMailNumber| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getVoiceMailNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getVoiceMailNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getVoiceMailNumber| ||
|com.android.internal.telephony.PhoneSubInfoController| |getVoiceMailNumberForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getVoiceMailNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getVoiceMailNumberForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getVoiceMailNumberForSubscriber| |int|
|com.android.internal.telephony.PhoneSubInfoController| |getVoiceMailNumber| ||
|com.android.internal.telephony.IPhoneSubInfo| |getVoiceMailNumberForSubscriber| |int|
|android.telephony.TelephonyManager| |getVoiceMailNumber| |int|
|android.telephony.PhoneNumberUtils| |isVoiceMailNumber| |int,java.lang.String|
|android.telephony.TelephonyManager| |getVoiceMailNumber| ||
|android.telephony.PhoneNumberUtils| |isVoiceMailNumber| |java.lang.String|
|com.android.internal.telephony.CallerInfoAsyncQuery| |startQuery| |int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object,int|
|com.android.internal.telephony.CallerInfo| |getCallerInfo| |android.content.Context,java.lang.String,int|
|com.android.internal.telephony.CallerInfoAsyncQuery| |startQuery| |int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object|
|com.android.internal.telephony.CallerInfo| |getCallerInfo| |android.content.Context,java.lang.String|
|com.android.internal.telephony.PhoneSubInfo| |getVoiceMailAlphaTag| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getVoiceMailAlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getVoiceMailAlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getVoiceMailAlphaTag| ||
|com.android.internal.telephony.PhoneSubInfoController| |getVoiceMailAlphaTagForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo| |getVoiceMailAlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getVoiceMailAlphaTagForSubscriber| |int|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getVoiceMailAlphaTagForSubscriber| |int|
|com.android.internal.telephony.PhoneSubInfoController| |getVoiceMailAlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo| |getVoiceMailAlphaTagForSubscriber| |int|
|android.telephony.TelephonyManager| |getVoiceMailAlphaTag| |int|
|android.telephony.TelephonyManager| |getVoiceMailAlphaTag| ||
|com.android.internal.telephony.CallerInfo| |markAsVoiceMail| |int|
|com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler| |onQueryComplete| |int,java.lang.Object,android.database.Cursor|
|com.android.internal.telephony.CallerInfo| |markAsVoiceMail| ||
|com.android.server.TelephonyRegistry| |checkOnSubscriptionsChangedListenerPermission| ||
|com.android.server.TelephonyRegistry| |addOnSubscriptionsChangedListener| |java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |addOnSubscriptionsChangedListener| |java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |addOnSubscriptionsChangedListener| |java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ITelephonyRegistry| |addOnSubscriptionsChangedListener| |java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener|
|com.android.server.TelephonyRegistry| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.telephony.SubscriptionManager| |addOnSubscriptionsChangedListener| |android.telephony.SubscriptionManager$OnSubscriptionsChangedListener|
|com.android.internal.telephony.dataconnection.DctController| |<init>| |com.android.internal.telephony.PhoneProxy[]|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |<init>| |com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.ServiceStateTracker| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CommandsInterface,android.telephony.CellInfo|
|com.android.server.location.GpsLocationProvider| |<init>| |android.content.Context,android.location.ILocationManager,android.os.Looper|
|com.android.internal.telephony.dataconnection.DctController| |makeDctController| |com.android.internal.telephony.PhoneProxy[]|
|com.android.internal.telephony.dataconnection.DcTracker| |<init>| |com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CommandsInterface,android.telephony.CellInfo|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone,android.telephony.CellInfo|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CommandsInterface,android.telephony.CellInfo|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |<init>| |com.android.internal.telephony.gsm.GSMPhone|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CommandsInterface,android.telephony.CellInfo|
|com.android.server.LocationManagerService| |loadProvidersLocked| ||
|com.android.internal.telephony.ProxyController| |<init>| |android.content.Context,com.android.internal.telephony.PhoneProxy[],com.android.internal.telephony.uicc.UiccController,com.android.internal.telephony.CommandsInterface[]|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.cdma.CDMAPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMALTEPhone|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone,android.telephony.CellInfo|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone|
|com.android.server.LocationManagerService| |systemRunning| ||
|com.android.internal.telephony.ProxyController| |getInstance| |android.content.Context,com.android.internal.telephony.PhoneProxy[],com.android.internal.telephony.uicc.UiccController,com.android.internal.telephony.CommandsInterface[]|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |initSstIcc| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone|
|com.android.internal.telephony.cdma.CDMAPhone| |initSstIcc| ||
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhone| |android.content.Context|
|com.android.internal.telephony.PhoneFactory| |getCdmaPhone| |int|
|com.android.internal.telephony.PhoneFactory| |getGsmPhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhones| |android.content.Context|
|com.android.internal.telephony.PhoneProxy| |deleteAndCreatePhone| |int|
|com.android.internal.telephony.PhoneProxy| |phoneObjectUpdater| |int|
|com.android.internal.telephony.PhoneProxy| |updatePhoneObject| |int|
|com.android.internal.telephony.Phone| |updatePhoneObject| |int|
|com.android.internal.telephony.PhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.gsm.GSMPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.ServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.sip.SipPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.sip.SipPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updatePhoneObject| ||
|com.android.server.TelephonyRegistry| |checkListenerPermission| |int|
|com.android.server.TelephonyRegistry| |listen| |java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean,int|
|com.android.server.TelephonyRegistry| |listenForSubscriber| |int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |listenForSubscriber| |int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |listenForSubscriber| |int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.server.TelephonyRegistry| |listen| |java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry| |listenForSubscriber| |int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |listen| |java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |listen| |java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|android.telephony.TelephonyManager| |listen| |android.telephony.PhoneStateListener,int|
|com.android.internal.telephony.ITelephonyRegistry| |listen| |java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean|
|android.media.MediaFocusControl| |<init>| |android.os.Looper,android.content.Context,android.media.AudioService$VolumeController,android.media.AudioService|
|android.net.MobileDataStateTracker| |startMonitoring| |android.content.Context,android.os.Handler|
|com.android.internal.location.GpsNetInitiatedHandler| |<init>| |android.content.Context,android.location.INetInitiatedListener,boolean|
|com.android.internal.policy.impl.GlobalActions| |<init>| |android.content.Context,android.view.WindowManagerPolicy$WindowManagerFuncs|
|com.android.server.connectivity.DataConnectionStats| |startMonitoring| ||
|com.android.server.location.ComprehensiveCountryDetector| |addPhoneStateListener| ||
|com.android.server.location.ComprehensiveCountryDetector| |removePhoneStateListener| ||
|com.android.server.notification.NotificationManagerService| |listenForCallState| ||
|com.android.server.voiceinteraction.SoundTriggerHelper| |startRecognition| |int,android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig|
|com.android.server.voiceinteraction.SoundTriggerHelper| |internalClearStateLocked| ||
|android.media.AudioService| |<init>| |android.content.Context|
|com.android.internal.policy.impl.PhoneWindowManager| |showGlobalActionsInternal| ||
|com.android.server.location.ComprehensiveCountryDetector| |setCountryListener| |android.location.CountryListener|
|com.android.server.location.ComprehensiveCountryDetector| |stop| ||
|com.android.server.notification.NotificationManagerService| |onStart| ||
|com.android.server.voiceinteraction.SoundTriggerHelper| |stopRecognition| |int,android.hardware.soundtrigger.IRecognitionStatusCallback|
|com.android.server.voiceinteraction.SoundTriggerHelper| |onRecognitionFailureLocked| ||
|com.android.server.voiceinteraction.SoundTriggerHelper| |onServiceDiedLocked| ||
|com.android.server.voiceinteraction.SoundTriggerHelper| |stopAllRecognitions| ||
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.internal.policy.impl.PhoneWindowManager$4| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager| |powerLongPress| ||
|com.android.server.CountryDetectorService$2| |run| ||
|com.android.server.location.CountryDetectorBase| |setCountryListener| |android.location.CountryListener|
|com.android.server.location.CountryDetectorBase| |stop| ||
|com.android.server.SystemService| |onStart| ||
|com.android.server.voiceinteraction.SoundTriggerHelper| |onRecognition| |android.hardware.soundtrigger.SoundTrigger$RecognitionEvent|
|com.android.server.voiceinteraction.SoundTriggerHelper| |onServiceDied| ||
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |switchImplementationIfNeededLocked| |boolean|
|com.android.server.SystemServer| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$800| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.server.location.ComprehensiveCountryDetector| |startLocationBasedDetector| |android.location.CountryListener|
|com.android.server.location.LocationBasedCountryDetector| |setCountryListener| |android.location.CountryListener|
|com.android.server.location.ComprehensiveCountryDetector| |stopLocationBasedDetector| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.Class|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onSomePackagesChanged| ||
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver| |onChange| |boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |switchUser| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |systemRunning| |boolean|
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.server.location.ComprehensiveCountryDetector| |runAfterDetection| |android.location.Country,android.location.Country,boolean,boolean|
|com.android.server.location.ComprehensiveCountryDetector| |access$200| |com.android.server.location.ComprehensiveCountryDetector|
|com.android.server.SystemServer| |startBootstrapServices| ||
|com.android.server.SystemServer| |startCoreServices| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.String|
|com.android.internal.content.PackageMonitor| |onSomePackagesChanged| ||
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |onSwitchUser| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |onBootPhase| |int|
|com.android.server.location.ComprehensiveCountryDetector$2| |run| ||
|com.android.server.location.ComprehensiveCountryDetector$1| |onCountryDetected| |android.location.Country|
|com.android.internal.content.PackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.LocationManagerService$4| |onSomePackagesChanged| ||
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onSomePackagesChanged| ||
|com.android.server.ServiceWatcher$2| |onSomePackagesChanged| ||
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.SystemService| |onSwitchUser| |int|
|com.android.server.SystemService| |onBootPhase| |int|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.app.ResolverActivity$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.ServiceWatcher$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.trust.TrustManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.tv.TvInputManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.AlarmManagerService| |onSwitchUser| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onSwitchUser| |int|
|com.android.server.appwidget.AppWidgetService| |onSwitchUser| |int|
|com.android.server.backup.BackupManagerService$Lifecycle| |onSwitchUser| |int|
|com.android.server.BatteryService| |onSwitchUser| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |onSwitchUser| |int|
|com.android.server.display.DisplayManagerService| |onSwitchUser| |int|
|com.android.server.DockObserver| |onSwitchUser| |int|
|com.android.server.dreams.DreamManagerService| |onSwitchUser| |int|
|com.android.server.ethernet.EthernetService| |onSwitchUser| |int|
|com.android.server.fingerprint.FingerprintService| |onSwitchUser| |int|
|com.android.server.hdmi.HdmiControlService| |onSwitchUser| |int|
|com.android.server.job.JobSchedulerService| |onSwitchUser| |int|
|com.android.server.lights.LightsService| |onSwitchUser| |int|
|com.android.server.MmsServiceBroker| |onSwitchUser| |int|
|com.android.server.notification.NotificationManagerService| |onSwitchUser| |int|
|com.android.server.PersistentDataBlockService| |onSwitchUser| |int|
|com.android.server.pm.Installer| |onSwitchUser| |int|
|com.android.server.pm.LauncherAppsService| |onSwitchUser| |int|
|com.android.server.power.PowerManagerService| |onSwitchUser| |int|
|com.android.server.print.PrintManagerService| |onSwitchUser| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onSwitchUser| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onSwitchUser| |int|
|com.android.server.SystemServiceManager| |switchUser| |int|
|com.android.server.telecom.TelecomLoaderService| |onSwitchUser| |int|
|com.android.server.tv.TvInputManagerService| |onSwitchUser| |int|
|com.android.server.twilight.TwilightService| |onSwitchUser| |int|
|com.android.server.UiModeManagerService| |onSwitchUser| |int|
|com.android.server.usage.UsageStatsService| |onSwitchUser| |int|
|com.android.server.usb.UsbService$Lifecycle| |onSwitchUser| |int|
|com.android.server.webkit.WebViewUpdateService| |onSwitchUser| |int|
|com.android.server.wifi.p2p.WifiP2pService| |onSwitchUser| |int|
|com.android.server.wifi.RttService| |onSwitchUser| |int|
|com.android.server.wifi.WifiScanningService| |onSwitchUser| |int|
|com.android.server.wifi.WifiService| |onSwitchUser| |int|
|com.android.server.AlarmManagerService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.fingerprint.FingerprintService| |onBootPhase| |int|
|com.android.server.lights.LightsService| |onBootPhase| |int|
|com.android.server.media.MediaSessionService| |onBootPhase| |int|
|com.android.server.media.projection.MediaProjectionManagerService| |onBootPhase| |int|
|com.android.server.MmsServiceBroker| |onBootPhase| |int|
|com.android.server.PersistentDataBlockService| |onBootPhase| |int|
|com.android.server.pm.Installer| |onBootPhase| |int|
|com.android.server.pm.LauncherAppsService| |onBootPhase| |int|
|com.android.server.print.PrintManagerService| |onBootPhase| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onBootPhase| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onBootPhase| |int|
|com.android.server.SystemServiceManager| |startBootPhase| |int|
|com.android.server.twilight.TwilightService| |onBootPhase| |int|
|com.android.server.usage.UsageStatsService| |onBootPhase| |int|
|com.android.server.webkit.WebViewUpdateService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService| |startUser| |int,boolean|
|com.android.server.am.ActivityManagerService| |finishBooting| ||
|com.android.server.am.ActivityManagerService| |startUserInBackground| |int|
|com.android.server.am.ActivityManagerService| |startUserInForeground| |int,android.app.Dialog|
|com.android.server.am.ActivityManagerService| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |ensureBootCompleted| ||
|android.app.ActivityManagerNative| |startUserInBackground| |int|
|com.android.server.am.ActivityManagerService| |startProfilesLocked| ||
|com.android.server.am.UserSwitchingDialog| |onWindowShown| ||
|android.app.ActivityManagerNative| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |appNotResponding| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |systemReady| |java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |crashApplication| |com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |startUserInBackground| |int|
|com.android.server.am.ActivityManagerService| |finishUserSwitch| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |scheduleStartProfilesLocked| ||
|android.app.IActivityManager| |bootAnimationComplete| ||
|com.android.server.am.ActiveServices| |serviceTimeout| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService$10| |run| ||
|com.android.server.am.BroadcastQueue$AppNotResponding| |run| ||
|com.android.server.am.ActivityManagerService$14| |run| ||
|com.android.server.am.ActivityManagerService| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrashInner| |java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.am.Am| |runStartUserInBackground| ||
|com.android.server.am.ActivityStackSupervisor| |activityIdleInternalLocked| |android.os.IBinder,boolean,android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |performEnableScreen| ||
|android.app.ActivityManagerNative| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener$NativeCrashReporter| |run| ||
|com.android.commands.am.Am| |onRun| ||
|com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler| |activityIdleInternal| |com.android.server.am.ActivityRecord|
|com.android.server.wm.WindowManagerService| |enableScreenAfterBoot| ||
|com.android.server.wm.WindowManagerService| |performBootTimeout| ||
|com.android.server.wm.WindowManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeededLocked| ||
|com.android.server.wm.WindowManagerService| |checkBootAnimationCompleteLocked| ||
|android.app.IActivityManager| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |consumeNativeCrashData| |java.io.FileDescriptor|
|com.android.internal.os.BaseCommand| |onRun| ||
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleTimeoutLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleLocked| ||
|com.android.server.am.ActivityManagerService| |enableScreenAfterBoot| ||
|com.android.server.am.ActivityManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedInner| |boolean|
|com.android.server.wm.WindowStateAnimator| |performShowLocked| ||
|com.android.server.wm.WindowStateAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$1100| |com.android.server.wm.WindowManagerService|
|com.android.internal.os.RuntimeInit| |wtf| |java.lang.String,java.lang.Throwable,boolean|
|android.app.IActivityManager| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |run| ||
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|com.android.server.am.ActivityStack| |backgroundResourcesReleased| ||
|com.android.server.am.ActivityStack| |clearLaunchTime| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStack| |completeResumeLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityRecord| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStack| |completePauseLocked| |boolean|
|com.android.server.am.ActivityStack| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|android.app.ActivityManagerNative| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub$Proxy| |enableScreenIfNeeded| ||
|android.view.IWindowManager$Stub| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedLoop| ||
|com.android.server.wm.AppWindowAnimator| |showAllWindowsLocked| ||
|com.android.server.wm.WindowAnimator| |updateWindowsLocked| |int|
|com.android.server.wm.WindowStateAnimator| |commitFinishDrawingLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean|
|com.android.server.wm.WindowState| |setAppOpVisibilityLw| |boolean|
|android.util.Log$1| |onTerribleFailure| |java.lang.String,android.util.Log$TerribleFailure,boolean|
|com.android.internal.os.RuntimeInit$UncaughtHandler| |uncaughtException| |java.lang.Thread,java.lang.Throwable|
|com.android.server.am.ActivityManagerService| |startObservingNativeCrashes| ||
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|com.android.server.am.ActivityStack| |releaseBackgroundResources| ||
|com.android.server.am.ActivityStack| |startPausingLocked| |boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |access$400| |com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |broadcastIntentLocked| |com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |finishInstrumentationLocked| |com.android.server.am.ProcessRecord,int,android.os.Bundle|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |forceStopUserLocked| |int,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |shutdownLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |activitySleptLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |goingToSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |scheduleSleepTimeout| ||
|com.android.server.am.ActivityStack| |activityPausedLocked| |android.os.IBinder,boolean|
|com.android.server.am.ActivityStackSupervisor| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.am.ActivityStack| |goToSleep| ||
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |android.content.pm.ApplicationInfo,int|
|android.app.IActivityManager| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowManager| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLocked| ||
|com.android.server.wm.WindowAnimator| |testTokenMayBeDrawnLocked| |int|
|com.android.server.wm.WindowManagerService| |handleAppTransitionReadyLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowAnimator| |animateLocked| ||
|android.view.WindowManagerPolicy$WindowState| |hideLw| |boolean|
|com.android.server.wm.DisplayContent| |switchUserStacks| |int|
|com.android.server.wm.WindowManagerService| |updateAppOpsState| ||
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|com.android.server.am.ActivityStack| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |pauseBackStacks| |boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |setSurfaceLocked| |android.view.Surface,int,int,int|
|com.android.server.am.ActivityStackSupervisor| |pauseChildStacks| |com.android.server.am.ActivityRecord,boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService$7| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |deliverPreBootCompleted| |java.lang.Runnable,java.util.ArrayList,int|
|com.android.server.am.ActivityManagerService| |updateConfigurationLocked| |android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean|
|com.android.server.am.ActivityManagerService| |access$200| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |closeSystemDialogsLocked| |java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserBoot| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppDiedLocked| |com.android.server.am.ProcessRecord,boolean,boolean|
|com.android.server.am.ActivityManagerService| |finishUserStop| |com.android.server.am.UserStartedState|
|android.view.IApplicationToken$Stub$Proxy| |windowsVisible| ||
|android.view.IApplicationToken$Stub| |windowsVisible| ||
|com.android.server.am.ActivityManagerService| |shutdown| |int|
|com.android.server.am.ActivityManagerService| |updateSleepIfNeededLocked| ||
|com.android.server.am.ActivityStack| |awakeFromSleepingLocked| ||
|com.android.server.am.ActivityStackSupervisor| |attachApplicationLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.CompatModePackages| |setFrontActivityScreenCompatModeLocked| |int|
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |java.lang.String,int|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| |android.content.pm.PackageParser$Package,int,int|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| ||
|com.android.server.wm.WindowManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.policy.impl.PhoneWindowManager| |finishScreenTurningOn| ||
|com.android.server.wm.WindowManagerService| |computeNewConfiguration| ||
|com.android.server.wm.WindowManagerService| |setTokenVisibilityLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$400| |com.android.server.wm.WindowManagerService|
|com.android.server.wm.WindowManagerService| |addTask| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |moveStackWindowsLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reconfigureDisplayLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.WindowManagerService| |removeWindowInnerLocked| |com.android.server.wm.Session,com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |resizeStack| |int,android.graphics.Rect|
|com.android.server.wm.WindowManagerService| |setCurrentUser| |int,int[]|
|com.android.server.wm.WindowManagerService| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |setUniverseTransformLocked| |com.android.server.wm.WindowState,float,float,float,float,float,float,float|
|com.android.server.wm.WindowManagerService| |unsetAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken,boolean,boolean|
|com.android.server.wm.WindowAnimator| |access$000| |com.android.server.wm.WindowAnimator|
|com.android.internal.policy.impl.BarController| |setBarShowingLw| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |finishPostLayoutPolicyLw| ||
|com.android.internal.policy.impl.PhoneWindowManager| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|com.android.server.wm.WindowManagerService$5| |onOpChanged| |int,java.lang.String|
|android.app.ActivityManagerNative| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |retrieveSettings| ||
|com.android.server.am.ActivityManagerService$29| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |attachApplicationLocked| |android.app.IApplicationThread,int|
|com.android.server.am.ActivityManagerService| |removeProcessLocked| |com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord,int,android.app.IApplicationThread|
|com.android.server.am.ActivityManagerService$28| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.view.IApplicationToken$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IApplicationToken| |windowsVisible| ||
|android.app.ActivityManagerNative| |shutdown| |int|
|com.android.server.am.ActivityManagerService$12| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |finishRunningVoiceLocked| ||
|com.android.server.am.ActivityManagerService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityManagerService| |startRunningVoiceLocked| ||
|com.android.server.am.ActivityStackSupervisor| |comeOutOfSleepIfNeededLocked| ||
|com.android.server.am.ActivityManagerService| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.am.CompatModeDialog$1| |onCheckedChanged| |android.widget.CompoundButton,boolean|
|android.content.pm.IPackageManager$Stub$Proxy| |performBootDexOpt| ||
|android.content.pm.IPackageManager$Stub| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishKeyguardDrawn| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishWindowsDrawn| ||
|com.android.server.am.ActivityManagerService| |updateConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |prepareAppTransition| |int,boolean|
|com.android.server.wm.WindowManagerService| |updateRotationUncheckedLocked| |boolean|
|com.android.server.wm.WindowManagerService| |makeWindowFreezingScreenIfNeededLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |requestTraversalLocked| ||
|com.android.server.am.ActivityStackSupervisor| |moveTaskToStackLocked| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |setForcedDisplayDensityLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.WindowManagerService| |setForcedDisplaySizeLocked| |com.android.server.wm.DisplayContent,int,int|
|com.android.server.wm.WindowManagerService| |setOverscanLocked| |com.android.server.wm.DisplayContent,int,int,int,int|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.TaskStack| |detachDisplay| ||
|android.view.IWindowManager$Stub$Proxy| |setNewConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |startAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken|
|com.android.server.wm.WindowAnimator$1| |run| ||
|com.android.internal.policy.impl.BarController| |checkHiddenLw| ||
|com.android.internal.policy.impl.BarController| |adjustSystemUiVisibilityLw| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |beginLayoutLw| |boolean,int,int,int|
|android.view.WindowManagerPolicy| |finishPostLayoutPolicyLw| ||
|android.view.WindowManagerPolicy| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|android.app.IActivityManager| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub$Proxy| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.content.IIntentReceiver$Stub| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppCrashLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killPackageProcessesLocked| |java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActivityManagerService$AppDeathRecipient| |binderDied| ||
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityRecord$Token| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |shutdown| |int|
|com.android.server.am.ActivityManagerService$LocalService| |onWakefulnessChanged| |int|
|android.app.ActivityManagerNative| |setPackageScreenCompatMode| |java.lang.String,int|
|android.content.pm.IPackageManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$300| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$400| |com.android.internal.policy.impl.PhoneWindowManager|
|android.app.ActivityManagerNative| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub$Proxy| |prepareAppTransition| |int,boolean|
|android.view.IWindowManager$Stub| |prepareAppTransition| |int,boolean|
|com.android.server.am.ActivityManagerService| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStack| |moveTaskToBackLocked| |int|
|com.android.server.am.ActivityStack| |moveTaskToFrontLocked| |com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle,java.lang.String|
|com.android.server.am.ActivityStack| |updateTransitLocked| |int,android.os.Bundle|
|com.android.server.wm.WindowManagerService| |resumeRotationLocked| ||
|com.android.server.wm.WindowManagerService| |stopFreezingDisplayLocked| ||
|com.android.server.wm.WindowManagerService| |updateResizingWindows| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |createSurfaceLocked| ||
|com.android.server.wm.WindowManagerService$LocalService| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.wm.WindowManagerService| |handleDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayChangedLocked| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayRemovedLocked| |int|
|com.android.server.wm.WindowManagerService| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |requestTraversal| ||
|com.android.server.wm.WindowManagerService| |setAppFullscreen| |android.os.IBinder,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$9| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |clearClearableFlagsLw| ||
|com.android.server.wm.WindowManagerService| |detachStackLocked| |com.android.server.wm.DisplayContent,com.android.server.wm.TaskStack|
|android.view.IWindowManager| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |updateOrientationFromAppTokensLocked| |android.content.res.Configuration,android.os.IBinder|
|com.android.internal.policy.impl.PhoneWindowManager| |adjustSystemUiVisibilityLw| |int|
|android.view.WindowManagerPolicy| |beginLayoutLw| |boolean,int,int,int|
|com.android.server.pm.PackageManagerService| |killApplication| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IIntentReceiver| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.IActivityManager| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|android.view.IApplicationToken$Stub$Proxy| |keyDispatchingTimedOut| |java.lang.String|
|android.view.IApplicationToken$Stub| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |makeAppCrashingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killAppAtUsersRequest| |com.android.server.am.ProcessRecord,android.app.Dialog|
|com.android.server.am.ActivityManagerService| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |bringUpServiceLocked| |com.android.server.am.ServiceRecord,int,boolean,boolean|
|com.android.server.am.ActivityManagerService| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |processNextBroadcast| |boolean|
|com.android.server.am.ActivityManagerService$LocalService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |realStartServiceLocked| |com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean|
|com.android.server.power.ShutdownThread| |run| ||
|android.app.IActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.pm.PackageManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.WindowManagerPolicy| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |systemBooted| ||
|com.android.internal.policy.impl.PhoneWindowManager$1| |run| ||
|android.app.IActivityManager| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager| |prepareAppTransition| |int,boolean|
|android.app.ActivityManagerNative| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |findTaskToMoveToFrontLocked| |com.android.server.am.TaskRecord,int,android.os.Bundle,java.lang.String|
|com.android.server.wm.DragState| |unregister| ||
|com.android.server.wm.WindowManagerService| |access$500| |com.android.server.wm.WindowManagerService|
|android.view.WindowManagerInternal| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay| |<init>| |com.android.server.am.ActivityStackSupervisor,int,int,int|
|com.android.server.wm.WindowManagerService| |onDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |access$1000| |com.android.server.wm.WindowManagerService,int|
|com.android.server.wm.WindowManagerService| |access$900| |com.android.server.wm.WindowManagerService,int|
|android.view.IWindowManager$Stub$Proxy| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager$Stub| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService$LocalService| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemBarsLw| |android.view.WindowManagerPolicy$WindowState,int,int|
|com.android.server.wm.DisplayContent| |checkForDeferredActions| ||
|com.android.server.wm.WindowManagerService| |detachStack| |int|
|android.view.WindowManagerPolicy| |adjustSystemUiVisibilityLw| |int|
|com.android.server.wm.WindowManagerService| |performLayoutLockedInner| |com.android.server.wm.DisplayContent,boolean,boolean|
|com.android.server.pm.PackageManagerService| |scanPackageDirtyLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageLI| |java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |replaceSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|android.app.LoadedApk$ReceiverDispatcher$InnerReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.PendingIntent$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IntentSender$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.am.Am$IntentReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.monkey.MonkeyNetworkMonitor| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$13| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$15| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$24| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$25| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$28| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$29| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$8| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService$12| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.BroadcastQueue| |performReceiveLocked| |com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.wm.InputMonitor| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.view.IApplicationToken| |keyDispatchingTimedOut| |java.lang.String|
|android.app.ActivityManagerNative| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceInnerLocked| |com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |performServiceRestartLocked| |com.android.server.am.ServiceRecord|
|android.app.ActivityManagerNative| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |broadcastTimeoutLocked| |boolean|
|com.android.server.am.BroadcastQueue| |scheduleBroadcastsLocked| ||
|android.app.ActivityManagerInternal| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |attachApplicationLocked| |com.android.server.am.ProcessRecord,java.lang.String|
|com.android.server.power.ShutdownThread| |beginShutdownSequence| |android.content.Context|
|android.app.ActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |runScreenCompat| ||
|com.android.server.power.Notifier$2| |run| ||
|android.view.WindowManagerPolicy| |systemBooted| ||
|com.android.internal.app.LocalePicker| |updateLocale| |java.util.Locale|
|com.android.internal.telephony.MccTable| |setSystemLocale| |android.content.Context,java.lang.String,java.lang.String|
|com.android.internal.telephony.MccTable| |updateMccMncConfiguration| |android.content.Context,java.lang.String,boolean|
|com.android.server.MountService| |copyLocaleFromMountService| ||
|com.android.server.UiModeManagerService| |sendConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |displayReady| ||
|com.android.server.wm.WindowManagerService| |sendNewConfiguration| ||
|android.app.IActivityManager| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |setLockTaskModeLocked| |com.android.server.am.TaskRecord,boolean,java.lang.String|
|com.android.server.wm.DragState| |endDragLw| ||
|com.android.server.wm.Session| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.WindowManagerService| |prepareDragSurface| |android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface|
|com.android.server.wm.WindowManagerService| |startFreezingScreen| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayAddedLocked| |int|
|com.android.server.wm.WindowManagerService| |onDisplayChanged| |int|
|com.android.server.wm.WindowManagerService| |onDisplayRemoved| |int|
|android.view.IWindowManager| |keyguardGoingAway| |boolean,boolean|
|android.view.WindowManagerInternal| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemUiVisibilityLw| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |detachLocked| ||
|com.android.server.wm.WindowManagerService| |statusBarVisibilityChanged| |int|
|com.android.server.wm.WindowManagerService| |updateFocusedWindowLocked| |int,boolean|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |java.io.File,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageX| |java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installNewPackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |replaceNonSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |unloadMediaPackages| |android.util.ArrayMap,int[],boolean|
|com.android.server.pm.PackageManagerService| |replacePackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.am.BroadcastQueue| |deliverToRegisteredReceiverLocked| |com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.app.IActivityManager| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceLocked| |android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int|
|com.android.server.am.ActiveServices$ServiceMap| |rescheduleDelayedStarts| ||
|com.android.server.am.ActiveServices$ServiceRestarter| |run| ||
|android.app.IActivityManager| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.ActivityManagerService| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |setBroadcastTimeoutLocked| |long|
|com.android.server.am.ActivityManagerService| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.BroadcastQueue| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |createRelroFile| |boolean,java.lang.String[]|
|com.android.server.power.ShutdownThread| |access$000| |android.content.Context|
|com.android.server.power.ShutdownThread| |shutdownInner| |android.content.Context,boolean|
|com.android.internal.telephony.PhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |setLocaleFromCsim| ||
|com.android.internal.telephony.uicc.SIMRecords| |setLocaleFromUsim| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setProperties| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.PhoneFactory| |setDefaultSubscription| |int|
|com.android.internal.telephony.ServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |setDefaultFallbackSubId| |int|
|com.android.server.MountService| |access$2000| |com.android.server.MountService|
|com.android.server.UiModeManagerService| |sendConfigurationAndStartDreamOrDockAppLocked| |java.lang.String|
|com.android.server.wm.WindowManagerService$DragInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|android.view.IWindowSession$Stub$Proxy| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.Session| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager$Stub$Proxy| |startFreezingScreen| |int,int|
|android.view.IWindowManager$Stub| |startFreezingScreen| |int,int|
|android.view.WindowManagerPolicy| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |onDisplayAdded| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayChangedLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayRemovedLocked| |int|
|com.android.server.display.DisplayManagerService| |scheduleTraversalLocked| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1900| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |requestTransientBars| |android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |detachLocked| ||
|android.view.IWindowManager$Stub$Proxy| |statusBarVisibilityChanged| |int|
|android.view.IWindowManager$Stub| |statusBarVisibilityChanged| |int|
|com.android.server.pm.PackageManagerService| |deleteSystemPackageLI| |com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |<init>| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService| |loadMediaPackages| |android.util.ArrayMap,int[]|
|com.android.server.pm.PackageManagerService| |scanDirLI| |java.io.File,int,int,long|
|com.android.server.pm.PackageManagerService| |access$4000| |com.android.server.pm.PackageManagerService,java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installPackageLI| |com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |updateExternalMediaStatusInner| |boolean,boolean,boolean|
|com.android.server.input.InputManagerService| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices$ServiceMap| |ensureNotStartingBackground| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService| |bindToAgentSynchronous| |android.content.pm.ApplicationInfo,int|
|android.app.ActivityManagerNative| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| |java.lang.String[]|
|com.android.server.power.ShutdownThread$1| |onClick| |android.content.DialogInterface,int|
|com.android.server.power.ShutdownThread| |reboot| |android.content.Context,java.lang.String,boolean|
|com.android.server.power.ShutdownThread| |rebootSafeMode| |android.content.Context,boolean|
|com.android.server.power.ShutdownThread| |shutdown| |android.content.Context,boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.gsm.GSMPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.sip.SipPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.SIMRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.server.MountService$3| |run| ||
|com.android.server.UiModeManagerService| |updateAfterBroadcastLocked| |java.lang.String,int,int|
|com.android.server.UiModeManagerService| |updateLocked| |int,int|
|android.view.IWindowSession| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession$Stub$Proxy| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowSession$Stub| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager| |startFreezingScreen| |int,int|
|com.android.server.display.DisplayPowerController| |setScreenState| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayRemoved| |int|
|com.android.server.display.DisplayManagerService| |access$1600| |com.android.server.display.DisplayManagerService,boolean|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAddedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceChanged| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemovedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |requestGlobalDisplayStateInternal| |int|
|com.android.server.display.DisplayManagerService| |setDisplayInfoOverrideFromWindowManagerInternal| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |setDisplayPropertiesInternal| |int,boolean,float,boolean|
|com.android.server.display.DisplayManagerService| |windowManagerAndInputReady| ||
|com.android.internal.policy.impl.PhoneWindowManager$17| |onReceive| |android.content.Context,android.content.Intent|
|android.view.WindowManagerPolicy| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1700| |com.android.internal.policy.impl.PhoneWindowManager,android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTaskListEmptyLocked| ||
|android.view.IWindowManager| |statusBarVisibilityChanged| |int|
|com.android.server.pm.PackageManagerService| |main| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService$14| |run| ||
|com.android.server.pm.PackageManagerService$8| |run| ||
|com.android.server.pm.PackageManagerService| |access$2300| |com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |access$4500| |com.android.server.pm.PackageManagerService,boolean,boolean,boolean|
|com.android.server.pm.PackageManagerService| |scanAvailableAsecs| ||
|com.android.server.am.ActiveServices| |bringDownServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$FullBackupEngine| |backupOnePackage| |android.content.pm.PackageInfo|
|com.android.server.backup.BackupManagerService$FullRestoreEngine| |restoreOneFile| |java.io.InputStream|
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |restoreOneFile| |java.io.InputStream,byte[]|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeNextAgent| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreKeyValue| ||
|android.app.IActivityManager| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |cleanUpApplicationRecordLocked| |com.android.server.am.ProcessRecord,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |startAppProblemLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|android.webkit.WebViewFactory| |onWebViewUpdateInstalled| ||
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| ||
|com.android.server.power.PowerManagerService$3| |run| ||
|com.android.server.wm.WindowManagerService| |rebootSafeMode| |boolean|
|com.android.server.wm.WindowManagerService| |shutdown| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.uicc.SIMRecords| |onRecordLoaded| ||
|com.android.server.MountService| |onDaemonConnected| ||
|com.android.server.UiModeManagerService| |access$000| |com.android.server.UiModeManagerService,java.lang.String,int,int|
|com.android.server.UiModeManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |updateDockState| |int|
|com.android.server.UiModeManagerService| |updateTwilight| ||
|android.view.View| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.wm.Session| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|com.android.server.display.DisplayPowerController| |animateScreenStateChange| |int,boolean|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |createVirtualDisplayInternal| |android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAdded| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$1400| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemoved| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |releaseVirtualDisplayInternal| |android.os.IBinder|
|com.android.server.display.DisplayManagerService| |access$3700| |com.android.server.display.DisplayManagerService,int|
|com.android.server.display.DisplayManagerService| |access$4100| |com.android.server.display.DisplayManagerService,int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |access$4300| |com.android.server.display.DisplayManagerService,int,boolean,float,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$18| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromRight| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromTop| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTaskListEmptyLocked| ||
|com.android.server.pm.PackageManagerService$6| |run| ||
|com.android.server.pm.PackageManagerService$11| |run| ||
|com.android.server.am.ActiveServices| |forceStopLocked| |java.lang.String,int,boolean,boolean|
|com.android.server.am.ActiveServices| |bringDownServiceIfNeededLocked| |com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |killServicesLocked| |com.android.server.am.ProcessRecord,boolean|
|com.android.server.am.ActiveServices| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|com.android.server.backup.BackupManagerService$PerformAdbBackupTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$EngineThread| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |execute| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |execute| ||
|com.android.commands.monkey.MonkeyNetworkMonitor| |register| |android.app.IActivityManager|
|com.android.server.am.ActivityManagerService| |trimApplications| ||
|com.android.server.am.ActivityManagerService| |makeAppNotRespondingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |access$300| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord|
|com.android.server.webkit.WebViewUpdateService| |onWebViewUpdateInstalled| ||
|android.view.WindowManagerPolicy$WindowManagerFuncs| |rebootSafeMode| |boolean|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |shutdown| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.server.INativeDaemonConnectorCallbacks| |onDaemonConnected| ||
|com.android.server.UiModeManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |access$100| |com.android.server.UiModeManagerService,int|
|com.android.server.UiModeManagerService$4| |onTwilightStateChanged| ||
|android.app.ActivityView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.FragmentBreadCrumbs| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.MediaRouteButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.NativeActivity$NativeContentView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.SearchDialog$SearchBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.appwidget.AppWidgetHostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.filterfw.core.FilterSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.gesture.GestureOverlayView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.KeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLineBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.TtmlRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView$3| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$CueLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$RegionLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$SpanLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.opengl.GLSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.preference.PreferenceFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSTextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.GhostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.LayoutInflater$BlinkLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.SurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.TextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewOverlay$OverlayViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewStub| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.webkit.WebView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsoluteLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSpinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuPresenter$OverflowMenuButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActivityChooserView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AnalogClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AppSecurityPermissions$PermissionItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Button| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarViewLegacyDelegate$WeekView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckedTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Chronometer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CompoundButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DatePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DateTimeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DayPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DialerFilter| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DigitalClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$HandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$InsertionHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionEndHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionStartHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.EditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ExpandableListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.FrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Gallery| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.HorizontalScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.LinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListPopupWindow$DropDownListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MediaController| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MultiAutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker$CustomEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.PopupWindow$PopupViewContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.QuickContactBadge| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadialTimePickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RatingBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RelativeLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView$SearchAutoComplete| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SimpleMonthView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SlidingDrawer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Space| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Spinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView$StackFrame| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Switch| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabHost| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableRow| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextViewWithCircularIndicator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TimePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ToggleButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Toolbar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TwoLineListItem| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.VideoView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.YearPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButtonsController$Container| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomControls| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.AlertController$RecycleListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.PlatLogoActivity$1| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.RecentApplicationsBackground| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ActionMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ExpandedMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ListMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AbsActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccessibleDateAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccountItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarOverlayLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView$HomeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.DialogTitle| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.FaceUnlockView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LockPatternView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PasswordEntryKeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PointerLocationView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PreferenceImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ResolverDrawerLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.RotarySelector| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView$TabView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SizeAdaptiveLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SlidingTab| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SubtitleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SwipeDismissLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.TextProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WaveView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WeightedLinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.display.DisplayPowerController| |updatePowerState| ||
|com.android.server.display.DisplayAdapter$Listener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |access$3200| |com.android.server.display.DisplayManagerService,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |access$1300| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayManagerService| |access$1500| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$3500| |com.android.server.display.DisplayManagerService,android.os.IBinder|
|com.android.server.display.DisplayManagerService$LocalService$1| |requestDisplayState| |int|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromRight| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromTop| ||
|com.android.server.am.ActivityStack| |finishAllActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |removeTask| |com.android.server.am.TaskRecord,java.lang.String|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |release| ||
|com.android.server.am.ActiveServices| |removeConnectionLocked| |com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActiveServices| |stopServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |execute| ||
|com.android.commands.monkey.Monkey| |getSystemInterfaces| ||
|com.android.server.am.ActivityManagerService| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]|
|com.android.server.webkit.WebViewUpdateService| |access$000| |com.android.server.webkit.WebViewUpdateService|
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onPress| ||
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.server.NativeDaemonConnector| |listenToSocket| ||
|com.android.server.UiModeManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.twilight.TwilightListener| |onTwilightStateChanged| ||
|android.widget.Editor| |performLongClick| |boolean|
|com.android.server.display.DisplayPowerController| |access$400| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |debounceProximitySensor| ||
|com.android.server.display.DisplayAdapter$2| |run| ||
|com.android.server.display.DisplayAdapter$Listener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayBlanker| |requestDisplayState| |int|
|android.hardware.display.DisplayManagerInternal| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|android.hardware.display.DisplayManagerInternal| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener| |onPointerEvent| |android.view.MotionEvent|
|com.android.server.am.ActivityRecord| |setTask| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord|
|android.app.IActivityContainer$Stub$Proxy| |release| ||
|android.app.IActivityContainer$Stub| |release| ||
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |release| ||
|com.android.server.am.ActiveServices| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |executeNextState| |com.android.server.backup.BackupManagerService$BackupState|
|com.android.commands.monkey.Monkey| |run| |java.lang.String[]|
|android.app.ActivityManagerNative| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |addAppLocked| |android.content.pm.ApplicationInfo,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String|
|com.android.server.webkit.WebViewUpdateService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.policy.impl.GlobalActions$LongPressAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$Action| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$SinglePressAction| |onPress| ||
|com.android.internal.telephony.imsphone.ImsPhoneFactory| |makePhone| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.sip.SipPhoneFactory| |makePhone| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.server.NativeDaemonConnector| |run| ||
|com.android.server.twilight.TwilightService$TwilightListenerRecord| |run| ||
|android.widget.TextView| |performLongClick| ||
|com.android.server.display.DisplayPowerController$ScreenOnUnblocker| |onScreenOn| ||
|com.android.server.display.DisplayPowerController| |sendUpdatePowerStateLocked| ||
|com.android.server.display.DisplayPowerController| |access$500| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |handleProximitySensorEvent| |long,boolean|
|com.android.server.display.DisplayAdapter$1| |run| ||
|com.android.server.display.DisplayPowerState$PhotonicModulator| |requestDisplayState| |int|
|com.android.server.wm.WindowManagerService| |computeScreenConfigurationLocked| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |newDisplayContentLocked| |android.view.Display|
|com.android.server.am.ActivityStack| |resetTargetTaskIfNeededLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.am.ActivityStack| |resetAffinityTaskIfNeededLocked| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int|
|android.app.IActivityContainer$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityContainer| |release| ||
|com.android.server.am.ActivityManagerService| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |agentErrorCleanup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |beginBackup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |operationComplete| ||
|com.android.commands.monkey.Monkey| |main| |java.lang.String[]|
|android.app.IActivityManager| |setProcessLimit| |int|
|com.android.internal.policy.impl.GlobalActions$2| |onItemLongClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.internal.policy.impl.GlobalActions| |onClick| |android.content.DialogInterface,int|
|com.android.internal.policy.impl.GlobalActions| |handleShow| ||
|com.android.internal.telephony.PhoneFactory| |makeImsPhone| |com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.PhoneFactory| |makeSipPhone| |java.lang.String|
|android.inputmethodservice.ExtractButton| |performLongClick| ||
|android.inputmethodservice.ExtractEditText| |performLongClick| ||
|android.media.ClosedCaptionWidget$CCLineBox| |performLongClick| ||
|android.widget.AutoCompleteTextView| |performLongClick| ||
|android.widget.Button| |performLongClick| ||
|android.widget.CheckBox| |performLongClick| ||
|android.widget.CheckedTextView| |performLongClick| ||
|android.widget.Chronometer| |performLongClick| ||
|android.widget.CompoundButton| |performLongClick| ||
|android.widget.DateTimeView| |performLongClick| ||
|android.widget.DigitalClock| |performLongClick| ||
|android.widget.EditText| |performLongClick| ||
|android.widget.MultiAutoCompleteTextView| |performLongClick| ||
|android.widget.NumberPicker$CustomEditText| |performLongClick| ||
|android.widget.RadioButton| |performLongClick| ||
|android.widget.SearchView$SearchAutoComplete| |performLongClick| ||
|android.widget.Switch| |performLongClick| ||
|android.widget.TextClock| |performLongClick| ||
|android.widget.TextViewWithCircularIndicator| |performLongClick| ||
|android.widget.ToggleButton| |performLongClick| ||
|com.android.internal.view.menu.ActionMenuItemView| |performLongClick| ||
|com.android.internal.view.menu.IconMenuItemView| |performLongClick| ||
|com.android.internal.widget.DialogTitle| |performLongClick| ||
|com.android.server.display.DisplayPowerController| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |sendUpdatePowerState| ||
|com.android.server.display.DisplayPowerController| |access$1000| |com.android.server.display.DisplayPowerController,long,boolean|
|com.android.server.display.DisplayPowerState$PhotonicModulator| |run| ||
|com.android.server.wm.WindowManagerService| |computeNewConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |getDisplayContentLocked| |int|
|com.android.server.am.ActivityStack| |resetTaskIfNeededLocked| |com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityView$ActivityContainerWrapper| |release| ||
|com.android.server.am.ActivityManagerService| |removeTaskByIdLocked| |int,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeAgentForBackup| |java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |operationComplete| ||
|com.android.internal.policy.impl.GlobalActions| |access$1800| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.GlobalActions| |showDialog| |boolean,boolean|
|com.android.internal.telephony.PhoneBase| |updateImsPhone| ||
|com.android.server.display.DisplayManagerService$LocalService| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |access$000| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |updateBrightness| ||
|com.android.server.display.DisplayPowerController$8| |onSensorChanged| |android.hardware.SensorEvent|
|com.android.server.display.DisplayPowerState| |<init>| |com.android.server.display.DisplayBlanker,com.android.server.lights.Light,com.android.server.display.ColorFade|
|com.android.server.wm.WindowAnimator| |getPendingLayoutChanges| |int|
|com.android.server.wm.WindowAnimator| |setPendingLayoutChanges| |int,int|
|com.android.server.wm.WindowAnimator| |updateAppWindowsLocked| |int|
|com.android.server.wm.WindowAnimator| |updateWallpaperLocked| |int|
|com.android.server.wm.WindowManagerService| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayContentLocked| ||
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |int|
|com.android.server.wm.WindowManagerService| |addWindow| |com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.WindowManagerService| |getBaseDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |getInitialDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |createDisplayContentLocked| |android.view.Display|
|com.android.server.wm.WindowManagerService| |displayReady| |int|
|com.android.server.wm.WindowManagerService| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.wm.WindowManagerService| |getInitialDisplaySize| |int,android.graphics.Point|
|android.app.ActivityView$ActivityContainerWrapper| |finalize| ||
|android.app.ActivityView| |release| ||
|com.android.server.am.ActivityManagerService| |access$1400| |com.android.server.am.ActivityManagerService,int,boolean|
|com.android.server.am.ActivityManagerService| |removeTasksByPackageNameLocked| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |removeTasksByRemovedPackageComponentsLocked| |java.lang.String,int|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService| |opComplete| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateImsPhone| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateImsPhone| ||
|com.android.internal.telephony.gsm.GSMPhone| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhone| |updateImsPhone| ||
|com.android.internal.telephony.PhoneBase$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.sip.SipPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.sip.SipPhone| |updateImsPhone| ||
|android.hardware.display.DisplayManagerInternal| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController$1| |onAnimationEnd| |android.animation.Animator|
|com.android.server.display.DisplayPowerController$2| |onAnimationEnd| ||
|com.android.server.display.DisplayPowerController$3| |run| ||
|com.android.server.display.AutomaticBrightnessController$Callbacks| |updateBrightness| ||
|com.android.server.display.DisplayPowerController| |initialize| ||
|com.android.server.wm.WindowAnimator| |setAppLayoutChanges| |com.android.server.wm.AppWindowAnimator,int,java.lang.String|
|com.android.server.wm.WindowAnimator| |hideWallpapersLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |prepareSurfaceLocked| |boolean|
|com.android.server.wm.WindowStateAnimator| |setSurfaceBoundariesLocked| |boolean|
|android.view.IWindowManager$Stub$Proxy| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|android.view.IWindowManager$Stub| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |screenshotActivities| |com.android.server.am.ActivityRecord|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |populateWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |populateVisibleWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayInfoLocked| ||
|com.android.server.wm.WindowManagerService| |getDefaultWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |adjustWallpaperWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |getOrientationFromAppTokensLocked| ||
|com.android.server.wm.WindowManagerService| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |handleAnimatingStoppedAndTransitionLocked| ||
|com.android.server.wm.WindowManagerService| |createWatermarkInTransaction| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean|
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |saveLastInputMethodWindowForTransition| ||
|com.android.server.wm.WindowManagerService| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.wm.WindowManagerService| |showCircularMask| |boolean|
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlay| ||
|com.android.server.wm.WindowManagerService| |showStrictModeViolation| |int,int|
|com.android.server.wm.WindowManagerService| |startFreezingDisplayLocked| |boolean,int,int|
|com.android.server.wm.WindowManagerService| |updateWallpaperVisibilityLocked| ||
|com.android.server.wm.WindowAnimator| |dumpLocked| |java.io.PrintWriter,java.lang.String,boolean|
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |android.view.Display|
|com.android.server.wm.Session| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.am.ProcessList| |applyDisplaySize| |com.android.server.wm.WindowManagerService|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.server.backup.BackupManagerService| |handleTimeout| |int,java.lang.Object|
|com.android.server.backup.Trampoline| |opComplete| |int|
|com.android.server.power.PowerManagerService| |updateDisplayPowerStateLocked| |int|
|com.android.server.display.RampAnimator$Listener| |onAnimationEnd| ||
|com.android.server.display.AutomaticBrightnessController| |updateAutoBrightness| |boolean|
|com.android.server.wm.AppWindowAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowStateAnimator| |destroyDeferredSurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |destroySurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |finishExit| ||
|android.view.IWindowManager| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStackSupervisor| |handleLaunchTaskBehindCompleteLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.TaskRecord| |getTaskThumbnailLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |recomputeBoundsLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |computeChangedWindows| ||
|com.android.server.wm.WindowManagerService| |applyAnimationLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |checkWaitingForWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.server.wm.WindowManagerService| |moveInputMethodWindowsIfNeededLocked| |boolean|
|com.android.server.wm.WindowManagerService| |findDesiredInputMethodWindowIndexLocked| |boolean|
|com.android.server.wm.WindowManagerService| |getOrientationFromWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |addInputMethodWindowToListLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |moveInputMethodDialogsLocked| |int|
|com.android.server.wm.WindowManagerService| |updateStatusBarVisibilityLocked| |int|
|android.view.IWindowManager$Stub$Proxy| |getPreferredOptionsPanelGravity| ||
|android.view.IWindowManager$Stub| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1|
|com.android.server.InputMethodManagerService| |unbindCurrentMethodLocked| |boolean,boolean|
|android.view.IWindowManager$Stub$Proxy| |setAppVisibility| |android.os.IBinder,boolean|
|android.view.IWindowManager$Stub| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityStackSupervisor| |processStoppingActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |setVisibile| |com.android.server.am.ActivityRecord,boolean|
|com.android.server.wm.WindowManagerService| |updateCircularDisplayMaskIfNeeded| ||
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlayIfNeeded| ||
|com.android.server.wm.WindowManagerService| |access$800| |com.android.server.wm.WindowManagerService,int,int|
|com.android.server.wm.WindowManagerService| |dumpAnimatorLocked| |java.io.PrintWriter,java.lang.String[],boolean|
|com.android.server.wm.DragState| |getTouchedWinAtPointLw| |float,float|
|com.android.server.wm.DragState| |broadcastDragStartedLw| |float,float|
|android.view.IWindowSession$Stub$Proxy| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|com.android.server.wm.Session| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager| |getBaseDisplayDensity| |int|
|android.view.IWindowManager| |getInitialDisplayDensity| |int|
|android.view.IWindowManager| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.server.backup.BackupManagerService| |prepareOperationTimeout| |int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask|
|android.app.backup.IBackupManager$Stub$Proxy| |opComplete| |int|
|android.app.backup.IBackupManager$Stub| |opComplete| |int|
|com.android.server.power.PowerManagerService| |updatePowerStateLocked| ||
|com.android.server.display.RampAnimator$1| |run| ||
|com.android.server.display.RampAnimator| |animateTo| |int,int|
|com.android.server.display.AutomaticBrightnessController| |access$300| |com.android.server.display.AutomaticBrightnessController,boolean|
|com.android.server.display.AutomaticBrightnessController| |configure| |boolean,float,boolean|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| |long|
|com.android.server.wm.WindowState| |removeLocked| ||
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowStateAnimator| |cancelExitAnimationForNextAnimationLocked| ||
|com.android.server.am.ActivityManagerService| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |drawWindowIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |<init>| |com.android.server.wm.AccessibilityController$DisplayMagnifier|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |onRotationChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |performComputeChangedWindowsNotLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |scheduleComputeChangedWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |updateTokenInPlaceLocked| |com.android.server.wm.AppWindowToken,int|
|android.view.IWindowManager$Stub$Proxy| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager$Stub| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService$2| |run| ||
|com.android.server.InputMethodManagerService| |startInputInnerLocked| ||
|com.android.server.InputMethodManagerService| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.InputMethodManagerService| |resetAllInternalStateLocked| |boolean,boolean|
|com.android.server.InputMethodManagerService| |updateInputMethodsFromSettingsLocked| |boolean|
|android.view.IWindowManager| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.wm.WindowManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.wm.WindowManagerService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wm.DragState| |notifyDropLw| |float,float|
|com.android.server.wm.DragState| |notifyMoveLw| |float,float|
|android.view.IWindowSession| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub$Proxy| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |runDisplayDensity| ||
|com.android.commands.wm.Wm| |runDisplaySize| ||
|com.android.internal.view.RotationPolicy| |getRotationLockOrientation| |android.content.Context|
|com.android.server.backup.BackupManagerService$FullBackupEngine$FullBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$FullBackupObbConnection| |backupObbs| |android.content.pm.PackageInfo,java.io.OutputStream|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |initiateOneRestore| |android.content.pm.PackageInfo,int|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreFinished| ||
|android.app.backup.IBackupManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.IBackupManager| |opComplete| |int|
|com.android.server.power.PowerManagerService| |access$1100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |acquireWakeLockInternal| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |boostScreenBrightnessInternal| |long,int|
|com.android.server.power.PowerManagerService| |goToSleepInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |handleBatteryStateChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleSandman| ||
|com.android.server.power.PowerManagerService| |handleScreenBrightnessBoostTimeout| ||
|com.android.server.power.PowerManagerService| |handleSettingsChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleUserActivityTimeout| ||
|com.android.server.power.PowerManagerService| |napInternal| |long,int|
|com.android.server.power.PowerManagerService| |onBootPhase| |int|
|com.android.server.power.PowerManagerService| |removeWakeLockLocked| |com.android.server.power.PowerManagerService$WakeLock,int|
|com.android.server.power.PowerManagerService| |setDozeOverrideFromDreamManagerInternal| |int,int|
|com.android.server.power.PowerManagerService| |setMaximumScreenOffTimeoutFromDeviceAdminInternal| |int|
|com.android.server.power.PowerManagerService| |setScreenBrightnessOverrideFromWindowManagerInternal| |int|
|com.android.server.power.PowerManagerService| |setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal| |float|
|com.android.server.power.PowerManagerService| |setTemporaryScreenBrightnessSettingOverrideInternal| |int|
|com.android.server.power.PowerManagerService| |setUserActivityTimeoutOverrideFromWindowManagerInternal| |long|
|com.android.server.power.PowerManagerService| |systemReady| |com.android.internal.app.IAppOpsService|
|com.android.server.power.PowerManagerService| |userActivityInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |wakeUpInternal| |long,int|
|com.android.server.display.DisplayPowerController| |animateScreenBrightness| |int,int|
|com.android.server.display.AutomaticBrightnessController$2| |onTwilightStateChanged| ||
|com.android.server.display.AutomaticBrightnessController| |handleLightSensorEvent| |long,float|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| ||
|android.app.ActivityManagerNative| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController| |onWindowFocusChangedNotLocked| ||
|com.android.server.wm.AccessibilityController| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onSomeWindowResizedOrMovedLocked| ||
|com.android.server.wm.AccessibilityController| |onWindowTransitionLocked| |com.android.server.wm.WindowState,int|
|android.view.IWindowManager| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.internal.policy.impl.PhoneWindow| |getOptionsPanelGravity| ||
|com.android.server.InputMethodManagerService| |startInputUncheckedLocked| |com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.server.InputMethodManagerService| |systemRunning| |com.android.server.statusbar.StatusBarManagerService|
|com.android.server.InputMethodManagerService| |resetStateIfCurrentLocaleChangedLocked| ||
|com.android.server.InputMethodManagerService| |switchUserLocked| |int|
|com.android.server.InputMethodManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.InputMethodManagerService| |buildInputMethodListLocked| |java.util.ArrayList,java.util.HashMap,boolean|
|com.android.server.InputMethodManagerService| |updateFromSettingsLocked| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |updateSurface| |boolean,boolean,boolean|
|android.view.ViewRootImpl| |setView| |android.view.View,android.view.WindowManager$LayoutParams,android.view.View|
|android.view.IWindowSession| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.SurfaceView| |updateWindow| |boolean,boolean|
|android.view.IWindowSession| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |onRun| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |startRestore| ||
|com.android.server.backup.Trampoline| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.BackupAgent$BackupServiceBinder| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.server.power.PowerManagerService$2| |onProximityNegative| ||
|com.android.server.power.PowerManagerService$2| |onProximityPositive| ||
|com.android.server.power.PowerManagerService$2| |onStateChanged| ||
|com.android.server.power.PowerManagerService$DockReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |access$3200| |com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |access$5000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |access$3900| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |access$1900| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2400| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2500| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2300| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$4000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |handleWakeLockDeath| |com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |releaseWakeLockInternal| |android.os.IBinder,int|
|com.android.server.power.PowerManagerService| |access$5300| |com.android.server.power.PowerManagerService,int,int|
|com.android.server.power.PowerManagerService| |access$5500| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5200| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$4800| |com.android.server.power.PowerManagerService,float|
|com.android.server.power.PowerManagerService| |access$4700| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5400| |com.android.server.power.PowerManagerService,long|
|com.android.server.power.PowerManagerService| |access$3700| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |userActivityFromNative| |long,int,int|
|com.android.server.power.PowerManagerService| |access$3800| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.display.AutomaticBrightnessController| |access$200| |com.android.server.display.AutomaticBrightnessController,long,float|
|com.android.server.display.AutomaticBrightnessController| |access$000| |com.android.server.display.AutomaticBrightnessController|
|android.app.IActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationCallbacksLocked| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.WindowManagerService| |assignLayersLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.wm.WindowManagerService$LocalService| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.WindowState| |reportResized| ||
|com.android.server.wm.WindowStateAnimator| |applyEnterAnimationLocked| ||
|com.android.server.InputMethodManagerService| |startInputLocked| |com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.internal.policy.impl.PhoneWindow| |onOptionsPanelRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.KeyEvent|
|com.android.server.InputMethodManagerService| |access$1100| |com.android.server.InputMethodManagerService|
|com.android.server.InputMethodManagerService| |access$1000| |com.android.server.InputMethodManagerService,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.InputMethodManagerService| |<init>| |android.content.Context,com.android.server.wm.WindowManagerService|
|android.service.wallpaper.WallpaperService$Engine| |attach| |android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper|
|android.service.wallpaper.WallpaperService$Engine| |doDisplayPaddingChanged| |android.graphics.Rect|
|android.service.wallpaper.WallpaperService$Engine| |reportVisibility| ||
|android.service.wallpaper.WallpaperService$Engine| |setOffsetNotificationsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |setTouchEventsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper| |executeMessage| |android.os.Message|
|android.view.WindowManagerGlobal| |addView| |android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window|
|android.app.IBackupAgent$Stub$Proxy| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.server.power.PowerManagerService$BatteryReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |scheduleSandmanLocked| ||
|com.android.server.power.PowerManagerService| |updateScreenBrightnessBoostLocked| |int|
|com.android.server.power.PowerManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.power.PowerManagerService$UserSwitchedReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |updateUserActivitySummaryLocked| |long,int|
|com.android.server.power.PowerManagerService| |access$2700| |com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |access$3300| |com.android.server.power.PowerManagerService,android.os.IBinder,int|
|com.android.server.power.PowerManagerService$LocalService| |setDozeOverrideFromDreamManager| |int,int|
|com.android.server.power.PowerManagerService$LocalService| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|com.android.server.power.PowerManagerService$LocalService| |setScreenBrightnessOverrideFromWindowManager| |int|
|com.android.server.power.PowerManagerService$LocalService| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|com.android.server.display.AutomaticBrightnessController$1| |onSensorChanged| |android.hardware.SensorEvent|
|android.app.ActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|android.view.WindowManagerInternal| |setMagnificationSpec| |android.view.MagnificationSpec|
|android.view.WindowManagerInternal| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher| |dispatchRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUpPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanelsAfterRestore| ||
|com.android.internal.policy.impl.PhoneWindow| |reopenMenu| |boolean|
|com.android.internal.policy.impl.PhoneWindow| |togglePanel| |int,android.view.KeyEvent|
|com.android.server.InputMethodManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$3| |onUserSwitching| |int,android.os.IRemoteCallback|
|android.service.wallpaper.WallpaperService$Engine$3| |onDisplayChanged| |int|
|android.service.wallpaper.WallpaperService$Engine| |doVisibilityChanged| |boolean|
|android.view.WindowManagerImpl| |addView| |android.view.View,android.view.ViewGroup$LayoutParams|
|android.app.IBackupAgent$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IBackupAgent| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.server.power.PowerManagerService| |access$2000| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |updateDreamLocked| |int,boolean|
|com.android.server.power.PowerManagerService$WakeLock| |binderDied| ||
|android.os.PowerManagerInternal| |setDozeOverrideFromDreamManager| |int,int|
|android.os.PowerManagerInternal| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|android.os.PowerManagerInternal| |setScreenBrightnessOverrideFromWindowManager| |int|
|android.os.PowerManagerInternal| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|android.view.WindowManagerInternal| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.accessibility.AccessibilityManagerService| |updateWindowsForAccessibilityCallbackLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher$1| |run| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUp| |int,int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |access$2200| |com.android.internal.policy.impl.PhoneWindow|
|com.android.internal.policy.impl.PhoneWindow| |onConfigurationChanged| |android.content.res.Configuration|
|com.android.internal.policy.impl.PhoneWindow| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.app.IUserSwitchObserver$Stub$Proxy| |onUserSwitching| |int,android.os.IRemoteCallback|
|android.app.backup.BackupAgent$BackupServiceBinder| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreFileRunnable| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable| |run| ||
|com.android.server.power.PowerManagerService$DreamReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.dreams.DreamManagerService| |startDozingInternal| |android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |stopDozingInternal| |android.os.IBinder|
|com.android.server.accessibility.ScreenMagnifier| |<init>| |android.content.Context,int,com.android.server.accessibility.AccessibilityManagerService|
|com.android.server.accessibility.ScreenMagnifier| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |offsetMagnifiedRegionCenter| |float,float|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |reset| |boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScaleAndMagnifiedRegionCenter| |float,float,float,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |onUserStateChangedLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |dispatchKeyEvent| |android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |onAttachedToWindow| ||
|com.android.internal.view.menu.MenuBuilder$Callback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|com.android.server.dreams.DreamManagerService| |access$1800| |com.android.server.dreams.DreamManagerService,android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |access$1900| |com.android.server.dreams.DreamManagerService,android.os.IBinder|
|com.android.server.accessibility.AccessibilityInputFilter| |enableFeatures| ||
|com.android.server.accessibility.AccessibilityInputFilter| |disableFeatures| ||
|com.android.server.accessibility.EventStreamTransformation| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScroll| |android.view.MotionEvent,android.view.MotionEvent,float,float|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRectangleOnScreenRequested| |int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |handleOnScreenStateChange| |java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |resetMagnificationIfNeeded| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTapAndHold| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnifiedRegionCenter| |float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScale| |float,float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier| |handleOnMagnifiedBoundsChanged| |android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService| |access$500| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |ensureWindowsAvailableTimed| ||
|com.android.server.accessibility.AccessibilityManagerService| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |switchUser| |int|
|com.android.server.accessibility.AccessibilityManagerService| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuView$MenuBuilderCallback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|com.android.internal.view.menu.MenuBuilder| |changeMenuMode| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onInstalled| ||
|com.android.server.accessibility.AccessibilityInputFilter| |setEnabledFeatures| |int|
|com.android.server.accessibility.AccessibilityInputFilter| |onUninstalled| ||
|com.android.server.accessibility.AccessibilityManagerService| |updateInputFilter| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |access$100| |com.android.server.accessibility.ScreenMagnifier,int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |access$2900| |com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver,java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |access$600| |com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRotationChanged| |int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnUserContextChanged| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1700| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScale| |android.view.ScaleGestureDetector|
|com.android.server.accessibility.ScreenMagnifier| |access$000| |com.android.server.accessibility.ScreenMagnifier,android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$1| |onSomePackagesChanged| ||
|com.android.server.accessibility.AccessibilityManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$4| |onClick| |android.content.DialogInterface,int|
|com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.accessibility.AccessibilityManagerService$Service| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accessibility.AccessibilityManagerService| |access$3300| |com.android.server.accessibility.AccessibilityManagerService|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager$Stub| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |access$800| |com.android.server.accessibility.AccessibilityManagerService,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.view.accessibility.IAccessibilityManager$Stub| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuPresenter$OpenOverflowRunnable| |run| ||
|com.android.internal.view.menu.ContextMenuBuilder| |changeMenuMode| ||
|com.android.internal.view.menu.IconMenuView$1| |onClick| |android.view.View|
|com.android.internal.view.menu.SubMenuBuilder| |changeMenuMode| ||
|com.android.server.accessibility.AccessibilityManagerService| |access$2100| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |access$300| |com.android.server.accessibility.ScreenMagnifier,int|
|com.android.server.accessibility.ScreenMagnifier| |access$200| |com.android.server.accessibility.ScreenMagnifier|
|com.android.internal.content.PackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.content.PackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$UserState$1| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$UserState| |onSwitchToAnotherUser| ||
|com.android.server.accessibility.AccessibilityManagerService| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.accessibility.AccessibilityManagerService$Service$2| |run| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindow| |int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindows| ||
|android.view.accessibility.IAccessibilityManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.IAccessibilityManager| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|com.android.server.accessibility.EventStreamTransformation| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |sendDelayedMotionEvents| ||
|com.android.server.accessibility.ScreenMagnifier| |onUserContextChanged| ||
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.app.ResolverActivity$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.LocationManagerService$4| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.ServiceWatcher$2| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.trust.TrustManagerService$3| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.tv.TvInputManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.app.ResolverActivity$1| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.LocationManagerService$4| |onPackageRemoved| |java.lang.String,int|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.trust.TrustManagerService$3| |onPackageRemoved| |java.lang.String,int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.view.accessibility.IAccessibilityManager$Stub| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindows| ||
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindows| ||
|com.android.server.accessibility.AccessibilityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomationConnection| |registerUiTestAutomationServiceLocked| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |enableAccessibility| ||
|com.android.server.accessibility.AccessibilityInputFilter| |handleMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleMotionEventStateDelegating| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendMotionEvent| |android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1800| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |transitionToDelegatingStateAndClear| ||
|android.view.accessibility.IAccessibilityManager| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindows| ||
|android.app.UiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |access$200| |com.android.internal.policy.impl.EnableAccessibilityController|
|com.android.server.accessibility.AccessibilityInputFilter| |processBatchedEvents| |long|
|com.android.server.accessibility.TouchExplorer| |access$2800| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDelegating| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDragging| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateTouchExploring| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendActionDownAndUp| |android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |sendDownForAllNotInjectedPointers| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendHoverExitAndTouchExplorationGestureEndIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendTouchExplorationGestureStartAndHoverEnterIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendUpForInjectedDownPointers| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |unregisterUiTestAutomationServiceLocked| ||
|android.view.accessibility.AccessibilityInteractionClient| |getWindow| |int,int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.AccessibilityInteractionClient| |getWindows| |int|
|android.app.IUiAutomationConnection$Stub$Proxy| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|android.app.IUiAutomationConnection$Stub| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |onInterceptTouchEvent| |android.view.MotionEvent|
|com.android.server.accessibility.AccessibilityInputFilter| |access$100| |com.android.server.accessibility.AccessibilityInputFilter,long|
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$1700| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |access$2600| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$2400| |com.android.server.accessibility.TouchExplorer,int|
|com.android.server.accessibility.TouchExplorer| |clear| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |disconnect| ||
|android.view.accessibility.AccessibilityNodeInfo| |getWindow| ||
|android.view.accessibility.AccessibilityWindowInfo| |getChild| |int|
|android.view.accessibility.AccessibilityWindowInfo| |getParent| ||
|android.accessibilityservice.AccessibilityService| |getWindows| ||
|android.app.UiAutomation| |getWindows| ||
|android.app.IUiAutomationConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IUiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |dispatchTouchEvent| |android.view.MotionEvent|
|com.android.server.accessibility.AccessibilityInputFilter$1| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onDoubleTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |clear| ||
|com.android.server.accessibility.TouchExplorer| |handleMotionEventGestureDetecting| |android.view.MotionEvent,int|
|android.app.IUiAutomationConnection$Stub$Proxy| |disconnect| ||
|android.app.IUiAutomationConnection$Stub| |disconnect| ||
|android.app.UiAutomationConnection| |shutdown| ||
|android.app.UiAutomationConnection| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomation| |connect| ||
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.EventStreamTransformation| |clear| ||
|com.android.server.accessibility.TouchExplorer$ExitGestureDetectionModeDelayed| |run| ||
|android.app.IUiAutomationConnection| |disconnect| ||
|android.app.IUiAutomationConnection$Stub$Proxy| |shutdown| ||
|android.app.IUiAutomationConnection$Stub| |shutdown| ||
|android.app.Instrumentation| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetworkViews| |setup| ||
|com.android.uiautomator.core.UiAutomationShellWrapper| |connect| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |clear| ||
|android.app.UiAutomation| |disconnect| ||
|android.app.IUiAutomationConnection| |shutdown| ||
|android.test.InstrumentationCoreTestRunner| |getUiAutomation| ||
|android.test.InstrumentationTestRunner| |getUiAutomation| ||
|android.test.LaunchPerformanceBase| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetwork| |startServer| ||
|com.android.commands.uiautomator.DumpCommand| |run| |java.lang.String[]|
|com.android.commands.uiautomator.EventsCommand| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |start| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onInputEvent| |android.view.InputEvent,int|
|android.app.Instrumentation| |finish| |int,android.os.Bundle|
|com.android.uiautomator.core.UiAutomationShellWrapper| |disconnect| ||
|com.android.commands.monkey.MonkeySourceNetwork| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher$Command| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |run| |java.util.List,android.os.Bundle,boolean,boolean|
|android.test.InstrumentationCoreTestRunner| |finish| |int,android.os.Bundle|
|android.test.InstrumentationTestRunner| |finish| |int,android.os.Bundle|
|android.test.LaunchPerformanceBase| |finish| |int,android.os.Bundle|
|com.android.commands.monkey.MonkeyEventSource| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher| |main| |java.lang.String[]|
|com.android.commands.uiautomator.RunTestCommand| |run| |java.lang.String[]|
|android.test.InstrumentationTestRunner| |onStart| ||
|com.android.commands.monkey.Monkey| |runMonkeyCycles| ||
|android.test.InstrumentationCoreTestRunner| |onStart| ||
|com.android.server.net.NetworkPolicyManagerService| |getNetworkPolicies| ||
|android.net.INetworkPolicyManager$Stub$Proxy| |getNetworkPolicies| ||
|android.net.INetworkPolicyManager$Stub| |getNetworkPolicies| ||
|com.android.server.net.NetworkPolicyManagerService| |normalizePoliciesLocked| ||
|android.net.INetworkPolicyManager| |getNetworkPolicies| ||
|com.android.server.net.NetworkPolicyManagerService| |access$200| |com.android.server.net.NetworkPolicyManagerService|
|com.android.server.net.NetworkPolicyManagerService| |updateRulesForGlobalChangeLocked| |boolean|
|android.net.NetworkPolicyManager| |getNetworkPolicies| ||
|com.android.server.net.NetworkPolicyManagerService$1| |onLowPowerModeChanged| |boolean|
|com.android.server.net.NetworkPolicyManagerService$6| |onReceive| |android.content.Context,android.content.Intent|
|android.provider.Browser| |deleteFromHistory| |android.content.ContentResolver,java.lang.String|
|android.provider.Browser| |clearSearches| |android.content.ContentResolver|
|android.provider.Browser| |deleteHistoryWhere| |android.content.ContentResolver,java.lang.String|
|android.provider.Browser| |clearHistory| |android.content.ContentResolver|
|android.provider.Browser| |deleteHistoryTimeFrame| |android.content.ContentResolver,long,long|
|android.provider.Browser| |truncateHistory| |android.content.ContentResolver|
|android.provider.Browser| |updateVisitedHistory| |android.content.ContentResolver,java.lang.String,boolean|
|android.provider.BrowserContract$SyncState| |newSetOperation| |android.accounts.Account,byte[]|
|android.provider.BrowserContract$Bookmarks| |buildFolderUri| |long|
|android.provider.Browser| |addSearchUrl| |android.content.ContentResolver,java.lang.String|
|android.provider.BrowserContract$Settings| |setSyncEnabled| |android.content.Context,boolean|
|com.android.server.LockSettingsService| |checkReadPermission| |java.lang.String,int|
|com.android.server.LockSettingsService| |getBoolean| |java.lang.String,boolean,int|
|com.android.server.LockSettingsService| |getString| |java.lang.String,java.lang.String,int|
|com.android.server.LockSettingsService| |getLong| |java.lang.String,long,int|
|com.android.internal.widget.ILockSettings$Stub$Proxy| |getBoolean| |java.lang.String,boolean,int|
|com.android.internal.widget.ILockSettings$Stub| |getBoolean| |java.lang.String,boolean,int|
|com.android.internal.widget.ILockSettings$Stub$Proxy| |getString| |java.lang.String,java.lang.String,int|
|com.android.internal.widget.ILockSettings$Stub| |getString| |java.lang.String,java.lang.String,int|
|com.android.server.LockSettingsService| |migrateOldData| ||
|com.android.internal.widget.ILockSettings$Stub$Proxy| |getLong| |java.lang.String,long,int|
|com.android.internal.widget.ILockSettings$Stub| |getLong| |java.lang.String,long,int|
|com.android.internal.widget.ILockSettings| |getBoolean| |java.lang.String,boolean,int|
|com.android.internal.widget.ILockSettings$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.widget.ILockSettings| |getString| |java.lang.String,java.lang.String,int|
|com.android.server.LockSettingsService| |systemReady| ||
|com.android.internal.widget.ILockSettings| |getLong| |java.lang.String,long,int|
|com.android.internal.widget.LockPatternUtils| |getBoolean| |java.lang.String,boolean,int|
|com.android.server.LockSettingsService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.provider.Settings$Secure| |getStringForUser| |android.content.ContentResolver,java.lang.String,int|
|com.android.internal.widget.LockPatternUtils| |getString| |java.lang.String,int|
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.internal.widget.LockPatternUtils| |getLong| |java.lang.String,long,int|
|com.android.internal.widget.LockPatternUtils| |getLong| |java.lang.String,long|
|com.android.internal.widget.LockPatternUtils| |getBoolean| |java.lang.String,boolean|
|com.android.internal.widget.LockPatternUtils| |getWidgetsEnabled| |int|
|com.android.internal.widget.LockPatternUtils| |isLockPatternEnabled| |int|
|android.media.MediaFocusControl| |onReevaluateRemoteControlDisplays| ||
|android.media.tv.TvInputInfo$TvInputSettings| |getCustomLabels| |android.content.Context,int|
|android.media.tv.TvInputInfo$TvInputSettings| |getHiddenTvInputIds| |android.content.Context,int|
|android.provider.Settings$Global| |getStringForUser| |android.content.ContentResolver,java.lang.String,int|
|android.provider.Settings$Secure| |isLocationProviderEnabledForUser| |android.content.ContentResolver,java.lang.String,int|
|android.provider.Settings$Secure| |getFloatForUser| |android.content.ContentResolver,java.lang.String,float,int|
|android.provider.Settings$Secure| |getFloatForUser| |android.content.ContentResolver,java.lang.String,int|
|android.provider.Settings$Secure| |getIntForUser| |android.content.ContentResolver,java.lang.String,int,int|
|android.provider.Settings$Secure| |getIntForUser| |android.content.ContentResolver,java.lang.String,int|
|android.provider.Settings$Secure| |getString| |android.content.ContentResolver,java.lang.String|
|android.provider.Settings$Secure| |getLongForUser| |android.content.ContentResolver,java.lang.String,int|
|android.provider.Settings$Secure| |getLongForUser| |android.content.ContentResolver,java.lang.String,long,int|
|android.provider.Settings$System| |getStringForUser| |android.content.ContentResolver,java.lang.String,int|
|android.service.fingerprint.FingerprintUtils| |getFingerprintIdsForUser| |android.content.ContentResolver,int|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getDisabledSystemInputMethods| ||
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getEnabledInputMethodsStr| ||
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getSelectedInputMethod| ||
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getSubtypeHistoryStr| ||
|com.android.internal.policy.impl.ImmersiveModeConfirmation| |loadSetting| |int|
|com.android.internal.policy.impl.PhoneWindowManager| |updateSettings| ||
|com.android.internal.telephony.SmsApplication| |getApplication| |android.content.Context,boolean,int|
|com.android.internal.telephony.SmsApplication| |setDefaultApplicationInternal| |java.lang.String,android.content.Context,int|
|com.android.internal.widget.LockPatternUtils| |getAppWidgets| |int|
|com.android.nfc.cardemulation.CardEmulationManager| |getDefaultServiceForCategory| |int,java.lang.String,boolean|
|com.android.nfc.cardemulation.PreferredServices| |loadDefaultsFromSettings| |int|
|com.android.server.accessibility.AccessibilityManagerService| |readComponentNamesFromSettingLocked| |java.lang.String,int,java.util.Set|
|com.android.server.dreams.DreamManagerService| |getDefaultDreamComponentForUser| |int|
|com.android.server.dreams.DreamManagerService| |getDreamComponentsForUser| |int|
|com.android.server.location.LocationBlacklist| |getStringArrayLocked| |java.lang.String|
|com.android.server.media.MediaSessionService| |isEnabledNotificationListener| |android.content.ComponentName,int,int|
|com.android.server.notification.ManagedServices| |disableNonexistentServices| |int|
|com.android.server.notification.ManagedServices| |rebindServices| ||
|com.android.server.notification.ZenModeHelper| |isDefaultMessagingApp| |com.android.server.notification.NotificationRecord|
|com.android.server.print.UserState| |enableSystemPrintServicesLocked| ||
|com.android.server.print.UserState| |readPrintServicesFromSettingLocked| |java.lang.String,java.util.Set|
|com.android.server.TextServicesManagerService$TextServicesSettings| |getSelectedSpellCheckerSubtype| ||
|com.android.server.TextServicesManagerService$TextServicesSettings| |getSelectedSpellChecker| ||
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |getCurInteractor| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |getCurRecognizer| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |initForUser| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |switchImplementationIfNeededLocked| |boolean|
|com.android.internal.widget.LockPatternUtils| |getString| |java.lang.String|
|com.android.internal.widget.LockPatternUtils| |getEnabledTrustAgents| |int|
|com.android.internal.widget.LockPatternUtils| |saveLockPassword| |java.lang.String,int,boolean,int|
|com.android.server.SystemServer| |run| ||
|com.android.internal.widget.LockPatternUtils| |usingBiometricWeak| |int|
|com.android.internal.widget.LockPatternUtils| |getKeyguardStoredPasswordQuality| |int|
|com.android.internal.widget.LockPatternUtils| |getSalt| |int|
|com.android.internal.widget.LockPatternUtils| |isBiometricWeakLivelinessEnabled| ||
|com.android.internal.widget.LockPatternUtils| |isLockPasswordEnabled| ||
|com.android.internal.widget.LockPatternUtils| |isLockScreenDisabled| ||
|com.android.internal.widget.LockPatternUtils| |getActivePasswordQuality| ||
|com.android.internal.widget.LockPatternUtils| |getLockoutAttemptDeadline| ||
|com.android.internal.widget.LockPatternUtils| |setBiometricWeakLivelinessEnabled| |boolean|
|com.android.internal.widget.LockPatternUtils| |getPowerButtonInstantlyLocks| ||
|com.android.internal.widget.LockPatternUtils| |isBiometricWeakEverChosen| ||
|com.android.internal.widget.LockPatternUtils| |isOwnerInfoEnabled| ||
|com.android.internal.widget.LockPatternUtils| |isPatternEverChosen| ||
|com.android.internal.widget.LockPatternUtils| |isPermanentlyLocked| ||
|com.android.internal.widget.LockPatternUtils| |isVisiblePatternEnabled| ||
|com.android.internal.widget.LockPatternUtils| |getWidgetsEnabled| ||
|com.android.internal.widget.LockPatternUtils| |isLockPatternEnabled| ||
|com.android.internal.widget.LockPatternUtils| |isSecure| |int|
|android.media.MediaFocusControl| |access$1400| |android.media.MediaFocusControl|
|android.media.tv.TvInputInfo$TvInputSettings| |getCustomLabel| |android.content.Context,java.lang.String,int|
|android.media.tv.TvInputInfo$TvInputSettings| |isHidden| |android.content.Context,java.lang.String,int|
|android.provider.Settings$Global| |getString| |android.content.ContentResolver,java.lang.String|
|com.android.internal.policy.impl.PolicyControl| |reloadFromSetting| |android.content.Context|
|android.provider.Settings$Secure| |isLocationProviderEnabled| |android.content.ContentResolver,java.lang.String|
|android.provider.Settings$Secure| |getLocationModeForUser| |android.content.ContentResolver,int|
|com.android.server.LocationManagerService| |isAllowedByCurrentUserSettingsLocked| |java.lang.String|
|android.provider.Settings$Secure| |getFloat| |android.content.ContentResolver,java.lang.String,float|
|android.provider.Settings$Secure| |getFloat| |android.content.ContentResolver,java.lang.String|
|android.inputmethodservice.KeyboardView| |sendAccessibilityEventForUnicodeCharacter| |int,int|
|android.media.AudioService| |readAudioSettings| |boolean|
|android.media.AudioService$VolumeController| |loadSettings| |android.content.ContentResolver|
|android.provider.Settings$Secure| |getInt| |android.content.ContentResolver,java.lang.String,int|
|android.service.dreams.Sandman| |isScreenSaverActivatedOnDock| |android.content.Context|
|android.service.dreams.Sandman| |isScreenSaverEnabled| |android.content.Context|
|android.widget.TextView| |shouldSpeakPasswordsForAccessibility| ||
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |isShowImeWithHardKeyboardEnabled| ||
|com.android.internal.policy.impl.PhoneWindowManager| |isUserSetupComplete| ||
|com.android.internal.widget.LockPatternUtils| |getFallbackAppWidgetId| ||
|com.android.server.accessibility.AccessibilityManagerService| |readAccessibilityEnabledSettingLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |readDisplayMagnificationEnabledSettingLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |readEnhancedWebAccessibilityEnabledChangedLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |readHighTextContrastEnabledSettingLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |readTouchExplorationEnabledSettingLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.DisplayAdjustmentUtils| |hasAdjustments| |android.content.Context,int|
|com.android.server.accessibility.DisplayAdjustmentUtils| |applyAdjustments| |android.content.Context,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |updateUserSetupComplete| ||
|com.android.server.dreams.DreamManagerService| |getDozeComponent| |int|
|com.android.server.power.PowerManagerService| |updateSettingsLocked| ||
|com.android.server.TextServicesManagerService$TextServicesSettings| |isSpellCheckerEnabled| ||
|com.android.server.trust.TrustManagerService| |maybeEnableFactoryTrustAgents| |com.android.internal.widget.LockPatternUtils,int|
|com.android.server.wm.WindowManagerService| |updateCircularDisplayMaskIfNeeded| ||
|com.android.server.wm.WindowManagerService| |updateShowImeWithHardKeyboard| ||
|android.provider.Settings$Secure| |getInt| |android.content.ContentResolver,java.lang.String|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getSelectedInputMethodSubtypeHashCode| ||
|android.nfc.cardemulation.CardEmulation| |getSelectionModeForCategory| |java.lang.String|
|android.service.voice.VoiceInteractionService| |isActiveService| |android.content.Context,android.content.ComponentName|
|android.speech.SpeechRecognizer| |startListening| |android.content.Intent|
|android.speech.tts.TtsEngines| |isLocaleSetToDefaultForEngine| |java.lang.String|
|android.speech.tts.TtsEngines| |getDefaultEngine| ||
|android.speech.tts.TtsEngines| |getLocalePrefForEngine| |java.lang.String|
|android.speech.tts.TtsEngines| |updateLocalePrefForEngine| |java.lang.String,java.util.Locale|
|android.view.accessibility.CaptioningManager$CaptionStyle| |getCustomStyle| |android.content.ContentResolver|
|android.view.accessibility.CaptioningManager| |getRawLocale| ||
|com.android.server.am.CoreSettingsObserver| |populateSettings| |android.os.Bundle,java.util.Map|
|com.android.server.backup.BackupManagerService| |<init>| |android.content.Context,com.android.server.backup.Trampoline|
|com.android.server.BluetoothManagerService| |loadStoredNameAndAddress| ||
|com.android.server.BluetoothManagerService| |storeNameAndAddress| |java.lang.String,java.lang.String|
|com.android.server.CertBlacklister$BlacklistObserver| |getValue| ||
|com.android.server.location.LocationFudger| |loadCoarseAccuracy| ||
|com.android.server.search.Searchables| |getGlobalSearchProviderSetting| ||
|com.android.server.updates.ConfigUpdateInstallReceiver| |getCert| |android.content.ContentResolver|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |getPersistedDeviceName| ||
|android.provider.Settings$Secure| |getLong| |android.content.ContentResolver,java.lang.String|
|android.provider.Settings$Secure| |getLong| |android.content.ContentResolver,java.lang.String,long|
|android.provider.Settings$System| |getFloatForUser| |android.content.ContentResolver,java.lang.String,float,int|
|android.provider.Settings$System| |getFloatForUser| |android.content.ContentResolver,java.lang.String,int|
|android.provider.Settings$System| |getIntForUser| |android.content.ContentResolver,java.lang.String,int,int|
|android.provider.Settings$System| |getIntForUser| |android.content.ContentResolver,java.lang.String,int|
|android.provider.Settings$System| |getString| |android.content.ContentResolver,java.lang.String|
|android.provider.Settings$System| |getLongForUser| |android.content.ContentResolver,java.lang.String,int|
|android.provider.Settings$System| |getLongForUser| |android.content.ContentResolver,java.lang.String,long,int|
|android.text.format.DateFormat| |is24HourFormat| |android.content.Context,int|
|android.service.fingerprint.FingerprintManager| |enrolledAndEnabled| ||
|android.service.fingerprint.FingerprintUtils| |removeFingerprintIdForUser| |int,android.content.ContentResolver,int|
|android.service.fingerprint.FingerprintUtils| |addFingerprintIdForUser| |int,android.content.ContentResolver,int|
|com.android.server.InputMethodManagerService| |buildInputMethodListLocked| |java.util.ArrayList,java.util.HashMap,boolean|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getEnabledInputMethodsAndSubtypeListLocked| ||
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |appendAndPutEnabledInputMethodLocked| |java.lang.String,boolean|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |enableAllIMEsIfThereIsNoEnabledIME| ||
|com.android.server.InputMethodManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.InputMethodManagerService| |setInputMethodEnabledLocked| |java.lang.String,boolean|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.InputMethodManagerService| |<init>| |android.content.Context,com.android.server.wm.WindowManagerService|
|com.android.server.InputMethodManagerService| |resetAllInternalStateLocked| |boolean,boolean|
|com.android.server.InputMethodManagerService| |showInputMethodMenuInternal| |boolean|
|com.android.server.InputMethodManagerService| |switchUserLocked| |int|
|com.android.server.InputMethodManagerService| |updateInputMethodsFromSettingsLocked| |boolean|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |loadInputMethodAndSubtypeHistoryLocked| ||
|com.android.internal.policy.impl.PhoneWindowManager$21| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver| |observe| ||
|com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver| |onChange| |boolean|
|com.android.internal.widget.LockPatternUtils| |hasWidgetsEnabledInKeyguard| |int|
|com.android.internal.widget.LockPatternUtils| |getAppWidgets| ||
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager| |verifyDefaults| |int,java.util.List|
|com.android.nfc.cardemulation.PreferredServices$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.nfc.cardemulation.PreferredServices| |<init>| |android.content.Context,com.android.nfc.cardemulation.RegisteredServicesCache,com.android.nfc.cardemulation.RegisteredAidCache,com.android.nfc.cardemulation.PreferredServices$Callback|
|com.android.nfc.cardemulation.PreferredServices| |onUserSwitched| |int|
|com.android.server.accessibility.AccessibilityManagerService| |readEnabledAccessibilityServicesLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |readTouchExplorationGrantedAccessibilityServicesLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.dreams.DreamManagerService| |access$1200| |com.android.server.dreams.DreamManagerService,int|
|com.android.server.dreams.DreamManagerService| |access$1000| |com.android.server.dreams.DreamManagerService,int|
|com.android.server.dreams.DreamManagerService| |chooseDreamForUser| |boolean,int|
|com.android.server.location.LocationBlacklist| |reloadBlacklistLocked| ||
|com.android.server.media.MediaSessionService| |enforceMediaPermissions| |android.content.ComponentName,int,int,int|
|com.android.server.notification.ConditionProviders| |disableNonexistentServices| |int|
|com.android.server.notification.ManagedServices| |disableNonexistentServices| ||
|com.android.server.notification.NotificationManagerService$NotificationListeners| |disableNonexistentServices| |int|
|com.android.server.notification.ConditionProviders| |rebindServices| ||
|com.android.server.notification.ManagedServices| |access$600| |com.android.server.notification.ManagedServices|
|com.android.server.notification.ManagedServices| |onPackagesChanged| |boolean,java.lang.String[]|
|com.android.server.notification.ManagedServices| |onUserSwitched| ||
|com.android.server.notification.NotificationManagerService$NotificationListeners| |rebindServices| ||
|com.android.server.notification.ZenModeHelper| |isMessage| |com.android.server.notification.NotificationRecord|
|com.android.server.print.UserState| |<init>| |android.content.Context,int,java.lang.Object|
|com.android.server.print.UserState| |readEnabledPrintServicesLocked| ||
|com.android.server.TextServicesManagerService| |getCurrentSpellCheckerSubtype| |java.lang.String,boolean|
|com.android.server.TextServicesManagerService| |getCurrentSpellCheckerWithoutVerification| ||
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onSomePackagesChanged| ||
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |onStartUser| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver| |onChange| |boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |switchUser| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |systemRunning| |boolean|
|com.android.internal.widget.LockPatternUtils| |checkPasswordHistory| |java.lang.String|
|com.android.internal.widget.LockPatternUtils| |getOwnerInfo| |int|
|com.android.internal.widget.LockPatternUtils| |getEnabledTrustAgents| ||
|com.android.server.trust.TrustManagerService| |refreshAgentList| |int|
|com.android.internal.widget.LockPatternUtils| |clearLock| |boolean,int|
|com.android.internal.widget.LockPatternUtils| |saveLockPassword| |java.lang.String,int,boolean|
|com.android.internal.widget.LockPatternUtils| |saveLockPassword| |java.lang.String,int|
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.internal.widget.LockPatternUtils| |usingBiometricWeak| ||
|com.android.internal.widget.LockPatternUtils| |deleteGallery| |int|
|com.android.internal.widget.LockPatternUtils| |getKeyguardStoredPasswordQuality| ||
|com.android.internal.widget.LockPatternUtils| |passwordToHash| |java.lang.String,int|
|com.android.server.LockSettingsService| |checkVoldPassword| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |loadSettingsLocked| |com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData,int|
|com.android.internal.widget.LockPatternUtils| |updateCryptoUserInfo| ||
|com.android.internal.widget.LockPatternUtils| |isSecure| ||
|com.android.server.trust.TrustManagerService| |refreshDeviceLockedForUser| |int|
|android.media.tv.TvInputInfo$TvInputSettings| |access$100| |android.content.Context,java.lang.String,int|
|android.media.tv.TvInputInfo$TvInputSettings| |access$000| |android.content.Context,java.lang.String,int|
|android.net.DnsPinger| |getDefaultDns| ||
|android.net.NetworkScorerAppManager| |getActiveScorer| |android.content.Context|
|android.net.NetworkScorerAppManager| |setActiveScorer| |android.content.Context,java.lang.String|
|android.provider.Settings$Global| |getFloat| |android.content.ContentResolver,java.lang.String,float|
|android.provider.Settings$Global| |getFloat| |android.content.ContentResolver,java.lang.String|
|android.provider.Settings$Global| |getInt| |android.content.ContentResolver,java.lang.String,int|
|android.provider.Settings$Global| |getInt| |android.content.ContentResolver,java.lang.String|
|android.provider.Settings$Global| |getLong| |android.content.ContentResolver,java.lang.String,long|
|android.provider.Settings$Global| |getLong| |android.content.ContentResolver,java.lang.String|
|android.telephony.TelephonyManager| |putIntAtIndex| |android.content.ContentResolver,java.lang.String,int,int|
|android.telephony.TelephonyManager| |getIntAtIndex| |android.content.ContentResolver,java.lang.String,int|
|android.util.NtpTrustedTime| |getInstance| |android.content.Context|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |fetchDunApn| ||
|com.android.server.am.ActivityManagerService| |retrieveSettings| ||
|com.android.server.BatteryService| |logOutlierLocked| |long|
|com.android.server.BluetoothManagerService| |registerForAirplaneMode| |android.content.IntentFilter|
|com.android.server.connectivity.PacManager| |getPacChangeDelay| ||
|com.android.server.display.OverlayDisplayAdapter| |updateOverlayDisplayDevicesLocked| ||
|com.android.server.DockObserver| |handleDockStateChange| ||
|com.android.server.power.Notifier| |playWirelessChargingStartedSound| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |initializeP2pSettings| ||
|com.android.server.wifi.WifiSettingsStore| |isAirplaneSensitive| ||
|com.android.server.wifi.WifiSettingsStore| |isAirplaneToggleable| ||
|com.android.server.wifi.WifiStateMachine| |setCountryCode| ||
|com.android.server.wm.WindowManagerService| |readForcedDisplaySizeAndDensityLocked| |com.android.server.wm.DisplayContent|
|com.android.server.LocationManagerService| |access$800| |com.android.server.LocationManagerService,java.lang.String|
|com.android.server.LocationManagerService| |isAllowedByUserSettingsLocked| |java.lang.String,int|
|com.android.server.LocationManagerService| |applyAllProviderRequirementsLocked| ||
|com.android.server.LocationManagerService| |handleLocationChanged| |android.location.Location,boolean|
|com.android.server.LocationManagerService| |removeUpdatesLocked| |com.android.server.LocationManagerService$Receiver|
|com.android.server.LocationManagerService| |updateProvidersLocked| ||
|android.view.accessibility.CaptioningManager| |getFontScale| ||
|com.android.server.accessibility.ScreenMagnifier| |getPersistedScale| ||
|android.inputmethodservice.KeyboardView| |showPreview| |int|
|com.android.internal.widget.PasswordEntryKeyboardView| |sendAccessibilityEventForUnicodeCharacter| |int,int|
|android.media.AudioService| |access$9400| |android.media.AudioService,boolean|
|android.media.AudioService| |reloadAudioSettings| ||
|android.media.AudioService| |readPersistedSettings| ||
|android.media.AudioService$AudioServiceBroadcastReceiver| |onReceive| |android.content.Context,android.content.Intent|
|android.speech.tts.TextToSpeechService| |getSecureSettingInt| |java.lang.String,int|
|android.view.accessibility.CaptioningManager| |isEnabled| ||
|android.view.accessibility.CaptioningManager| |getRawUserStyle| ||
|com.android.ims.ImsManager| |isNonTtyOrTtyOnVolteEnabled| |android.content.Context|
|com.android.internal.telephony.cdma.CDMAPhone| |getCellLocation| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |getImsService| ||
|com.android.internal.telephony.PhoneBase| |privatizeCellInfoList| |java.util.List|
|com.android.nfc.handover.BluetoothPeripheralHandover| |<init>| |android.content.Context,android.bluetooth.BluetoothDevice,java.lang.String,int,com.android.nfc.handover.BluetoothPeripheralHandover$Callback|
|com.android.nfc.NfcService| |applyRouting| |boolean|
|com.android.nfc.NfcService| |<init>| |android.app.Application|
|com.android.server.accessibility.ScreenMagnifier| |isScreenMagnificationAutoUpdateEnabled| |android.content.Context|
|com.android.server.am.ActivityManagerService| |appNotResponding| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.backup.BackupManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.location.GpsLocationProvider| |updateLowPowerMode| ||
|com.android.server.LocationManagerService| |checkMockPermissionsSafe| ||
|com.android.server.net.NetworkPolicyManagerService| |upgradeLegacyBackgroundData| ||
|com.android.server.UiModeManagerService| |onStart| ||
|com.android.server.am.ActivityManagerService| |crashApplication| |com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo|
|android.service.dreams.Sandman| |startDreamWhenDockedIfAppropriate| |android.content.Context|
|android.inputmethodservice.ExtractButton| |shouldSpeakPasswordsForAccessibility| ||
|android.inputmethodservice.ExtractEditText| |shouldSpeakPasswordsForAccessibility| ||
|android.media.ClosedCaptionWidget$CCLineBox| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.AutoCompleteTextView| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.Button| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.CheckBox| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.CheckedTextView| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.Chronometer| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.CompoundButton| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.DateTimeView| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.DigitalClock| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.EditText| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.MultiAutoCompleteTextView| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.NumberPicker$CustomEditText| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.RadioButton| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.SearchView$SearchAutoComplete| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.Switch| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.TextClock| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.TextView| |access$1200| |android.widget.TextView|
|android.widget.TextView| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.TextView| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.TextViewWithCircularIndicator| |shouldSpeakPasswordsForAccessibility| ||
|android.widget.ToggleButton| |shouldSpeakPasswordsForAccessibility| ||
|com.android.internal.view.menu.ActionMenuItemView| |shouldSpeakPasswordsForAccessibility| ||
|com.android.internal.view.menu.IconMenuItemView| |shouldSpeakPasswordsForAccessibility| ||
|com.android.internal.widget.DialogTitle| |shouldSpeakPasswordsForAccessibility| ||
|com.android.server.InputMethodManagerService| |updateKeyboardFromSettingsLocked| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemBarsLw| |android.view.WindowManagerPolicy$WindowState,int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |requestTransientBars| |android.view.WindowManagerPolicy$WindowState|
|com.android.server.accessibility.AccessibilityManagerService| |access$5200| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |readConfigurationForUserStateLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |access$5400| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |access$5700| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |access$6000| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |access$5300| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |readDisplayColorAdjustmentSettingsLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |updateDisplayColorAdjustmentSettingsLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.devicepolicy.DevicePolicyManagerService$SetupContentObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.devicepolicy.DevicePolicyManagerService| |systemReady| ||
|com.android.server.dreams.DreamManagerService| |getDozeComponent| ||
|com.android.server.power.PowerManagerService| |handleSettingsChangedLocked| ||
|com.android.server.power.PowerManagerService| |systemReady| |com.android.internal.app.IAppOpsService|
|com.android.server.trust.TrustManagerService| |access$2000| |com.android.server.trust.TrustManagerService,com.android.internal.widget.LockPatternUtils,int|
|com.android.server.trust.TrustManagerService| |onBootPhase| |int|
|com.android.server.wm.WindowManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean|
|android.nfc.cardemulation.CardEmulation| |categoryAllowsForegroundPreference| |java.lang.String|
|com.android.server.am.ActivityStackSupervisor| |setLockTaskModeLocked| |com.android.server.am.TaskRecord,boolean,java.lang.String|
|com.android.server.am.ActivityStackSupervisor| |endLockTaskModeIfTaskEnding| |com.android.server.am.TaskRecord|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |isSubtypeSelected| ||
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getSelectedInputMethodSubtypeId| |java.lang.String|
|android.speech.tts.TextToSpeech| |getDefaultEngine| ||
|android.speech.tts.TextToSpeechService| |getSettingsLocale| ||
|android.view.accessibility.CaptioningManager| |getUserStyle| ||
|com.android.internal.widget.SubtitleView| |setStyle| |int|
|android.view.accessibility.CaptioningManager| |getLocale| ||
|com.android.server.am.CoreSettingsObserver| |sendCoreSettings| ||
|com.android.server.backup.Trampoline| |initialize| |int|
|com.android.server.backup.Trampoline| |setBackupServiceActive| |int,boolean|
|com.android.server.BluetoothManagerService| |<init>| |android.content.Context|
|com.android.server.BluetoothManagerService| |access$100| |com.android.server.BluetoothManagerService,java.lang.String,java.lang.String|
|com.android.server.CertBlacklister$BlacklistObserver$1| |run| ||
|com.android.server.location.LocationFudger| |access$000| |com.android.server.location.LocationFudger|
|com.android.server.location.LocationFudger| |<init>| |android.content.Context,android.os.Handler|
|com.android.server.search.Searchables| |findGlobalSearchActivity| |java.util.List|
|com.android.server.updates.CarrierProvisioningUrlsInstallReceiver| |getCert| |android.content.ContentResolver|
|com.android.server.updates.CertPinInstallReceiver| |getCert| |android.content.ContentResolver|
|com.android.server.updates.ConfigUpdateInstallReceiver| |access$000| |com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver|
|com.android.server.updates.IntentFirewallInstallReceiver| |getCert| |android.content.ContentResolver|
|com.android.server.updates.SELinuxPolicyInstallReceiver| |getCert| |android.content.ContentResolver|
|com.android.server.updates.SmsShortCodesInstallReceiver| |getCert| |android.content.ContentResolver|
|com.android.server.updates.TZInfoInstallReceiver| |getCert| |android.content.ContentResolver|
|android.media.AudioService| |restoreMasterVolume| ||
|android.provider.Settings$System| |getFloat| |android.content.ContentResolver,java.lang.String,float|
|android.provider.Settings$System| |getConfigurationForUser| |android.content.ContentResolver,android.content.res.Configuration,int|
|android.provider.Settings$System| |getFloat| |android.content.ContentResolver,java.lang.String|
|android.media.AudioManager| |querySoundEffectsEnabled| |int|
|android.media.AudioService| |updateRingerModeAffectedStreams| ||
|android.media.AudioService$VolumeStreamState| |readSettings| ||
|android.provider.Settings$System| |getShowGTalkServiceStatusForUser| |android.content.ContentResolver,int|
|android.provider.Settings$System| |getInt| |android.content.ContentResolver,java.lang.String,int|
|com.android.internal.policy.impl.PhoneWindowManager| |performHapticFeedbackLw| |android.view.WindowManagerPolicy$WindowState,int,boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |getUserRotationMode| ||
|com.android.internal.policy.impl.PhoneWindowManager| |interceptKeyBeforeDispatching| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.view.RotationPolicy| |isRotationLocked| |android.content.Context|
|com.android.internal.view.RotationPolicy| |isRotationLockToggleVisible| |android.content.Context|
|com.android.internal.widget.LockPatternUtils| |isTactileFeedbackEnabled| ||
|com.android.internal.widget.multiwaveview.GlowPadView| |vibrate| ||
|com.android.internal.widget.RotarySelector| |vibrate| |long|
|com.android.internal.widget.SlidingTab| |vibrate| |long|
|com.android.internal.widget.WaveView| |vibrate| |long|
|android.provider.Settings$System| |getInt| |android.content.ContentResolver,java.lang.String|
|com.android.server.input.InputManagerService| |getPointerSpeedSetting| ||
|com.android.server.input.InputManagerService| |getShowTouchesSetting| |int|
|com.android.server.VibratorService| |updateInputDeviceVibrators| ||
|android.media.MediaScanner$MyMediaScannerClient| |setSettingIfNotSet| |java.lang.String,android.net.Uri,long|
|android.media.RingtoneManager| |getActualDefaultRingtoneUri| |android.content.Context,int|
|android.text.format.DateFormat| |getDateFormatString| |android.content.Context|
|android.text.format.DateFormat| |getDateFormat| |android.content.Context|
|android.widget.DateTimeView| |getDateFormat| ||
|com.android.nfc.NfcService| |registerForAirplaneMode| |android.content.IntentFilter|
|com.android.server.notification.NotificationManagerService| |buzzBeepBlinkLocked| |com.android.server.notification.NotificationRecord|
|android.provider.Settings$System| |getLong| |android.content.ContentResolver,java.lang.String|
|android.provider.Settings$System| |getLong| |android.content.ContentResolver,java.lang.String,long|
|android.service.notification.ZenModeConfig| |toTimeCondition| |android.content.Context,long,int,long,int|
|android.text.format.DateFormat| |is24HourFormat| |android.content.Context|
|android.text.format.DateFormat| |getTimeFormatString| |android.content.Context,int|
|android.widget.TextClock| |is24HourModeEnabled| ||
|com.android.server.AlarmManagerService| |formatNextAlarm| |android.content.Context,android.app.AlarmManager$AlarmClockInfo,int|
|com.android.server.fingerprint.FingerprintService| |handleNotify| |int,int,int|
|com.android.server.InputMethodManagerService| |systemRunning| |com.android.server.statusbar.StatusBarManagerService|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getLastSubtypeForInputMethodLockedInternal| |java.lang.String|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getEnabledInputMethodAndSubtypeHashCodeListLocked| ||
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getEnabledInputMethodListLocked| ||
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getEnabledInputMethodSubtypeListLocked| |android.view.inputmethod.InputMethodInfo|
|com.android.internal.content.PackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.content.PackageMonitor| |onSomePackagesChanged| ||
|com.android.server.InputMethodManagerService| |resetStateIfCurrentLocaleChangedLocked| ||
|com.android.server.InputMethodManagerService| |showInputMethodMenu| ||
|com.android.server.InputMethodManagerService| |showInputMethodSubtypeMenu| ||
|com.android.server.InputMethodManagerService| |access$1000| |com.android.server.InputMethodManagerService,int|
|com.android.server.InputMethodManagerService| |updateFromSettingsLocked| |boolean|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |addSubtypeToHistory| |java.lang.String,java.lang.String|
|com.android.internal.policy.impl.PhoneWindowManager| |init| |android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs|
|com.android.internal.policy.impl.PhoneWindowManager$17| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.widget.LockPatternUtils| |addAppWidget| |int,int|
|com.android.internal.widget.LockPatternUtils| |removeAppWidget| |int|
|android.nfc.INfcCardEmulation$Stub$Proxy| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager| |onServicesUpdated| |int,java.util.List|
|com.android.nfc.cardemulation.CardEmulationManager| |<init>| |android.content.Context|
|com.android.nfc.cardemulation.CardEmulationManager| |onUserSwitched| |int|
|com.android.server.accessibility.AccessibilityManagerService| |access$5500| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |access$5600| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.dreams.DreamManagerService| |startDreamInternal| |boolean|
|com.android.server.location.LocationBlacklist| |reloadBlacklist| ||
|com.android.server.location.LocationBlacklist| |switchUser| |int|
|com.android.server.media.MediaSessionService| |access$2300| |com.android.server.media.MediaSessionService,android.content.ComponentName,int,int,int|
|com.android.server.media.MediaSessionService| |updateActiveSessionListeners| ||
|com.android.server.notification.ConditionProviders| |disableNonexistentServices| ||
|com.android.server.notification.NotificationManagerService$NotificationListeners| |disableNonexistentServices| ||
|com.android.server.notification.ConditionProviders| |access$600| |com.android.server.notification.ManagedServices|
|com.android.server.notification.ManagedServices$SettingsObserver| |update| |android.net.Uri|
|com.android.server.notification.NotificationManagerService$NotificationListeners| |access$600| |com.android.server.notification.ManagedServices|
|com.android.server.notification.ConditionProviders| |onPackagesChanged| |boolean,java.lang.String[]|
|com.android.server.notification.NotificationManagerService$NotificationListeners| |onPackagesChanged| |boolean,java.lang.String[]|
|com.android.server.notification.ConditionProviders| |onUserSwitched| ||
|com.android.server.notification.NotificationManagerService$NotificationListeners| |onUserSwitched| ||
|com.android.server.notification.ZenModeHelper| |shouldIntercept| |com.android.server.notification.NotificationRecord|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |getOrCreateUserStateLocked| |int|
|com.android.server.print.UserState| |readConfigurationLocked| ||
|com.android.internal.textservice.ITextServicesManager$Stub$Proxy| |getCurrentSpellCheckerSubtype| |java.lang.String,boolean|
|com.android.internal.textservice.ITextServicesManager$Stub| |getCurrentSpellCheckerSubtype| |java.lang.String,boolean|
|com.android.server.TextServicesManagerService| |getCurrentSpellChecker| |java.lang.String|
|com.android.server.TextServicesManagerService| |calledFromValidUser| ||
|com.android.server.SystemService| |onStartUser| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |onSwitchUser| |int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |onBootPhase| |int|
|com.android.server.trust.TrustManagerService$3| |onSomePackagesChanged| ||
|com.android.server.trust.TrustManagerService$Receiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.trust.TrustManagerService| |requireCredentialEntry| |int|
|com.android.server.trust.TrustManagerService| |resetAgent| |android.content.ComponentName,int|
|com.android.server.trust.TrustManagerService| |updateUserHasAuthenticated| |int|
|com.android.internal.widget.LockPatternUtils| |clearLock| |boolean|
|com.android.internal.widget.LockPatternUtils| |saveLockPattern| |java.util.List,boolean,int|
|com.android.server.LockSettingsService| |checkPassword| |java.lang.String,int|
|com.android.server.LockSettingsService| |setLockPassword| |java.lang.String,int|
|com.android.internal.widget.ILockSettings$Stub$Proxy| |checkVoldPassword| |int|
|com.android.internal.widget.ILockSettings$Stub| |checkVoldPassword| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getUserData| |int|
|com.android.internal.widget.LockPatternUtils| |setOwnerInfoEnabled| |boolean|
|com.android.internal.widget.LockPatternUtils| |setOwnerInfo| |java.lang.String,int|
|com.android.internal.policy.impl.keyguard.KeyguardStateMonitor| |isSecure| ||
|com.android.server.trust.TrustManagerService| |access$1500| |com.android.server.trust.TrustManagerService,int|
|com.android.server.trust.TrustManagerService| |updateTrust| |int,boolean|
|android.media.tv.TvInputInfo| |loadCustomLabel| |android.content.Context|
|android.media.tv.TvInputInfo| |isHidden| |android.content.Context|
|android.net.DnsPinger| |<init>| |android.content.Context,java.lang.String,android.os.Looper,android.os.Handler,int|
|android.net.NetworkScoreManager| |getActiveScorerPackage| ||
|android.net.NetworkScorerAppManager| |isCallerActiveScorer| |android.content.Context,int|
|com.android.server.NetworkScoreService$ScorerChangedReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.NetworkScoreService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.NetworkScoreService| |registerPackageReceiverIfNeeded| ||
|com.android.server.NetworkScoreService| |systemReady| ||
|android.app.ApplicationErrorReport| |getErrorReportReceiver| |android.content.Context,java.lang.String,int|
|android.inputmethodservice.InputMethodService| |initViews| ||
|android.media.AudioService$ScoClient| |requestScoState| |int,int|
|android.media.AudioService| |<init>| |android.content.Context|
|android.media.AudioService| |readDockAudioSettings| |android.content.ContentResolver|
|android.os.storage.StorageManager| |getStorageLowBytes| |java.io.File|
|android.os.UserManager| |isUserSwitcherEnabled| ||
|android.telephony.TelephonyManager| |getIntWithSubId| |android.content.ContentResolver,java.lang.String,int,int|
|com.android.ims.ImsManager| |isEnhanced4gLteModeSettingEnabledByUser| |android.content.Context|
|com.android.ims.ImsManager| |isVolteEnabledByPlatform| |android.content.Context|
|com.android.internal.app.LocalePicker| |constructAdapter| |android.content.Context,int,int|
|com.android.internal.policy.impl.EnableAccessibilityController| |canEnableAccessibilityViaGesture| |android.content.Context|
|com.android.internal.policy.impl.GlobalActions| |createDialog| ||
|com.android.internal.policy.impl.GlobalActions| |onAirplaneModeChanged| ||
|com.android.internal.policy.impl.PhoneWindowManager| |isDeviceProvisioned| ||
|com.android.internal.policy.impl.PhoneWindowManager| |isGlobalAccessibilityGestureEnabled| ||
|com.android.internal.policy.impl.PhoneWindowManager| |isTheaterModeEnabled| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone,android.telephony.CellInfo|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |revertToNitzTime| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |revertToNitzTimeZone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |saveCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager| |getDefault| |android.content.Context|
|com.android.internal.telephony.dataconnection.DcTrackerBase$3| |run| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |getDataEnabled| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |getDataOnRoamingEnabled| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |getInitialMaxRetry| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onDataStallAlarm| |int|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |startDataStallAlarm| |boolean|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |startProvisioningApnAlarm| ||
|com.android.internal.telephony.gsm.GSMPhone| |isManualNetSelAllowed| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |<init>| |com.android.internal.telephony.gsm.GSMPhone|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |revertToNitzTime| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |revertToNitzTimeZone| ||
|com.android.internal.telephony.PhoneFactory| |calculatePreferredNetworkType| |android.content.Context,int|
|com.android.internal.telephony.SMSDispatcher$SettingsObserver| |onChange| |boolean|
|com.android.internal.telephony.SmsUsageMonitor$SettingsObserver| |onChange| |boolean|
|com.android.internal.telephony.SmsUsageMonitor| |<init>| |android.content.Context|
|com.android.internal.telephony.SubscriptionController| |getDefaultDataSubId| ||
|com.android.internal.telephony.SubscriptionController| |getDefaultSmsSubId| ||
|com.android.internal.telephony.SubscriptionController| |getDefaultVoiceSubId| ||
|com.android.internal.widget.LockPatternUtils| |isCredentialRequiredToDecrypt| |boolean|
|com.android.server.am.ActivityManagerService$19| |run| ||
|com.android.server.am.ActivityManagerService| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.backup.BackupManagerService| |deviceIsProvisioned| ||
|com.android.server.BatteryService| |updateBatteryWarningLevelLocked| ||
|com.android.server.BluetoothManagerService| |isAirplaneModeOn| ||
|com.android.server.BluetoothManagerService| |isBluetoothPersistedStateOnBluetooth| ||
|com.android.server.BluetoothManagerService| |isBluetoothPersistedStateOn| ||
|com.android.server.display.WifiDisplayController| |updateSettings| ||
|com.android.server.DockObserver| |setDockStateLocked| |int|
|com.android.server.DropBoxManagerService| |trimToFit| ||
|com.android.server.hdmi.HdmiControlService| |readBooleanSetting| |java.lang.String,boolean|
|com.android.server.location.ComprehensiveCountryDetector| |isAirplaneModeOff| ||
|com.android.server.location.GpsLocationProvider| |startNavigating| |boolean|
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getGlobalBoolean| |java.lang.String,boolean|
|com.android.server.NetworkTimeUpdateService| |isAutomaticTimeRequested| ||
|com.android.server.notification.NotificationManagerService| |onStart| ||
|com.android.server.notification.ValidateNotificationPeople| |initialize| |android.content.Context|
|com.android.server.notification.ZenModeHelper| |readZenModeFromSetting| ||
|com.android.server.NsdService| |isNsdEnabled| ||
|com.android.server.pm.PackageManagerService| |isVerificationEnabled| |int,int|
|com.android.server.pm.PackageManagerService| |getDefaultVerificationResponse| ||
|com.android.server.pm.PackageManagerService| |getInstallLocation| ||
|com.android.server.pm.PackageManagerService| |getUnknownSourcesSettings| ||
|com.android.server.pm.PackageManagerService| |systemReady| ||
|com.android.server.SamplingProfilerService$SamplingProfilerSettingsObserver| |onChange| |boolean|
|com.android.server.usb.UsbDeviceManager$AdbSettingsObserver| |onChange| |boolean|
|com.android.server.wifi.WifiConfigStore| |getMaxDhcpRetries| ||
|com.android.server.wifi.WifiController| |readStayAwakeConditions| ||
|com.android.server.wifi.WifiController| |readWifiSleepPolicy| ||
|com.android.server.wifi.WifiNotificationController$NotificationEnabledSettingObserver| |getValue| ||
|com.android.server.wifi.WifiNotificationController| |<init>| |android.content.Context,com.android.server.wifi.WifiStateMachine|
|com.android.server.wifi.WifiServiceImpl| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.WifiSettingsStore| |getPersistedAirplaneModeOn| ||
|com.android.server.wifi.WifiSettingsStore| |getPersistedScanAlwaysAvailable| ||
|com.android.server.wifi.WifiStateMachine$6| |onChange| |boolean|
|com.android.server.wifi.WifiStateMachine| |<init>| |android.content.Context,java.lang.String,com.android.server.wifi.WifiTrafficPoller|
|com.android.server.wifi.WifiStateMachine| |setFrequencyBand| ||
|com.android.server.wifi.WifiWatchdogStateMachine| |getSettingsGlobalBoolean| |android.content.ContentResolver,java.lang.String,boolean|
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedInner| |boolean|
|android.telephony.TelephonyManager| |getIntWithSubId| |android.content.ContentResolver,java.lang.String,int|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getAutoTime| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getAutoTimeZone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |getAutoTime| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |getAutoTimeZone| ||
|com.android.internal.telephony.MccTable| |isDeviceProvisioned| |android.content.Context|
|com.android.internal.telephony.PhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.PhoneFactory| |isPromptEnabled| ||
|com.android.internal.telephony.PhoneFactory| |isSMSPromptEnabled| ||
|com.android.internal.telephony.PhoneFactory| |getSMSSubscription| ||
|com.android.internal.telephony.PhoneFactory| |getVoiceSubscription| ||
|com.android.internal.telephony.PhoneFactory| |getDataSubscription| ||
|com.android.server.wifi.WifiSettingsStore| |testAndClearWifiSavedState| ||
|com.android.server.wifi.WifiSettingsStore| |getPersistedWifiState| ||
|android.os.storage.StorageManager| |getStorageFullBytes| |java.io.File|
|com.android.server.content.SyncManager| |increaseBackoffSetting| |com.android.server.content.SyncOperation|
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getGlobalLong| |java.lang.String,long|
|com.android.server.pm.PackageManagerService| |getVerificationTimeout| ||
|com.android.server.pm.PackageManagerService| |performBootDexOpt| ||
|com.android.server.storage.DeviceStorageMonitorService| |restatDataDir| ||
|com.android.server.wifi.WifiAutoJoinController| |haveRecentlySeenScoredBssid| |android.net.wifi.WifiConfiguration|
|com.android.server.wifi.WifiController| |readWifiIdleTime| ||
|com.android.server.wifi.WifiController| |readWifiReEnableDelay| ||
|com.android.server.wifi.WifiStateMachine$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DisconnectedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SupplicantStartedState| |enter| ||
|android.app.DownloadManager| |getMaxBytesOverMobile| |android.content.Context|
|android.app.DownloadManager| |getRecommendedMaxBytesOverMobile| |android.content.Context|
|com.android.server.location.GpsLocationProvider| |<init>| |android.content.Context,android.location.ILocationManager,android.os.Looper|
|com.android.server.net.NetworkPolicyManagerService| |<init>| |android.content.Context,android.app.IActivityManager,android.os.IPowerManager,android.net.INetworkStatsService,android.os.INetworkManagementService|
|com.android.server.net.NetworkStatsService| |<init>| |android.content.Context,android.os.INetworkManagementService,android.app.IAlarmManager|
|com.android.server.NetworkTimeUpdateService| |<init>| |android.content.Context|
|com.android.internal.telephony.dataconnection.DataConnection| |makeNetworkCapabilities| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |isApnTypeActive| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |fetchDunApn| ||
|com.android.server.am.ActivityManagerService| |systemReady| |java.lang.Runnable|
|com.android.server.BatteryService| |processValuesLocked| |boolean|
|com.android.server.connectivity.PacManager| |getDownloadDelay| |int|
|com.android.server.display.OverlayDisplayAdapter| |updateOverlayDisplayDevices| ||
|com.android.server.DockObserver| |access$100| |com.android.server.DockObserver|
|com.android.server.power.Notifier| |access$500| |com.android.server.power.Notifier|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$2900| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine|
|com.android.server.wifi.WifiSettingsStore| |handleAirplaneModeToggled| ||
|com.android.server.wifi.WifiSettingsStore| |handleWifiToggled| |boolean|
|com.android.server.wifi.WifiStateMachine| |access$9800| |com.android.server.wifi.WifiStateMachine|
|com.android.server.wm.WindowManagerService| |displayReady| ||
|com.android.server.LocationManagerService$Receiver| |updateMonitoring| |boolean|
|com.android.server.LocationManagerService| |requestLocationUpdatesLocked| |android.location.LocationRequest,com.android.server.LocationManagerService$Receiver,int,int,java.lang.String|
|com.android.server.LocationManagerService| |access$200| |com.android.server.LocationManagerService|
|com.android.server.LocationManagerService| |access$1800| |com.android.server.LocationManagerService,android.location.Location,boolean|
|com.android.server.LocationManagerService| |access$1400| |com.android.server.LocationManagerService,com.android.server.LocationManagerService$Receiver|
|com.android.server.LocationManagerService| |handleLocationChangedLocked| |android.location.Location,boolean|
|com.android.server.LocationManagerService| |updateProviderListenersLocked| |java.lang.String,boolean|
|com.android.server.LocationManagerService| |access$300| |com.android.server.LocationManagerService|
|com.android.server.LocationManagerService| |switchUser| |int|
|com.android.server.LocationManagerService| |systemRunning| ||
|android.media.WebVttRenderingWidget| |<init>| |android.content.Context,android.util.AttributeSet,int,int|
|android.media.WebVttRenderingWidget| |manageChangeListener| ||
|android.media.WebVttRenderingWidget| |onLayout| |boolean,int,int,int,int|
|android.view.accessibility.CaptioningManager| |notifyFontScaleChanged| ||
|com.android.server.accessibility.ScreenMagnifier| |access$1100| |com.android.server.accessibility.ScreenMagnifier|
|android.inputmethodservice.KeyboardView| |onModifiedTouchEvent| |android.view.MotionEvent,boolean|
|android.inputmethodservice.KeyboardView| |openPopupIfRequired| |android.view.MotionEvent|
|android.inputmethodservice.KeyboardView| |setKeyboard| |android.inputmethodservice.Keyboard|
|com.android.internal.widget.PasswordEntryKeyboardView| |showPreview| |int|
|android.media.IAudioService$Stub$Proxy| |reloadAudioSettings| ||
|android.media.IAudioService$Stub| |reloadAudioSettings| ||
|android.speech.tts.TextToSpeechService| |getDefaultSpeechRate| ||
|android.media.SubtitleController| |getDefaultTrack| ||
|android.media.SubtitleController| |doSelectDefaultTrack| ||
|android.view.accessibility.CaptioningManager| |notifyEnabledChanged| ||
|com.android.ims.ImsManager| |setEnhanced4gLteModeSetting| |android.content.Context,boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |dial| |java.lang.String,int|
|com.android.internal.telephony.gsm.GSMPhone| |dial| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |getCellLocation| ||
|com.android.internal.telephony.PhoneBase| |getCellLocation| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |access$700| |com.android.internal.telephony.imsphone.ImsPhoneCallTracker|
|com.android.internal.telephony.cdma.CDMALTEPhone| |privatizeCellInfoList| |java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |privatizeCellInfoList| |java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |privatizeCellInfoList| |java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |privatizeCellInfoList| |java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |privatizeCellInfoList| |java.util.List|
|com.android.internal.telephony.PhoneBase| |getAllCellInfo| ||
|com.android.internal.telephony.PhoneBase| |notifyCellInfo| |java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |privatizeCellInfoList| |java.util.List|
|com.android.internal.telephony.sip.SipPhone| |privatizeCellInfoList| |java.util.List|
|com.android.nfc.handover.PeripheralHandoverService| |doPeripheralHandover| |android.os.Bundle|
|com.android.nfc.NfcService$ApplyRoutingTask| |doInBackground| |java.lang.Integer[]|
|com.android.nfc.NfcService$EnableDisableTask| |enableInternal| ||
|com.android.nfc.NfcService$NfcAdapterService| |addNfcUnlockHandler| |android.nfc.INfcUnlockHandler,int[]|
|com.android.nfc.NfcService$NfcAdapterService| |removeNfcUnlockHandler| |android.nfc.INfcUnlockHandler|
|com.android.nfc.NfcService$NfcAdapterService| |setP2pModes| |int,int|
|com.android.nfc.NfcService$NfcAdapterService| |setReaderMode| |android.os.IBinder,android.nfc.IAppCallback,int,android.os.Bundle|
|com.android.nfc.NfcService$NfcServiceHandler$1| |onTagDisconnected| |long|
|com.android.nfc.NfcService$ReaderModeDeathRecipient| |binderDied| ||
|com.android.nfc.NfcService$TagService| |close| |int|
|com.android.nfc.NfcApplication| |onCreate| ||
|com.android.server.accessibility.ScreenMagnifier| |access$3000| |android.content.Context|
|com.android.server.accessibility.ScreenMagnifier| |resetMagnificationIfNeeded| ||
|com.android.server.am.ActiveServices| |serviceTimeout| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService$10| |run| ||
|com.android.server.am.BroadcastQueue$AppNotResponding| |run| ||
|com.android.server.SystemService| |onBootPhase| |int|
|com.android.server.location.GpsLocationProvider| |access$700| |com.android.server.location.GpsLocationProvider|
|com.android.server.LocationManagerService| |addTestProvider| |java.lang.String,com.android.internal.location.ProviderProperties|
|com.android.server.LocationManagerService| |clearTestProviderEnabled| |java.lang.String|
|com.android.server.LocationManagerService| |clearTestProviderLocation| |java.lang.String|
|com.android.server.LocationManagerService| |clearTestProviderStatus| |java.lang.String|
|com.android.server.LocationManagerService| |removeTestProvider| |java.lang.String|
|com.android.server.LocationManagerService| |setTestProviderEnabled| |java.lang.String,boolean|
|com.android.server.LocationManagerService| |setTestProviderLocation| |java.lang.String,android.location.Location|
|com.android.server.LocationManagerService| |setTestProviderStatus| |java.lang.String,int,android.os.Bundle,long|
|com.android.server.net.NetworkPolicyManagerService| |readPolicyLocked| ||
|com.android.server.SystemService| |onStart| ||
|com.android.server.am.ActivityManagerService| |handleApplicationCrashInner| |java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.UiModeManagerService| |sendConfigurationAndStartDreamOrDockAppLocked| |java.lang.String|
|android.inputmethodservice.ExtractButton| |access$1200| |android.widget.TextView|
|android.inputmethodservice.ExtractEditText| |access$1200| |android.widget.TextView|
|android.media.ClosedCaptionWidget$CCLineBox| |access$1200| |android.widget.TextView|
|android.widget.AutoCompleteTextView| |access$1200| |android.widget.TextView|
|android.widget.Button| |access$1200| |android.widget.TextView|
|android.widget.CheckBox| |access$1200| |android.widget.TextView|
|android.widget.CheckedTextView| |access$1200| |android.widget.TextView|
|android.widget.Chronometer| |access$1200| |android.widget.TextView|
|android.widget.CompoundButton| |access$1200| |android.widget.TextView|
|android.widget.DateTimeView| |access$1200| |android.widget.TextView|
|android.widget.DigitalClock| |access$1200| |android.widget.TextView|
|android.widget.EditText| |access$1200| |android.widget.TextView|
|android.widget.MultiAutoCompleteTextView| |access$1200| |android.widget.TextView|
|android.widget.NumberPicker$CustomEditText| |access$1200| |android.widget.TextView|
|android.widget.RadioButton| |access$1200| |android.widget.TextView|
|android.widget.SearchView$SearchAutoComplete| |access$1200| |android.widget.TextView|
|android.widget.Switch| |access$1200| |android.widget.TextView|
|android.widget.TextClock| |access$1200| |android.widget.TextView|
|android.widget.TextView$ChangeWatcher| |beforeTextChanged| |java.lang.CharSequence,int,int,int|
|android.widget.TextViewWithCircularIndicator| |access$1200| |android.widget.TextView|
|android.widget.ToggleButton| |access$1200| |android.widget.TextView|
|com.android.internal.view.menu.ActionMenuItemView| |access$1200| |android.widget.TextView|
|com.android.internal.view.menu.IconMenuItemView| |access$1200| |android.widget.TextView|
|com.android.internal.widget.DialogTitle| |access$1200| |android.widget.TextView|
|android.media.ClosedCaptionWidget$CCLineBox| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.Button| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.CheckedTextView| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.Chronometer| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.DateTimeView| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.DigitalClock| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.EditText| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.TextClock| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.TextViewWithCircularIndicator| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|com.android.internal.view.menu.ActionMenuItemView| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|com.android.internal.view.menu.IconMenuItemView| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|com.android.internal.widget.DialogTitle| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.inputmethodservice.ExtractButton| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.inputmethodservice.ExtractEditText| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.media.ClosedCaptionWidget$CCLineBox| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.AutoCompleteTextView| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.Button| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.CheckBox| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.CheckedTextView| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.Chronometer| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.CompoundButton| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.DateTimeView| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.DigitalClock| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.EditText| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.MultiAutoCompleteTextView| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.NumberPicker$CustomEditText| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.RadioButton| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.SearchView$SearchAutoComplete| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.TextClock| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.TextViewWithCircularIndicator| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.ToggleButton| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|com.android.internal.view.menu.ActionMenuItemView| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|com.android.internal.view.menu.IconMenuItemView| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|com.android.internal.widget.DialogTitle| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemUiVisibilityLw| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$1700| |com.android.internal.policy.impl.PhoneWindowManager,android.view.WindowManagerPolicy$WindowState|
|com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.accessibility.AccessibilityManagerService| |access$400| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |switchUser| |int|
|com.android.server.accessibility.AccessibilityManagerService| |access$5800| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |access$5900| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |onUserStateChangedLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.dreams.DreamManagerService| |access$2400| |com.android.server.dreams.DreamManagerService|
|com.android.server.dreams.DreamManagerService| |dumpInternal| |java.io.PrintWriter|
|com.android.server.power.PowerManagerService| |access$2100| |com.android.server.power.PowerManagerService|
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1|
|com.android.server.am.ActivityStack| |moveTaskToBackLocked| |int|
|com.android.server.am.ActivityStack| |removeTask| |com.android.server.am.TaskRecord,java.lang.String|
|com.android.server.InputMethodManagerService| |getCurrentInputMethodSubtypeLocked| ||
|android.speech.tts.TextToSpeech| |initTts| ||
|android.speech.tts.TextToSpeechService| |access$500| |android.speech.tts.TextToSpeechService|
|android.speech.tts.TextToSpeechService| |onCreate| ||
|android.media.ClosedCaptionWidget| |<init>| |android.content.Context,android.util.AttributeSet,int|
|android.media.TtmlRenderingWidget| |<init>| |android.content.Context,android.util.AttributeSet,int,int|
|android.view.accessibility.CaptioningManager| |notifyUserStyleChanged| ||
|android.media.WebVttRenderingWidget$SpanLayout| |setStyle| |int|
|android.view.accessibility.CaptioningManager| |notifyLocaleChanged| ||
|com.android.server.am.CoreSettingsObserver| |<init>| |com.android.server.am.ActivityManagerService|
|com.android.server.am.CoreSettingsObserver| |onChange| |boolean|
|android.app.backup.IBackupManager$Stub$Proxy| |setBackupServiceActive| |int,boolean|
|android.app.backup.IBackupManager$Stub| |setBackupServiceActive| |int,boolean|
|com.android.server.BluetoothManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.CertBlacklister$BlacklistObserver| |writeBlacklist| ||
|com.android.server.location.LocationFudger$1| |onChange| |boolean|
|com.android.server.updates.CarrierProvisioningUrlsInstallReceiver| |access$000| |com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver|
|com.android.server.updates.CertPinInstallReceiver| |access$000| |com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver|
|com.android.server.updates.ConfigUpdateInstallReceiver$1| |run| ||
|com.android.server.updates.IntentFirewallInstallReceiver| |access$000| |com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver|
|com.android.server.updates.SELinuxPolicyInstallReceiver| |access$000| |com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver|
|com.android.server.updates.SmsShortCodesInstallReceiver| |access$000| |com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver|
|com.android.server.updates.TZInfoInstallReceiver| |access$000| |com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver|
|android.media.AudioService| |access$6600| |android.media.AudioService|
|android.provider.Settings$System| |getConfiguration| |android.content.ContentResolver,android.content.res.Configuration|
|android.media.AudioManager| |playSoundEffect| |int,int|
|android.media.AudioManager| |playSoundEffect| |int|
|android.media.AudioService$SettingsObserver| |onChange| |boolean|
|android.media.AudioService$VolumeStreamState| |<init>| |android.media.AudioService,java.lang.String,int|
|android.provider.Settings$System| |getShowGTalkServiceStatus| |android.content.ContentResolver|
|android.text.method.TextKeyListener| |updatePrefs| |android.content.ContentResolver|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |getRecoveryAction| ||
|com.android.internal.widget.PasswordEntryKeyboardHelper| |setKeyboardMode| |int|
|com.android.nfc.NfcService| |isAirplaneModeOn| ||
|com.android.server.notification.NotificationManagerService$SettingsObserver| |update| |android.net.Uri|
|android.view.WindowManagerPolicy| |performHapticFeedbackLw| |android.view.WindowManagerPolicy$WindowState,int,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$4| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager$MyWakeGestureListener| |onWakeUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |handleLongPressOnHome| ||
|com.android.internal.policy.impl.PhoneWindowManager| |launchAssistLongPressAction| ||
|com.android.internal.policy.impl.PhoneWindowManager| |powerLongPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |setSafeMode| |boolean|
|android.view.WindowManagerPolicy| |getUserRotationMode| ||
|android.view.WindowManagerPolicy| |interceptKeyBeforeDispatching| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager| |interceptFallback| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |dispatchTriggerEvent| |int|
|com.android.internal.widget.multiwaveview.GlowPadView| |setGrabbedState| |int|
|com.android.internal.widget.RotarySelector| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.RotarySelector| |dispatchTriggerEvent| |int|
|com.android.internal.widget.SlidingTab| |onInterceptTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.SlidingTab| |dispatchTriggerEvent| |int|
|com.android.internal.widget.WaveView| |dispatchTriggerEvent| |int|
|android.hardware.input.InputManager| |getPointerSpeed| |android.content.Context|
|com.android.server.input.InputManagerService| |updatePointerSpeedFromSettings| ||
|com.android.server.input.InputManagerService| |updateShowTouchesFromSettings| ||
|com.android.server.VibratorService| |access$400| |com.android.server.VibratorService|
|com.android.server.VibratorService| |onInputDeviceAdded| |int|
|com.android.server.VibratorService| |onInputDeviceChanged| |int|
|com.android.server.VibratorService| |onInputDeviceRemoved| |int|
|com.android.server.VibratorService| |systemReady| ||
|android.media.MediaScanner$MyMediaScannerClient| |endFile| |android.media.MediaScanner$FileEntry,boolean,boolean,boolean,boolean,boolean|
|android.media.MediaPlayer| |setDataSource| |android.content.Context,android.net.Uri,java.util.Map|
|android.media.Ringtone| |playFallbackRingtone| ||
|android.media.Ringtone| |getTitle| |android.content.Context,android.net.Uri,boolean|
|android.text.format.DateFormat| |getDateFormatOrder| |android.content.Context|
|android.net.http.SslCertificate| |formatCertificateDate| |android.content.Context,java.util.Date|
|android.widget.DateTimeView| |update| ||
|com.android.server.notification.NotificationManagerService| |access$3700| |com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationRecord|
|com.android.server.notification.NotificationManagerService| |handleRankingReconsideration| |android.os.Message|
|com.android.internal.app.PlatLogoActivity$2$1| |onLongClick| |android.view.View|
|android.service.notification.ZenModeConfig| |toTimeCondition| |android.content.Context,int,int|
|android.text.format.DateUtils| |formatDateRange| |android.content.Context,java.util.Formatter,long,long,int,java.lang.String|
|com.android.server.notification.DowntimeConditionProvider| |createCondition| |android.service.notification.ZenModeConfig$DowntimeInfo,int|
|com.android.server.notification.NextAlarmTracker| |formatAlarm| |long,java.lang.String,java.lang.String|
|android.text.format.DateFormat| |getTimeFormatString| |android.content.Context|
|android.widget.TextClock| |chooseFormat| |boolean|
|com.android.server.AlarmManagerService| |sendNextAlarmClockChanged| ||
|com.android.server.SystemServer$2| |run| ||
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getLastInputMethodAndSubtypeLocked| ||
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getLastSubtypeForInputMethodLocked| |java.lang.String|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getExplicitlyOrImplicitlyEnabledInputMethodsAndSubtypeListLocked| |android.content.Context|
|com.android.server.InputMethodManagerService| |findLastResortApplicableShortcutInputMethodAndSubtypeLocked| |java.lang.String|
|com.android.server.InputMethodManagerService| |chooseNewDefaultIMELocked| ||
|com.android.server.InputMethodManagerService| |needsToShowImeSwitchOngoingNotification| ||
|com.android.server.InputMethodManagerService| |switchToLastInputMethod| |android.os.IBinder|
|com.android.server.InputMethodManagerService| |getEnabledInputMethodList| ||
|com.android.server.InputMethodManagerService| |resetDefaultImeLocked| |android.content.Context|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |getEnabledInputMethodSubtypeListLocked| |android.content.Context,android.view.inputmethod.InputMethodInfo,boolean|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.app.ResolverActivity$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.content.PackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.LocationManagerService$4| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.ServiceWatcher$2| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.trust.TrustManagerService$3| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.tv.TvInputManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.LocationManagerService$4| |onSomePackagesChanged| ||
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onSomePackagesChanged| ||
|com.android.server.ServiceWatcher$2| |onSomePackagesChanged| ||
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.InputMethodManagerService| |access$1100| |com.android.server.InputMethodManagerService|
|com.android.server.InputMethodManagerService$3| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings| |saveCurrentInputMethodAndSubtypeToHistory| |java.lang.String,android.view.inputmethod.InputMethodSubtype|
|android.view.WindowManagerPolicy| |init| |android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs|
|android.nfc.INfcCardEmulation| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.nfc.cardemulation.RegisteredServicesCache$Callback| |onServicesUpdated| |int,java.util.List|
|com.android.nfc.NfcService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.dreams.DreamManagerService| |access$2000| |com.android.server.dreams.DreamManagerService,boolean|
|com.android.server.location.LocationBlacklist| |init| ||
|com.android.server.location.LocationBlacklist| |onChange| |boolean|
|com.android.server.media.MediaSessionService$SessionManagerImpl| |verifySessionsRequest| |android.content.ComponentName,int,int,int|
|com.android.server.media.MediaSessionService| |access$1300| |com.android.server.media.MediaSessionService|
|com.android.server.notification.ManagedServices$SettingsObserver| |observe| ||
|com.android.server.notification.ManagedServices$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.notification.NotificationManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.notification.NotificationManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.notification.NotificationManagerService| |applyZenModeLocked| |com.android.server.notification.NotificationRecord|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |print| |java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |getPrintJobInfo| |android.print.PrintJobId,int,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |access$300| |com.android.server.print.PrintManagerService$PrintManagerImpl,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |getEnabledPrintServices| |int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |getInstalledPrintServices| |int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |getPrintJobInfos| |int,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |addPrintJobStateChangeListener| |android.print.IPrintJobStateChangeListener,int,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |cancelPrintJob| |android.print.PrintJobId,int,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |createPrinterDiscoverySession| |android.print.IPrinterDiscoveryObserver,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |destroyPrinterDiscoverySession| |android.print.IPrinterDiscoveryObserver,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |removePrintJobStateChangeListener| |android.print.IPrintJobStateChangeListener,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |restartPrintJob| |android.print.PrintJobId,int,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |startPrinterDiscovery| |android.print.IPrinterDiscoveryObserver,java.util.List,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |startPrinterStateTracking| |android.print.PrinterId,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |stopPrinterDiscovery| |android.print.IPrinterDiscoveryObserver,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |stopPrinterStateTracking| |android.print.PrinterId,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |validatePrinters| |java.util.List,int|
|com.android.server.print.UserState| |updateIfNeededLocked| ||
|com.android.internal.textservice.ITextServicesManager| |getCurrentSpellCheckerSubtype| |java.lang.String,boolean|
|com.android.internal.textservice.ITextServicesManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.textservice.ITextServicesManager$Stub$Proxy| |getCurrentSpellChecker| |java.lang.String|
|com.android.internal.textservice.ITextServicesManager$Stub| |getCurrentSpellChecker| |java.lang.String|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onSomePackagesChanged| ||
|com.android.server.TextServicesManagerService| |setCurrentSpellCheckerLocked| |java.lang.String|
|com.android.server.TextServicesManagerService| |setCurrentSpellCheckerSubtypeLocked| |int|
|com.android.server.TextServicesManagerService| |switchUserLocked| |int|
|com.android.server.TextServicesManagerService| |getEnabledSpellCheckers| ||
|com.android.server.TextServicesManagerService| |isSpellCheckerEnabled| ||
|com.android.server.TextServicesManagerService| |finishSpellCheckerService| |com.android.internal.textservice.ISpellCheckerSessionListener|
|com.android.server.TextServicesManagerService| |getSpellCheckerService| |java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle|
|com.android.server.TextServicesManagerService| |setCurrentSpellChecker| |java.lang.String,java.lang.String|
|com.android.server.TextServicesManagerService| |setCurrentSpellCheckerSubtype| |java.lang.String,int|
|com.android.server.TextServicesManagerService| |setSpellCheckerEnabled| |boolean|
|com.android.server.AlarmManagerService| |onStartUser| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onStartUser| |int|
|com.android.server.appwidget.AppWidgetService| |onStartUser| |int|
|com.android.server.backup.BackupManagerService$Lifecycle| |onStartUser| |int|
|com.android.server.BatteryService| |onStartUser| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |onStartUser| |int|
|com.android.server.display.DisplayManagerService| |onStartUser| |int|
|com.android.server.DockObserver| |onStartUser| |int|
|com.android.server.dreams.DreamManagerService| |onStartUser| |int|
|com.android.server.ethernet.EthernetService| |onStartUser| |int|
|com.android.server.fingerprint.FingerprintService| |onStartUser| |int|
|com.android.server.hdmi.HdmiControlService| |onStartUser| |int|
|com.android.server.lights.LightsService| |onStartUser| |int|
|com.android.server.media.projection.MediaProjectionManagerService| |onStartUser| |int|
|com.android.server.MmsServiceBroker| |onStartUser| |int|
|com.android.server.notification.NotificationManagerService| |onStartUser| |int|
|com.android.server.PersistentDataBlockService| |onStartUser| |int|
|com.android.server.pm.Installer| |onStartUser| |int|
|com.android.server.pm.LauncherAppsService| |onStartUser| |int|
|com.android.server.power.PowerManagerService| |onStartUser| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onStartUser| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onStartUser| |int|
|com.android.server.SystemServiceManager| |startUser| |int|
|com.android.server.telecom.TelecomLoaderService| |onStartUser| |int|
|com.android.server.tv.TvInputManagerService| |onStartUser| |int|
|com.android.server.twilight.TwilightService| |onStartUser| |int|
|com.android.server.UiModeManagerService| |onStartUser| |int|
|com.android.server.usage.UsageStatsService| |onStartUser| |int|
|com.android.server.usb.UsbService$Lifecycle| |onStartUser| |int|
|com.android.server.webkit.WebViewUpdateService| |onStartUser| |int|
|com.android.server.wifi.p2p.WifiP2pService| |onStartUser| |int|
|com.android.server.wifi.RttService| |onStartUser| |int|
|com.android.server.wifi.WifiScanningService| |onStartUser| |int|
|com.android.server.wifi.WifiService| |onStartUser| |int|
|com.android.server.SystemService| |onSwitchUser| |int|
|com.android.server.trust.TrustManagerService| |access$1600| |com.android.server.trust.TrustManagerService,int|
|com.android.server.trust.TrustManagerService| |access$1800| |com.android.server.trust.TrustManagerService,int|
|com.android.server.trust.TrustManagerService| |dispatchUnlockAttempt| |boolean,int|
|com.android.internal.widget.LockPatternUtils| |saveLockPattern| |java.util.List,boolean|
|com.android.internal.widget.ILockSettings$Stub$Proxy| |checkPassword| |java.lang.String,int|
|com.android.internal.widget.ILockSettings$Stub| |checkPassword| |java.lang.String,int|
|com.android.internal.widget.ILockSettings$Stub$Proxy| |setLockPassword| |java.lang.String,int|
|com.android.internal.widget.ILockSettings$Stub| |setLockPassword| |java.lang.String,int|
|com.android.internal.widget.ILockSettings| |checkVoldPassword| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getGlobalProxyAdmin| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getRestrictionsProvider| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setGlobalProxy| |android.content.ComponentName,java.lang.String,java.lang.String,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getCameraDisabled| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getScreenCaptureDisabled| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getStorageEncryption| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |hasUserSetupCompleted| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |isLockTaskPermitted| |java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |isRemovingAdmin| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |packageHasActiveAdmins| |java.lang.String,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |resetPassword| |java.lang.String,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getActiveAdminForCallerLocked| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getActiveAdminUncheckedLocked| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getDeviceOwnerAdmin| ||
|com.android.server.devicepolicy.DevicePolicyManagerService| |getProfileOwnerAdmin| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getKeyguardDisabledFeatures| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setStorageEncryption| |android.content.ComponentName,boolean,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getAccountTypesWithManagementDisabledAsUser| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getLockTaskPackages| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getActiveAdmins| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.devicepolicy.DevicePolicyManagerService| |handlePackagesChanged| |java.lang.String,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |handlePasswordExpirationNotification| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |notifyLockTaskModeChanged| |boolean,java.lang.String,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |removeActiveAdminLocked| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |reportSuccessfulPasswordAttempt| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |saveSettingsLocked| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |sendAdminCommandLocked| |java.lang.String,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setActiveAdmin| |android.content.ComponentName,boolean,int,android.os.Bundle|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setActivePasswordState| |int,int,int,int,int,int,int,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setCameraDisabled| |android.content.ComponentName,boolean,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setKeyguardDisabledFeatures| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setLockTaskPackages| |android.content.ComponentName,java.lang.String[]|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setMaximumTimeToLock| |android.content.ComponentName,long,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPasswordExpirationTimeout| |android.content.ComponentName,long,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setRestrictionsProvider| |android.content.ComponentName,android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setTrustAgentConfiguration| |android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,int|
|com.android.internal.policy.impl.keyguard.KeyguardServiceWrapper| |isSecure| ||
|com.android.server.trust.TrustAgentWrapper| |updateDevicePolicyFeatures| ||
|com.android.server.trust.TrustManagerService| |updateTrustAll| ||
|com.android.server.trust.TrustAgentWrapper| |destroy| ||
|android.net.NetworkScoreManager| |requestScores| |android.net.NetworkKey[]|
|com.android.server.NetworkScoreService| |clearScores| ||
|com.android.server.NetworkScoreService| |updateScores| |android.net.ScoredNetwork[]|
|com.android.server.NetworkScoreService| |disableScoring| ||
|com.android.server.am.ActivityManagerService| |startAppProblemLocked| |com.android.server.am.ProcessRecord|
|android.inputmethodservice.InputMethodService| |onConfigurationChanged| |android.content.res.Configuration|
|android.inputmethodservice.InputMethodService| |onCreate| ||
|android.media.AudioService$ScoClient| |clearCount| |boolean|
|android.media.AudioService$ScoClient| |decCount| ||
|android.media.AudioService$ScoClient| |incCount| |int|
|android.media.AudioService| |access$8700| |android.media.AudioService,android.content.ContentResolver|
|com.android.server.pm.PackageManagerService$InstallParams| |handleStartCopy| ||
|com.android.server.storage.DeviceStorageMonitorService| |onStart| ||
|com.android.internal.policy.impl.GlobalActions| |addUsersToMenu| |java.util.ArrayList|
|com.android.ims.ImsManager| |setUiTTYMode| |android.content.Context,int,int,android.os.Message|
|com.android.internal.app.LocalePicker| |constructAdapter| |android.content.Context|
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |onStart| ||
|com.android.internal.policy.impl.GlobalActions| |handleShow| ||
|com.android.internal.policy.impl.GlobalActions| |access$1500| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.PhoneWindowManager| |showGlobalActionsInternal| ||
|com.android.internal.policy.impl.PhoneWindowManager| |performAuditoryFeedbackForAccessibilityIfNeed| ||
|com.android.internal.policy.impl.PhoneWindowManager| |wakeUp| |long,boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |interceptMotionBeforeQueueingNonInteractive| |long,int|
|com.android.internal.policy.impl.PhoneWindowManager| |powerMultiPressAction| |long,boolean,int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMALTEPhone|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone,android.telephony.CellInfo|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |revertToNitzTime| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |access$000| |com.android.internal.telephony.cdma.CdmaServiceStateTracker|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |revertToNitzTimeZone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |access$100| |com.android.internal.telephony.cdma.CdmaServiceStateTracker|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |saveCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhone| |android.content.Context|
|com.android.internal.telephony.cdma.CDMAPhone| |getDataEnabled| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |<init>| |com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.dataconnection.DcTracker| |getDataEnabled| ||
|com.android.internal.telephony.gsm.GSMPhone| |getDataEnabled| ||
|com.android.internal.telephony.cdma.CDMAPhone| |getDataRoamingEnabled| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onSetUserDataEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |setDataOnRoamingEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |getDataOnRoamingEnabled| ||
|com.android.internal.telephony.gsm.GSMPhone| |getDataRoamingEnabled| ||
|com.android.internal.telephony.dataconnection.DcTracker| |getInitialMaxRetry| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onDataStallAlarm| |int|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |handleStartNetStatPoll| |com.android.internal.telephony.DctConstants$Activity|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |restartDataStallAlarm| ||
|com.android.internal.telephony.dataconnection.DcTracker| |startDataStallAlarm| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker$ApnChangeObserver| |onChange| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |startProvisioningApnAlarm| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |access$200| |com.android.internal.telephony.gsm.GsmServiceStateTracker|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |access$300| |com.android.internal.telephony.gsm.GsmServiceStateTracker|
|com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener| |onSubscriptionsChanged| ||
|com.android.internal.telephony.SubscriptionController| |setDefaultDataSubId| |int|
|com.android.internal.telephony.SMSDispatcher$SettingsObserver| |<init>| |android.os.Handler,java.util.concurrent.atomic.AtomicInteger,android.content.Context|
|com.android.internal.telephony.SmsUsageMonitor$SettingsObserver| |<init>| |android.os.Handler,android.content.Context,java.util.concurrent.atomic.AtomicBoolean|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.ISub$Stub$Proxy| |getDefaultDataSubId| ||
|com.android.internal.telephony.dataconnection.DctController| |getRequestPhoneId| |android.net.NetworkRequest|
|com.android.internal.telephony.dataconnection.DctController| |onSettingsChange| ||
|com.android.internal.telephony.ISub$Stub| |getDefaultDataSubId| ||
|com.android.internal.telephony.SubscriptionController| |getDefaultSubId| ||
|com.android.internal.telephony.SubscriptionController| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |getDefaultSmsSubId| ||
|com.android.internal.telephony.ISub$Stub| |getDefaultSmsSubId| ||
|com.android.internal.telephony.uicc.SIMRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.UiccSmsController| |getPreferredSmsSubscription| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |getDefaultVoiceSubId| ||
|com.android.internal.telephony.ISub$Stub| |getDefaultVoiceSubId| ||
|android.app.ActivityManagerNative| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.backup.BackupManagerService$ProvisionedObserver| |onChange| |boolean|
|com.android.server.BatteryService| |access$400| |com.android.server.BatteryService|
|com.android.server.BatteryService| |onBootPhase| |int|
|com.android.server.BluetoothManagerService| |access$400| |com.android.server.BluetoothManagerService|
|com.android.server.BluetoothManagerService| |access$1000| |com.android.server.BluetoothManagerService|
|com.android.server.BluetoothManagerService| |access$300| |com.android.server.BluetoothManagerService|
|com.android.server.display.WifiDisplayController| |access$000| |com.android.server.display.WifiDisplayController|
|com.android.server.display.WifiDisplayController| |<init>| |android.content.Context,android.os.Handler,com.android.server.display.WifiDisplayController$Listener|
|com.android.server.DockObserver| |access$900| |com.android.server.DockObserver,int|
|com.android.server.DockObserver| |setActualDockStateLocked| |int|
|com.android.server.DropBoxManagerService| |access$300| |com.android.server.DropBoxManagerService|
|com.android.server.DropBoxManagerService| |add| |android.os.DropBoxManager$Entry|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |getSystemAudioModeSetting| ||
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |<init>| |com.android.server.hdmi.HdmiControlService|
|com.android.server.hdmi.HdmiControlService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.hdmi.HdmiControlService| |onStart| ||
|com.android.server.location.ComprehensiveCountryDetector| |runAfterDetection| |android.location.Country,android.location.Country,boolean,boolean|
|com.android.server.location.GpsLocationProvider| |access$200| |com.android.server.location.GpsLocationProvider,boolean|
|com.android.server.location.GpsLocationProvider| |updateRequirements| ||
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getSampleEnabled| ||
|com.android.server.NetworkTimeUpdateService| |onPollNetworkTime| |int|
|com.android.server.notification.NotificationSignalExtractor| |initialize| |android.content.Context|
|com.android.server.notification.ZenModeHelper$SettingsObserver| |update| |android.net.Uri|
|com.android.server.NsdService| |access$100| |com.android.server.NsdService|
|com.android.server.pm.PackageManagerService| |access$2900| |com.android.server.pm.PackageManagerService,int,int|
|com.android.server.pm.PackageManagerService| |access$1400| |com.android.server.pm.PackageManagerService|
|android.content.pm.IPackageManager$Stub$Proxy| |getInstallLocation| ||
|android.content.pm.IPackageManager$Stub| |getInstallLocation| ||
|com.android.server.pm.PackageManagerService| |setInstallLocation| |int|
|com.android.server.pm.PackageManagerService| |access$1100| |com.android.server.pm.PackageManagerService|
|android.content.pm.IPackageManager$Stub$Proxy| |systemReady| ||
|android.content.pm.IPackageManager$Stub| |systemReady| ||
|com.android.server.SamplingProfilerService$SamplingProfilerSettingsObserver| |<init>| |com.android.server.SamplingProfilerService,android.content.ContentResolver|
|com.android.server.wifi.WifiConfigStore| |handleSSIDStateChange| |int,boolean,java.lang.String,java.lang.String|
|com.android.server.wifi.WifiStateMachine| |getLogRecString| |android.os.Message|
|com.android.server.wifi.WifiController| |access$000| |com.android.server.wifi.WifiController|
|com.android.server.wifi.WifiController| |initializeAndRegisterForSettingsChange| |android.os.Looper|
|com.android.server.wifi.WifiController| |access$200| |com.android.server.wifi.WifiController|
|com.android.server.wifi.WifiNotificationController$NotificationEnabledSettingObserver| |onChange| |boolean|
|com.android.server.wifi.WifiNotificationController$NotificationEnabledSettingObserver| |register| ||
|com.android.server.wifi.WifiServiceImpl| |<init>| |android.content.Context|
|com.android.server.wifi.WifiSettingsStore| |<init>| |android.content.Context|
|com.android.server.wifi.WifiSettingsStore| |handleWifiScanAlwaysAvailableToggled| ||
|com.android.server.wifi.WifiStateMachine| |access$9900| |com.android.server.wifi.WifiStateMachine|
|com.android.server.wifi.WifiWatchdogStateMachine| |isWatchdogEnabled| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedLoop| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getAutoTime| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |fixTimeZone| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getAutoTimeZone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.MccTable| |canUpdateLocale| |android.content.Context|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.gsm.GSMPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.sip.SipPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.sip.SipPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.UiccSmsController| |isSMSPromptEnabled| ||
|com.android.server.wifi.WifiSettingsStore| |isWifiToggleEnabled| ||
|android.os.storage.StorageManager| |getStorageBytesUntilLow| |java.io.File|
|com.android.server.content.SyncManager| |access$3500| |com.android.server.content.SyncManager,com.android.server.content.SyncOperation|
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getDevConfig| ||
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getUidConfig| ||
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getUidTagConfig| ||
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getDevPersistBytes| |long|
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getGlobalAlertBytes| |long|
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getPollInterval| ||
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getTimeCacheMaxAge| ||
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getUidPersistBytes| |long|
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getUidTagPersistBytes| |long|
|com.android.server.pm.PackageManagerService| |access$3300| |com.android.server.pm.PackageManagerService|
|android.content.pm.IPackageManager$Stub$Proxy| |performBootDexOpt| ||
|android.content.pm.IPackageManager$Stub| |performBootDexOpt| ||
|com.android.server.storage.DeviceStorageMonitorService| |checkMemory| |boolean|
|com.android.server.wifi.WifiAutoJoinController| |attemptAutoJoin| ||
|com.android.server.wifi.WifiController| |access$100| |com.android.server.wifi.WifiController|
|com.android.internal.util.State| |processMessage| |android.os.Message|
|com.android.internal.util.State| |enter| ||
|com.android.server.LocationManagerService| |loadProvidersLocked| ||
|com.android.internal.telephony.dataconnection.DataConnection| |access$2600| |com.android.internal.telephony.dataconnection.DataConnection|
|com.android.internal.telephony.dataconnection.DataConnection| |getCopyNetworkCapabilities| ||
|com.android.internal.telephony.dataconnection.DataConnection| |toStringSimple| ||
|com.android.internal.telephony.dataconnection.DataConnection| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.dataconnection.DcTracker| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.PhoneBase| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.cdma.CDMAPhone| |getDataConnectionState| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onEnableApn| |int,int|
|com.android.internal.telephony.gsm.GSMPhone| |getDataConnectionState| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |isApnTypeAvailable| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |teardownForDun| ||
|com.android.internal.telephony.dataconnection.DcTracker| |checkForCompatibleConnectedApnContext| |com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |buildWaitingApns| |java.lang.String,int|
|com.android.server.am.ActivityManagerService$14| |run| ||
|com.android.server.BatteryService| |update| |android.os.BatteryProperties|
|com.android.server.connectivity.PacManager| |setDownloadIn| |int|
|com.android.server.display.OverlayDisplayAdapter| |access$000| |com.android.server.display.OverlayDisplayAdapter|
|com.android.server.DockObserver| |updateLocked| ||
|com.android.server.power.Notifier| |onWirelessChargingStarted| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pEnabledState| |enter| ||
|com.android.server.wifi.WifiServiceImpl$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wifi.WifiStateMachine$DriverStartedState| |enter| ||
|com.android.server.LocationManagerService$1| |onOpChanged| |int,java.lang.String|
|com.android.server.LocationManagerService$Receiver| |callProviderEnabledLocked| |java.lang.String,boolean|
|com.android.server.LocationManagerService$Receiver| |<init>| |com.android.server.LocationManagerService,android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|com.android.server.LocationManagerService| |reportLocation| |android.location.Location,boolean|
|com.android.server.LocationManagerService$4| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.LocationManagerService$Receiver| |binderDied| ||
|com.android.server.LocationManagerService$UpdateRecord| |disposeLocked| |boolean|
|com.android.server.LocationManagerService$2| |onChange| |boolean|
|com.android.server.LocationManagerService| |access$400| |com.android.server.LocationManagerService,int|
|android.media.WebVttRenderingWidget| |<init>| |android.content.Context,android.util.AttributeSet,int|
|android.media.WebVttRenderingWidget| |onAttachedToWindow| ||
|android.media.WebVttRenderingWidget| |onDetachedFromWindow| ||
|android.media.WebVttRenderingWidget| |setVisible| |boolean|
|android.view.accessibility.CaptioningManager| |access$200| |android.view.accessibility.CaptioningManager|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTapAndHold| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onMotionEvent| |android.view.MotionEvent|
|android.inputmethodservice.KeyboardView| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.PasswordEntryKeyboardView| |onModifiedTouchEvent| |android.view.MotionEvent,boolean|
|android.inputmethodservice.KeyboardView| |access$400| |android.inputmethodservice.KeyboardView,android.view.MotionEvent|
|com.android.internal.widget.PasswordEntryKeyboardView| |openPopupIfRequired| |android.view.MotionEvent|
|android.inputmethodservice.KeyboardView| |onLongPress| |android.inputmethodservice.Keyboard$Key|
|com.android.internal.widget.PasswordEntryKeyboardHelper| |handleModeChange| ||
|com.android.internal.widget.PasswordEntryKeyboardHelper| |handleShift| ||
|com.android.internal.widget.PasswordEntryKeyboardView| |setKeyboard| |android.inputmethodservice.Keyboard|
|android.media.IAudioService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.media.IAudioService| |reloadAudioSettings| ||
|android.speech.tts.TextToSpeechService| |access$400| |android.speech.tts.TextToSpeechService|
|android.media.SubtitleController| |access$300| |android.media.SubtitleController|
|android.view.accessibility.CaptioningManager| |access$000| |android.view.accessibility.CaptioningManager|
|com.android.internal.telephony.cdma.CDMALTEPhone| |dial| |java.lang.String,int|
|com.android.internal.telephony.gsm.GSMPhone| |dial| |java.lang.String,int|
|com.android.internal.telephony.dataconnection.DcTracker| |getCellLocationId| ||
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |handleGsmBroadcastSms| |android.os.AsyncResult|
|com.android.internal.telephony.Phone| |getCellLocation| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$2| |run| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |getAllCellInfo| ||
|com.android.internal.telephony.cdma.CDMAPhone| |getAllCellInfo| ||
|com.android.internal.telephony.gsm.GSMPhone| |getAllCellInfo| ||
|com.android.internal.telephony.Phone| |getAllCellInfo| ||
|com.android.internal.telephony.sip.SipPhoneBase| |getAllCellInfo| ||
|com.android.internal.telephony.sip.SipPhone| |getAllCellInfo| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |notifyCellInfo| |java.util.List|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |onSignalStrengthResult| |android.os.AsyncResult,boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CDMAPhone| |notifyCellInfo| |java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |notifyCellInfo| |java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |notifyCellInfo| |java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |notifyCellInfo| |java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |notifyCellInfo| |java.util.List|
|com.android.internal.telephony.sip.SipPhone| |notifyCellInfo| |java.util.List|
|com.android.nfc.handover.PeripheralHandoverService| |onStartCommand| |android.content.Intent,int,int|
|com.android.nfc.NfcService$ApplyRoutingTask| |doInBackground| |java.lang.Object[]|
|com.android.nfc.NfcService$EnableDisableTask| |doInBackground| |java.lang.Integer[]|
|android.nfc.INfcAdapter$Stub$Proxy| |addNfcUnlockHandler| |android.nfc.INfcUnlockHandler,int[]|
|android.nfc.INfcAdapter$Stub| |addNfcUnlockHandler| |android.nfc.INfcUnlockHandler,int[]|
|android.nfc.INfcAdapter$Stub$Proxy| |removeNfcUnlockHandler| |android.nfc.INfcUnlockHandler|
|android.nfc.INfcAdapter$Stub| |removeNfcUnlockHandler| |android.nfc.INfcUnlockHandler|
|android.nfc.INfcAdapter$Stub$Proxy| |setP2pModes| |int,int|
|android.nfc.INfcAdapter$Stub| |setP2pModes| |int,int|
|android.nfc.INfcAdapter$Stub$Proxy| |setReaderMode| |android.os.IBinder,android.nfc.IAppCallback,int,android.os.Bundle|
|android.nfc.INfcAdapter$Stub| |setReaderMode| |android.os.IBinder,android.nfc.IAppCallback,int,android.os.Bundle|
|com.android.nfc.DeviceHost$TagDisconnectedCallback| |onTagDisconnected| |long|
|android.nfc.INfcTag$Stub$Proxy| |close| |int|
|android.nfc.INfcTag$Stub| |close| |int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |handleOnScreenStateChange| |java.lang.String|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRotationChanged| |int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnUserContextChanged| ||
|com.android.server.AlarmManagerService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.fingerprint.FingerprintService| |onBootPhase| |int|
|com.android.server.lights.LightsService| |onBootPhase| |int|
|com.android.server.media.MediaSessionService| |onBootPhase| |int|
|com.android.server.media.projection.MediaProjectionManagerService| |onBootPhase| |int|
|com.android.server.MmsServiceBroker| |onBootPhase| |int|
|com.android.server.PersistentDataBlockService| |onBootPhase| |int|
|com.android.server.pm.Installer| |onBootPhase| |int|
|com.android.server.pm.LauncherAppsService| |onBootPhase| |int|
|com.android.server.print.PrintManagerService| |onBootPhase| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onBootPhase| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onBootPhase| |int|
|com.android.server.SystemServiceManager| |startBootPhase| |int|
|com.android.server.twilight.TwilightService| |onBootPhase| |int|
|com.android.server.usage.UsageStatsService| |onBootPhase| |int|
|com.android.server.webkit.WebViewUpdateService| |onBootPhase| |int|
|com.android.server.location.GpsLocationProvider$2| |onReceive| |android.content.Context,android.content.Intent|
|android.location.ILocationManager$Stub$Proxy| |addTestProvider| |java.lang.String,com.android.internal.location.ProviderProperties|
|android.location.ILocationManager$Stub| |addTestProvider| |java.lang.String,com.android.internal.location.ProviderProperties|
|android.location.ILocationManager$Stub$Proxy| |clearTestProviderEnabled| |java.lang.String|
|android.location.ILocationManager$Stub| |clearTestProviderEnabled| |java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |clearTestProviderLocation| |java.lang.String|
|android.location.ILocationManager$Stub| |clearTestProviderLocation| |java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |clearTestProviderStatus| |java.lang.String|
|android.location.ILocationManager$Stub| |clearTestProviderStatus| |java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |removeTestProvider| |java.lang.String|
|android.location.ILocationManager$Stub| |removeTestProvider| |java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |setTestProviderEnabled| |java.lang.String,boolean|
|android.location.ILocationManager$Stub| |setTestProviderEnabled| |java.lang.String,boolean|
|android.location.ILocationManager$Stub$Proxy| |setTestProviderLocation| |java.lang.String,android.location.Location|
|android.location.ILocationManager$Stub| |setTestProviderLocation| |java.lang.String,android.location.Location|
|android.location.ILocationManager$Stub$Proxy| |setTestProviderStatus| |java.lang.String,int,android.os.Bundle,long|
|android.location.ILocationManager$Stub| |setTestProviderStatus| |java.lang.String,int,android.os.Bundle,long|
|com.android.server.net.NetworkPolicyManagerService| |systemReady| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.Class|
|com.android.server.am.ActivityManagerService| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener$NativeCrashReporter| |run| ||
|com.android.server.UiModeManagerService| |updateAfterBroadcastLocked| |java.lang.String,int,int|
|com.android.server.UiModeManagerService| |updateLocked| |int,int|
|android.inputmethodservice.ExtractButton| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.CompoundButton| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.inputmethodservice.ExtractEditText| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.AutoCompleteTextView| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.NumberPicker$CustomEditText| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.SearchView$SearchAutoComplete| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.Switch| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.NumberPicker$AccessibilityNodeProviderImpl| |sendAccessibilityEventForVirtualText| |int|
|com.android.internal.view.menu.ActionMenuItemView| |dispatchPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1900| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |finishPostLayoutPolicyLw| ||
|com.android.internal.policy.impl.PhoneWindowManager| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |beginLayoutLw| |boolean,int,int,int|
|com.android.internal.policy.impl.PhoneWindowManager$18| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromRight| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromTop| ||
|com.android.server.accessibility.AccessibilityManagerService$1| |onSomePackagesChanged| ||
|com.android.server.accessibility.AccessibilityManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$Service| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService| |access$800| |com.android.server.accessibility.AccessibilityManagerService,int|
|com.android.server.accessibility.AccessibilityManagerService| |access$500| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |ensureWindowsAvailableTimed| ||
|com.android.server.accessibility.AccessibilityManagerService| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|com.android.server.dreams.DreamManagerService$6| |run| ||
|com.android.server.dreams.DreamManagerService| |access$800| |com.android.server.dreams.DreamManagerService,java.io.PrintWriter|
|com.android.server.power.PowerManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.power.PowerManagerService$UserSwitchedReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wm.WindowManagerService$2| |run| ||
|com.android.server.am.ActivityRecord| |setTask| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord|
|com.android.server.am.ActivityStackSupervisor| |moveTaskToStackLocked| |int,int,boolean|
|com.android.server.InputMethodManagerService| |getCurrentInputMethodSubtype| ||
|com.android.server.InputMethodManagerService| |setInputMethodLocked| |java.lang.String,int|
|com.android.server.InputMethodManagerService| |setSelectedInputMethodAndSubtypeLocked| |android.view.inputmethod.InputMethodInfo,int,boolean|
|android.speech.tts.TextToSpeech| |access$1700| |android.speech.tts.TextToSpeech|
|android.speech.tts.TextToSpeech| |setEngineByPackageName| |java.lang.String|
|android.speech.tts.TextToSpeech| |<init>| |android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String,java.lang.String,boolean|
|android.speech.tts.TextToSpeechService$1| |getClientDefaultLanguage| ||
|android.speech.tts.TextToSpeechService$SynthesisSpeechItemV1| |<init>| |android.speech.tts.TextToSpeechService,java.lang.Object,int,int,android.os.Bundle,java.lang.String,java.lang.CharSequence|
|android.media.ClosedCaptionWidget| |<init>| |android.content.Context,android.util.AttributeSet|
|android.media.TtmlRenderingWidget| |<init>| |android.content.Context,android.util.AttributeSet,int|
|android.view.accessibility.CaptioningManager| |access$500| |android.view.accessibility.CaptioningManager|
|android.view.accessibility.CaptioningManager| |access$100| |android.view.accessibility.CaptioningManager|
|com.android.server.am.ActivityManagerService| |installSystemProviders| ||
|android.app.backup.IBackupManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.IBackupManager| |setBackupServiceActive| |int,boolean|
|com.android.server.CertBlacklister$BlacklistObserver| |onChange| |boolean|
|com.android.server.updates.ConfigUpdateInstallReceiver| |onReceive| |android.content.Context,android.content.Intent|
|android.view.ViewRootImpl| |playSoundEffect| |int|
|com.android.internal.policy.impl.PhoneWindow| |onKeyUpPanel| |int,android.view.KeyEvent|
|android.media.AudioService$VolumeStreamState| |<init>| |android.media.AudioService,java.lang.String,int,android.media.AudioService$1|
|android.text.method.TextKeyListener| |access$200| |android.text.method.TextKeyListener,android.content.ContentResolver|
|android.text.method.TextKeyListener| |initPrefs| |android.content.Context|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |doRecovery| ||
|com.android.internal.telephony.dataconnection.DcTracker| |getRecoveryAction| ||
|com.android.nfc.NfcService$NfcAdapterService| |enable| ||
|com.android.server.notification.NotificationManagerService$SettingsObserver| |observe| ||
|com.android.server.notification.NotificationManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|android.view.WindowManagerPolicy| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.internal.policy.impl.WakeGestureListener| |onWakeUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$800| |com.android.internal.policy.impl.PhoneWindowManager|
|android.view.WindowManagerPolicy| |setSafeMode| |boolean|
|com.android.server.wm.WindowManagerService| |isRotationFrozen| ||
|com.android.server.wm.InputMonitor| |interceptKeyBeforeDispatching| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager| |dispatchUnhandledKey| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |doFinish| ||
|com.android.internal.widget.multiwaveview.GlowPadView| |switchToState| |int,float,float|
|com.android.internal.widget.SlidingTab| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.WaveView| |waveUpdateFrame| |float,float,boolean|
|com.android.server.input.InputManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.input.InputManagerService$7| |onChange| |boolean|
|com.android.server.input.InputManagerService| |start| ||
|com.android.server.input.InputManagerService$8| |onChange| |boolean|
|com.android.server.VibratorService$1| |onLowPowerModeChanged| |boolean|
|com.android.server.VibratorService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.VibratorService$SettingsObserver| |onChange| |boolean|
|android.media.MediaScanner$MyMediaScannerClient| |doScanFile| |java.lang.String,java.lang.String,long,long,boolean,boolean,boolean|
|android.media.MediaPlayer| |setDataSource| |android.content.Context,android.net.Uri|
|android.widget.VideoView| |openVideo| ||
|android.media.Ringtone| |play| ||
|android.media.Ringtone| |getTitle| |android.content.Context|
|android.net.http.SslCertificate| |inflateCertificateView| |android.content.Context|
|android.widget.DateTimeView| |clearFormatAndUpdate| ||
|android.widget.DateTimeView| |setTime| |long|
|com.android.server.notification.NotificationManagerService$8| |run| ||
|com.android.server.notification.NotificationManagerService| |access$4300| |com.android.server.notification.NotificationManagerService,android.os.Message|
|android.text.format.DateUtils| |formatDateRange| |android.content.Context,java.util.Formatter,long,long,int|
|android.widget.SimpleMonthView| |getMonthAndYearString| ||
|com.android.server.notification.DowntimeConditionProvider| |evaluateAutotrigger| ||
|com.android.server.notification.DowntimeConditionProvider| |notifyCondition| |android.service.notification.ZenModeConfig$DowntimeInfo|
|com.android.server.notification.NextAlarmTracker| |formatAlarmDebug| |long|
|com.android.server.notification.NextAlarmTracker| |formatAlarm| |long|
|android.text.format.DateFormat| |getTimeFormat| |android.content.Context|
|android.widget.DigitalClock| |setFormat| ||
|android.widget.TextClock| |chooseFormat| ||
|android.widget.TextClock| |init| ||
|com.android.server.AlarmManagerService| |access$600| |com.android.server.AlarmManagerService|
|com.android.server.InputMethodManagerService| |getLastInputMethodSubtype| ||
|com.android.server.InputMethodManagerService| |resetSelectedInputMethodAndSubtypeLocked| |java.lang.String|
|com.android.internal.inputmethod.InputMethodSubtypeSwitchingController$InputMethodAndSubtypeList| |getSortedInputMethodAndSubtypeList| |boolean,boolean,boolean|
|com.android.server.InputMethodManagerService| |getShortcutInputMethodsAndSubtypes| ||
|com.android.server.InputMethodManagerService| |access$300| |com.android.server.InputMethodManagerService|
|com.android.internal.view.IInputMethodManager$Stub$Proxy| |switchToLastInputMethod| |android.os.IBinder|
|com.android.internal.view.IInputMethodManager$Stub| |switchToLastInputMethod| |android.os.IBinder|
|com.android.internal.view.IInputMethodManager$Stub$Proxy| |getEnabledInputMethodList| ||
|com.android.internal.view.IInputMethodManager$Stub| |getEnabledInputMethodList| ||
|com.android.server.InputMethodManagerService| |getEnabledInputMethodSubtypeList| |java.lang.String,boolean|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.app.ResolverActivity$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.ServiceWatcher$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.trust.TrustManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.tv.TvInputManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|android.app.IUserSwitchObserver$Stub$Proxy| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.server.wm.WindowManagerService$3| |run| ||
|android.nfc.cardemulation.CardEmulation| |isDefaultServiceForCategory| |android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.nfc.cardemulation.RegisteredServicesCache| |registerAidGroupForService| |int,int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|com.android.nfc.cardemulation.RegisteredServicesCache| |removeAidGroupForService| |int,int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.RegisteredServicesCache| |invalidateCache| |int|
|com.android.server.dreams.DreamManagerService$LocalService| |startDream| |boolean|
|com.android.server.media.MediaSessionService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.notification.ManagedServices$SettingsObserver| |access$100| |com.android.server.notification.ManagedServices$SettingsObserver|
|com.android.server.notification.NotificationManagerService| |access$3600| |com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationRecord|
|android.print.IPrintManager$Stub$Proxy| |print| |java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int|
|android.print.IPrintManager$Stub| |print| |java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int|
|android.print.IPrintManager$Stub$Proxy| |getPrintJobInfo| |android.print.PrintJobId,int,int|
|android.print.IPrintManager$Stub| |getPrintJobInfo| |android.print.PrintJobId,int,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl$1| |onChange| |boolean,android.net.Uri,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onPackageModified| |java.lang.String|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onPackageRemoved| |java.lang.String,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl$3| |run| ||
|android.print.IPrintManager$Stub$Proxy| |getEnabledPrintServices| |int|
|android.print.IPrintManager$Stub| |getEnabledPrintServices| |int|
|android.print.IPrintManager$Stub$Proxy| |getInstalledPrintServices| |int|
|android.print.IPrintManager$Stub| |getInstalledPrintServices| |int|
|android.print.IPrintManager$Stub$Proxy| |getPrintJobInfos| |int,int|
|android.print.IPrintManager$Stub| |getPrintJobInfos| |int,int|
|android.print.IPrintManager$Stub$Proxy| |addPrintJobStateChangeListener| |android.print.IPrintJobStateChangeListener,int,int|
|android.print.IPrintManager$Stub| |addPrintJobStateChangeListener| |android.print.IPrintJobStateChangeListener,int,int|
|android.print.IPrintManager$Stub$Proxy| |cancelPrintJob| |android.print.PrintJobId,int,int|
|android.print.IPrintManager$Stub| |cancelPrintJob| |android.print.PrintJobId,int,int|
|android.print.IPrintManager$Stub$Proxy| |createPrinterDiscoverySession| |android.print.IPrinterDiscoveryObserver,int|
|android.print.IPrintManager$Stub| |createPrinterDiscoverySession| |android.print.IPrinterDiscoveryObserver,int|
|android.print.IPrintManager$Stub$Proxy| |destroyPrinterDiscoverySession| |android.print.IPrinterDiscoveryObserver,int|
|android.print.IPrintManager$Stub| |destroyPrinterDiscoverySession| |android.print.IPrinterDiscoveryObserver,int|
|android.print.IPrintManager$Stub$Proxy| |removePrintJobStateChangeListener| |android.print.IPrintJobStateChangeListener,int|
|android.print.IPrintManager$Stub| |removePrintJobStateChangeListener| |android.print.IPrintJobStateChangeListener,int|
|android.print.IPrintManager$Stub$Proxy| |restartPrintJob| |android.print.PrintJobId,int,int|
|android.print.IPrintManager$Stub| |restartPrintJob| |android.print.PrintJobId,int,int|
|android.print.IPrintManager$Stub$Proxy| |startPrinterDiscovery| |android.print.IPrinterDiscoveryObserver,java.util.List,int|
|android.print.IPrintManager$Stub| |startPrinterDiscovery| |android.print.IPrinterDiscoveryObserver,java.util.List,int|
|android.print.IPrintManager$Stub$Proxy| |startPrinterStateTracking| |android.print.PrinterId,int|
|android.print.IPrintManager$Stub| |startPrinterStateTracking| |android.print.PrinterId,int|
|android.print.IPrintManager$Stub$Proxy| |stopPrinterDiscovery| |android.print.IPrinterDiscoveryObserver,int|
|android.print.IPrintManager$Stub| |stopPrinterDiscovery| |android.print.IPrinterDiscoveryObserver,int|
|android.print.IPrintManager$Stub$Proxy| |stopPrinterStateTracking| |android.print.PrinterId,int|
|android.print.IPrintManager$Stub| |stopPrinterStateTracking| |android.print.PrinterId,int|
|android.print.IPrintManager$Stub$Proxy| |validatePrinters| |java.util.List,int|
|android.print.IPrintManager$Stub| |validatePrinters| |java.util.List,int|
|android.view.textservice.TextServicesManager| |getCurrentSpellCheckerSubtype| |boolean|
|com.android.server.TextServicesManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.textservice.ITextServicesManager| |getCurrentSpellChecker| |java.lang.String|
|com.android.server.TextServicesManagerService| |access$800| |com.android.server.TextServicesManagerService,java.lang.String|
|com.android.server.TextServicesManagerService| |access$100| |com.android.server.TextServicesManagerService,int|
|com.android.server.TextServicesManagerService| |<init>| |android.content.Context|
|com.android.internal.textservice.ITextServicesManager$Stub$Proxy| |getEnabledSpellCheckers| ||
|com.android.internal.textservice.ITextServicesManager$Stub| |getEnabledSpellCheckers| ||
|com.android.internal.textservice.ITextServicesManager$Stub$Proxy| |isSpellCheckerEnabled| ||
|com.android.internal.textservice.ITextServicesManager$Stub| |isSpellCheckerEnabled| ||
|com.android.internal.textservice.ITextServicesManager$Stub$Proxy| |finishSpellCheckerService| |com.android.internal.textservice.ISpellCheckerSessionListener|
|com.android.internal.textservice.ITextServicesManager$Stub| |finishSpellCheckerService| |com.android.internal.textservice.ISpellCheckerSessionListener|
|com.android.internal.textservice.ITextServicesManager$Stub$Proxy| |getSpellCheckerService| |java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle|
|com.android.internal.textservice.ITextServicesManager$Stub| |getSpellCheckerService| |java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle|
|com.android.internal.textservice.ITextServicesManager$Stub$Proxy| |setCurrentSpellChecker| |java.lang.String,java.lang.String|
|com.android.internal.textservice.ITextServicesManager$Stub| |setCurrentSpellChecker| |java.lang.String,java.lang.String|
|com.android.internal.textservice.ITextServicesManager$Stub$Proxy| |setCurrentSpellCheckerSubtype| |java.lang.String,int|
|com.android.internal.textservice.ITextServicesManager$Stub| |setCurrentSpellCheckerSubtype| |java.lang.String,int|
|com.android.internal.textservice.ITextServicesManager$Stub$Proxy| |setSpellCheckerEnabled| |boolean|
|com.android.internal.textservice.ITextServicesManager$Stub| |setSpellCheckerEnabled| |boolean|
|com.android.server.am.ActivityManagerService| |startUser| |int,boolean|
|com.android.server.AlarmManagerService| |onSwitchUser| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onSwitchUser| |int|
|com.android.server.appwidget.AppWidgetService| |onSwitchUser| |int|
|com.android.server.backup.BackupManagerService$Lifecycle| |onSwitchUser| |int|
|com.android.server.BatteryService| |onSwitchUser| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |onSwitchUser| |int|
|com.android.server.display.DisplayManagerService| |onSwitchUser| |int|
|com.android.server.DockObserver| |onSwitchUser| |int|
|com.android.server.dreams.DreamManagerService| |onSwitchUser| |int|
|com.android.server.ethernet.EthernetService| |onSwitchUser| |int|
|com.android.server.fingerprint.FingerprintService| |onSwitchUser| |int|
|com.android.server.hdmi.HdmiControlService| |onSwitchUser| |int|
|com.android.server.job.JobSchedulerService| |onSwitchUser| |int|
|com.android.server.lights.LightsService| |onSwitchUser| |int|
|com.android.server.MmsServiceBroker| |onSwitchUser| |int|
|com.android.server.notification.NotificationManagerService| |onSwitchUser| |int|
|com.android.server.PersistentDataBlockService| |onSwitchUser| |int|
|com.android.server.pm.Installer| |onSwitchUser| |int|
|com.android.server.pm.LauncherAppsService| |onSwitchUser| |int|
|com.android.server.power.PowerManagerService| |onSwitchUser| |int|
|com.android.server.print.PrintManagerService| |onSwitchUser| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onSwitchUser| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onSwitchUser| |int|
|com.android.server.SystemServiceManager| |switchUser| |int|
|com.android.server.telecom.TelecomLoaderService| |onSwitchUser| |int|
|com.android.server.tv.TvInputManagerService| |onSwitchUser| |int|
|com.android.server.twilight.TwilightService| |onSwitchUser| |int|
|com.android.server.UiModeManagerService| |onSwitchUser| |int|
|com.android.server.usage.UsageStatsService| |onSwitchUser| |int|
|com.android.server.usb.UsbService$Lifecycle| |onSwitchUser| |int|
|com.android.server.webkit.WebViewUpdateService| |onSwitchUser| |int|
|com.android.server.wifi.p2p.WifiP2pService| |onSwitchUser| |int|
|com.android.server.wifi.RttService| |onSwitchUser| |int|
|com.android.server.wifi.WifiScanningService| |onSwitchUser| |int|
|com.android.server.wifi.WifiService| |onSwitchUser| |int|
|com.android.server.trust.TrustManagerService| |access$1400| |com.android.server.trust.TrustManagerService,boolean,int|
|com.android.internal.widget.LockPatternUtils| |saveLockPattern| |java.util.List|
|com.android.internal.widget.ILockSettings| |checkPassword| |java.lang.String,int|
|com.android.internal.widget.ILockSettings| |setLockPassword| |java.lang.String,int|
|com.android.internal.widget.LockPatternUtils| |checkVoldPassword| ||
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getGlobalProxyAdmin| |int|
|android.app.admin.IDevicePolicyManager$Stub| |getGlobalProxyAdmin| |int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getRestrictionsProvider| |int|
|android.app.admin.IDevicePolicyManager$Stub| |getRestrictionsProvider| |int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setGlobalProxy| |android.content.ComponentName,java.lang.String,java.lang.String,int|
|android.app.admin.IDevicePolicyManager$Stub| |setGlobalProxy| |android.content.ComponentName,java.lang.String,java.lang.String,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getCameraDisabled| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getCameraDisabled| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |syncDeviceCapabilitiesLocked| |com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getScreenCaptureDisabled| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getScreenCaptureDisabled| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getStorageEncryption| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getStorageEncryption| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |allowedToSetDeviceOwnerOnDevice| ||
|com.android.server.devicepolicy.DevicePolicyManagerService| |hasUserSetupCompleted| ||
|com.android.server.devicepolicy.DevicePolicyManagerService| |setProfileOwner| |android.content.ComponentName,java.lang.String,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |isLockTaskPermitted| |java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |isLockTaskPermitted| |java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |isRemovingAdmin| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |isRemovingAdmin| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |packageHasActiveAdmins| |java.lang.String,int|
|android.app.admin.IDevicePolicyManager$Stub| |packageHasActiveAdmins| |java.lang.String,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |resetPassword| |java.lang.String,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |resetPassword| |java.lang.String,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getApplicationRestrictions| |android.content.ComponentName,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |createUser| |android.content.ComponentName,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |addCrossProfileWidgetProvider| |android.content.ComponentName,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getCrossProfileCallerIdDisabled| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |installKeyPair| |android.content.ComponentName,byte[],byte[],java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |isActivePasswordSufficient| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |isApplicationHidden| |android.content.ComponentName,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |isMasterVolumeMuted| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |isUninstallBlocked| |android.content.ComponentName,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |removeCrossProfileWidgetProvider| |android.content.ComponentName,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |removeUser| |android.content.ComponentName,android.os.UserHandle|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setApplicationHidden| |android.content.ComponentName,java.lang.String,boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPermittedAccessibilityServices| |android.content.ComponentName,java.util.List|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPermittedInputMethods| |android.content.ComponentName,java.util.List|
|com.android.server.devicepolicy.DevicePolicyManagerService| |switchUser| |android.content.ComponentName,android.os.UserHandle|
|com.android.server.devicepolicy.DevicePolicyManagerService| |enableSystemAppWithIntent| |android.content.ComponentName,android.content.Intent|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getCurrentFailedPasswordAttempts| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getCrossProfileWidgetProviders| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPermittedAccessibilityServices| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPermittedInputMethods| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |addCrossProfileIntentFilter| |android.content.ComponentName,android.content.IntentFilter,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |addPersistentPreferredActivity| |android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |clearCrossProfileIntentFilters| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |clearPackagePersistentPreferredActivities| |android.content.ComponentName,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |clearProfileOwner| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |enableSystemApp| |android.content.ComponentName,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |enforceCanManageCaCerts| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |lockNow| ||
|com.android.server.devicepolicy.DevicePolicyManagerService| |setAccountManagementDisabled| |android.content.ComponentName,java.lang.String,boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setApplicationRestrictions| |android.content.ComponentName,java.lang.String,android.os.Bundle|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setAutoTimeRequired| |android.content.ComponentName,int,boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setCrossProfileCallerIdDisabled| |android.content.ComponentName,boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setGlobalSetting| |android.content.ComponentName,java.lang.String,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setMasterVolumeMuted| |android.content.ComponentName,boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setMaximumFailedPasswordsForWipe| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPasswordHistoryLength| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPasswordMinimumLength| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPasswordMinimumLetters| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPasswordMinimumLowerCase| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPasswordMinimumNonLetter| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPasswordMinimumNumeric| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPasswordMinimumSymbols| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPasswordMinimumUpperCase| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setPasswordQuality| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setProfileEnabled| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setProfileName| |android.content.ComponentName,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setRecommendedGlobalProxy| |android.content.ComponentName,android.net.ProxyInfo|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setScreenCaptureDisabled| |android.content.ComponentName,int,boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setSecureSetting| |android.content.ComponentName,java.lang.String,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setUninstallBlocked| |android.content.ComponentName,java.lang.String,boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setUserRestriction| |android.content.ComponentName,java.lang.String,boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |wipeData| |int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |hasGrantedPolicy| |android.content.ComponentName,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |isAdminActive| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getMaximumFailedPasswordsForWipe| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordHistoryLength| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordMinimumLength| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordMinimumLetters| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordMinimumLowerCase| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordMinimumNonLetter| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordMinimumNumeric| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordMinimumSymbols| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordMinimumUpperCase| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordQuality| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getTrustAgentConfiguration| |android.content.ComponentName,android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getMaximumTimeToLock| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordExpirationLocked| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordExpirationTimeout| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getRemoveWarning| |android.content.ComponentName,android.os.RemoteCallback,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |removeActiveAdmin| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getAutoTimeRequired| ||
|com.android.server.devicepolicy.DevicePolicyManagerService| |getCrossProfileCallerIdDisabledForUser| |int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getKeyguardDisabledFeatures| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getKeyguardDisabledFeatures| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setStorageEncryption| |android.content.ComponentName,boolean,int|
|android.app.admin.IDevicePolicyManager$Stub| |setStorageEncryption| |android.content.ComponentName,boolean,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getAccountTypesWithManagementDisabledAsUser| |int|
|android.app.admin.IDevicePolicyManager$Stub| |getAccountTypesWithManagementDisabledAsUser| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getAccountTypesWithManagementDisabled| ||
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getLockTaskPackages| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |getLockTaskPackages| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getActiveAdmins| |int|
|android.app.admin.IDevicePolicyManager$Stub| |getActiveAdmins| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |access$200| |com.android.server.devicepolicy.DevicePolicyManagerService,java.lang.String,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |access$000| |com.android.server.devicepolicy.DevicePolicyManagerService,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |notifyLockTaskModeChanged| |boolean,java.lang.String,int|
|android.app.admin.IDevicePolicyManager$Stub| |notifyLockTaskModeChanged| |boolean,java.lang.String,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |reportSuccessfulPasswordAttempt| |int|
|android.app.admin.IDevicePolicyManager$Stub| |reportSuccessfulPasswordAttempt| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |access$500| |com.android.server.devicepolicy.DevicePolicyManagerService,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |updatePasswordExpirationsLocked| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |sendAdminCommandToSelfAndProfilesLocked| |java.lang.String,int,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setActiveAdmin| |android.content.ComponentName,boolean,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setActivePasswordState| |int,int,int,int,int,int,int,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setActivePasswordState| |int,int,int,int,int,int,int,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setCameraDisabled| |android.content.ComponentName,boolean,int|
|android.app.admin.IDevicePolicyManager$Stub| |setCameraDisabled| |android.content.ComponentName,boolean,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setKeyguardDisabledFeatures| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setKeyguardDisabledFeatures| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setLockTaskPackages| |android.content.ComponentName,java.lang.String[]|
|android.app.admin.IDevicePolicyManager$Stub| |setLockTaskPackages| |android.content.ComponentName,java.lang.String[]|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setMaximumTimeToLock| |android.content.ComponentName,long,int|
|android.app.admin.IDevicePolicyManager$Stub| |setMaximumTimeToLock| |android.content.ComponentName,long,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPasswordExpirationTimeout| |android.content.ComponentName,long,int|
|android.app.admin.IDevicePolicyManager$Stub| |setPasswordExpirationTimeout| |android.content.ComponentName,long,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setRestrictionsProvider| |android.content.ComponentName,android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |setRestrictionsProvider| |android.content.ComponentName,android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setTrustAgentConfiguration| |android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,int|
|android.app.admin.IDevicePolicyManager$Stub| |setTrustAgentConfiguration| |android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,int|
|com.android.internal.policy.impl.keyguard.KeyguardServiceDelegate| |isSecure| ||
|com.android.server.trust.TrustAgentWrapper$4| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.trust.TrustManagerService| |updateDevicePolicyFeatures| ||
|com.android.server.trust.TrustManagerService| |addListener| |android.app.trust.ITrustListener|
|com.android.server.trust.TrustManagerService| |removeAgentsOfPackage| |java.lang.String|
|com.android.server.wifi.WifiAutoJoinController| |addToScanCache| |java.util.List|
|android.net.INetworkScoreService$Stub$Proxy| |clearScores| ||
|android.net.INetworkScoreService$Stub| |clearScores| ||
|android.net.INetworkScoreService$Stub$Proxy| |updateScores| |android.net.ScoredNetwork[]|
|android.net.INetworkScoreService$Stub| |updateScores| |android.net.ScoredNetwork[]|
|android.net.INetworkScoreService$Stub$Proxy| |disableScoring| ||
|android.net.INetworkScoreService$Stub| |disableScoring| ||
|com.android.server.am.ActivityManagerService| |makeAppCrashingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |makeAppNotRespondingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|android.media.AudioService$ScoClient| |binderDied| ||
|android.media.AudioService| |clearAllScoClients| |int,boolean|
|com.android.server.pm.PackageManagerService$HandlerParams| |handleStartCopy| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |setUiTTYMode| |int,android.os.Message|
|com.android.internal.app.LocalePicker| |onActivityCreated| |android.os.Bundle|
|com.android.internal.policy.impl.GlobalActions| |access$1800| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.GlobalActions| |showDialog| |boolean,boolean|
|com.android.internal.policy.impl.GlobalActions$10| |onChange| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1300| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1200| |com.android.internal.policy.impl.PhoneWindowManager,long,boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |notifyCameraLensCoverSwitchChanged| |long,boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |notifyLidSwitchChanged| |long,boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |wakeUpFromPowerKey| |long|
|android.view.WindowManagerPolicy| |interceptMotionBeforeQueueingNonInteractive| |long,int|
|com.android.internal.policy.impl.PhoneWindowManager| |powerPress| |long,boolean,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |initSstIcc| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone|
|com.android.internal.telephony.cdma.CDMAPhone| |initSstIcc| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |access$000| |com.android.internal.telephony.cdma.CdmaServiceStateTracker|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker$1| |onChange| |boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |access$100| |com.android.internal.telephony.cdma.CdmaServiceStateTracker|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker$2| |onChange| |boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager| |getInstance| |android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhones| |android.content.Context|
|com.android.internal.telephony.cdma.CDMALTEPhone| |getDataEnabled| ||
|com.android.internal.telephony.dataconnection.DcTracker| |<init>| |com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.dataconnection.DcTracker| |update| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |getDataRoamingEnabled| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onSetUserDataEnabled| |boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |setDataRoamingEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |setDataOnRoamingEnabled| |boolean|
|com.android.internal.telephony.gsm.GSMPhone| |setDataRoamingEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |isDataAllowed| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onRoamingOff| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onRoamingOn| ||
|com.android.internal.telephony.dataconnection.DcTracker| |setupData| |com.android.internal.telephony.dataconnection.ApnContext,int|
|com.android.internal.telephony.dataconnection.DcTracker| |handleStartNetStatPoll| |com.android.internal.telephony.DctConstants$Activity|
|com.android.internal.telephony.dataconnection.DcTrackerBase$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.dataconnection.DcTracker| |restartDataStallAlarm| ||
|com.android.internal.telephony.dataconnection.DcTracker| |completeConnection| |com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |onDataConnectionAttached| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onVoiceCallEnded| ||
|com.android.internal.telephony.ServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.gsm.GSMPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.ServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker$2| |onChange| |boolean|
|com.android.internal.telephony.gsm.GsmServiceStateTracker$3| |onChange| |boolean|
|com.android.internal.telephony.ISub$Stub$Proxy| |setDefaultDataSubId| |int|
|com.android.internal.telephony.ISub$Stub| |setDefaultDataSubId| |int|
|com.android.internal.telephony.SubscriptionController| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher|
|com.android.internal.telephony.SmsUsageMonitor$SettingsObserverHandler| |<init>| |android.content.Context,java.util.concurrent.atomic.AtomicBoolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.dataconnection.DctController| |access$400| |com.android.internal.telephony.dataconnection.DctController,android.net.NetworkRequest|
|com.android.internal.telephony.dataconnection.DctController| |getTopPriorityRequestPhoneId| ||
|com.android.internal.telephony.dataconnection.DctController| |onExecuteAllRequests| |int|
|com.android.internal.telephony.dataconnection.DctController| |onExecuteRequest| |com.android.internal.telephony.dataconnection.DcSwitchAsyncChannel$RequestInfo|
|com.android.internal.telephony.dataconnection.DctController| |onProcessRequest| ||
|com.android.internal.telephony.dataconnection.DctController| |onReleaseAllRequests| |int|
|com.android.internal.telephony.dataconnection.DctController| |onReleaseRequest| |com.android.internal.telephony.dataconnection.DcSwitchAsyncChannel$RequestInfo|
|com.android.internal.telephony.dataconnection.DctController| |access$200| |com.android.internal.telephony.dataconnection.DctController|
|com.android.internal.telephony.ISub| |getDefaultDataSubId| ||
|com.android.internal.telephony.ISub$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISub$Stub$Proxy| |getDefaultSubId| ||
|com.android.internal.telephony.cat.CatService| |getInstance| ||
|com.android.internal.telephony.ISub$Stub| |getDefaultSubId| ||
|com.android.internal.telephony.PhoneFactory| |getDefaultSubscription| ||
|com.android.internal.telephony.SubscriptionController| |getPhoneId| |int|
|com.android.internal.telephony.SubscriptionController| |getSlotId| |int|
|com.android.internal.telephony.SubscriptionController| |getSubId| |int|
|com.android.internal.telephony.SubscriptionController| |getSubInfoUsingSlotIdWithCheck| |int,boolean|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLoaded| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.ISub$Stub| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.ISub| |getDefaultSmsSubId| ||
|com.android.internal.telephony.uicc.IccRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onRecordLoaded| ||
|com.android.internal.telephony.ISms$Stub$Proxy| |getPreferredSmsSubscription| ||
|com.android.internal.telephony.ISms$Stub| |getPreferredSmsSubscription| ||
|com.android.internal.telephony.UiccSmsController| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.UiccSmsController| |isImsSmsSupported| ||
|com.android.internal.telephony.UiccSmsController| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.UiccSmsController| |getPremiumSmsPermission| |java.lang.String|
|com.android.internal.telephony.UiccSmsController| |getImsSmsFormat| ||
|com.android.internal.telephony.UiccSmsController| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.UiccSmsController| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.UiccSmsController| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |setPremiumSmsPermission| |java.lang.String,int|
|com.android.internal.telephony.ISub| |getDefaultVoiceSubId| ||
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.BatteryService$1| |onChange| |boolean|
|com.android.server.display.WifiDisplayController$1| |onChange| |boolean,android.net.Uri|
|com.android.server.display.WifiDisplayAdapter$1| |run| ||
|com.android.server.DockObserver| |access$400| |com.android.server.DockObserver,int|
|com.android.server.DockObserver| |init| ||
|com.android.server.DropBoxManagerService$1$1| |run| ||
|com.android.internal.os.IDropBoxManagerService$Stub$Proxy| |add| |android.os.DropBoxManager$Entry|
|com.android.internal.os.IDropBoxManagerService$Stub| |add| |android.os.DropBoxManager$Entry|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |onNewAvrAdded| |android.hardware.hdmi.HdmiDeviceInfo|
|com.android.server.hdmi.SystemAudioAutoInitiationAction| |handleSystemAudioModeStatusMessage| ||
|com.android.server.hdmi.SystemAudioAutoInitiationAction| |handleSystemAudioModeStatusTimeout| ||
|com.android.server.hdmi.HdmiCecLocalDevice| |create| |com.android.server.hdmi.HdmiControlService,int|
|com.android.server.location.ComprehensiveCountryDetector$2| |run| ||
|com.android.server.location.GpsLocationProvider| |handleSetRequest| |com.android.internal.location.ProviderRequest,android.os.WorkSource|
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getSampleEnabled| ||
|com.android.server.NetworkTimeUpdateService| |access$300| |com.android.server.NetworkTimeUpdateService,int|
|com.android.server.notification.RankingHelper| |<init>| |android.content.Context,android.os.Handler,java.lang.String[]|
|com.android.server.notification.ZenModeHelper$SettingsObserver| |observe| ||
|com.android.server.notification.ZenModeHelper$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.NsdService$NsdStateMachine$1| |onChange| |boolean|
|com.android.server.NsdService$NsdStateMachine| |<init>| |com.android.server.NsdService,java.lang.String|
|android.content.pm.IPackageManager| |getInstallLocation| ||
|android.content.pm.IPackageManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager$Stub$Proxy| |setInstallLocation| |int|
|android.content.pm.IPackageManager$Stub| |setInstallLocation| |int|
|android.content.pm.IPackageManager| |systemReady| ||
|com.android.server.SamplingProfilerService| |registerSettingObserver| |android.content.Context|
|com.android.server.wifi.WifiStateMachine$ConnectModeState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine| |handleIpConfigurationLost| ||
|com.android.internal.util.StateMachine| |getLogRecString| |android.os.Message|
|com.android.server.wifi.WifiStateMachine| |logStateAndMessage| |android.os.Message,java.lang.String|
|com.android.server.wifi.WifiController$2| |onChange| |boolean|
|com.android.server.wifi.WifiController| |<init>| |android.content.Context,com.android.server.wifi.WifiServiceImpl,android.os.Looper|
|com.android.server.wifi.WifiController$4| |onChange| |boolean|
|com.android.server.wifi.WifiService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiServiceImpl$3| |onChange| |boolean|
|com.android.server.wifi.WifiWatchdogStateMachine| |access$600| |com.android.server.wifi.WifiWatchdogStateMachine|
|com.android.server.wifi.WifiWatchdogStateMachine| |<init>| |android.content.Context,android.os.Messenger|
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLocked| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |fixTimeZone| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.MccTable| |getLocaleForLanguageCountry| |android.content.Context,java.lang.String,java.lang.String|
|com.android.internal.telephony.ISms$Stub$Proxy| |isSMSPromptEnabled| ||
|com.android.internal.telephony.ISms$Stub| |isSMSPromptEnabled| ||
|com.android.server.wifi.WifiController$ApStaDisabledState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$EcmState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$StaDisabledWithScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$StaEnabledState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiServiceImpl| |checkAndStartWifi| ||
|com.android.internal.content.PackageHelper| |resolveInstallLocation| |android.content.Context,java.lang.String,int,long,int|
|com.android.server.pm.PackageManagerService$AsecInstallArgs| |checkFreeStorage| |com.android.internal.app.IMediaContainerService|
|com.android.server.pm.PackageManagerService$FileInstallArgs| |checkFreeStorage| |com.android.internal.app.IMediaContainerService|
|com.android.server.content.SyncManager$SyncHandler| |runBoundToAdapter| |com.android.server.content.SyncManager$ActiveSyncContext,android.os.IBinder|
|com.android.server.content.SyncManager$SyncHandler| |runSyncFinishedOrCanceledLocked| |android.content.SyncResult,com.android.server.content.SyncManager$ActiveSyncContext|
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getXtConfig| ||
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getDevConfig| ||
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getUidConfig| ||
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getUidTagConfig| ||
|com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings| |getXtPersistBytes| |long|
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getDevPersistBytes| |long|
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getGlobalAlertBytes| |long|
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getPollInterval| ||
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getTimeCacheMaxAge| ||
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getUidPersistBytes| |long|
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getUidTagPersistBytes| |long|
|com.android.server.pm.PackageManagerService$InstallParams$1| |onReceive| |android.content.Context,android.content.Intent|
|android.content.pm.IPackageManager| |performBootDexOpt| ||
|com.android.server.wifi.WifiAutoJoinController| |newSupplicantResults| |boolean|
|com.android.server.wifi.WifiAutoJoinController| |linkQualitySignificantChange| ||
|com.android.server.wifi.WifiAutoJoinController| |newHalScanResults| ||
|com.android.server.wifi.WifiStateMachine$ScanModeState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$3| |onChange| |boolean|
|com.android.internal.util.IState| |processMessage| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |processMsg| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DormantState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$ScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$NoLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |processMessage| |android.os.Message|
|android.net.DhcpStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady| |enter| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateStart| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectingState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectionErrorCreatingConnection| |enter| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$DefaultState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$StartupState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$WaitingState| |enter| ||
|com.android.internal.telephony.WakeLockStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.WakeLockStateMachine$WaitingState| |enter| ||
|com.android.internal.util.IState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler$HaltingState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler$QuittingState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler| |invokeEnterMethods| |int|
|com.android.server.connectivity.NetworkMonitor$DefaultState| |enter| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState| |enter| ||
|com.android.server.NsdService$NsdStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pNotSupportedState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$EnabledState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$RequestPendingState| |enter| ||
|com.android.server.wifi.WifiApConfigStore$DefaultState| |enter| ||
|com.android.server.wifi.WifiApConfigStore$InactiveState| |enter| ||
|com.android.server.wifi.WifiController$ApEnabledState| |enter| ||
|com.android.server.wifi.WifiController$DefaultState| |enter| ||
|com.android.server.wifi.WifiController$DeviceInactiveState| |enter| ||
|com.android.server.wifi.WifiStateMachine$ConnectModeState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppingState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SoftApStartedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SupplicantStartingState| |enter| ||
|com.android.server.wifi.WifiStateMachine$TetheredState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcActiveState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDefaultState| |processMessage| |android.os.Message|
|com.android.internal.telephony.dataconnection.DcAsyncChannel| |getNetworkCapabilitiesSync| ||
|com.android.internal.telephony.dataconnection.DataConnection| |toString| ||
|com.android.internal.telephony.dataconnection.DataConnection| |dumpToLog| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.util.StateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.cdma.CDMALTEPhone| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.cdma.CDMAPhone| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.gsm.GSMPhone| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.imsphone.ImsPhone| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.Phone| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.sip.SipPhoneBase| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.sip.SipPhone| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.PhoneBase| |getDataConnectionState| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |isApnTypeAvailable| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |applyNewState| |com.android.internal.telephony.dataconnection.ApnContext,boolean,boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |cleanUpConnection| |boolean,com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |trySetupData| |com.android.internal.telephony.dataconnection.ApnContext,java.util.ArrayList|
|com.android.internal.telephony.dataconnection.DcTracker| |cleanUpConnectionsOnUpdatedApns| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |setupDataOnConnectableApns| |java.lang.String,com.android.internal.telephony.dataconnection.DcTracker$RetryFailures|
|com.android.server.BatteryService| |access$900| |com.android.server.BatteryService,android.os.BatteryProperties|
|com.android.server.connectivity.PacManager| |longSchedule| ||
|com.android.server.connectivity.PacManager| |reschedule| ||
|com.android.server.display.OverlayDisplayAdapter$1$1| |onChange| |boolean|
|com.android.server.display.OverlayDisplayAdapter$1| |run| ||
|com.android.server.DockObserver| |onBootPhase| |int|
|com.android.server.power.PowerManagerService| |updateIsPoweredLocked| |int|
|com.android.server.LocationManagerService| |getReceiverLocked| |android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|com.android.server.LocationManagerService| |getReceiverLocked| |android.location.ILocationListener,int,int,java.lang.String,android.os.WorkSource,boolean|
|android.location.ILocationManager$Stub$Proxy| |reportLocation| |android.location.Location,boolean|
|android.location.ILocationManager$Stub| |reportLocation| |android.location.Location,boolean|
|com.android.internal.content.PackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.LocationManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|android.media.WebVttRenderingWidget| |<init>| |android.content.Context,android.util.AttributeSet|
|android.media.SubtitleTrack$RenderingWidget| |setVisible| |boolean|
|android.view.accessibility.CaptioningManager$1| |onChange| |boolean,android.net.Uri|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1700| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|android.inputmethodservice.KeyboardView| |onHoverEvent| |android.view.MotionEvent|
|com.android.internal.widget.PasswordEntryKeyboardView| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.PasswordEntryKeyboardView| |access$400| |android.inputmethodservice.KeyboardView,android.view.MotionEvent|
|com.android.internal.widget.PasswordEntryKeyboardView| |onLongPress| |android.inputmethodservice.Keyboard$Key|
|com.android.internal.widget.PasswordEntryKeyboardHelper| |onKey| |int,int[]|
|android.media.AudioService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.media.AudioManager| |reloadAudioSettings| ||
|android.speech.tts.TextToSpeechService$SpeechItemV1| |getSpeechRate| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onDataSetupComplete| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |handleSmsMessage| |android.os.Message|
|com.android.internal.telephony.DefaultPhoneNotifier| |notifyCellLocation| |com.android.internal.telephony.Phone|
|com.android.internal.telephony.PhoneProxy| |getCellLocation| ||
|com.android.internal.telephony.PhoneProxy| |getAllCellInfo| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |onSignalStrengthResult| |android.os.AsyncResult,boolean|
|com.android.internal.telephony.ServiceStateTracker| |onSignalStrengthResult| |android.os.AsyncResult,boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollState| ||
|com.android.nfc.NfcService$EnableDisableTask| |doInBackground| |java.lang.Object[]|
|android.nfc.INfcAdapter$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.INfcAdapter| |addNfcUnlockHandler| |android.nfc.INfcUnlockHandler,int[]|
|android.nfc.INfcAdapter| |removeNfcUnlockHandler| |android.nfc.INfcUnlockHandler|
|android.nfc.INfcAdapter| |setP2pModes| |int,int|
|android.nfc.INfcAdapter| |setReaderMode| |android.os.IBinder,android.nfc.IAppCallback,int,android.os.Bundle|
|com.android.nfc.dhimpl.NativeNfcTag$PresenceCheckWatchdog| |run| ||
|android.nfc.INfcTag| |close| |int|
|android.nfc.INfcTag$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |access$2900| |com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver,java.lang.String|
|com.android.server.accessibility.ScreenMagnifier| |access$300| |com.android.server.accessibility.ScreenMagnifier,int|
|com.android.server.accessibility.ScreenMagnifier| |access$200| |com.android.server.accessibility.ScreenMagnifier|
|com.android.server.am.ActivityManagerService| |finishBooting| ||
|com.android.server.SystemServer| |startBootstrapServices| ||
|android.location.ILocationManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.location.ILocationManager| |addTestProvider| |java.lang.String,com.android.internal.location.ProviderProperties|
|android.location.ILocationManager| |clearTestProviderEnabled| |java.lang.String|
|android.location.ILocationManager| |clearTestProviderLocation| |java.lang.String|
|android.location.ILocationManager| |clearTestProviderStatus| |java.lang.String|
|android.location.ILocationManager| |removeTestProvider| |java.lang.String|
|android.location.ILocationManager| |setTestProviderEnabled| |java.lang.String,boolean|
|android.location.ILocationManager| |setTestProviderLocation| |java.lang.String,android.location.Location|
|android.location.ILocationManager| |setTestProviderStatus| |java.lang.String,int,android.os.Bundle,long|
|com.android.server.SystemServer| |startCoreServices| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.String|
|android.app.ActivityManagerNative| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |consumeNativeCrashData| |java.io.FileDescriptor|
|com.android.server.UiModeManagerService| |access$000| |com.android.server.UiModeManagerService,java.lang.String,int,int|
|com.android.server.UiModeManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |updateDockState| |int|
|com.android.server.UiModeManagerService| |updateTwilight| ||
|android.widget.CheckBox| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.RadioButton| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.Switch| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.ToggleButton| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.MultiAutoCompleteTextView| |onInitializeAccessibilityNodeInfo| |android.view.accessibility.AccessibilityNodeInfo|
|android.widget.NumberPicker$AccessibilityNodeProviderImpl| |sendAccessibilityEventForVirtualView| |int,int|
|android.view.WindowManagerPolicy| |finishPostLayoutPolicyLw| ||
|android.view.WindowManagerPolicy| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|android.view.WindowManagerPolicy| |beginLayoutLw| |boolean,int,int,int|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromRight| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromTop| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accessibility.AccessibilityManagerService$UserState$1| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$UserState| |onSwitchToAnotherUser| ||
|com.android.server.accessibility.AccessibilityManagerService| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.accessibility.AccessibilityManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$4| |onClick| |android.content.DialogInterface,int|
|com.android.server.accessibility.AccessibilityManagerService| |access$3300| |com.android.server.accessibility.AccessibilityManagerService|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager$Stub| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.view.accessibility.IAccessibilityManager$Stub| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|com.android.server.am.ActivityStack| |resetTargetTaskIfNeededLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.am.ActivityStack| |resetAffinityTaskIfNeededLocked| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int|
|com.android.internal.view.IInputMethodManager$Stub$Proxy| |getCurrentInputMethodSubtype| ||
|com.android.internal.view.IInputMethodManager$Stub| |getCurrentInputMethodSubtype| ||
|com.android.server.InputMethodManagerService$7| |onClick| |android.content.DialogInterface,int|
|com.android.server.InputMethodManagerService| |setCurrentInputMethodSubtype| |android.view.inputmethod.InputMethodSubtype|
|android.speech.tts.TextToSpeech$Connection| |runAction| |android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean,boolean|
|android.speech.tts.TextToSpeech| |<init>| |android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String|
|android.speech.tts.ITextToSpeechService$Stub$Proxy| |getClientDefaultLanguage| ||
|android.speech.tts.ITextToSpeechService$Stub| |getClientDefaultLanguage| ||
|android.speech.tts.TextToSpeechService$1| |speak| |android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String|
|android.speech.tts.TextToSpeechService$SynthesisToFileOutputStreamSpeechItemV1| |<init>| |android.speech.tts.TextToSpeechService,java.lang.Object,int,int,android.os.Bundle,java.lang.String,java.lang.CharSequence,java.io.FileOutputStream|
|android.speech.tts.TextToSpeechService$SynthesisToFileOutputStreamSpeechItemV1| |<init>| |android.speech.tts.TextToSpeechService,java.lang.Object,int,int,android.os.Bundle,java.lang.String,java.lang.CharSequence|
|android.media.ClosedCaptionWidget| |<init>| |android.content.Context|
|android.media.TtmlRenderingWidget| |<init>| |android.content.Context,android.util.AttributeSet|
|android.view.accessibility.CaptioningManager$2| |run| ||
|com.android.server.backup.Trampoline| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.updates.CarrierProvisioningUrlsInstallReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.updates.CertPinInstallReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.updates.IntentFirewallInstallReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.updates.SELinuxPolicyInstallReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.updates.SmsShortCodesInstallReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.updates.TZInfoInstallReceiver| |onReceive| |android.content.Context,android.content.Intent|
|android.view.View$AttachInfo$Callbacks| |playSoundEffect| |int|
|android.view.ViewRootImpl$ViewPostImeInputStage| |processKeyEvent| |android.view.ViewRootImpl$QueuedInputEvent|
|com.android.internal.policy.impl.PhoneWindow| |onKeyUp| |int,int,android.view.KeyEvent|
|android.media.AudioService| |createStreamStates| ||
|android.text.method.TextKeyListener$SettingsObserver| |onChange| |boolean|
|android.text.method.TextKeyListener| |getPrefs| |android.content.Context|
|com.android.internal.telephony.dataconnection.DcTracker| |doRecovery| ||
|android.nfc.INfcAdapter$Stub$Proxy| |enable| ||
|android.nfc.INfcAdapter$Stub| |enable| ||
|com.android.server.notification.NotificationManagerService| |onBootPhase| |int|
|com.android.server.wm.InputMonitor| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.internal.policy.impl.WakeGestureListener$2| |run| ||
|com.android.server.wm.WindowManagerService| |detectSafeMode| ||
|android.view.IWindowManager$Stub$Proxy| |isRotationFrozen| ||
|android.view.IWindowManager$Stub| |isRotationFrozen| ||
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |interceptKeyBeforeDispatching| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|android.view.WindowManagerPolicy| |dispatchUnhandledKey| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |trySwitchToFirstTouchState| |float,float|
|com.android.internal.widget.multiwaveview.GlowPadView| |access$300| |com.android.internal.widget.multiwaveview.GlowPadView,int,float,float|
|com.android.internal.widget.multiwaveview.GlowPadView| |handleCancel| |android.view.MotionEvent|
|com.android.internal.widget.multiwaveview.GlowPadView| |handleDown| |android.view.MotionEvent|
|com.android.internal.widget.multiwaveview.GlowPadView| |handleMove| |android.view.MotionEvent|
|com.android.internal.widget.multiwaveview.GlowPadView| |handleUp| |android.view.MotionEvent|
|com.android.internal.widget.WaveView| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.WaveView| |onDraw| |android.graphics.Canvas|
|android.media.MediaScanner| |scanSingleFile| |java.lang.String,java.lang.String,java.lang.String|
|android.media.MediaScanner$MyMediaScannerClient| |scanFile| |java.lang.String,long,long,boolean,boolean|
|android.media.MediaScanner| |scanMtpFile| |java.lang.String,java.lang.String,int,int|
|android.filterpacks.videosrc.MediaSource| |setupMediaPlayer| |boolean|
|android.media.AsyncPlayer| |startSound| |android.media.AsyncPlayer$Command|
|android.media.MediaPlayer| |create| |android.content.Context,android.net.Uri,android.view.SurfaceHolder,android.media.AudioAttributes,int|
|android.media.Ringtone| |setUri| |android.net.Uri|
|android.widget.VideoView| |access$2100| |android.widget.VideoView|
|android.widget.VideoView| |resume| ||
|android.widget.VideoView| |setVideoURI| |android.net.Uri,java.util.Map|
|android.preference.SeekBarVolumizer| |onStartSample| ||
|com.android.internal.policy.impl.EnableAccessibilityController| |onInterceptTouchEvent| |android.view.MotionEvent|
|android.widget.DateTimeView$ReceiverInfo| |updateAll| ||
|android.text.format.DateUtils| |formatDateRange| |android.content.Context,long,long,int|
|android.widget.SimpleMonthView| |drawMonthTitle| |android.graphics.Canvas|
|com.android.server.notification.DowntimeConditionProvider| |access$300| |com.android.server.notification.DowntimeConditionProvider|
|com.android.server.notification.DowntimeConditionProvider| |init| ||
|com.android.server.notification.DowntimeConditionProvider| |evaluateSubscriptions| ||
|com.android.server.notification.DowntimeConditionProvider| |onSubscribe| |android.net.Uri|
|com.android.server.notification.DowntimeConditionProvider$FiredAlarms| |toString| ||
|com.android.server.notification.DowntimeConditionProvider| |onEvaluateNextAlarm| |android.app.AlarmManager$AlarmClockInfo,long,boolean|
|com.android.server.notification.NextAlarmConditionProvider| |onEvaluate| |android.app.AlarmManager$AlarmClockInfo,long,boolean|
|com.android.server.notification.NextAlarmTracker| |formatAlarmDebug| |android.app.AlarmManager$AlarmClockInfo|
|com.android.server.notification.NextAlarmTracker| |dump| |java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter|
|com.android.server.notification.NextAlarmTracker| |handleEvaluate| ||
|com.android.server.notification.NextAlarmTracker| |rescheduleAlarm| |long|
|com.android.server.notification.NextAlarmTracker| |formatAlarm| |android.app.AlarmManager$AlarmClockInfo|
|android.widget.DateTimeView| |getTimeFormat| ||
|android.widget.DigitalClock| |access$300| |android.widget.DigitalClock|
|android.widget.DigitalClock| |initClock| ||
|android.widget.TextClock| |access$000| |android.widget.TextClock|
|android.widget.TextClock| |setFormat12Hour| |java.lang.CharSequence|
|android.widget.TextClock| |setFormat24Hour| |java.lang.CharSequence|
|android.widget.TextClock| |setShowCurrentUserTime| |boolean|
|android.widget.TextClock| |<init>| |android.content.Context,android.util.AttributeSet,int,int|
|android.widget.TextClock| |<init>| |android.content.Context|
|com.android.internal.view.IInputMethodManager$Stub$Proxy| |getLastInputMethodSubtype| ||
|com.android.internal.view.IInputMethodManager$Stub| |getLastInputMethodSubtype| ||
|com.android.server.InputMethodManagerService| |access$200| |com.android.server.InputMethodManagerService,java.lang.String|
|com.android.internal.inputmethod.InputMethodSubtypeSwitchingController$InputMethodAndSubtypeList| |getSortedInputMethodAndSubtypeList| ||
|com.android.internal.inputmethod.InputMethodSubtypeSwitchingController| |getSortedInputMethodAndSubtypeListLocked| |boolean,boolean,boolean|
|com.android.internal.view.IInputMethodManager$Stub$Proxy| |getShortcutInputMethodsAndSubtypes| ||
|com.android.internal.view.IInputMethodManager$Stub| |getShortcutInputMethodsAndSubtypes| ||
|com.android.internal.view.IInputMethodManager| |switchToLastInputMethod| |android.os.IBinder|
|com.android.internal.view.IInputMethodManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.view.IInputMethodManager| |getEnabledInputMethodList| ||
|com.android.internal.view.IInputMethodManager$Stub$Proxy| |getEnabledInputMethodSubtypeList| |java.lang.String,boolean|
|com.android.internal.view.IInputMethodManager$Stub| |getEnabledInputMethodSubtypeList| |java.lang.String,boolean|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager| |isServiceRegistered| |int,android.content.ComponentName|
|com.android.nfc.cardemulation.RegisteredServicesCache$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.nfc.cardemulation.RegisteredServicesCache| |initialize| ||
|android.service.dreams.DreamManagerInternal| |startDream| |boolean|
|com.android.server.notification.ManagedServices| |onBootPhaseAppsCanStart| ||
|android.print.IPrintManager| |print| |java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int|
|android.print.IPrintManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.print.IPrintManager| |getPrintJobInfo| |android.print.PrintJobId,int,int|
|com.android.internal.content.PackageMonitor| |onPackageModified| |java.lang.String|
|com.android.internal.content.PackageMonitor| |onPackageRemoved| |java.lang.String,int|
|android.print.IPrintManager| |getEnabledPrintServices| |int|
|android.print.IPrintManager| |getInstalledPrintServices| |int|
|android.print.IPrintManager| |getPrintJobInfos| |int,int|
|android.print.IPrintManager| |addPrintJobStateChangeListener| |android.print.IPrintJobStateChangeListener,int,int|
|android.print.IPrintManager| |cancelPrintJob| |android.print.PrintJobId,int,int|
|android.print.IPrintManager| |createPrinterDiscoverySession| |android.print.IPrinterDiscoveryObserver,int|
|android.print.IPrintManager| |destroyPrinterDiscoverySession| |android.print.IPrinterDiscoveryObserver,int|
|android.print.IPrintManager| |removePrintJobStateChangeListener| |android.print.IPrintJobStateChangeListener,int|
|android.print.IPrintManager| |restartPrintJob| |android.print.PrintJobId,int,int|
|android.print.IPrintManager| |startPrinterDiscovery| |android.print.IPrinterDiscoveryObserver,java.util.List,int|
|android.print.IPrintManager| |startPrinterStateTracking| |android.print.PrinterId,int|
|android.print.IPrintManager| |stopPrinterDiscovery| |android.print.IPrinterDiscoveryObserver,int|
|android.print.IPrintManager| |stopPrinterStateTracking| |android.print.PrinterId,int|
|android.print.IPrintManager| |validatePrinters| |java.util.List,int|
|android.view.textservice.TextServicesManager| |newSpellCheckerSession| |android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener,boolean|
|android.widget.SpellChecker| |resetSession| ||
|android.widget.TextView| |updateTextServicesLocaleLocked| ||
|android.view.textservice.TextServicesManager| |getCurrentSpellChecker| ||
|com.android.server.TextServicesManagerService$1| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.textservice.ITextServicesManager| |getEnabledSpellCheckers| ||
|com.android.internal.textservice.ITextServicesManager| |isSpellCheckerEnabled| ||
|com.android.internal.textservice.ITextServicesManager| |finishSpellCheckerService| |com.android.internal.textservice.ISpellCheckerSessionListener|
|com.android.internal.textservice.ITextServicesManager| |getSpellCheckerService| |java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle|
|com.android.internal.textservice.ITextServicesManager| |setCurrentSpellChecker| |java.lang.String,java.lang.String|
|com.android.internal.textservice.ITextServicesManager| |setCurrentSpellCheckerSubtype| |java.lang.String,int|
|com.android.internal.textservice.ITextServicesManager| |setSpellCheckerEnabled| |boolean|
|com.android.server.am.ActivityManagerService| |startUserInBackground| |int|
|com.android.server.am.ActivityManagerService| |startUserInForeground| |int,android.app.Dialog|
|com.android.internal.widget.LockPatternUtils| |checkPassword| |java.lang.String|
|android.app.admin.IDevicePolicyManager| |getGlobalProxyAdmin| |int|
|android.app.admin.IDevicePolicyManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.admin.IDevicePolicyManager| |getRestrictionsProvider| |int|
|android.app.admin.IDevicePolicyManager| |setGlobalProxy| |android.content.ComponentName,java.lang.String,java.lang.String,int|
|android.app.admin.IDevicePolicyManager| |getCameraDisabled| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getScreenCaptureDisabled| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getStorageEncryption| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setDeviceOwner| |java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |hasUserSetupCompleted| ||
|android.app.admin.IDevicePolicyManager$Stub| |hasUserSetupCompleted| ||
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setProfileOwner| |android.content.ComponentName,java.lang.String,int|
|android.app.admin.IDevicePolicyManager$Stub| |setProfileOwner| |android.content.ComponentName,java.lang.String,int|
|android.app.admin.IDevicePolicyManager| |isLockTaskPermitted| |java.lang.String|
|android.app.admin.IDevicePolicyManager| |isRemovingAdmin| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |packageHasActiveAdmins| |java.lang.String,int|
|android.app.admin.IDevicePolicyManager| |resetPassword| |java.lang.String,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getApplicationRestrictions| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |getApplicationRestrictions| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |createUser| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |createUser| |android.content.ComponentName,java.lang.String|
|com.android.server.devicepolicy.DevicePolicyManagerService| |createAndInitializeUser| |android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |addCrossProfileWidgetProvider| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |addCrossProfileWidgetProvider| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getCrossProfileCallerIdDisabled| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |getCrossProfileCallerIdDisabled| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |installKeyPair| |android.content.ComponentName,byte[],byte[],java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |installKeyPair| |android.content.ComponentName,byte[],byte[],java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |isActivePasswordSufficient| |int|
|android.app.admin.IDevicePolicyManager$Stub| |isActivePasswordSufficient| |int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |isApplicationHidden| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |isApplicationHidden| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |isMasterVolumeMuted| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |isMasterVolumeMuted| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |isUninstallBlocked| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |isUninstallBlocked| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |removeCrossProfileWidgetProvider| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |removeCrossProfileWidgetProvider| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |removeUser| |android.content.ComponentName,android.os.UserHandle|
|android.app.admin.IDevicePolicyManager$Stub| |removeUser| |android.content.ComponentName,android.os.UserHandle|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setApplicationHidden| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager$Stub| |setApplicationHidden| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPermittedAccessibilityServices| |android.content.ComponentName,java.util.List|
|android.app.admin.IDevicePolicyManager$Stub| |setPermittedAccessibilityServices| |android.content.ComponentName,java.util.List|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPermittedInputMethods| |android.content.ComponentName,java.util.List|
|android.app.admin.IDevicePolicyManager$Stub| |setPermittedInputMethods| |android.content.ComponentName,java.util.List|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |switchUser| |android.content.ComponentName,android.os.UserHandle|
|android.app.admin.IDevicePolicyManager$Stub| |switchUser| |android.content.ComponentName,android.os.UserHandle|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |enableSystemAppWithIntent| |android.content.ComponentName,android.content.Intent|
|android.app.admin.IDevicePolicyManager$Stub| |enableSystemAppWithIntent| |android.content.ComponentName,android.content.Intent|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getCurrentFailedPasswordAttempts| |int|
|android.app.admin.IDevicePolicyManager$Stub| |getCurrentFailedPasswordAttempts| |int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getCrossProfileWidgetProviders| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |getCrossProfileWidgetProviders| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPermittedAccessibilityServices| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |getPermittedAccessibilityServices| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPermittedInputMethods| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |getPermittedInputMethods| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |addCrossProfileIntentFilter| |android.content.ComponentName,android.content.IntentFilter,int|
|android.app.admin.IDevicePolicyManager$Stub| |addCrossProfileIntentFilter| |android.content.ComponentName,android.content.IntentFilter,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |addPersistentPreferredActivity| |android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |addPersistentPreferredActivity| |android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |clearCrossProfileIntentFilters| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |clearCrossProfileIntentFilters| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |clearPackagePersistentPreferredActivities| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |clearPackagePersistentPreferredActivities| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |clearProfileOwner| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |clearProfileOwner| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |enableSystemApp| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |enableSystemApp| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |enforceCanManageCaCerts| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |enforceCanManageCaCerts| |android.content.ComponentName|
|com.android.server.devicepolicy.DevicePolicyManagerService| |installCaCert| |android.content.ComponentName,byte[]|
|com.android.server.devicepolicy.DevicePolicyManagerService| |uninstallCaCert| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |lockNow| ||
|android.app.admin.IDevicePolicyManager$Stub| |lockNow| ||
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setAccountManagementDisabled| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager$Stub| |setAccountManagementDisabled| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setApplicationRestrictions| |android.content.ComponentName,java.lang.String,android.os.Bundle|
|android.app.admin.IDevicePolicyManager$Stub| |setApplicationRestrictions| |android.content.ComponentName,java.lang.String,android.os.Bundle|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setAutoTimeRequired| |android.content.ComponentName,int,boolean|
|android.app.admin.IDevicePolicyManager$Stub| |setAutoTimeRequired| |android.content.ComponentName,int,boolean|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setCrossProfileCallerIdDisabled| |android.content.ComponentName,boolean|
|android.app.admin.IDevicePolicyManager$Stub| |setCrossProfileCallerIdDisabled| |android.content.ComponentName,boolean|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setGlobalSetting| |android.content.ComponentName,java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |setGlobalSetting| |android.content.ComponentName,java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setMasterVolumeMuted| |android.content.ComponentName,boolean|
|android.app.admin.IDevicePolicyManager$Stub| |setMasterVolumeMuted| |android.content.ComponentName,boolean|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setMaximumFailedPasswordsForWipe| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setMaximumFailedPasswordsForWipe| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPasswordHistoryLength| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setPasswordHistoryLength| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPasswordMinimumLength| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setPasswordMinimumLength| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPasswordMinimumLetters| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setPasswordMinimumLetters| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPasswordMinimumLowerCase| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setPasswordMinimumLowerCase| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPasswordMinimumNonLetter| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setPasswordMinimumNonLetter| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPasswordMinimumNumeric| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setPasswordMinimumNumeric| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPasswordMinimumSymbols| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setPasswordMinimumSymbols| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPasswordMinimumUpperCase| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setPasswordMinimumUpperCase| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setPasswordQuality| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |setPasswordQuality| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setProfileEnabled| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub| |setProfileEnabled| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setProfileName| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |setProfileName| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setRecommendedGlobalProxy| |android.content.ComponentName,android.net.ProxyInfo|
|android.app.admin.IDevicePolicyManager$Stub| |setRecommendedGlobalProxy| |android.content.ComponentName,android.net.ProxyInfo|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setScreenCaptureDisabled| |android.content.ComponentName,int,boolean|
|android.app.admin.IDevicePolicyManager$Stub| |setScreenCaptureDisabled| |android.content.ComponentName,int,boolean|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setSecureSetting| |android.content.ComponentName,java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |setSecureSetting| |android.content.ComponentName,java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setUninstallBlocked| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager$Stub| |setUninstallBlocked| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setUserRestriction| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager$Stub| |setUserRestriction| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |wipeData| |int,int|
|android.app.admin.IDevicePolicyManager$Stub| |wipeData| |int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |hasGrantedPolicy| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub| |hasGrantedPolicy| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |isAdminActive| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |isAdminActive| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getMaximumFailedPasswordsForWipe| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getMaximumFailedPasswordsForWipe| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordHistoryLength| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordHistoryLength| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordMinimumLength| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordMinimumLength| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordMinimumLetters| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordMinimumLetters| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordMinimumLowerCase| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordMinimumLowerCase| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordMinimumNonLetter| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordMinimumNonLetter| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordMinimumNumeric| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordMinimumNumeric| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordMinimumSymbols| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordMinimumSymbols| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordMinimumUpperCase| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordMinimumUpperCase| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordQuality| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordQuality| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getTrustAgentConfiguration| |android.content.ComponentName,android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getTrustAgentConfiguration| |android.content.ComponentName,android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getMaximumTimeToLock| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getMaximumTimeToLock| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |updateMaximumTimeToLockLocked| |com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData|
|com.android.server.devicepolicy.DevicePolicyManagerService| |getPasswordExpiration| |android.content.ComponentName,int|
|com.android.server.devicepolicy.DevicePolicyManagerService| |setExpirationAlarmCheckLocked| |android.content.Context,com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordExpirationTimeout| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordExpirationTimeout| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getRemoveWarning| |android.content.ComponentName,android.os.RemoteCallback,int|
|android.app.admin.IDevicePolicyManager$Stub| |getRemoveWarning| |android.content.ComponentName,android.os.RemoteCallback,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |removeActiveAdmin| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |removeActiveAdmin| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getAutoTimeRequired| ||
|android.app.admin.IDevicePolicyManager$Stub| |getAutoTimeRequired| ||
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getCrossProfileCallerIdDisabledForUser| |int|
|android.app.admin.IDevicePolicyManager$Stub| |getCrossProfileCallerIdDisabledForUser| |int|
|android.app.admin.IDevicePolicyManager| |getKeyguardDisabledFeatures| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |setStorageEncryption| |android.content.ComponentName,boolean,int|
|android.app.admin.IDevicePolicyManager| |getAccountTypesWithManagementDisabledAsUser| |int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getAccountTypesWithManagementDisabled| ||
|android.app.admin.IDevicePolicyManager$Stub| |getAccountTypesWithManagementDisabled| ||
|android.app.admin.IDevicePolicyManager| |getLockTaskPackages| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |getActiveAdmins| |int|
|com.android.server.devicepolicy.DevicePolicyManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.devicepolicy.DevicePolicyManagerService$1$1| |run| ||
|android.app.admin.IDevicePolicyManager| |notifyLockTaskModeChanged| |boolean,java.lang.String,int|
|android.app.admin.IDevicePolicyManager| |reportSuccessfulPasswordAttempt| |int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setActiveAdmin| |android.content.ComponentName,boolean,int|
|android.app.admin.IDevicePolicyManager$Stub| |setActiveAdmin| |android.content.ComponentName,boolean,int|
|android.app.admin.IDevicePolicyManager| |setActivePasswordState| |int,int,int,int,int,int,int,int,int|
|android.app.admin.IDevicePolicyManager| |setCameraDisabled| |android.content.ComponentName,boolean,int|
|android.app.admin.IDevicePolicyManager| |setKeyguardDisabledFeatures| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setLockTaskPackages| |android.content.ComponentName,java.lang.String[]|
|android.app.admin.IDevicePolicyManager| |setMaximumTimeToLock| |android.content.ComponentName,long,int|
|android.app.admin.IDevicePolicyManager| |setPasswordExpirationTimeout| |android.content.ComponentName,long,int|
|android.app.admin.IDevicePolicyManager| |setRestrictionsProvider| |android.content.ComponentName,android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |setTrustAgentConfiguration| |android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,int|
|com.android.internal.policy.impl.PhoneWindowManager| |isKeyguardSecure| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateLockScreenTimeout| ||
|com.android.server.trust.TrustManagerService| |access$1200| |com.android.server.trust.TrustManagerService,android.app.trust.ITrustListener|
|com.android.server.trust.TrustManagerService| |access$1700| |com.android.server.trust.TrustManagerService,java.lang.String|
|android.net.INetworkScoreService| |clearScores| ||
|android.net.INetworkScoreService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.INetworkScoreService| |updateScores| |android.net.ScoredNetwork[]|
|android.net.INetworkScoreService| |disableScoring| ||
|android.media.AudioService| |disconnectBluetoothSco| |int|
|android.media.AudioService| |resetBluetoothSco| ||
|com.android.server.pm.PackageManagerService$HandlerParams| |startCopy| ||
|com.android.internal.telephony.imsphone.ImsPhone| |setUiTTYMode| |int,android.os.Message|
|android.view.WindowManagerPolicy| |notifyCameraLensCoverSwitchChanged| |long,boolean|
|android.view.WindowManagerPolicy| |notifyLidSwitchChanged| |long,boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |interceptPowerKeyDown| |android.view.KeyEvent,boolean|
|com.android.server.wm.InputMonitor| |interceptMotionBeforeQueueingNonInteractive| |long,int|
|com.android.internal.policy.impl.PhoneWindowManager| |access$600| |com.android.internal.policy.impl.PhoneWindowManager,long,boolean,int|
|com.android.internal.policy.impl.PhoneWindowManager| |interceptPowerKeyUp| |android.view.KeyEvent,boolean,boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMAPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.uicc.IccCardProxy| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateDataConnectionTracker| ||
|com.android.internal.telephony.gsm.GSMPhone| |updateDataConnectionTracker| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setDataRoamingEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |isDataAllowed| ||
|com.android.internal.telephony.dataconnection.DcTracker| |isDataAllowed| |com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |isDataPossible| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onRoamingOff| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onRoamingOn| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |completeConnection| |com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onVoiceCallEnded| ||
|com.android.internal.telephony.PhoneFactory| |getGsmPhone| |int|
|com.android.internal.telephony.PhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISub| |setDefaultDataSubId| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher,com.android.internal.telephony.gsm.GsmInboundSmsHandler|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher|
|com.android.internal.telephony.ImsSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.SmsUsageMonitor|
|com.android.internal.telephony.ImsSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.dataconnection.DctController$TelephonyNetworkFactory| |needNetworkFor| |android.net.NetworkRequest,int|
|com.android.internal.telephony.dataconnection.DctController$TelephonyNetworkFactory| |releaseNetworkFor| |android.net.NetworkRequest|
|com.android.internal.telephony.dataconnection.DctController| |processRequests| ||
|com.android.internal.telephony.dataconnection.DctController| |executeRequest| |com.android.internal.telephony.dataconnection.DcSwitchAsyncChannel$RequestInfo|
|com.android.internal.telephony.dataconnection.DctController| |executeAllRequests| |int|
|com.android.internal.telephony.dataconnection.DctController| |releaseRequest| |com.android.internal.telephony.dataconnection.DcSwitchAsyncChannel$RequestInfo|
|com.android.internal.telephony.dataconnection.DctController| |releaseAllRequests| |int|
|com.android.internal.telephony.dataconnection.DctController$2| |onChange| |boolean|
|android.telephony.SubscriptionManager| |getDefaultDataSubId| ||
|com.android.internal.telephony.SubscriptionController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISub| |getDefaultSubId| ||
|com.android.internal.telephony.PhoneSubInfoController| |getDefaultSubscription| ||
|com.android.internal.telephony.UiccPhoneBookController| |getDefaultSubscription| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |getPhoneId| |int|
|com.android.internal.telephony.ISub$Stub| |getPhoneId| |int|
|com.android.internal.telephony.PhoneFactory| |setDefaultSubscription| |int|
|com.android.internal.telephony.ProxyController| |isDataDisconnected| |int|
|com.android.internal.telephony.ProxyController| |registerForAllDataDisconnected| |int,android.os.Handler,int,java.lang.Object|
|com.android.internal.telephony.ProxyController| |unregisterForAllDataDisconnected| |int,android.os.Handler|
|com.android.internal.telephony.SubscriptionController| |getSimStateForSubscriber| |int|
|com.android.internal.telephony.SubscriptionController| |setDisplayNumber| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |getSubscriptionCountryIso| |int|
|com.android.internal.telephony.SubscriptionController| |setDefaultFallbackSubId| |int|
|com.android.internal.telephony.UiccPhoneBookController| |getIccPhoneBookInterfaceManagerProxy| |int|
|com.android.internal.telephony.UiccSmsController| |getIccSmsInterfaceManager| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |getSlotId| |int|
|com.android.internal.telephony.ISub$Stub| |getSlotId| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |getSubId| |int|
|com.android.internal.telephony.ISub$Stub| |getSubId| |int|
|com.android.internal.telephony.SubscriptionController| |setPlmnSpn| |int,boolean,java.lang.String,boolean,java.lang.String|
|com.android.internal.telephony.SubscriptionController| |getSubIdUsingPhoneId| |int|
|com.android.internal.telephony.SubscriptionController| |getSubIdUsingSlotId| |int|
|com.android.internal.telephony.uicc.RuimRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |updateSubscriptionInfoByIccId| ||
|com.android.internal.telephony.SubscriptionInfoUpdater$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.ISub| |clearDefaultsForInactiveSubIds| ||
|android.telephony.SubscriptionManager| |getDefaultSmsSubId| ||
|com.android.internal.telephony.uicc.IccRecords| |onRecordLoaded| ||
|com.android.internal.telephony.ISms| |getPreferredSmsSubscription| ||
|com.android.internal.telephony.ISms$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub$Proxy| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms$Stub| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms$Stub| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms$Stub| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms$Stub| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |isImsSmsSupported| ||
|com.android.internal.telephony.ISms$Stub| |isImsSmsSupported| ||
|com.android.internal.telephony.ISms$Stub$Proxy| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub$Proxy| |getPremiumSmsPermission| |java.lang.String|
|com.android.internal.telephony.ISms$Stub| |getPremiumSmsPermission| |java.lang.String|
|com.android.internal.telephony.ISms$Stub$Proxy| |getImsSmsFormat| ||
|com.android.internal.telephony.ISms$Stub| |getImsSmsFormat| ||
|com.android.internal.telephony.ISms$Stub$Proxy| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.ISms$Stub| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |setPremiumSmsPermission| |java.lang.String,int|
|com.android.internal.telephony.ISms$Stub| |setPremiumSmsPermission| |java.lang.String,int|
|android.telephony.SubscriptionManager| |getDefaultVoiceSubId| ||
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.os.RuntimeInit| |wtf| |java.lang.String,java.lang.Throwable,boolean|
|com.android.server.DockObserver$2| |onUEvent| |android.os.UEventObserver$UEvent|
|com.android.server.DockObserver| |<init>| |android.content.Context|
|com.android.server.DropBoxManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.os.IDropBoxManagerService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.os.IDropBoxManagerService| |add| |android.os.DropBoxManager$Entry|
|com.android.server.hdmi.HdmiCecLocalDeviceTv$2| |onDeviceDiscoveryDone| |java.util.List|
|com.android.server.hdmi.NewDeviceAction| |addDeviceInfo| ||
|com.android.server.hdmi.SystemAudioAutoInitiationAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.SystemAudioAutoInitiationAction| |handleTimerEvent| |int|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |create| |com.android.server.hdmi.HdmiControlService,int|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |create| |com.android.server.hdmi.HdmiControlService,int|
|com.android.server.hdmi.HdmiControlService| |initializeLocalDevices| |int|
|com.android.server.hdmi.HdmiControlService| |onHotplug| |int,boolean|
|com.android.server.location.GpsLocationProvider| |access$3200| |com.android.server.location.GpsLocationProvider,com.android.internal.location.ProviderRequest,android.os.WorkSource|
|com.android.server.net.NetworkStatsService| |performPollLocked| |int|
|com.android.server.notification.ZenModeHelper| |<init>| |android.content.Context,android.os.Looper|
|com.android.server.NsdService| |<init>| |android.content.Context|
|com.android.commands.pm.Pm| |runGetInstallLocation| ||
|com.android.server.pm.PackageManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager| |setInstallLocation| |int|
|com.android.server.SamplingProfilerService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiStateMachine| |access$17800| |com.android.server.wifi.WifiStateMachine|
|android.net.DhcpStateMachine| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.cat.RilMessageDecoder| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.CellBroadcastHandler| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.dataconnection.DataConnection| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.dataconnection.DcController| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.InboundSmsHandler| |getLogRecString| |android.os.Message|
|com.android.internal.telephony.WakeLockStateMachine| |getLogRecString| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |performTransitions| |com.android.internal.util.State,android.os.Message|
|com.android.server.connectivity.Tethering$TetherInterfaceSM| |getLogRecString| |android.os.Message|
|com.android.server.connectivity.Tethering$TetherMasterSM| |getLogRecString| |android.os.Message|
|com.android.server.NsdService$NsdStateMachine| |getLogRecString| |android.os.Message|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |getLogRecString| |android.os.Message|
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine| |getLogRecString| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker| |getLogRecString| |android.os.Message|
|com.android.server.wifi.WifiApConfigStore| |getLogRecString| |android.os.Message|
|com.android.server.wifi.WifiController| |getLogRecString| |android.os.Message|
|com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine| |getLogRecString| |android.os.Message|
|com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine| |getLogRecString| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine| |getLogRecString| |android.os.Message|
|com.android.server.wifi.WifiStateMachine| |access$1100| |com.android.server.wifi.WifiStateMachine,android.os.Message,java.lang.String|
|com.android.server.SystemService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiWatchdogStateMachine$WatchdogDisabledState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$WatchdogEnabledState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine| |makeWifiWatchdogStateMachine| |android.content.Context,android.os.Messenger|
|com.android.server.wm.WindowManagerService| |computeNewConfiguration| ||
|com.android.server.wm.WindowManagerService| |setTokenVisibilityLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$400| |com.android.server.wm.WindowManagerService|
|com.android.server.wm.WindowManagerService| |addTask| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |moveStackWindowsLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reconfigureDisplayLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.WindowManagerService| |removeWindowInnerLocked| |com.android.server.wm.Session,com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |resizeStack| |int,android.graphics.Rect|
|com.android.server.wm.WindowManagerService| |setCurrentUser| |int,int[]|
|com.android.server.wm.WindowManagerService| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |setUniverseTransformLocked| |com.android.server.wm.WindowState,float,float,float,float,float,float,float|
|com.android.server.wm.WindowManagerService| |unsetAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken,boolean,boolean|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollState| ||
|com.android.internal.telephony.MccTable| |getLocaleFromMcc| |android.content.Context,int|
|com.android.internal.telephony.MccTable| |setSystemLocale| |android.content.Context,java.lang.String,java.lang.String|
|com.android.internal.telephony.ISms| |isSMSPromptEnabled| ||
|com.android.server.wifi.WifiService| |onBootPhase| |int|
|com.android.server.pm.PackageManagerService$InstallArgs| |checkFreeStorage| |com.android.internal.app.IMediaContainerService|
|com.android.server.content.SyncManager$ActiveSyncContext| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.content.SyncManager$SyncHandler| |maybeStartNextSyncLocked| ||
|com.android.server.content.SyncManager$SyncHandler| |cancelActiveSyncLocked| |com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle|
|com.android.server.content.SyncManager$ActiveSyncContext| |onServiceDisconnected| |android.content.ComponentName|
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getXtConfig| ||
|com.android.server.net.NetworkStatsService| |systemReady| ||
|com.android.server.net.NetworkStatsService$NetworkStatsSettings| |getXtPersistBytes| |long|
|com.android.server.net.NetworkStatsService| |updatePersistThresholds| ||
|com.android.server.net.NetworkStatsService| |registerPollAlarmLocked| ||
|com.android.server.net.NetworkStatsService| |performPoll| |int|
|com.android.server.wifi.WifiStateMachine| |setScanResults| ||
|com.android.internal.telephony.dataconnection.DcTracker| |getNetworkCapabilities| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |getNetworkCapabilities| |java.lang.String|
|com.android.internal.util.StateMachine| |toString| ||
|com.android.internal.telephony.dataconnection.DataConnection| |access$1200| |com.android.internal.telephony.dataconnection.DataConnection|
|com.android.internal.telephony.dataconnection.DcTracker| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.PhoneBase| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|android.net.DhcpStateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.cat.RilMessageDecoder| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.CellBroadcastHandler| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.dataconnection.DcController| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.InboundSmsHandler| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.WakeLockStateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.connectivity.Tethering$TetherInterfaceSM| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.connectivity.Tethering$TetherMasterSM| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.NsdService$NsdStateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.SupplicantStateTracker| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.WifiApConfigStore| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.WifiController| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.WifiStateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.WifiWatchdogStateMachine| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.PhoneProxy| |hasMatchedTetherApnSetting| ||
|com.android.internal.telephony.PhoneBase| |getDataConnectionState| ||
|com.android.internal.telephony.PhoneBase| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.PhoneBase| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.Phone| |getDataConnectionState| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onEnableApn| |int,int|
|com.android.internal.telephony.dataconnection.DcTracker| |onSetDependencyMet| |java.lang.String,boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |cleanUpAllConnections| |boolean,java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onCleanUpConnection| |boolean,int,java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onRadioAvailable| ||
|com.android.internal.telephony.dataconnection.DcTracker| |trySetupData| |com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |onApnChanged| ||
|com.android.internal.telephony.dataconnection.DcTracker| |setupDataOnConnectableApns| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |cleanUpAllConnections| |java.lang.String,android.os.Message|
|com.android.internal.telephony.dataconnection.DcTracker| |setInternalDataEnabled| |boolean,android.os.Message|
|com.android.server.connectivity.PacManager| |access$700| |com.android.server.connectivity.PacManager|
|com.android.server.connectivity.PacManager| |access$800| |com.android.server.connectivity.PacManager|
|com.android.server.power.PowerManagerService| |updatePowerStateLocked| ||
|com.android.server.LocationManagerService| |checkListenerOrIntentLocked| |android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|android.location.ILocationManager| |reportLocation| |android.location.Location,boolean|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.internal.app.ResolverActivity$1| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.ServiceWatcher$2| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.tv.TvInputManagerService$1| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|android.media.WebVttRenderingWidget| |<init>| |android.content.Context|
|android.media.SubtitleTrack| |hide| ||
|android.media.SubtitleTrack| |show| ||
|com.android.server.accessibility.EventStreamTransformation| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |sendDelayedMotionEvents| ||
|com.android.internal.widget.PasswordEntryKeyboardView| |onHoverEvent| |android.view.MotionEvent|
|android.speech.tts.TextToSpeechService$AudioSpeechItemV1| |getSpeechRate| ||
|android.speech.tts.TextToSpeechService$SynthesisSpeechItemV1| |getSpeechRate| ||
|android.speech.tts.TextToSpeechService$SynthesisToFileOutputStreamSpeechItemV1| |getSpeechRate| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onDataSetupComplete| |android.os.AsyncResult|
|com.android.internal.telephony.CellBroadcastHandler| |handleSmsMessage| |android.os.Message|
|com.android.internal.telephony.WakeLockStateMachine| |handleSmsMessage| |android.os.Message|
|com.android.internal.telephony.PhoneNotifier| |notifyCellLocation| |com.android.internal.telephony.Phone|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |onSignalStrengthResult| |android.os.AsyncResult,boolean|
|com.android.nfc.NfcService$NfcAdapterService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.NfcAdapter| |addNfcUnlockHandler| |android.nfc.NfcAdapter$NfcUnlockHandler,java.lang.String[]|
|android.nfc.NfcAdapter| |removeNfcUnlockHandler| |android.nfc.NfcAdapter$NfcUnlockHandler|
|android.nfc.NfcAdapter| |setP2pModes| |int,int|
|android.nfc.NfcActivityManager| |setReaderMode| |android.os.Binder,int,android.os.Bundle|
|com.android.nfc.dhimpl.NativeNfcTag| |startPresenceChecking| |int,com.android.nfc.DeviceHost$TagDisconnectedCallback|
|com.android.nfc.NfcService$TagService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.accessibility.ScreenMagnifier| |onUserContextChanged| ||
|com.android.server.am.ActivityManagerService| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |ensureBootCompleted| ||
|com.android.server.LocationManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.location.LocationManager| |addTestProvider| |java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int|
|android.location.LocationManager| |clearTestProviderEnabled| |java.lang.String|
|android.location.LocationManager| |clearTestProviderLocation| |java.lang.String|
|android.location.LocationManager| |clearTestProviderStatus| |java.lang.String|
|android.location.LocationManager| |removeTestProvider| |java.lang.String|
|android.location.LocationManager| |setTestProviderEnabled| |java.lang.String,boolean|
|android.location.LocationManager| |setTestProviderLocation| |java.lang.String,android.location.Location|
|android.location.LocationManager| |setTestProviderStatus| |java.lang.String,int,android.os.Bundle,long|
|android.app.IActivityManager| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |run| ||
|com.android.server.UiModeManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |access$100| |com.android.server.UiModeManagerService,int|
|com.android.server.UiModeManagerService$4| |onTwilightStateChanged| ||
|android.widget.NumberPicker$AccessibilityNodeProviderImpl| |performAction| |int,int,android.os.Bundle|
|android.widget.NumberPicker| |dispatchHoverEvent| |android.view.MotionEvent|
|com.android.server.wm.WindowManagerService| |updateFocusedWindowLocked| |int,boolean|
|com.android.server.wm.WindowManagerService| |performLayoutLockedInner| |com.android.server.wm.DisplayContent,boolean,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener| |onPointerEvent| |android.view.MotionEvent|
|com.android.server.accessibility.AccessibilityManagerService$Service$2| |run| ||
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.view.accessibility.IAccessibilityManager$Stub| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindow| |int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindows| ||
|android.view.accessibility.IAccessibilityManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.IAccessibilityManager| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|com.android.server.am.ActivityStack| |resetTaskIfNeededLocked| |com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord|
|com.android.internal.view.IInputMethodManager| |getCurrentInputMethodSubtype| ||
|com.android.internal.view.IInputMethodManager$Stub$Proxy| |setCurrentInputMethodSubtype| |android.view.inputmethod.InputMethodSubtype|
|com.android.internal.view.IInputMethodManager$Stub| |setCurrentInputMethodSubtype| |android.view.inputmethod.InputMethodSubtype|
|android.speech.tts.TextToSpeech| |runAction| |android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean,boolean|
|android.speech.tts.TextToSpeech| |<init>| |android.content.Context,android.speech.tts.TextToSpeech$OnInitListener|
|android.speech.tts.ITextToSpeechService| |getClientDefaultLanguage| ||
|android.speech.tts.ITextToSpeechService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.speech.tts.ITextToSpeechService$Stub$Proxy| |speak| |android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String|
|android.speech.tts.ITextToSpeechService$Stub| |speak| |android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String|
|android.speech.tts.TextToSpeechService$1| |synthesizeToFileDescriptor| |android.os.IBinder,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String|
|android.media.ClosedCaptionRenderer| |createTrack| |android.media.MediaFormat|
|android.media.TtmlRenderingWidget| |<init>| |android.content.Context|
|android.view.View| |playSoundEffect| |int|
|android.view.ViewRootImpl$ViewPostImeInputStage| |onProcess| |android.view.ViewRootImpl$QueuedInputEvent|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |dispatchKeyEvent| |android.view.KeyEvent|
|android.text.method.MultiTapKeyListener| |onKeyDown| |android.view.View,android.text.Editable,int,android.view.KeyEvent|
|android.text.method.PasswordTransformationMethod| |onTextChanged| |java.lang.CharSequence,int,int,int|
|android.text.method.QwertyKeyListener| |onKeyDown| |android.view.View,android.text.Editable,int,android.view.KeyEvent|
|android.nfc.INfcAdapter| |enable| ||
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|android.view.IWindowManager| |isRotationFrozen| ||
|android.view.IWindowManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.input.InputManagerService| |interceptKeyBeforeDispatching| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.server.wm.InputMonitor| |dispatchUnhandledKey| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.internal.widget.multiwaveview.GlowPadView$1| |onAnimationEnd| |android.animation.Animator|
|com.android.internal.widget.multiwaveview.GlowPadView$2| |onAnimationEnd| |android.animation.Animator|
|com.android.internal.widget.multiwaveview.GlowPadView| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.WaveView| |onHoverEvent| |android.view.MotionEvent|
|android.media.MediaScannerClient| |scanFile| |java.lang.String,long,long,boolean,boolean|
|android.mtp.MtpDatabase| |endSendObject| |java.lang.String,int,int,boolean|
|android.filterpacks.videosrc.MediaSource| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |open| |android.filterfw.core.FilterContext|
|android.media.AsyncPlayer| |access$200| |android.media.AsyncPlayer,android.media.AsyncPlayer$Command|
|android.media.MediaPlayer| |create| |android.content.Context,android.net.Uri,android.view.SurfaceHolder|
|android.speech.tts.AudioPlaybackQueueItem| |run| ||
|android.media.RingtoneManager| |getRingtone| |android.content.Context,android.net.Uri,int|
|android.media.Ringtone| |setAudioAttributes| |android.media.AudioAttributes|
|android.widget.VideoView$7| |surfaceCreated| |android.view.SurfaceHolder|
|android.widget.VideoView| |setVideoURI| |android.net.Uri|
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |dispatchTouchEvent| |android.view.MotionEvent|
|android.widget.DateTimeView$ReceiverInfo$1| |onReceive| |android.content.Context,android.content.Intent|
|android.widget.DateTimeView$ReceiverInfo$2| |onChange| |boolean|
|android.text.format.DateUtils| |getRelativeDateTimeString| |android.content.Context,long,long,long,int|
|android.text.format.DateUtils| |getRelativeTimeSpanString| |android.content.Context,long,boolean|
|android.text.format.DateUtils| |getRelativeTimeSpanString| |long,long,long,int|
|android.text.format.DateUtils| |formatDateTime| |android.content.Context,long,int|
|android.widget.CalendarViewLegacyDelegate| |setMonthDisplayed| |java.util.Calendar|
|com.android.server.usage.UserUsageStatsService| |printIntervalStats| |com.android.internal.util.IndentingPrintWriter,com.android.server.usage.IntervalStats,boolean|
|android.widget.SimpleMonthView| |onDraw| |android.graphics.Canvas|
|com.android.server.notification.DowntimeConditionProvider$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.notification.DowntimeConditionProvider$3| |onZenModeChanged| ||
|com.android.server.notification.DowntimeConditionProvider| |onConnected| ||
|com.android.server.notification.DowntimeConditionProvider| |setConfig| |android.service.notification.ZenModeConfig|
|com.android.server.notification.DowntimeConditionProvider| |access$700| |com.android.server.notification.DowntimeConditionProvider|
|com.android.server.notification.DowntimeConditionProvider| |onRequestConditions| |int|
|com.android.server.notification.DowntimeConditionProvider| |access$900| |com.android.server.notification.DowntimeConditionProvider,android.app.AlarmManager$AlarmClockInfo,long,boolean|
|com.android.server.notification.NextAlarmConditionProvider| |access$000| |com.android.server.notification.NextAlarmConditionProvider,android.app.AlarmManager$AlarmClockInfo,long,boolean|
|com.android.server.notification.NextAlarmTracker$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.notification.ConditionProviders| |dump| |java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter|
|com.android.server.notification.NextAlarmTracker| |access$700| |com.android.server.notification.NextAlarmTracker|
|com.android.server.notification.NextAlarmConditionProvider| |notifyCondition| |android.net.Uri,android.app.AlarmManager$AlarmClockInfo,int,java.lang.String|
|android.widget.DigitalClock$FormatChangeObserver| |onChange| |boolean|
|android.widget.DigitalClock| |<init>| |android.content.Context,android.util.AttributeSet|
|android.widget.DigitalClock| |<init>| |android.content.Context|
|android.widget.TextClock$1| |onChange| |boolean,android.net.Uri|
|android.widget.TextClock$1| |onChange| |boolean|
|android.widget.TextClock| |<init>| |android.content.Context,android.util.AttributeSet,int|
|com.android.internal.view.IInputMethodManager| |getLastInputMethodSubtype| ||
|com.android.internal.inputmethod.InputMethodSubtypeSwitchingController| |resetCircularListLocked| |android.content.Context|
|com.android.internal.view.IInputMethodManager| |getShortcutInputMethodsAndSubtypes| ||
|android.view.inputmethod.InputMethodManager| |switchToLastInputMethod| |android.os.IBinder|
|com.android.server.InputMethodManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.inputmethod.InputMethodManager| |getEnabledInputMethodList| ||
|com.android.commands.ime.Ime| |runList| ||
|com.android.internal.view.IInputMethodManager| |getEnabledInputMethodSubtypeList| |java.lang.String,boolean|
|android.nfc.INfcCardEmulation$Stub$Proxy| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|android.nfc.INfcCardEmulation$Stub| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|android.nfc.INfcCardEmulation$Stub$Proxy| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |setDefaultForNextTap| |int,android.content.ComponentName|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |setPreferredService| |android.content.ComponentName|
|com.android.server.power.PowerManagerService| |handleSandman| ||
|com.android.server.notification.ConditionProviders| |onBootPhaseAppsCanStart| ||
|com.android.server.notification.NotificationManagerService$NotificationListeners| |onBootPhaseAppsCanStart| ||
|android.print.PrintManager| |print| |java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.print.PrintManager| |getPrintJob| |android.print.PrintJobId|
|android.print.PrintManager| |getPrintJobInfo| |android.print.PrintJobId|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageModified| |java.lang.String|
|com.android.internal.app.ResolverActivity$1| |onPackageModified| |java.lang.String|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageModified| |java.lang.String|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageModified| |java.lang.String|
|com.android.server.LocationManagerService$4| |onPackageModified| |java.lang.String|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageModified| |java.lang.String|
|com.android.server.ServiceWatcher$2| |onPackageModified| |java.lang.String|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageModified| |java.lang.String|
|com.android.server.trust.TrustManagerService$3| |onPackageModified| |java.lang.String|
|com.android.server.tv.TvInputManagerService$1| |onPackageModified| |java.lang.String|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onPackageModified| |java.lang.String|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageModified| |java.lang.String|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.app.ResolverActivity$1| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.LocationManagerService$4| |onPackageRemoved| |java.lang.String,int|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.trust.TrustManagerService$3| |onPackageRemoved| |java.lang.String,int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|android.print.PrintManager| |getEnabledPrintServices| ||
|android.print.PrintManager| |getInstalledPrintServices| ||
|android.print.PrintManager| |getPrintJobs| ||
|android.print.PrintManager| |addPrintJobStateChangeListener| |android.print.PrintManager$PrintJobStateChangeListener|
|android.print.PrintManager| |cancelPrintJob| |android.print.PrintJobId|
|android.print.PrinterDiscoverySession| |<init>| |android.print.IPrintManager,android.content.Context,int|
|android.print.PrinterDiscoverySession| |destroyNoCheck| ||
|android.print.PrintManager| |removePrintJobStateChangeListener| |android.print.PrintManager$PrintJobStateChangeListener|
|android.print.PrintManager| |restartPrintJob| |android.print.PrintJobId|
|android.print.PrinterDiscoverySession| |startPrinterDiscovery| |java.util.List|
|android.print.PrinterDiscoverySession| |startPrinterStateTracking| |android.print.PrinterId|
|android.print.PrinterDiscoverySession| |stopPrinterDiscovery| ||
|android.print.PrinterDiscoverySession| |stopPrinterStateTracking| |android.print.PrinterId|
|android.print.PrinterDiscoverySession| |validatePrinters| |java.util.List|
|android.widget.SpellChecker| |setLocale| |java.util.Locale|
|android.widget.SpellChecker| |spellCheck| |int,int|
|android.inputmethodservice.ExtractButton| |updateTextServicesLocaleLocked| ||
|android.inputmethodservice.ExtractEditText| |updateTextServicesLocaleLocked| ||
|android.media.ClosedCaptionWidget$CCLineBox| |updateTextServicesLocaleLocked| ||
|android.widget.AutoCompleteTextView| |updateTextServicesLocaleLocked| ||
|android.widget.Button| |updateTextServicesLocaleLocked| ||
|android.widget.CheckBox| |updateTextServicesLocaleLocked| ||
|android.widget.CheckedTextView| |updateTextServicesLocaleLocked| ||
|android.widget.Chronometer| |updateTextServicesLocaleLocked| ||
|android.widget.CompoundButton| |updateTextServicesLocaleLocked| ||
|android.widget.DateTimeView| |updateTextServicesLocaleLocked| ||
|android.widget.DigitalClock| |updateTextServicesLocaleLocked| ||
|android.widget.EditText| |updateTextServicesLocaleLocked| ||
|android.widget.MultiAutoCompleteTextView| |updateTextServicesLocaleLocked| ||
|android.widget.NumberPicker$CustomEditText| |updateTextServicesLocaleLocked| ||
|android.widget.RadioButton| |updateTextServicesLocaleLocked| ||
|android.widget.SearchView$SearchAutoComplete| |updateTextServicesLocaleLocked| ||
|android.widget.Switch| |updateTextServicesLocaleLocked| ||
|android.widget.TextClock| |updateTextServicesLocaleLocked| ||
|android.widget.TextView| |access$200| |android.widget.TextView|
|android.widget.TextViewWithCircularIndicator| |updateTextServicesLocaleLocked| ||
|android.widget.ToggleButton| |updateTextServicesLocaleLocked| ||
|com.android.internal.view.menu.ActionMenuItemView| |updateTextServicesLocaleLocked| ||
|com.android.internal.view.menu.IconMenuItemView| |updateTextServicesLocaleLocked| ||
|com.android.internal.widget.DialogTitle| |updateTextServicesLocaleLocked| ||
|com.android.internal.inputmethod.InputMethodUtils| |setNonSelectedSystemImesDisabledUntilUsed| |android.content.pm.PackageManager,java.util.List|
|android.view.textservice.TextServicesManager| |getEnabledSpellCheckers| ||
|android.view.textservice.TextServicesManager| |isSpellCheckerEnabled| ||
|android.view.textservice.SpellCheckerSession| |close| ||
|android.view.textservice.TextServicesManager| |setCurrentSpellChecker| |android.view.textservice.SpellCheckerInfo|
|android.view.textservice.TextServicesManager| |setSpellCheckerSubtype| |android.view.textservice.SpellCheckerSubtype|
|android.view.textservice.TextServicesManager| |setSpellCheckerEnabled| |boolean|
|android.app.ActivityManagerNative| |startUserInBackground| |int|
|com.android.server.am.ActivityManagerService| |startProfilesLocked| ||
|com.android.server.am.UserSwitchingDialog| |onWindowShown| ||
|com.android.server.devicepolicy.DevicePolicyManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setDeviceOwner| |java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |setDeviceOwner| |java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager| |hasUserSetupCompleted| ||
|android.app.admin.IDevicePolicyManager| |setProfileOwner| |android.content.ComponentName,java.lang.String,int|
|com.android.server.pm.PackageManagerService| |isPackageDeviceAdmin| |java.lang.String,int|
|android.app.admin.IDevicePolicyManager| |getApplicationRestrictions| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager| |createUser| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |createAndInitializeUser| |android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle|
|android.app.admin.IDevicePolicyManager$Stub| |createAndInitializeUser| |android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle|
|android.app.admin.IDevicePolicyManager| |addCrossProfileWidgetProvider| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager| |getCrossProfileCallerIdDisabled| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |installKeyPair| |android.content.ComponentName,byte[],byte[],java.lang.String|
|android.app.admin.IDevicePolicyManager| |isActivePasswordSufficient| |int|
|android.app.admin.IDevicePolicyManager| |isApplicationHidden| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager| |isMasterVolumeMuted| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |isUninstallBlocked| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager| |removeCrossProfileWidgetProvider| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager| |removeUser| |android.content.ComponentName,android.os.UserHandle|
|android.app.admin.IDevicePolicyManager| |setApplicationHidden| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager| |setPermittedAccessibilityServices| |android.content.ComponentName,java.util.List|
|android.app.admin.IDevicePolicyManager| |setPermittedInputMethods| |android.content.ComponentName,java.util.List|
|android.app.admin.IDevicePolicyManager| |switchUser| |android.content.ComponentName,android.os.UserHandle|
|android.app.admin.IDevicePolicyManager| |enableSystemAppWithIntent| |android.content.ComponentName,android.content.Intent|
|android.app.admin.IDevicePolicyManager| |getCurrentFailedPasswordAttempts| |int|
|android.app.admin.IDevicePolicyManager| |getCrossProfileWidgetProviders| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |getPermittedAccessibilityServices| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |getPermittedInputMethods| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |addCrossProfileIntentFilter| |android.content.ComponentName,android.content.IntentFilter,int|
|android.app.admin.IDevicePolicyManager| |addPersistentPreferredActivity| |android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |clearCrossProfileIntentFilters| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |clearPackagePersistentPreferredActivities| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager| |clearProfileOwner| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |enableSystemApp| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager| |enforceCanManageCaCerts| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |installCaCert| |android.content.ComponentName,byte[]|
|android.app.admin.IDevicePolicyManager$Stub| |installCaCert| |android.content.ComponentName,byte[]|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |uninstallCaCert| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |uninstallCaCert| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager| |lockNow| ||
|android.app.admin.IDevicePolicyManager| |setAccountManagementDisabled| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager| |setApplicationRestrictions| |android.content.ComponentName,java.lang.String,android.os.Bundle|
|android.app.admin.IDevicePolicyManager| |setAutoTimeRequired| |android.content.ComponentName,int,boolean|
|android.app.admin.IDevicePolicyManager| |setCrossProfileCallerIdDisabled| |android.content.ComponentName,boolean|
|android.app.admin.IDevicePolicyManager| |setGlobalSetting| |android.content.ComponentName,java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager| |setMasterVolumeMuted| |android.content.ComponentName,boolean|
|android.app.admin.IDevicePolicyManager| |setMaximumFailedPasswordsForWipe| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setPasswordHistoryLength| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setPasswordMinimumLength| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setPasswordMinimumLetters| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setPasswordMinimumLowerCase| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setPasswordMinimumNonLetter| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setPasswordMinimumNumeric| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setPasswordMinimumSymbols| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setPasswordMinimumUpperCase| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setPasswordQuality| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |setProfileEnabled| |android.content.ComponentName|
|android.app.admin.IDevicePolicyManager| |setProfileName| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager| |setRecommendedGlobalProxy| |android.content.ComponentName,android.net.ProxyInfo|
|android.app.admin.IDevicePolicyManager| |setScreenCaptureDisabled| |android.content.ComponentName,int,boolean|
|android.app.admin.IDevicePolicyManager| |setSecureSetting| |android.content.ComponentName,java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager| |setUninstallBlocked| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager| |setUserRestriction| |android.content.ComponentName,java.lang.String,boolean|
|android.app.admin.IDevicePolicyManager| |wipeData| |int,int|
|android.app.admin.IDevicePolicyManager| |hasGrantedPolicy| |android.content.ComponentName,int,int|
|android.app.admin.IDevicePolicyManager| |isAdminActive| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getMaximumFailedPasswordsForWipe| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getPasswordHistoryLength| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getPasswordMinimumLength| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getPasswordMinimumLetters| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getPasswordMinimumLowerCase| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getPasswordMinimumNonLetter| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getPasswordMinimumNumeric| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getPasswordMinimumSymbols| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getPasswordMinimumUpperCase| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getPasswordQuality| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getTrustAgentConfiguration| |android.content.ComponentName,android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getMaximumTimeToLock| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |getPasswordExpiration| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager$Stub| |getPasswordExpiration| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getPasswordExpirationTimeout| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getRemoveWarning| |android.content.ComponentName,android.os.RemoteCallback,int|
|android.app.admin.IDevicePolicyManager| |removeActiveAdmin| |android.content.ComponentName,int|
|android.app.admin.IDevicePolicyManager| |getAutoTimeRequired| ||
|android.app.admin.IDevicePolicyManager| |getCrossProfileCallerIdDisabledForUser| |int|
|android.app.admin.IDevicePolicyManager| |getAccountTypesWithManagementDisabled| ||
|android.app.admin.IDevicePolicyManager| |setActiveAdmin| |android.content.ComponentName,boolean,int|
|android.view.WindowManagerPolicy| |isKeyguardSecure| ||
|com.android.internal.policy.impl.PhoneWindowManager| |beginPostLayoutPolicyLw| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |goingToSleep| |int|
|com.android.internal.policy.impl.PhoneWindowManager| |wakingUp| ||
|com.android.server.trust.TrustManagerService$3| |onPackageDisappeared| |java.lang.String,int|
|android.net.NetworkScoreManager| |clearScores| ||
|com.android.server.NetworkScoreService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.NetworkScoreManager| |updateScores| |android.net.ScoredNetwork[]|
|android.net.NetworkScoreManager| |disableScoring| ||
|android.media.AudioService| |access$1500| |android.media.AudioService,int|
|android.media.AudioService| |setMode| |int,android.os.IBinder|
|android.media.AudioService| |access$7800| |android.media.AudioService|
|android.media.AudioService| |onSystemReady| ||
|com.android.server.pm.PackageManagerService$InstallParams| |startCopy| ||
|com.android.server.pm.PackageManagerService$MeasureParams| |startCopy| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setUiTTYMode| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setUiTTYMode| |int,android.os.Message|
|com.android.internal.telephony.PhoneBase| |setUiTTYMode| |int,android.os.Message|
|com.android.server.wm.InputMonitor| |notifyCameraLensCoverSwitchChanged| |long,boolean|
|com.android.server.wm.InputMonitor| |notifyLidSwitchChanged| |long,boolean|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |interceptMotionBeforeQueueingNonInteractive| |long,int|
|com.android.internal.telephony.PhoneProxy| |<init>| |com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.PhoneProxy| |updateDataConnectionTracker| ||
|com.android.internal.telephony.dataconnection.DcTracker| |getAnyDataEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |getAnyDataEnabled| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |isDataPossible| |java.lang.String|
|com.android.internal.telephony.PhoneProxy| |deleteAndCreatePhone| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.Phone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.Phone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|android.telephony.SubscriptionManager| |setDefaultDataSubId| |int|
|com.android.internal.telephony.ISub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |<init>| |com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|android.net.NetworkFactory| |needNetworkFor| |android.net.NetworkRequest,int|
|com.android.internal.telephony.dataconnection.DctController$TelephonyNetworkFactory| |evalPendingRequest| ||
|android.net.NetworkFactory| |releaseNetworkFor| |android.net.NetworkRequest|
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$IdleState| |enter| ||
|com.android.internal.telephony.dataconnection.DctController| |releaseNetwork| |android.net.NetworkRequest|
|com.android.internal.telephony.dataconnection.DctController| |requestNetwork| |android.net.NetworkRequest,int|
|com.android.internal.telephony.dataconnection.DctController| |onSubInfoReady| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachedState| |processMessage| |android.os.Message|
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachedState| |enter| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachingState| |processMessage| |android.os.Message|
|android.telephony.SubscriptionManager| |getDefaultDataSubscriptionInfo| ||
|android.telephony.SubscriptionManager| |allDefaultsSelected| ||
|android.telephony.SubscriptionManager| |getDefaultDataPhoneId| ||
|android.telephony.TelephonyManager| |getDataEnabled| ||
|android.telephony.TelephonyManager| |getSimOperatorNumeric| ||
|android.telephony.TelephonyManager| |setDataEnabled| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateCurrentCarrierInProvider| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.dataconnection.DcTracker| |startAlarmForReconnect| |int,com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.DefaultPhoneNotifier| |doNotifyDataConnection| |com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.gsm.GSMPhone| |updateCurrentCarrierInProvider| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setNotification| |int|
|android.telephony.SubscriptionManager| |getDefaultSubId| ||
|com.android.internal.telephony.PhoneSubInfoController| |getCompleteVoiceMailNumber| ||
|com.android.internal.telephony.PhoneSubInfoController| |getDeviceId| ||
|com.android.internal.telephony.PhoneSubInfoController| |getDeviceSvn| ||
|com.android.internal.telephony.PhoneSubInfoController| |getGroupIdLevel1| ||
|com.android.internal.telephony.PhoneSubInfoController| |getIccSerialNumber| ||
|com.android.internal.telephony.PhoneSubInfoController| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.PhoneSubInfoController| |getIsimDomain| ||
|com.android.internal.telephony.PhoneSubInfoController| |getIsimImpi| ||
|com.android.internal.telephony.PhoneSubInfoController| |getIsimImpu| ||
|com.android.internal.telephony.PhoneSubInfoController| |getIsimIst| ||
|com.android.internal.telephony.PhoneSubInfoController| |getIsimPcscf| ||
|com.android.internal.telephony.PhoneSubInfoController| |getLine1AlphaTag| ||
|com.android.internal.telephony.PhoneSubInfoController| |getLine1Number| ||
|com.android.internal.telephony.PhoneSubInfoController| |getMsisdn| ||
|com.android.internal.telephony.PhoneSubInfoController| |getSubscriberId| ||
|com.android.internal.telephony.PhoneSubInfoController| |getVoiceMailAlphaTag| ||
|com.android.internal.telephony.PhoneSubInfoController| |getVoiceMailNumber| ||
|com.android.internal.telephony.UiccPhoneBookController| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.UiccPhoneBookController| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.UiccPhoneBookController| |getAdnRecordsSize| |int|
|com.android.internal.telephony.UiccPhoneBookController| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.ISub| |getPhoneId| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |getSimStateForSubscriber| |int|
|com.android.internal.telephony.ISub$Stub| |getSimStateForSubscriber| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |setDisplayNumber| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |setDisplayNumber| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |getSubInfoRecord| |android.database.Cursor|
|com.android.internal.telephony.UiccPhoneBookController| |updateAdnRecordsInEfByIndexForSubscriber| |int,int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.UiccPhoneBookController| |updateAdnRecordsInEfBySearchForSubscriber| |int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.UiccPhoneBookController| |getAdnRecordsSizeForSubscriber| |int,int|
|com.android.internal.telephony.UiccPhoneBookController| |getAdnRecordsInEfForSubscriber| |int,int|
|com.android.internal.telephony.UiccSmsController| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.UiccSmsController| |isImsSmsSupportedForSubscriber| |int|
|com.android.internal.telephony.UiccSmsController| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.UiccSmsController| |getPremiumSmsPermissionForSubscriber| |int,java.lang.String|
|com.android.internal.telephony.UiccSmsController| |getImsSmsFormatForSubscriber| |int|
|com.android.internal.telephony.UiccSmsController| |getAllMessagesFromIccEfForSubscriber| |int,java.lang.String|
|com.android.internal.telephony.UiccSmsController| |injectSmsPdu| |int,byte[],java.lang.String,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendDataForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendMultipartTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.UiccSmsController| |sendStoredMultipartText| |int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|com.android.internal.telephony.UiccSmsController| |sendStoredText| |int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |setPremiumSmsPermissionForSubscriber| |int,java.lang.String,int|
|com.android.internal.telephony.ISub| |getSlotId| |int|
|com.android.internal.telephony.ISub| |getSubId| |int|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateSpnDisplay| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateSpnDisplay| ||
|com.android.internal.telephony.PhoneBase| |getSubId| ||
|com.android.internal.telephony.SMSDispatcher| |getSubId| ||
|com.android.internal.telephony.uicc.RuimRecords| |onRecordLoaded| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimAbsent| |int|
|android.telephony.SubscriptionManager| |clearDefaultsForInactiveSubIds| ||
|android.provider.Telephony$Sms| |addMessageToUri| |android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,boolean,long|
|android.provider.Telephony$Sms| |addMessageToUri| |android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,boolean|
|android.provider.Telephony$Sms$Draft| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long|
|android.provider.Telephony$Sms$Inbox| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean|
|android.provider.Telephony$Sms$Intents| |getMessagesFromIntent| |android.content.Intent|
|android.provider.Telephony$Sms$Outbox| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long|
|android.provider.Telephony$Sms$Sent| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long|
|android.telephony.SubscriptionManager| |getDefaultSmsSubscriptionInfo| ||
|android.telephony.SubscriptionManager| |getDefaultSmsPhoneId| ||
|com.android.internal.telephony.UiccSmsController| |injectSmsPdu| |byte[],java.lang.String,android.app.PendingIntent|
|android.telephony.SmsManager| |getDefaultSmsSubscriptionId| ||
|com.android.internal.telephony.UiccSmsController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISms| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms| |isImsSmsSupported| ||
|com.android.internal.telephony.ISms| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms| |getPremiumSmsPermission| |java.lang.String|
|com.android.internal.telephony.ISms| |getImsSmsFormat| ||
|com.android.internal.telephony.ISms| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.ISms| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |setPremiumSmsPermission| |java.lang.String,int|
|android.telephony.PhoneNumberUtils| |getDefaultVoiceSubId| ||
|android.telephony.SubscriptionManager| |getDefaultVoiceSubscriptionInfo| ||
|android.telephony.SubscriptionManager| |getDefaultVoicePhoneId| ||
|com.android.ims.ImsManager| |isVolteProvisionedOnDevice| |android.content.Context|
|android.util.Log$1| |onTerribleFailure| |java.lang.String,android.util.Log$TerribleFailure,boolean|
|com.android.server.DropBoxManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.os.DropBoxManager| |addData| |java.lang.String,byte[],int|
|android.os.DropBoxManager| |addFile| |java.lang.String,java.io.File,int|
|android.os.DropBoxManager| |addText| |java.lang.String,java.lang.String|
|com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback| |onDeviceDiscoveryDone| |java.util.List|
|com.android.server.hdmi.NewDeviceAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.NewDeviceAction| |handleTimerEvent| |int|
|com.android.server.hdmi.HdmiCecFeatureAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecFeatureAction| |handleTimerEvent| |int|
|com.android.server.hdmi.HdmiControlService| |initializeCec| |int|
|com.android.server.hdmi.HdmiCecController| |handleHotplug| |int,boolean|
|com.android.server.net.NetworkStatsService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.net.NetworkStatsService| |removeUidsLocked| |int[]|
|com.android.server.net.NetworkStatsService| |updateIfacesLocked| ||
|com.android.server.NsdService| |create| |android.content.Context|
|com.android.commands.pm.Pm| |run| |java.lang.String[]|
|com.android.commands.pm.Pm| |runSetInstallLocation| ||
|com.android.server.wifi.WifiStateMachine$L2ConnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$ObtainingIpState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$ConnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DefaultState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DisconnectingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DriverStartedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DriverStartingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DriverStoppedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DriverStoppingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$InitialState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$RoamingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SoftApStartedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SoftApStartingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SupplicantStartedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SupplicantStartingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SupplicantStoppingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$TetheredState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$TetheringState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$UntetheringState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$VerifyingLinkState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$WaitForP2pDisableState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$WpsRunningState| |processMessage| |android.os.Message|
|com.android.server.AlarmManagerService| |<init>| |android.content.Context|
|com.android.server.am.ActivityManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.appwidget.AppWidgetService| |<init>| |android.content.Context|
|com.android.server.backup.BackupManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.BatteryService| |<init>| |android.content.Context|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.display.DisplayManagerService| |<init>| |android.content.Context|
|com.android.server.dreams.DreamManagerService| |<init>| |android.content.Context|
|com.android.server.ethernet.EthernetService| |<init>| |android.content.Context|
|com.android.server.fingerprint.FingerprintService| |<init>| |android.content.Context|
|com.android.server.hdmi.HdmiControlService| |<init>| |android.content.Context|
|com.android.server.job.JobSchedulerService| |<init>| |android.content.Context|
|com.android.server.lights.LightsService| |<init>| |android.content.Context|
|com.android.server.media.MediaSessionService| |<init>| |android.content.Context|
|com.android.server.media.projection.MediaProjectionManagerService| |<init>| |android.content.Context|
|com.android.server.MmsServiceBroker| |<init>| |android.content.Context|
|com.android.server.notification.NotificationManagerService| |<init>| |android.content.Context|
|com.android.server.PersistentDataBlockService| |<init>| |android.content.Context|
|com.android.server.pm.Installer| |<init>| |android.content.Context|
|com.android.server.pm.LauncherAppsService| |<init>| |android.content.Context|
|com.android.server.power.PowerManagerService| |<init>| |android.content.Context|
|com.android.server.print.PrintManagerService| |<init>| |android.content.Context|
|com.android.server.restrictions.RestrictionsManagerService| |<init>| |android.content.Context|
|com.android.server.storage.DeviceStorageMonitorService| |<init>| |android.content.Context|
|com.android.server.telecom.TelecomLoaderService| |<init>| |android.content.Context|
|com.android.server.trust.TrustManagerService| |<init>| |android.content.Context|
|com.android.server.tv.TvInputManagerService| |<init>| |android.content.Context|
|com.android.server.twilight.TwilightService| |<init>| |android.content.Context|
|com.android.server.UiModeManagerService| |<init>| |android.content.Context|
|com.android.server.usage.UsageStatsService| |<init>| |android.content.Context|
|com.android.server.usb.UsbService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |<init>| |android.content.Context|
|com.android.server.webkit.WebViewUpdateService| |<init>| |android.content.Context|
|com.android.server.wifi.p2p.WifiP2pService| |<init>| |android.content.Context|
|com.android.server.wifi.RttService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiScanningService| |<init>| |android.content.Context|
|com.android.server.am.ActivityManagerService| |updateConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |handleAppTransitionReadyLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowManagerService| |prepareAppTransition| |int,boolean|
|com.android.server.wm.WindowManagerService| |updateRotationUncheckedLocked| |boolean|
|com.android.server.wm.WindowManagerService| |makeWindowFreezingScreenIfNeededLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |requestTraversalLocked| ||
|com.android.server.wm.WindowManagerService| |setForcedDisplayDensityLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.WindowManagerService| |setForcedDisplaySizeLocked| |com.android.server.wm.DisplayContent,int,int|
|com.android.server.wm.WindowManagerService| |setOverscanLocked| |com.android.server.wm.DisplayContent,int,int,int,int|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.TaskStack| |detachDisplay| ||
|android.view.IWindowManager$Stub$Proxy| |setNewConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |updateConfigurationLocked| |android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean|
|com.android.server.wm.WindowAnimator| |testTokenMayBeDrawnLocked| |int|
|com.android.server.wm.WindowManagerService| |startAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CDMAPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.MccTable| |updateMccMncConfiguration| |android.content.Context,java.lang.String,boolean|
|com.android.internal.telephony.uicc.RuimRecords| |setLocaleFromCsim| ||
|com.android.internal.telephony.uicc.SIMRecords| |setLocaleFromUsim| ||
|android.telephony.SmsManager| |isSMSPromptEnabled| ||
|com.android.server.content.SyncManager| |sendSyncAlarmMessage| ||
|com.android.server.content.SyncManager| |sendCheckAlarmsMessage| ||
|com.android.server.content.SyncManager| |sendCancelSyncsMessage| |com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle|
|com.android.server.content.SyncManager| |postSyncExpiryMessage| |com.android.server.content.SyncManager$ActiveSyncContext|
|com.android.server.net.NetworkStatsService| |advisePersistThreshold| |long|
|com.android.server.net.NetworkStatsService| |access$600| |com.android.server.net.NetworkStatsService,int|
|com.android.server.wifi.WifiStateMachine| |access$7500| |com.android.server.wifi.WifiStateMachine|
|com.android.internal.telephony.PhoneBase| |getNetworkCapabilities| |java.lang.String|
|android.net.DhcpStateMachine| |toString| ||
|com.android.internal.telephony.cat.RilMessageDecoder| |toString| ||
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |toString| ||
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler| |toString| ||
|com.android.internal.telephony.CellBroadcastHandler| |toString| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine| |toString| ||
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |toString| ||
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |toString| ||
|com.android.internal.telephony.InboundSmsHandler| |toString| ||
|com.android.internal.telephony.WakeLockStateMachine| |toString| ||
|com.android.server.connectivity.Tethering$TetherMasterSM| |toString| ||
|com.android.server.NsdService$NsdStateMachine| |toString| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |toString| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine| |toString| ||
|com.android.server.wifi.SupplicantStateTracker| |toString| ||
|com.android.server.wifi.WifiApConfigStore| |toString| ||
|com.android.server.wifi.WifiController| |toString| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine| |toString| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine| |toString| ||
|com.android.server.wifi.WifiStateMachine| |toString| ||
|com.android.server.wifi.WifiWatchdogStateMachine| |toString| ||
|com.android.internal.telephony.cdma.CDMAPhone| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.gsm.GSMPhone| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.imsphone.ImsPhone| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.PhoneFactory| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.PhoneProxy| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.sip.SipPhoneBase| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.sip.SipPhone| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.dataconnection.DctController| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.NsdService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wifi.p2p.WifiP2pServiceImpl| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.internal.telephony.cdma.CDMALTEPhone| |getDataConnectionState| ||
|com.android.internal.telephony.cdma.CDMAPhone| |getDataConnectionState| ||
|com.android.internal.telephony.gsm.GSMPhone| |getDataConnectionState| ||
|com.android.internal.telephony.Phone| |getDataConnectionState| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.dataconnection.DcController$DccDefaultState| |onDataStateChanged| |java.util.ArrayList|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onDataSetupCompleteError| |android.os.AsyncResult|
|com.android.internal.telephony.dataconnection.DcTracker| |onDisconnectDcRetrying| |int,android.os.AsyncResult|
|com.android.internal.telephony.dataconnection.DcTracker| |onDisconnectDone| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GSMPhone| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.gsm.GSMPhone| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.PhoneProxy| |getDataConnectionState| |java.lang.String|
|com.android.internal.telephony.PhoneProxy| |getDataConnectionState| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onSetDependencyMet| |java.lang.String,boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |dispose| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onCleanUpAllConnections| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onRadioOffOrNotAvailable| ||
|com.android.internal.telephony.dataconnection.DcTracker| |restartRadio| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onCleanUpConnection| |boolean,int,java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onRadioAvailable| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onTrySetupData| |com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |onTrySetupData| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onRecordsLoaded| ||
|com.android.internal.telephony.dataconnection.DcTracker| |cleanUpAllConnections| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onSetInternalDataEnabled| |boolean,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setInternalDataEnabled| |boolean,android.os.Message|
|com.android.internal.telephony.dataconnection.DcTracker| |setInternalDataEnabled| |boolean|
|com.android.internal.telephony.gsm.GSMPhone| |setInternalDataEnabled| |boolean,android.os.Message|
|com.android.server.connectivity.PacManager$1| |run| ||
|com.android.server.power.PowerManagerService| |access$1100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |acquireWakeLockInternal| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |boostScreenBrightnessInternal| |long,int|
|com.android.server.power.PowerManagerService| |goToSleepInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |handleBatteryStateChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleScreenBrightnessBoostTimeout| ||
|com.android.server.power.PowerManagerService| |handleUserActivityTimeout| ||
|com.android.server.power.PowerManagerService| |napInternal| |long,int|
|com.android.server.power.PowerManagerService| |onBootPhase| |int|
|com.android.server.power.PowerManagerService| |removeWakeLockLocked| |com.android.server.power.PowerManagerService$WakeLock,int|
|com.android.server.power.PowerManagerService| |setDozeOverrideFromDreamManagerInternal| |int,int|
|com.android.server.power.PowerManagerService| |setMaximumScreenOffTimeoutFromDeviceAdminInternal| |int|
|com.android.server.power.PowerManagerService| |setScreenBrightnessOverrideFromWindowManagerInternal| |int|
|com.android.server.power.PowerManagerService| |setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal| |float|
|com.android.server.power.PowerManagerService| |setTemporaryScreenBrightnessSettingOverrideInternal| |int|
|com.android.server.power.PowerManagerService| |setUserActivityTimeoutOverrideFromWindowManagerInternal| |long|
|com.android.server.power.PowerManagerService| |userActivityInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |wakeUpInternal| |long,int|
|com.android.server.LocationManagerService| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.location.provider.LocationProviderBase| |reportLocation| |android.location.Location|
|com.android.server.location.GpsLocationProvider| |reportLocation| |int,double,double,double,float,float,float,long|
|com.android.server.location.MockProvider| |setLocation| |android.location.Location|
|com.android.server.location.PassiveProvider| |updateLocation| |android.location.Location|
|android.media.SRTRenderer| |createTrack| |android.media.MediaFormat|
|android.media.WebVttRenderer| |createTrack| |android.media.MediaFormat|
|android.media.ClosedCaptionTrack| |hide| ||
|android.media.SRTTrack| |hide| ||
|android.media.SubtitleController| |doHide| ||
|android.media.SubtitleController| |doSelectTrack| |android.media.SubtitleTrack|
|android.media.TtmlTrack| |hide| ||
|android.media.WebVttTrack| |hide| ||
|android.media.ClosedCaptionTrack| |show| ||
|android.media.SRTTrack| |show| ||
|android.media.SubtitleController| |doShow| ||
|android.media.TtmlTrack| |show| ||
|android.media.WebVttTrack| |show| ||
|com.android.server.accessibility.AccessibilityInputFilter| |handleMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleMotionEventStateDelegating| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendMotionEvent| |android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1800| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |transitionToDelegatingStateAndClear| ||
|android.speech.tts.TextToSpeechService$SynthesisSpeechItemV1| |setRequestParams| |android.speech.tts.SynthesisRequest|
|com.android.internal.telephony.WakeLockStateMachine$IdleState| |processMessage| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |notifyLocationChanged| ||
|com.android.internal.telephony.gsm.GSMPhone| |notifyLocationChanged| ||
|android.nfc.NfcActivityManager| |disableReaderMode| |android.app.Activity|
|android.nfc.NfcActivityManager| |enableReaderMode| |android.app.Activity,android.nfc.NfcAdapter$ReaderCallback,int,android.os.Bundle|
|com.android.nfc.DeviceHost$TagEndpoint| |startPresenceChecking| |int,com.android.nfc.DeviceHost$TagDisconnectedCallback|
|android.app.ActivityManagerNative| |bootAnimationComplete| ||
|com.android.internal.os.RuntimeInit$UncaughtHandler| |uncaughtException| |java.lang.Thread,java.lang.Throwable|
|com.android.server.am.ActivityManagerService| |startObservingNativeCrashes| ||
|com.android.server.UiModeManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.twilight.TwilightListener| |onTwilightStateChanged| ||
|android.view.accessibility.IAccessibilityManager| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindows| ||
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindows| ||
|com.android.server.accessibility.AccessibilityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomationConnection| |registerUiTestAutomationServiceLocked| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |enableAccessibility| ||
|android.view.inputmethod.InputMethodManager| |getCurrentInputMethodSubtype| ||
|com.android.internal.view.IInputMethodManager| |setCurrentInputMethodSubtype| |android.view.inputmethod.InputMethodSubtype|
|android.speech.tts.TextToSpeech| |runAction| |android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String|
|android.speech.tts.TextToSpeech| |runActionNoReconnect| |android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean|
|com.android.internal.policy.impl.EnableAccessibilityController| |<init>| |android.content.Context,java.lang.Runnable|
|android.speech.tts.TextToSpeech$15| |run| |android.speech.tts.ITextToSpeechService|
|android.speech.tts.TextToSpeech$8| |run| |android.speech.tts.ITextToSpeechService|
|android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask| |doInBackground| |java.lang.Void[]|
|android.speech.tts.TextToSpeechService$1| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.speech.tts.ITextToSpeechService| |speak| |android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String|
|android.speech.tts.ITextToSpeechService$Stub$Proxy| |synthesizeToFileDescriptor| |android.os.IBinder,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String|
|android.speech.tts.ITextToSpeechService$Stub| |synthesizeToFileDescriptor| |android.os.IBinder,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String|
|android.media.SubtitleController$Renderer| |createTrack| |android.media.MediaFormat|
|android.media.TtmlRenderer| |createTrack| |android.media.MediaFormat|
|android.app.ActivityView| |playSoundEffect| |int|
|android.app.FragmentBreadCrumbs| |playSoundEffect| |int|
|android.app.MediaRouteButton| |playSoundEffect| |int|
|android.app.NativeActivity$NativeContentView| |playSoundEffect| |int|
|android.app.SearchDialog$SearchBar| |playSoundEffect| |int|
|android.appwidget.AppWidgetHostView| |playSoundEffect| |int|
|android.filterfw.core.FilterSurfaceView| |playSoundEffect| |int|
|android.gesture.GestureOverlayView| |playSoundEffect| |int|
|android.inputmethodservice.ExtractButton| |playSoundEffect| |int|
|android.inputmethodservice.ExtractEditLayout| |playSoundEffect| |int|
|android.inputmethodservice.ExtractEditText| |playSoundEffect| |int|
|android.inputmethodservice.KeyboardView| |playSoundEffect| |int|
|android.media.ClosedCaptionWidget$CCLayout| |playSoundEffect| |int|
|android.media.ClosedCaptionWidget$CCLineBox| |playSoundEffect| |int|
|android.media.ClosedCaptionWidget| |playSoundEffect| |int|
|android.media.TtmlRenderingWidget| |playSoundEffect| |int|
|android.media.tv.TvView$3| |playSoundEffect| |int|
|android.media.tv.TvView| |playSoundEffect| |int|
|android.media.WebVttRenderingWidget$CueLayout| |playSoundEffect| |int|
|android.media.WebVttRenderingWidget$RegionLayout| |playSoundEffect| |int|
|android.media.WebVttRenderingWidget$SpanLayout| |playSoundEffect| |int|
|android.media.WebVttRenderingWidget| |playSoundEffect| |int|
|android.opengl.GLSurfaceView| |playSoundEffect| |int|
|android.preference.PreferenceFrameLayout| |playSoundEffect| |int|
|android.renderscript.RSSurfaceView| |playSoundEffect| |int|
|android.renderscript.RSTextureView| |playSoundEffect| |int|
|android.view.GhostView| |playSoundEffect| |int|
|android.view.LayoutInflater$BlinkLayout| |playSoundEffect| |int|
|android.view.SurfaceView| |playSoundEffect| |int|
|android.view.TextureView| |playSoundEffect| |int|
|android.view.View| |performClick| ||
|android.view.ViewGroup| |playSoundEffect| |int|
|android.view.ViewOverlay$OverlayViewGroup| |playSoundEffect| |int|
|android.view.ViewStub| |playSoundEffect| |int|
|android.webkit.WebView| |playSoundEffect| |int|
|android.widget.AbsListView| |playSoundEffect| |int|
|android.widget.AbsoluteLayout| |playSoundEffect| |int|
|android.widget.AbsSeekBar| |playSoundEffect| |int|
|android.widget.AbsSpinner| |playSoundEffect| |int|
|android.widget.ActionMenuPresenter$OverflowMenuButton| |playSoundEffect| |int|
|android.widget.ActionMenuView| |playSoundEffect| |int|
|android.widget.ActivityChooserView| |playSoundEffect| |int|
|android.widget.AdapterViewAnimator| |playSoundEffect| |int|
|android.widget.AdapterViewFlipper| |playSoundEffect| |int|
|android.widget.AdapterView| |playSoundEffect| |int|
|android.widget.AnalogClock| |playSoundEffect| |int|
|android.widget.AppSecurityPermissions$PermissionItemView| |playSoundEffect| |int|
|android.widget.AutoCompleteTextView| |playSoundEffect| |int|
|android.widget.Button| |playSoundEffect| |int|
|android.widget.CalendarViewLegacyDelegate$WeekView| |playSoundEffect| |int|
|android.widget.CalendarView| |playSoundEffect| |int|
|android.widget.CheckBox| |playSoundEffect| |int|
|android.widget.CheckedTextView| |playSoundEffect| |int|
|android.widget.Chronometer| |playSoundEffect| |int|
|android.widget.CompoundButton| |playSoundEffect| |int|
|android.widget.DatePicker| |playSoundEffect| |int|
|android.widget.DateTimeView| |playSoundEffect| |int|
|android.widget.DayPickerView| |playSoundEffect| |int|
|android.widget.DialerFilter| |playSoundEffect| |int|
|android.widget.DigitalClock| |playSoundEffect| |int|
|android.widget.Editor$HandleView| |playSoundEffect| |int|
|android.widget.Editor$InsertionHandleView| |playSoundEffect| |int|
|android.widget.Editor$SelectionEndHandleView| |playSoundEffect| |int|
|android.widget.Editor$SelectionStartHandleView| |playSoundEffect| |int|
|android.widget.EditText| |playSoundEffect| |int|
|android.widget.ExpandableListView| |playSoundEffect| |int|
|android.widget.FrameLayout| |playSoundEffect| |int|
|android.widget.Gallery| |playSoundEffect| |int|
|android.widget.GridLayout| |playSoundEffect| |int|
|android.widget.GridView| |playSoundEffect| |int|
|android.widget.HorizontalScrollView| |playSoundEffect| |int|
|android.widget.ImageButton| |playSoundEffect| |int|
|android.widget.ImageSwitcher| |playSoundEffect| |int|
|android.widget.ImageView| |playSoundEffect| |int|
|android.widget.LinearLayout| |playSoundEffect| |int|
|android.widget.ListPopupWindow$DropDownListView| |playSoundEffect| |int|
|android.widget.ListView| |playSoundEffect| |int|
|android.widget.MediaController| |playSoundEffect| |int|
|android.widget.MultiAutoCompleteTextView| |playSoundEffect| |int|
|android.widget.NumberPicker$CustomEditText| |playSoundEffect| |int|
|android.widget.NumberPicker| |playSoundEffect| |int|
|android.widget.PopupWindow$PopupViewContainer| |playSoundEffect| |int|
|android.widget.ProgressBar| |playSoundEffect| |int|
|android.widget.QuickContactBadge| |playSoundEffect| |int|
|android.widget.RadialTimePickerView| |playSoundEffect| |int|
|android.widget.RadioButton| |playSoundEffect| |int|
|android.widget.RadioGroup| |playSoundEffect| |int|
|android.widget.RatingBar| |playSoundEffect| |int|
|android.widget.RelativeLayout| |playSoundEffect| |int|
|android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout| |playSoundEffect| |int|
|android.widget.ScrollView| |playSoundEffect| |int|
|android.widget.SearchView$SearchAutoComplete| |playSoundEffect| |int|
|android.widget.SearchView| |playSoundEffect| |int|
|android.widget.SeekBar| |playSoundEffect| |int|
|android.widget.SimpleMonthView| |playSoundEffect| |int|
|android.widget.SlidingDrawer| |playSoundEffect| |int|
|android.widget.Space| |playSoundEffect| |int|
|android.widget.Spinner| |playSoundEffect| |int|
|android.widget.StackView$StackFrame| |playSoundEffect| |int|
|android.widget.StackView| |playSoundEffect| |int|
|android.widget.Switch| |playSoundEffect| |int|
|android.widget.TabHost| |playSoundEffect| |int|
|android.widget.TableLayout| |playSoundEffect| |int|
|android.widget.TableRow| |playSoundEffect| |int|
|android.widget.TabWidget| |playSoundEffect| |int|
|android.widget.TextClock| |playSoundEffect| |int|
|android.widget.TextSwitcher| |playSoundEffect| |int|
|android.widget.TextView| |playSoundEffect| |int|
|android.widget.TextViewWithCircularIndicator| |playSoundEffect| |int|
|android.widget.TimePicker| |playSoundEffect| |int|
|android.widget.ToggleButton| |playSoundEffect| |int|
|android.widget.Toolbar| |playSoundEffect| |int|
|android.widget.TwoLineListItem| |playSoundEffect| |int|
|android.widget.VideoView| |playSoundEffect| |int|
|android.widget.ViewAnimator| |playSoundEffect| |int|
|android.widget.ViewFlipper| |playSoundEffect| |int|
|android.widget.ViewSwitcher| |playSoundEffect| |int|
|android.widget.YearPickerView| |playSoundEffect| |int|
|android.widget.ZoomButtonsController$Container| |playSoundEffect| |int|
|android.widget.ZoomButton| |playSoundEffect| |int|
|android.widget.ZoomControls| |playSoundEffect| |int|
|com.android.internal.app.AlertController$RecycleListView| |playSoundEffect| |int|
|com.android.internal.app.PlatLogoActivity$1| |playSoundEffect| |int|
|com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView| |playSoundEffect| |int|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |playSoundEffect| |int|
|com.android.internal.policy.impl.RecentApplicationsBackground| |playSoundEffect| |int|
|com.android.internal.view.menu.ActionMenuItemView| |playSoundEffect| |int|
|com.android.internal.view.menu.ExpandedMenuView| |playSoundEffect| |int|
|com.android.internal.view.menu.IconMenuItemView| |playSoundEffect| |int|
|com.android.internal.view.menu.IconMenuView| |playSoundEffect| |int|
|com.android.internal.view.menu.ListMenuItemView| |playSoundEffect| |int|
|com.android.internal.widget.AbsActionBarView| |playSoundEffect| |int|
|com.android.internal.widget.AccessibleDateAnimator| |playSoundEffect| |int|
|com.android.internal.widget.AccountItemView| |playSoundEffect| |int|
|com.android.internal.widget.ActionBarContainer| |playSoundEffect| |int|
|com.android.internal.widget.ActionBarContextView| |playSoundEffect| |int|
|com.android.internal.widget.ActionBarOverlayLayout| |playSoundEffect| |int|
|com.android.internal.widget.ActionBarView$HomeView| |playSoundEffect| |int|
|com.android.internal.widget.ActionBarView| |playSoundEffect| |int|
|com.android.internal.widget.DialogTitle| |playSoundEffect| |int|
|com.android.internal.widget.FaceUnlockView| |playSoundEffect| |int|
|com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient| |playSoundEffect| |int|
|com.android.internal.widget.LockPatternView| |playSoundEffect| |int|
|com.android.internal.widget.multiwaveview.GlowPadView| |playSoundEffect| |int|
|com.android.internal.widget.PasswordEntryKeyboardView| |playSoundEffect| |int|
|com.android.internal.widget.PointerLocationView| |playSoundEffect| |int|
|com.android.internal.widget.PreferenceImageView| |playSoundEffect| |int|
|com.android.internal.widget.ResolverDrawerLayout| |playSoundEffect| |int|
|com.android.internal.widget.RotarySelector| |playSoundEffect| |int|
|com.android.internal.widget.ScrollingTabContainerView$TabView| |playSoundEffect| |int|
|com.android.internal.widget.ScrollingTabContainerView| |playSoundEffect| |int|
|com.android.internal.widget.SizeAdaptiveLayout| |playSoundEffect| |int|
|com.android.internal.widget.SlidingTab| |playSoundEffect| |int|
|com.android.internal.widget.SubtitleView| |playSoundEffect| |int|
|com.android.internal.widget.SwipeDismissLayout| |playSoundEffect| |int|
|com.android.internal.widget.TextProgressBar| |playSoundEffect| |int|
|com.android.internal.widget.WaveView| |playSoundEffect| |int|
|com.android.internal.widget.WeightedLinearLayout| |playSoundEffect| |int|
|android.nfc.NfcAdapter| |enable| ||
|com.android.server.input.InputManagerService| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|android.app.UiAutomationConnection| |storeRotationStateLocked| ||
|com.android.server.wm.WindowManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |dispatchUnhandledKey| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |onHoverEvent| |android.view.MotionEvent|
|android.filterfw.core.Filter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |open| |android.filterfw.core.FilterContext|
|android.media.AsyncPlayer$Thread| |run| ||
|android.media.MediaPlayer| |create| |android.content.Context,android.net.Uri|
|android.speech.tts.PlaybackQueueItem| |run| ||
|android.media.RingtoneManager| |getRingtone| |android.content.Context,android.net.Uri|
|android.media.RingtoneManager| |getRingtone| |int|
|android.media.Ringtone| |setStreamType| |int|
|android.widget.VideoView| |setVideoPath| |java.lang.String|
|android.text.format.DateUtils| |getRelativeTimeSpanString| |android.content.Context,long|
|android.text.format.DateUtils| |getRelativeTimeSpanString| |long,long,long|
|android.app.DatePickerDialog| |updateTitle| |int,int,int|
|android.telephony.CellBroadcastMessage| |getDateString| |android.content.Context|
|android.telephony.CellBroadcastMessage| |getSpokenDateString| |android.content.Context|
|android.widget.AnalogClock| |updateContentDescription| |android.text.format.Time|
|android.widget.DatePickerCalendarDelegate| |setCurrentView| |int|
|android.widget.DatePickerCalendarDelegate| |updateDisplay| |boolean|
|android.widget.DatePicker$DatePickerSpinnerDelegate| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.TimePickerClockDelegate| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|android.widget.TimePickerSpinnerDelegate| |onPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|com.android.internal.widget.AccessibleDateAnimator| |dispatchPopulateAccessibilityEvent| |android.view.accessibility.AccessibilityEvent|
|com.android.server.usage.UserUsageStatsService| |formatDateTime| |long,boolean|
|android.widget.CalendarViewLegacyDelegate| |access$2000| |android.widget.CalendarViewLegacyDelegate,java.util.Calendar|
|android.widget.CalendarViewLegacyDelegate| |goTo| |java.util.Calendar,boolean,boolean,boolean|
|android.widget.CalendarViewLegacyDelegate| |onScroll| |android.widget.AbsListView,int,int,int|
|com.android.server.usage.UserUsageStatsService$4| |checkin| |com.android.server.usage.IntervalStats|
|com.android.server.usage.UserUsageStatsService| |dump| |com.android.internal.util.IndentingPrintWriter|
|com.android.server.notification.ZenModeHelper$Callback| |onZenModeChanged| ||
|com.android.server.notification.ConditionProviders| |loadZenConfig| ||
|com.android.server.notification.DowntimeConditionProvider$2| |onEvaluate| |android.app.AlarmManager$AlarmClockInfo,long,boolean|
|com.android.server.notification.NextAlarmConditionProvider$1| |onEvaluate| |android.app.AlarmManager$AlarmClockInfo,long,boolean|
|com.android.server.notification.ManagedServices| |dump| |java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter|
|com.android.server.notification.NotificationManagerService| |dumpImpl| |java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter|
|com.android.server.notification.NextAlarmConditionProvider| |onSubscribe| |android.net.Uri|
|android.widget.TextClock| |<init>| |android.content.Context,android.util.AttributeSet|
|android.view.inputmethod.InputMethodManager| |getLastInputMethodSubtype| ||
|com.android.internal.inputmethod.InputMethodSubtypeSwitchingController| |<init>| |com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings,android.content.Context|
|android.view.inputmethod.InputMethodManager| |getShortcutInputMethodsAndSubtypes| ||
|com.android.commands.ime.Ime| |run| |java.lang.String[]|
|android.view.inputmethod.InputMethodManager| |getEnabledInputMethodSubtypeList| |android.view.inputmethod.InputMethodInfo,boolean|
|android.nfc.INfcCardEmulation| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|android.nfc.INfcCardEmulation| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |setDefaultForNextTap| |int,android.content.ComponentName|
|android.nfc.INfcCardEmulation$Stub| |setDefaultForNextTap| |int,android.content.ComponentName|
|android.nfc.INfcCardEmulation$Stub$Proxy| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |setPreferredService| |android.content.ComponentName|
|android.nfc.INfcCardEmulation$Stub| |setPreferredService| |android.content.ComponentName|
|com.android.server.power.PowerManagerService| |access$2400| |com.android.server.power.PowerManagerService|
|android.print.PrintJob| |getInfo| ||
|android.print.PrintJob| |cancel| ||
|android.print.PrintManager| |createPrinterDiscoverySession| ||
|android.print.PrinterDiscoverySession| |destroy| ||
|android.print.PrinterDiscoverySession| |finalize| ||
|android.print.PrintJob| |restart| ||
|android.widget.SpellChecker| |<init>| |android.widget.TextView|
|android.widget.Editor| |updateSpellCheckSpans| |int,int,boolean|
|android.inputmethodservice.ExtractButton| |access$200| |android.widget.TextView|
|android.inputmethodservice.ExtractEditText| |access$200| |android.widget.TextView|
|android.media.ClosedCaptionWidget$CCLineBox| |access$200| |android.widget.TextView|
|android.widget.AutoCompleteTextView| |access$200| |android.widget.TextView|
|android.widget.Button| |access$200| |android.widget.TextView|
|android.widget.CheckBox| |access$200| |android.widget.TextView|
|android.widget.CheckedTextView| |access$200| |android.widget.TextView|
|android.widget.Chronometer| |access$200| |android.widget.TextView|
|android.widget.CompoundButton| |access$200| |android.widget.TextView|
|android.widget.DateTimeView| |access$200| |android.widget.TextView|
|android.widget.DigitalClock| |access$200| |android.widget.TextView|
|android.widget.EditText| |access$200| |android.widget.TextView|
|android.widget.MultiAutoCompleteTextView| |access$200| |android.widget.TextView|
|android.widget.NumberPicker$CustomEditText| |access$200| |android.widget.TextView|
|android.widget.RadioButton| |access$200| |android.widget.TextView|
|android.widget.SearchView$SearchAutoComplete| |access$200| |android.widget.TextView|
|android.widget.Switch| |access$200| |android.widget.TextView|
|android.widget.TextClock| |access$200| |android.widget.TextView|
|android.widget.TextView$3| |run| ||
|android.widget.TextViewWithCircularIndicator| |access$200| |android.widget.TextView|
|android.widget.ToggleButton| |access$200| |android.widget.TextView|
|com.android.internal.view.menu.ActionMenuItemView| |access$200| |android.widget.TextView|
|com.android.internal.view.menu.IconMenuItemView| |access$200| |android.widget.TextView|
|com.android.internal.widget.DialogTitle| |access$200| |android.widget.TextView|
|android.view.textservice.SpellCheckerSession| |finalize| ||
|android.widget.SpellChecker| |closeSession| ||
|android.app.IActivityManager| |startUserInBackground| |int|
|com.android.server.am.ActivityManagerService| |finishUserSwitch| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |scheduleStartProfilesLocked| ||
|android.app.admin.IDevicePolicyManager| |setDeviceOwner| |java.lang.String,java.lang.String|
|com.android.commands.dpm.Dpm| |runSetProfileOwner| ||
|com.android.server.pm.PackageManagerService| |setApplicationHiddenSettingAsUser| |java.lang.String,boolean,int|
|com.android.server.pm.PackageManagerService| |deletePackageX| |java.lang.String,int,int|
|android.app.admin.IDevicePolicyManager| |createAndInitializeUser| |android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle|
|android.app.admin.IDevicePolicyManager| |installCaCert| |android.content.ComponentName,byte[]|
|android.app.admin.IDevicePolicyManager| |uninstallCaCert| |android.content.ComponentName,java.lang.String|
|android.app.admin.IDevicePolicyManager| |getPasswordExpiration| |android.content.ComponentName,int|
|com.android.commands.dpm.Dpm| |runSetDeviceOwner| ||
|com.android.commands.dpm.Dpm| |runSetActiveAdmin| ||
|android.view.WindowManagerPolicy| |beginPostLayoutPolicyLw| |int,int|
|android.view.WindowManagerPolicy| |goingToSleep| |int|
|android.view.WindowManagerPolicy| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |systemBooted| ||
|android.media.IAudioService$Stub$Proxy| |setMode| |int,android.os.IBinder|
|android.media.IAudioService$Stub| |setMode| |int,android.os.IBinder|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setUiTTYMode| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setUiTTYMode| |int,android.os.Message|
|com.android.internal.telephony.Phone| |setUiTTYMode| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |setUiTTYMode| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |setUiTTYMode| |int,android.os.Message|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |notifyCameraLensCoverSwitchChanged| |long,boolean|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |notifyLidSwitchChanged| |long,boolean|
|com.android.server.input.InputManagerService| |interceptMotionBeforeQueueingNonInteractive| |long,int|
|com.android.internal.telephony.PhoneFactory| |getCdmaPhone| |int|
|com.android.internal.telephony.ProxyController| |updateDataConnectionTracker| |int|
|com.android.internal.telephony.SubscriptionController| |updateAllDataConnectionTrackers| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |getAnyDataEnabled| ||
|com.android.internal.telephony.PhoneBase| |isDataConnectivityPossible| |java.lang.String|
|com.android.internal.telephony.PhoneProxy| |phoneObjectUpdater| |int|
|com.android.internal.telephony.PhoneProxy| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneProxy| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|android.telephony.SubscriptionManager| |addSubscriptionInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.imsphone.ImsPhoneFactory| |makePhone| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.sip.SipPhoneFactory| |makePhone| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|android.net.NetworkFactory| |evalRequest| |android.net.NetworkFactory$NetworkRequestInfo|
|com.android.server.ethernet.EthernetNetworkFactory$LocalNetworkFactory| |needNetworkFor| |android.net.NetworkRequest,int|
|android.net.NetworkFactory| |handleRemoveRequest| |android.net.NetworkRequest|
|com.android.server.ethernet.EthernetNetworkFactory$LocalNetworkFactory| |releaseNetworkFor| |android.net.NetworkRequest|
|com.android.internal.telephony.dataconnection.DctController| |access$700| |com.android.internal.telephony.dataconnection.DctController,android.net.NetworkRequest|
|com.android.internal.telephony.dataconnection.DctController| |access$600| |com.android.internal.telephony.dataconnection.DctController,android.net.NetworkRequest,int|
|com.android.internal.telephony.dataconnection.DctController| |access$000| |com.android.internal.telephony.dataconnection.DctController|
|com.android.server.location.GpsLocationProvider| |handleUpdateNetworkState| |int,android.net.NetworkInfo|
|android.telephony.TelephonyManager| |getSimOperator| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setProperties| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateCurrentCarrierInProvider| ||
|com.android.internal.telephony.PhoneProxy| |updateCurrentCarrierInProvider| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.ServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.DefaultPhoneNotifier| |notifyDataConnection| |com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.gsm.GsmServiceStateTracker$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setPowerStateToDesired| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |onRestrictedStateChanged| |android.os.AsyncResult|
|android.telephony.PhoneNumberUtils| |isVoiceMailNumber| |java.lang.String|
|android.telephony.TelephonyManager| |getDefaultPhone| ||
|android.telephony.TelephonyManager| |getDefaultSim| ||
|android.telephony.TelephonyManager| |getDefaultSubscription| ||
|com.android.internal.telephony.CallerInfoAsyncQuery| |startQuery| |int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object|
|com.android.internal.telephony.CallerInfo| |getCallerInfo| |android.content.Context,java.lang.String|
|com.android.internal.telephony.CallerInfo| |markAsVoiceMail| ||
|com.android.internal.telephony.IccProvider| |query| |android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String|
|com.android.internal.telephony.IccProvider| |insert| |android.net.Uri,android.content.ContentValues|
|com.android.internal.telephony.IccProvider| |delete| |android.net.Uri,java.lang.String,java.lang.String[]|
|com.android.internal.telephony.IccProvider| |update| |android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]|
|com.android.server.TelephonyRegistry$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getCompleteVoiceMailNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getCompleteVoiceMailNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getDeviceId| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getDeviceId| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getDeviceSvn| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getDeviceSvn| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getGroupIdLevel1| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getGroupIdLevel1| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIccSerialNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIccSerialNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIsimDomain| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIsimDomain| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIsimImpi| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIsimImpi| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIsimImpu| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIsimImpu| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIsimIst| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIsimIst| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIsimPcscf| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIsimPcscf| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getLine1AlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getLine1AlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getLine1Number| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getLine1Number| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getMsisdn| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getMsisdn| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getSubscriberId| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getSubscriberId| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getVoiceMailAlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getVoiceMailAlphaTag| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getVoiceMailNumber| ||
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getVoiceMailNumber| ||
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |getAdnRecordsSize| |int|
|com.android.internal.telephony.IIccPhoneBook$Stub| |getAdnRecordsSize| |int|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.IIccPhoneBook$Stub| |getAdnRecordsInEf| |int|
|android.telephony.SubscriptionManager| |getPhoneId| |int|
|com.android.internal.telephony.ISub| |getSimStateForSubscriber| |int|
|com.android.internal.telephony.ISub| |setDisplayNumber| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |getSubInfo| |java.lang.String,java.lang.Object|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |updateAdnRecordsInEfByIndexForSubscriber| |int,int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub| |updateAdnRecordsInEfByIndexForSubscriber| |int,int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |updateAdnRecordsInEfBySearchForSubscriber| |int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub| |updateAdnRecordsInEfBySearchForSubscriber| |int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |getAdnRecordsSizeForSubscriber| |int,int|
|com.android.internal.telephony.IIccPhoneBook$Stub| |getAdnRecordsSizeForSubscriber| |int,int|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |getAdnRecordsInEfForSubscriber| |int,int|
|com.android.internal.telephony.IIccPhoneBook$Stub| |getAdnRecordsInEfForSubscriber| |int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub$Proxy| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |isImsSmsSupportedForSubscriber| |int|
|com.android.internal.telephony.ISms$Stub| |isImsSmsSupportedForSubscriber| |int|
|com.android.internal.telephony.ISms$Stub$Proxy| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.server.am.ActivityManagerService| |isGetTasksAllowed| |java.lang.String,int,int|
|com.android.server.am.ActivityManagerService| |getRecentTasks| |int,int,int|
|com.android.server.am.ActivityManagerService| |getTasks| |int,int|
|android.app.ActivityManagerNative| |getRecentTasks| |int,int,int|
|android.app.ActivityManagerNative| |getTasks| |int,int|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |getRecentTasks| |int,int,int|
|android.app.IActivityManager| |getTasks| |int,int|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityManager| |getRecentTasksForUser| |int,int,int|
|android.app.ActivityManager| |getRecentTasks| |int,int|
|android.app.ActivityManager| |getRunningTasks| |int|
|android.provider.UserDictionary$Words| |addWord| |android.content.Context,java.lang.String,int,java.lang.String,java.util.Locale|
|android.provider.UserDictionary$Words| |addWord| |android.content.Context,java.lang.String,int,int|
|com.android.server.ethernet.EthernetServiceImpl| |enforceAccessPermission| ||
|com.android.server.ethernet.EthernetServiceImpl| |getConfiguration| ||
|com.android.server.ethernet.EthernetServiceImpl| |isAvailable| ||
|com.android.server.ethernet.EthernetServiceImpl| |addListener| |android.net.IEthernetServiceListener|
|com.android.server.ethernet.EthernetServiceImpl| |removeListener| |android.net.IEthernetServiceListener|
|android.net.IEthernetManager$Stub$Proxy| |getConfiguration| ||
|android.net.IEthernetManager$Stub| |getConfiguration| ||
|android.net.IEthernetManager$Stub$Proxy| |isAvailable| ||
|android.net.IEthernetManager$Stub| |isAvailable| ||
|android.net.IEthernetManager$Stub$Proxy| |addListener| |android.net.IEthernetServiceListener|
|android.net.IEthernetManager$Stub| |addListener| |android.net.IEthernetServiceListener|
|android.net.IEthernetManager$Stub$Proxy| |removeListener| |android.net.IEthernetServiceListener|
|android.net.IEthernetManager$Stub| |removeListener| |android.net.IEthernetServiceListener|
|android.net.IEthernetManager| |getConfiguration| ||
|android.net.IEthernetManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.IEthernetManager| |isAvailable| ||
|android.net.IEthernetManager| |addListener| |android.net.IEthernetServiceListener|
|android.net.IEthernetManager| |removeListener| |android.net.IEthernetServiceListener|
|android.net.EthernetManager| |getConfiguration| ||
|com.android.server.ethernet.EthernetServiceImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.EthernetManager| |isAvailable| ||
|android.net.EthernetManager| |addListener| |android.net.EthernetManager$Listener|
|android.net.EthernetManager| |removeListener| |android.net.EthernetManager$Listener|
|com.android.server.ethernet.EthernetNetworkFactory$1| |run| ||
|com.android.server.net.NetworkStatsService| |getDataLayerSnapshotForUid| |int|
|android.net.INetworkStatsService$Stub$Proxy| |getDataLayerSnapshotForUid| |int|
|android.net.INetworkStatsService$Stub| |getDataLayerSnapshotForUid| |int|
|android.net.INetworkStatsService| |getDataLayerSnapshotForUid| |int|
|android.net.INetworkStatsService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.TrafficStats| |getDataLayerSnapshotForUid| |android.content.Context|
|com.android.server.net.NetworkStatsService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.TrafficStats| |stopDataProfiling| |android.content.Context|
|android.net.TrafficStats| |startDataProfiling| |android.content.Context|
|com.android.server.net.NetworkPolicyManagerService| |getNetworkQuotaInfo| |android.net.NetworkState|
|android.net.INetworkPolicyManager$Stub$Proxy| |getNetworkQuotaInfo| |android.net.NetworkState|
|android.net.INetworkPolicyManager$Stub| |getNetworkQuotaInfo| |android.net.NetworkState|
|android.net.INetworkPolicyManager| |getNetworkQuotaInfo| |android.net.NetworkState|
|android.net.INetworkPolicyManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.net.NetworkPolicyManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.accounts.AccountManagerService| |checkManageAccountsPermission| ||
|com.android.server.accounts.AccountManagerService| |addAccount| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle|
|com.android.server.accounts.AccountManagerService| |addAccountAsUser| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int|
|com.android.server.accounts.AccountManagerService| |clearPassword| |android.accounts.Account|
|com.android.server.accounts.AccountManagerService| |confirmCredentialsAsUser| |android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int|
|com.android.server.accounts.AccountManagerService| |editProperties| |android.accounts.IAccountManagerResponse,java.lang.String,boolean|
|com.android.server.accounts.AccountManagerService| |removeAccount| |android.accounts.IAccountManagerResponse,android.accounts.Account,boolean|
|com.android.server.accounts.AccountManagerService| |removeAccountAsUser| |android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int|
|com.android.server.accounts.AccountManagerService| |updateCredentials| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle|
|android.accounts.IAccountManager$Stub$Proxy| |addAccount| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle|
|android.accounts.IAccountManager$Stub| |addAccount| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle|
|android.accounts.IAccountManager$Stub$Proxy| |addAccountAsUser| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int|
|android.accounts.IAccountManager$Stub| |addAccountAsUser| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int|
|android.accounts.IAccountManager$Stub$Proxy| |clearPassword| |android.accounts.Account|
|android.accounts.IAccountManager$Stub| |clearPassword| |android.accounts.Account|
|android.accounts.IAccountManager$Stub$Proxy| |confirmCredentialsAsUser| |android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int|
|android.accounts.IAccountManager$Stub| |confirmCredentialsAsUser| |android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int|
|android.accounts.IAccountManager$Stub$Proxy| |editProperties| |android.accounts.IAccountManagerResponse,java.lang.String,boolean|
|android.accounts.IAccountManager$Stub| |editProperties| |android.accounts.IAccountManagerResponse,java.lang.String,boolean|
|android.accounts.IAccountManager$Stub$Proxy| |removeAccount| |android.accounts.IAccountManagerResponse,android.accounts.Account,boolean|
|android.accounts.IAccountManager$Stub| |removeAccount| |android.accounts.IAccountManagerResponse,android.accounts.Account,boolean|
|android.accounts.IAccountManager$Stub$Proxy| |removeAccountAsUser| |android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int|
|android.accounts.IAccountManager$Stub| |removeAccountAsUser| |android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int|
|android.accounts.IAccountManager$Stub$Proxy| |updateCredentials| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle|
|android.accounts.IAccountManager$Stub| |updateCredentials| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle|
|android.accounts.IAccountManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accounts.IAccountManager| |addAccount| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle|
|android.accounts.IAccountManager| |addAccountAsUser| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int|
|android.accounts.IAccountManager| |clearPassword| |android.accounts.Account|
|android.accounts.IAccountManager| |confirmCredentialsAsUser| |android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int|
|android.accounts.IAccountManager| |editProperties| |android.accounts.IAccountManagerResponse,java.lang.String,boolean|
|android.accounts.IAccountManager| |removeAccount| |android.accounts.IAccountManagerResponse,android.accounts.Account,boolean|
|android.accounts.IAccountManager| |removeAccountAsUser| |android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int|
|android.accounts.IAccountManager| |updateCredentials| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle|
|com.android.server.accounts.AccountManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accounts.AccountManager$11| |doWork| ||
|android.accounts.AccountManager$12| |doWork| ||
|android.accounts.AccountManager| |clearPassword| |android.accounts.Account|
|android.accounts.AccountManager$14| |doWork| ||
|android.accounts.AccountManager$16| |doWork| ||
|android.accounts.AccountManager$5| |doWork| ||
|android.accounts.AccountManager$6| |doWork| ||
|android.accounts.AccountManager$7| |doWork| ||
|android.accounts.AccountManager$8| |doWork| ||
|android.accounts.AccountManager$15| |doWork| ||
|android.accounts.AccountManager$AmsTask| |doWork| ||
|android.test.IsolatedContext$MockAccountManager| |clearPassword| |android.accounts.Account|
|android.accounts.AccountManager$BaseFutureTask| |doWork| ||
|android.accounts.AccountManager$AmsTask| |start| ||
|android.accounts.AccountManager$AmsTask$Response| |onResult| |android.os.Bundle|
|android.accounts.AccountManager$BaseFutureTask| |startTask| ||
|android.accounts.AccountManager$10| |start| ||
|android.accounts.AccountManager$11| |start| ||
|android.accounts.AccountManager$12| |start| ||
|android.accounts.AccountManager$14| |start| ||
|android.accounts.AccountManager$15| |start| ||
|android.accounts.AccountManager$16| |start| ||
|android.accounts.AccountManager$6| |start| ||
|android.accounts.AccountManager$8| |start| ||
|android.accounts.AccountManager$9| |start| ||
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |start| ||
|android.accounts.IAccountManagerResponse$Stub$Proxy| |onResult| |android.os.Bundle|
|android.accounts.AccountManager$13| |startTask| ||
|android.accounts.AccountManager$1| |startTask| ||
|android.accounts.AccountManager$2| |startTask| ||
|android.accounts.AccountManager$3| |startTask| ||
|android.accounts.AccountManager$4| |startTask| ||
|android.accounts.AccountManager$5| |startTask| ||
|android.accounts.AccountManager$7| |startTask| ||
|android.accounts.AccountManager$Future2Task| |startTask| ||
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |addAccount| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |addAccountAsUser| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |confirmCredentialsAsUser| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |updateCredentials| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |editProperties| |java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccount| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccountAsUser| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAuthTokenByFeatures| |java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager$Future2Task| |start| ||
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1| |run| |android.accounts.AccountManagerFuture|
|android.accounts.ChooseTypeAndAccountActivity| |runAddAccountForAuthenticator| |java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |addAccount| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |addAccountAsUser| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |confirmCredentials| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |confirmCredentialsAsUser| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.test.IsolatedContext$MockAccountManager| |updateCredentials| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |editProperties| |java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccount| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccountAsUser| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1| |onResult| |android.os.Bundle|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |run| |android.accounts.AccountManagerFuture|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |getAuthTokenByFeatures| |java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager$13| |start| ||
|android.accounts.AccountManager$1| |start| ||
|android.accounts.AccountManager$2| |start| ||
|android.accounts.AccountManager$3| |start| ||
|android.accounts.AccountManager$4| |start| ||
|android.accounts.AccountManager$5| |start| ||
|android.accounts.AccountManager$7| |start| ||
|android.accounts.AccountManager| |blockingGetAuthToken| |android.accounts.Account,java.lang.String,boolean|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.ChooseTypeAndAccountActivity| |onResume| ||
|android.test.IsolatedContext$MockAccountManager| |confirmCredentials| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |copyAccountToUser| |android.accounts.Account,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAuthTokenLabel| |java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |hasFeatures| |android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAccountsByTypeAndFeatures| |java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |renameAccount| |android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccount| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccountAsUser| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.test.IsolatedContext$MockAccountManager| |copyAccountToUser| |android.accounts.Account,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.GrantCredentialsPermissionActivity| |onCreate| |android.os.Bundle|
|android.test.IsolatedContext$MockAccountManager| |getAuthTokenLabel| |java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |hasFeatures| |android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |doWork| ||
|android.test.IsolatedContext$MockAccountManager| |renameAccount| |android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccount| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccountAsUser| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|com.android.server.accounts.AccountManagerService| |checkManageAccountsOrUseCredentialsPermissions| ||
|com.android.server.accounts.AccountManagerService| |invalidateAuthToken| |java.lang.String,java.lang.String|
|android.accounts.IAccountManager$Stub$Proxy| |invalidateAuthToken| |java.lang.String,java.lang.String|
|android.accounts.IAccountManager$Stub| |invalidateAuthToken| |java.lang.String,java.lang.String|
|android.accounts.IAccountManager| |invalidateAuthToken| |java.lang.String,java.lang.String|
|android.accounts.AccountManager| |invalidateAuthToken| |java.lang.String,java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |invalidateAuthToken| |java.lang.String,java.lang.String|
|com.android.server.accounts.AccountManagerService| |checkAuthenticateAccountsPermission| |android.accounts.Account|
|com.android.server.accounts.AccountManagerService| |addAccountExplicitly| |android.accounts.Account,java.lang.String,android.os.Bundle|
|com.android.server.accounts.AccountManagerService| |removeAccountExplicitly| |android.accounts.Account|
|com.android.server.accounts.AccountManagerService| |getPassword| |android.accounts.Account|
|com.android.server.accounts.AccountManagerService| |getUserData| |android.accounts.Account,java.lang.String|
|com.android.server.accounts.AccountManagerService| |peekAuthToken| |android.accounts.Account,java.lang.String|
|com.android.server.accounts.AccountManagerService| |renameAccount| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String|
|com.android.server.accounts.AccountManagerService| |setAuthToken| |android.accounts.Account,java.lang.String,java.lang.String|
|com.android.server.accounts.AccountManagerService| |setPassword| |android.accounts.Account,java.lang.String|
|com.android.server.accounts.AccountManagerService| |setUserData| |android.accounts.Account,java.lang.String,java.lang.String|
|android.accounts.IAccountManager$Stub$Proxy| |addAccountExplicitly| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.accounts.IAccountManager$Stub| |addAccountExplicitly| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.accounts.IAccountManager$Stub$Proxy| |removeAccountExplicitly| |android.accounts.Account|
|android.accounts.IAccountManager$Stub| |removeAccountExplicitly| |android.accounts.Account|
|android.accounts.IAccountManager$Stub$Proxy| |getPassword| |android.accounts.Account|
|android.accounts.IAccountManager$Stub| |getPassword| |android.accounts.Account|
|android.accounts.IAccountManager$Stub$Proxy| |getUserData| |android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager$Stub| |getUserData| |android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager$Stub$Proxy| |peekAuthToken| |android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager$Stub| |peekAuthToken| |android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager$Stub$Proxy| |renameAccount| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager$Stub| |renameAccount| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager$Stub$Proxy| |setAuthToken| |android.accounts.Account,java.lang.String,java.lang.String|
|android.accounts.IAccountManager$Stub| |setAuthToken| |android.accounts.Account,java.lang.String,java.lang.String|
|android.accounts.IAccountManager$Stub$Proxy| |setPassword| |android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager$Stub| |setPassword| |android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager$Stub$Proxy| |setUserData| |android.accounts.Account,java.lang.String,java.lang.String|
|android.accounts.IAccountManager$Stub| |setUserData| |android.accounts.Account,java.lang.String,java.lang.String|
|android.accounts.IAccountManager| |addAccountExplicitly| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.accounts.IAccountManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accounts.IAccountManager| |removeAccountExplicitly| |android.accounts.Account|
|android.accounts.IAccountManager| |getPassword| |android.accounts.Account|
|android.accounts.IAccountManager| |getUserData| |android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager| |peekAuthToken| |android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager| |renameAccount| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager| |setAuthToken| |android.accounts.Account,java.lang.String,java.lang.String|
|android.accounts.IAccountManager| |setPassword| |android.accounts.Account,java.lang.String|
|android.accounts.IAccountManager| |setUserData| |android.accounts.Account,java.lang.String,java.lang.String|
|android.accounts.AccountManager| |addAccountExplicitly| |android.accounts.Account,java.lang.String,android.os.Bundle|
|com.android.server.accounts.AccountManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accounts.AccountManager| |removeAccountExplicitly| |android.accounts.Account|
|android.accounts.AccountManager| |getPassword| |android.accounts.Account|
|android.accounts.AccountManager| |getUserData| |android.accounts.Account,java.lang.String|
|android.accounts.AccountManager| |peekAuthToken| |android.accounts.Account,java.lang.String|
|android.accounts.AccountManager$4| |doWork| ||
|android.accounts.AccountManager| |setAuthToken| |android.accounts.Account,java.lang.String,java.lang.String|
|android.accounts.AccountManager| |setPassword| |android.accounts.Account,java.lang.String|
|android.accounts.AccountManager| |setUserData| |android.accounts.Account,java.lang.String,java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |addAccountExplicitly| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.test.IsolatedContext$MockAccountManager| |removeAccountExplicitly| |android.accounts.Account|
|android.test.IsolatedContext$MockAccountManager| |getPassword| |android.accounts.Account|
|android.test.IsolatedContext$MockAccountManager| |getUserData| |android.accounts.Account,java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |peekAuthToken| |android.accounts.Account,java.lang.String|
|android.accounts.AccountManager$BaseFutureTask| |doWork| ||
|android.test.IsolatedContext$MockAccountManager| |setAuthToken| |android.accounts.Account,java.lang.String,java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |setPassword| |android.accounts.Account,java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |setUserData| |android.accounts.Account,java.lang.String,java.lang.String|
|android.accounts.AccountManager$BaseFutureTask| |startTask| ||
|android.accounts.AccountManager$13| |startTask| ||
|android.accounts.AccountManager$1| |startTask| ||
|android.accounts.AccountManager$2| |startTask| ||
|android.accounts.AccountManager$3| |startTask| ||
|android.accounts.AccountManager$4| |startTask| ||
|android.accounts.AccountManager$5| |startTask| ||
|android.accounts.AccountManager$7| |startTask| ||
|android.accounts.AccountManager$Future2Task| |startTask| ||
|android.accounts.AccountManager$Future2Task| |start| ||
|android.accounts.AccountManager$13| |start| ||
|android.accounts.AccountManager$1| |start| ||
|android.accounts.AccountManager$2| |start| ||
|android.accounts.AccountManager$3| |start| ||
|android.accounts.AccountManager$4| |start| ||
|android.accounts.AccountManager$5| |start| ||
|android.accounts.AccountManager$7| |start| ||
|android.accounts.AccountManager| |copyAccountToUser| |android.accounts.Account,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAuthTokenLabel| |java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |hasFeatures| |android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAccountsByTypeAndFeatures| |java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |renameAccount| |android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccount| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccountAsUser| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.test.IsolatedContext$MockAccountManager| |copyAccountToUser| |android.accounts.Account,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.GrantCredentialsPermissionActivity| |onCreate| |android.os.Bundle|
|android.test.IsolatedContext$MockAccountManager| |getAuthTokenLabel| |java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |hasFeatures| |android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |doWork| ||
|android.test.IsolatedContext$MockAccountManager| |renameAccount| |android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccount| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccountAsUser| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager$AmsTask| |doWork| ||
|android.accounts.AccountManager$AmsTask| |start| ||
|android.accounts.AccountManager$AmsTask$Response| |onResult| |android.os.Bundle|
|android.accounts.AccountManager$10| |start| ||
|android.accounts.AccountManager$11| |start| ||
|android.accounts.AccountManager$12| |start| ||
|android.accounts.AccountManager$14| |start| ||
|android.accounts.AccountManager$15| |start| ||
|android.accounts.AccountManager$16| |start| ||
|android.accounts.AccountManager$6| |start| ||
|android.accounts.AccountManager$8| |start| ||
|android.accounts.AccountManager$9| |start| ||
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |start| ||
|android.accounts.IAccountManagerResponse$Stub$Proxy| |onResult| |android.os.Bundle|
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |addAccount| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |addAccountAsUser| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |confirmCredentialsAsUser| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |updateCredentials| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |editProperties| |java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccount| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccountAsUser| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAuthTokenByFeatures| |java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1| |run| |android.accounts.AccountManagerFuture|
|android.accounts.ChooseTypeAndAccountActivity| |runAddAccountForAuthenticator| |java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |addAccount| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |addAccountAsUser| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |confirmCredentials| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |confirmCredentialsAsUser| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.test.IsolatedContext$MockAccountManager| |updateCredentials| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |editProperties| |java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccount| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccountAsUser| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1| |onResult| |android.os.Bundle|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |run| |android.accounts.AccountManagerFuture|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |getAuthTokenByFeatures| |java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |blockingGetAuthToken| |android.accounts.Account,java.lang.String,boolean|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.ChooseTypeAndAccountActivity| |onResume| ||
|android.test.IsolatedContext$MockAccountManager| |confirmCredentials| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|com.android.internal.telephony.IccSmsInterfaceManager| |enforceReceiveAndSend| |java.lang.String|
|com.android.internal.telephony.IccSmsInterfaceManager| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.IccSmsInterfaceManager| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.UiccSmsController| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.UiccSmsController| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub$Proxy| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.UiccSmsController| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub$Proxy| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.UiccSmsController| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub$Proxy| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|android.telephony.SmsManager| |copyMessageToIcc| |byte[],byte[],int|
|com.android.internal.telephony.UiccSmsController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISms| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|android.telephony.SmsManager| |deleteMessageFromIcc| |int|
|android.telephony.SmsManager| |updateMessageOnIcc| |int,int,byte[]|
|com.android.internal.telephony.ISms| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|android.telephony.gsm.SmsManager| |copyMessageToSim| |byte[],byte[],int|
|android.telephony.gsm.SmsManager| |deleteMessageFromSim| |int|
|android.telephony.gsm.SmsManager| |updateMessageOnSim| |int,int,byte[]|
|com.android.internal.telephony.IccSmsInterfaceManager| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendDataForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendDataForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendDataForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |sendDataForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|android.telephony.SmsManager| |sendDataMessage| |java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |sendData| |java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|android.telephony.gsm.SmsManager| |sendDataMessage| |java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.IccSmsInterfaceManager| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |sendTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|android.telephony.SmsManager| |sendTextMessage| |java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |sendText| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|android.telephony.gsm.SmsManager| |sendTextMessage| |java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|android.telephony.SmsManager| |sendMultipartTextMessage| |java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList|
|android.telephony.gsm.SmsManager| |sendMultipartTextMessage| |java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList|
|com.android.internal.telephony.IccSmsInterfaceManager| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.UiccSmsController| |sendMultipartTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendMultipartTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub| |sendMultipartTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.UiccSmsController| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms| |sendMultipartTextForSubscriber| |int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.ISms| |sendMultipartText| |java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.IccSmsInterfaceManager| |sendStoredText| |java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.UiccSmsController| |sendStoredText| |int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendStoredText| |int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms$Stub| |sendStoredText| |int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.ISms| |sendStoredText| |int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|android.telephony.SmsManager| |sendStoredTextMessage| |android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.IccSmsInterfaceManager| |sendStoredMultipartText| |java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|com.android.internal.telephony.UiccSmsController| |sendStoredMultipartText| |int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub$Proxy| |sendStoredMultipartText| |int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|com.android.internal.telephony.ISms$Stub| |sendStoredMultipartText| |int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|com.android.internal.telephony.ISms| |sendStoredMultipartText| |int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List|
|android.telephony.SmsManager| |sendStoredMultipartTextMessage| |android.net.Uri,java.lang.String,java.util.ArrayList,java.util.ArrayList|
|com.android.server.MmsServiceBroker$BinderService| |sendMessage| |int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent|
|com.android.internal.telephony.IMms$Stub$Proxy| |sendMessage| |int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent|
|com.android.internal.telephony.IMms$Stub| |sendMessage| |int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent|
|com.android.internal.telephony.IMms$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.IMms| |sendMessage| |int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent|
|com.android.server.MmsServiceBroker$BinderService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.telephony.SmsManager| |sendMultimediaMessage| |android.content.Context,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent|
|com.android.server.MmsServiceBroker$BinderService| |sendStoredMessage| |int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent|
|com.android.internal.telephony.IMms$Stub$Proxy| |sendStoredMessage| |int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent|
|com.android.internal.telephony.IMms$Stub| |sendStoredMessage| |int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent|
|com.android.internal.telephony.IMms| |sendStoredMessage| |int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent|
|android.telephony.SmsManager| |sendStoredMultimediaMessage| |android.net.Uri,android.os.Bundle,android.app.PendingIntent|
|com.android.server.usb.UsbDeviceManager$UsbHandler| |<init>| |com.android.server.usb.UsbDeviceManager,android.os.Looper|
|com.android.server.usb.UsbDeviceManager| |<init>| |android.content.Context|
|com.android.server.usb.UsbService| |<init>| |android.content.Context|
|com.android.server.usb.UsbService$Lifecycle| |onStart| ||
|com.android.server.SystemService| |onStart| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.Class|
|com.android.server.SystemServer| |startBootstrapServices| ||
|com.android.server.SystemServer| |startCoreServices| ||
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.String|
|com.android.server.SystemServer| |run| ||
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.server.am.ActivityManagerService| |finishBooting| ||
|com.android.server.am.ActivityManagerService| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |ensureBootCompleted| ||
|android.app.ActivityManagerNative| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |appNotResponding| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |systemReady| |java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |crashApplication| |com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |bootAnimationComplete| ||
|com.android.server.am.ActiveServices| |serviceTimeout| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService$10| |run| ||
|com.android.server.am.BroadcastQueue$AppNotResponding| |run| ||
|com.android.server.am.ActivityManagerService$14| |run| ||
|com.android.server.am.ActivityManagerService| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrashInner| |java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.wm.WindowManagerService| |performEnableScreen| ||
|android.app.ActivityManagerNative| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener$NativeCrashReporter| |run| ||
|com.android.server.wm.WindowManagerService| |enableScreenAfterBoot| ||
|com.android.server.wm.WindowManagerService| |performBootTimeout| ||
|com.android.server.wm.WindowManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeededLocked| ||
|com.android.server.wm.WindowManagerService| |checkBootAnimationCompleteLocked| ||
|android.app.IActivityManager| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |consumeNativeCrashData| |java.io.FileDescriptor|
|com.android.server.am.ActivityManagerService| |enableScreenAfterBoot| ||
|com.android.server.am.ActivityManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedInner| |boolean|
|com.android.server.wm.WindowStateAnimator| |performShowLocked| ||
|com.android.server.wm.WindowStateAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$1100| |com.android.server.wm.WindowManagerService|
|com.android.internal.os.RuntimeInit| |wtf| |java.lang.String,java.lang.Throwable,boolean|
|android.app.IActivityManager| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |run| ||
|android.app.ActivityManagerNative| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub$Proxy| |enableScreenIfNeeded| ||
|android.view.IWindowManager$Stub| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedLoop| ||
|com.android.server.wm.AppWindowAnimator| |showAllWindowsLocked| ||
|com.android.server.wm.WindowAnimator| |updateWindowsLocked| |int|
|com.android.server.wm.WindowStateAnimator| |commitFinishDrawingLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean|
|com.android.server.wm.WindowState| |setAppOpVisibilityLw| |boolean|
|android.util.Log$1| |onTerribleFailure| |java.lang.String,android.util.Log$TerribleFailure,boolean|
|com.android.internal.os.RuntimeInit$UncaughtHandler| |uncaughtException| |java.lang.Thread,java.lang.Throwable|
|com.android.server.am.ActivityManagerService| |startObservingNativeCrashes| ||
|android.app.IActivityManager| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowManager| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLocked| ||
|com.android.server.wm.WindowAnimator| |testTokenMayBeDrawnLocked| |int|
|com.android.server.wm.WindowManagerService| |handleAppTransitionReadyLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowAnimator| |animateLocked| ||
|android.view.WindowManagerPolicy$WindowState| |hideLw| |boolean|
|com.android.server.wm.DisplayContent| |switchUserStacks| |int|
|com.android.server.wm.WindowManagerService| |updateAppOpsState| ||
|com.android.server.SystemServer$2| |run| ||
|com.android.server.pm.PackageManagerService| |performBootDexOpt| |android.content.pm.PackageParser$Package,int,int|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| ||
|com.android.server.wm.WindowManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.policy.impl.PhoneWindowManager| |finishScreenTurningOn| ||
|com.android.server.wm.WindowManagerService| |computeNewConfiguration| ||
|com.android.server.wm.WindowManagerService| |setTokenVisibilityLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$400| |com.android.server.wm.WindowManagerService|
|com.android.server.wm.WindowManagerService| |addTask| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |moveStackWindowsLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reconfigureDisplayLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.WindowManagerService| |removeWindowInnerLocked| |com.android.server.wm.Session,com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |resizeStack| |int,android.graphics.Rect|
|com.android.server.wm.WindowManagerService| |setCurrentUser| |int,int[]|
|com.android.server.wm.WindowManagerService| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |setUniverseTransformLocked| |com.android.server.wm.WindowState,float,float,float,float,float,float,float|
|com.android.server.wm.WindowManagerService| |unsetAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken,boolean,boolean|
|com.android.server.wm.WindowAnimator| |access$000| |com.android.server.wm.WindowAnimator|
|com.android.internal.policy.impl.BarController| |setBarShowingLw| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |finishPostLayoutPolicyLw| ||
|com.android.internal.policy.impl.PhoneWindowManager| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|com.android.server.wm.WindowManagerService$5| |onOpChanged| |int,java.lang.String|
|android.content.pm.IPackageManager$Stub$Proxy| |performBootDexOpt| ||
|android.content.pm.IPackageManager$Stub| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishKeyguardDrawn| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishWindowsDrawn| ||
|com.android.server.am.ActivityManagerService| |updateConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |prepareAppTransition| |int,boolean|
|com.android.server.wm.WindowManagerService| |updateRotationUncheckedLocked| |boolean|
|com.android.server.wm.WindowManagerService| |makeWindowFreezingScreenIfNeededLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |requestTraversalLocked| ||
|com.android.server.am.ActivityStackSupervisor| |moveTaskToStackLocked| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |setForcedDisplayDensityLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.WindowManagerService| |setForcedDisplaySizeLocked| |com.android.server.wm.DisplayContent,int,int|
|com.android.server.wm.WindowManagerService| |setOverscanLocked| |com.android.server.wm.DisplayContent,int,int,int,int|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.TaskStack| |detachDisplay| ||
|android.view.IWindowManager$Stub$Proxy| |setNewConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |updateConfigurationLocked| |android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean|
|com.android.server.wm.WindowManagerService| |startAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken|
|com.android.server.wm.WindowAnimator$1| |run| ||
|com.android.internal.policy.impl.BarController| |checkHiddenLw| ||
|com.android.internal.policy.impl.BarController| |adjustSystemUiVisibilityLw| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |beginLayoutLw| |boolean,int,int,int|
|android.view.WindowManagerPolicy| |finishPostLayoutPolicyLw| ||
|android.view.WindowManagerPolicy| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|android.content.pm.IPackageManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$300| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$400| |com.android.internal.policy.impl.PhoneWindowManager|
|android.app.ActivityManagerNative| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub$Proxy| |prepareAppTransition| |int,boolean|
|android.view.IWindowManager$Stub| |prepareAppTransition| |int,boolean|
|com.android.server.am.ActivityManagerService| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStack| |moveTaskToBackLocked| |int|
|com.android.server.am.ActivityStack| |moveTaskToFrontLocked| |com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle,java.lang.String|
|com.android.server.am.ActivityStack| |updateTransitLocked| |int,android.os.Bundle|
|com.android.server.wm.WindowManagerService| |resumeRotationLocked| ||
|com.android.server.wm.WindowManagerService| |stopFreezingDisplayLocked| ||
|com.android.server.wm.WindowManagerService| |updateResizingWindows| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |createSurfaceLocked| ||
|com.android.server.wm.WindowManagerService$LocalService| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.wm.WindowManagerService| |handleDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayChangedLocked| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayRemovedLocked| |int|
|com.android.server.wm.WindowManagerService| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |requestTraversal| ||
|com.android.server.wm.WindowManagerService| |setAppFullscreen| |android.os.IBinder,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$9| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |clearClearableFlagsLw| ||
|com.android.server.wm.WindowManagerService| |detachStackLocked| |com.android.server.wm.DisplayContent,com.android.server.wm.TaskStack|
|android.view.IWindowManager| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |retrieveSettings| ||
|com.android.server.wm.WindowManagerService| |updateOrientationFromAppTokensLocked| |android.content.res.Configuration,android.os.IBinder|
|com.android.internal.policy.impl.PhoneWindowManager| |adjustSystemUiVisibilityLw| |int|
|android.view.WindowManagerPolicy| |beginLayoutLw| |boolean,int,int,int|
|com.android.server.pm.PackageManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.WindowManagerPolicy| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |systemBooted| ||
|com.android.internal.policy.impl.PhoneWindowManager$1| |run| ||
|android.app.IActivityManager| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager| |prepareAppTransition| |int,boolean|
|android.app.ActivityManagerNative| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |findTaskToMoveToFrontLocked| |com.android.server.am.TaskRecord,int,android.os.Bundle,java.lang.String|
|com.android.server.wm.DragState| |unregister| ||
|com.android.server.wm.WindowManagerService| |access$500| |com.android.server.wm.WindowManagerService|
|android.view.WindowManagerInternal| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay| |<init>| |com.android.server.am.ActivityStackSupervisor,int,int,int|
|com.android.server.wm.WindowManagerService| |onDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |access$1000| |com.android.server.wm.WindowManagerService,int|
|com.android.server.wm.WindowManagerService| |access$900| |com.android.server.wm.WindowManagerService,int|
|android.view.IWindowManager$Stub$Proxy| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager$Stub| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService$LocalService| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemBarsLw| |android.view.WindowManagerPolicy$WindowState,int,int|
|com.android.server.wm.DisplayContent| |checkForDeferredActions| ||
|com.android.server.wm.WindowManagerService| |detachStack| |int|
|android.view.WindowManagerPolicy| |adjustSystemUiVisibilityLw| |int|
|com.android.server.wm.WindowManagerService| |performLayoutLockedInner| |com.android.server.wm.DisplayContent,boolean,boolean|
|com.android.server.power.Notifier$2| |run| ||
|android.view.WindowManagerPolicy| |systemBooted| ||
|com.android.internal.app.LocalePicker| |updateLocale| |java.util.Locale|
|com.android.internal.telephony.MccTable| |setSystemLocale| |android.content.Context,java.lang.String,java.lang.String|
|com.android.internal.telephony.MccTable| |updateMccMncConfiguration| |android.content.Context,java.lang.String,boolean|
|com.android.server.MountService| |copyLocaleFromMountService| ||
|com.android.server.UiModeManagerService| |sendConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |displayReady| ||
|com.android.server.wm.WindowManagerService| |sendNewConfiguration| ||
|android.app.IActivityManager| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |setLockTaskModeLocked| |com.android.server.am.TaskRecord,boolean,java.lang.String|
|com.android.server.wm.DragState| |endDragLw| ||
|com.android.server.wm.Session| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.WindowManagerService| |prepareDragSurface| |android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface|
|com.android.server.wm.WindowManagerService| |startFreezingScreen| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |setSurfaceLocked| |android.view.Surface,int,int,int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayAddedLocked| |int|
|com.android.server.wm.WindowManagerService| |onDisplayChanged| |int|
|com.android.server.wm.WindowManagerService| |onDisplayRemoved| |int|
|android.view.IWindowManager| |keyguardGoingAway| |boolean,boolean|
|android.view.WindowManagerInternal| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemUiVisibilityLw| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |detachLocked| ||
|com.android.server.wm.WindowManagerService| |statusBarVisibilityChanged| |int|
|com.android.server.wm.WindowManagerService| |updateFocusedWindowLocked| |int,boolean|
|com.android.internal.telephony.PhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |setLocaleFromCsim| ||
|com.android.internal.telephony.uicc.SIMRecords| |setLocaleFromUsim| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setProperties| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.PhoneFactory| |setDefaultSubscription| |int|
|com.android.internal.telephony.ServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |setDefaultFallbackSubId| |int|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLoaded| |int|
|com.android.server.MountService| |access$2000| |com.android.server.MountService|
|com.android.server.UiModeManagerService| |sendConfigurationAndStartDreamOrDockAppLocked| |java.lang.String|
|com.android.server.wm.WindowManagerService$DragInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|android.view.IWindowSession$Stub$Proxy| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.Session| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager$Stub$Proxy| |startFreezingScreen| |int,int|
|android.view.IWindowManager$Stub| |startFreezingScreen| |int,int|
|android.view.WindowManagerPolicy| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |onDisplayAdded| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayChangedLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayRemovedLocked| |int|
|com.android.server.display.DisplayManagerService| |scheduleTraversalLocked| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1900| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |requestTransientBars| |android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |detachLocked| ||
|android.view.IWindowManager$Stub$Proxy| |statusBarVisibilityChanged| |int|
|android.view.IWindowManager$Stub| |statusBarVisibilityChanged| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.gsm.GSMPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.sip.SipPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionInfoUpdater$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.MountService$3| |run| ||
|com.android.server.UiModeManagerService| |updateAfterBroadcastLocked| |java.lang.String,int,int|
|com.android.server.UiModeManagerService| |updateLocked| |int,int|
|android.view.IWindowSession| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession$Stub$Proxy| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowSession$Stub| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager| |startFreezingScreen| |int,int|
|com.android.server.display.DisplayPowerController| |setScreenState| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayRemoved| |int|
|com.android.server.display.DisplayManagerService| |access$1600| |com.android.server.display.DisplayManagerService,boolean|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAddedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceChanged| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemovedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |requestGlobalDisplayStateInternal| |int|
|com.android.server.display.DisplayManagerService| |setDisplayInfoOverrideFromWindowManagerInternal| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |setDisplayPropertiesInternal| |int,boolean,float,boolean|
|com.android.server.display.DisplayManagerService| |windowManagerAndInputReady| ||
|com.android.internal.policy.impl.PhoneWindowManager$17| |onReceive| |android.content.Context,android.content.Intent|
|android.view.WindowManagerPolicy| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1700| |com.android.internal.policy.impl.PhoneWindowManager,android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTaskListEmptyLocked| ||
|android.view.IWindowManager| |statusBarVisibilityChanged| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.uicc.IccRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.RuimRecords| |onRecordLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onRecordLoaded| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |addSubInfoRecord| |java.lang.String,int|
|com.android.server.MountService| |onDaemonConnected| ||
|com.android.server.UiModeManagerService| |access$000| |com.android.server.UiModeManagerService,java.lang.String,int,int|
|com.android.server.UiModeManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |updateDockState| |int|
|com.android.server.UiModeManagerService| |updateTwilight| ||
|android.view.View| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.wm.Session| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|com.android.server.display.DisplayPowerController| |animateScreenStateChange| |int,boolean|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |createVirtualDisplayInternal| |android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAdded| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$1400| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemoved| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |releaseVirtualDisplayInternal| |android.os.IBinder|
|com.android.server.display.DisplayManagerService| |access$3700| |com.android.server.display.DisplayManagerService,int|
|com.android.server.display.DisplayManagerService| |access$4100| |com.android.server.display.DisplayManagerService,int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |access$4300| |com.android.server.display.DisplayManagerService,int,boolean,float,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$18| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromRight| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromTop| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTaskListEmptyLocked| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.uicc.IccRecords| |onRecordLoaded| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollState| ||
|com.android.internal.telephony.ISub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.INativeDaemonConnectorCallbacks| |onDaemonConnected| ||
|com.android.server.UiModeManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.SystemService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |access$100| |com.android.server.UiModeManagerService,int|
|com.android.server.UiModeManagerService$4| |onTwilightStateChanged| ||
|android.app.ActivityView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.FragmentBreadCrumbs| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.MediaRouteButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.NativeActivity$NativeContentView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.SearchDialog$SearchBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.appwidget.AppWidgetHostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.filterfw.core.FilterSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.gesture.GestureOverlayView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.KeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLineBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.TtmlRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView$3| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$CueLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$RegionLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$SpanLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.opengl.GLSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.preference.PreferenceFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSTextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.GhostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.LayoutInflater$BlinkLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.SurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.TextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewOverlay$OverlayViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewStub| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.webkit.WebView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsoluteLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSpinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuPresenter$OverflowMenuButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActivityChooserView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AnalogClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AppSecurityPermissions$PermissionItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Button| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarViewLegacyDelegate$WeekView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckedTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Chronometer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CompoundButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DatePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DateTimeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DayPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DialerFilter| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DigitalClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$HandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$InsertionHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionEndHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionStartHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.EditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ExpandableListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.FrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Gallery| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.HorizontalScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.LinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListPopupWindow$DropDownListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MediaController| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MultiAutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker$CustomEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.PopupWindow$PopupViewContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.QuickContactBadge| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadialTimePickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RatingBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RelativeLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView$SearchAutoComplete| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SimpleMonthView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SlidingDrawer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Space| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Spinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView$StackFrame| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Switch| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabHost| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableRow| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextViewWithCircularIndicator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TimePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ToggleButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Toolbar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TwoLineListItem| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.VideoView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.YearPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButtonsController$Container| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomControls| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.AlertController$RecycleListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.PlatLogoActivity$1| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.RecentApplicationsBackground| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ActionMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ExpandedMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ListMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AbsActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccessibleDateAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccountItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarOverlayLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView$HomeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.DialogTitle| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.FaceUnlockView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LockPatternView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PasswordEntryKeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PointerLocationView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PreferenceImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ResolverDrawerLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.RotarySelector| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView$TabView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SizeAdaptiveLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SlidingTab| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SubtitleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SwipeDismissLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.TextProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WaveView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WeightedLinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.display.DisplayPowerController| |updatePowerState| ||
|com.android.server.display.DisplayAdapter$Listener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |access$3200| |com.android.server.display.DisplayManagerService,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |access$1300| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayManagerService| |access$1500| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$3500| |com.android.server.display.DisplayManagerService,android.os.IBinder|
|com.android.server.display.DisplayManagerService$LocalService$1| |requestDisplayState| |int|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromRight| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromTop| ||
|com.android.server.am.ActivityStack| |finishAllActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |removeTask| |com.android.server.am.TaskRecord,java.lang.String|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |release| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.PhoneFactory| |getGsmPhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhone| |android.content.Context|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.ServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.ServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.gsm.GSMPhone| |setOperatorBrandOverride| |java.lang.String|
|android.telephony.SubscriptionManager| |addSubscriptionInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.NativeDaemonConnector| |listenToSocket| ||
|com.android.server.AlarmManagerService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.fingerprint.FingerprintService| |onBootPhase| |int|
|com.android.server.lights.LightsService| |onBootPhase| |int|
|com.android.server.media.MediaSessionService| |onBootPhase| |int|
|com.android.server.media.projection.MediaProjectionManagerService| |onBootPhase| |int|
|com.android.server.MmsServiceBroker| |onBootPhase| |int|
|com.android.server.PersistentDataBlockService| |onBootPhase| |int|
|com.android.server.pm.Installer| |onBootPhase| |int|
|com.android.server.pm.LauncherAppsService| |onBootPhase| |int|
|com.android.server.print.PrintManagerService| |onBootPhase| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onBootPhase| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onBootPhase| |int|
|com.android.server.SystemServiceManager| |startBootPhase| |int|
|com.android.server.twilight.TwilightService| |onBootPhase| |int|
|com.android.server.usage.UsageStatsService| |onBootPhase| |int|
|com.android.server.webkit.WebViewUpdateService| |onBootPhase| |int|
|com.android.server.UiModeManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.twilight.TwilightListener| |onTwilightStateChanged| ||
|android.widget.Editor| |performLongClick| |boolean|
|com.android.server.display.DisplayPowerController| |access$400| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |debounceProximitySensor| ||
|com.android.server.display.DisplayAdapter$2| |run| ||
|com.android.server.display.DisplayAdapter$Listener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayBlanker| |requestDisplayState| |int|
|android.hardware.display.DisplayManagerInternal| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|android.hardware.display.DisplayManagerInternal| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener| |onPointerEvent| |android.view.MotionEvent|
|com.android.server.am.ActivityRecord| |setTask| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord|
|android.app.IActivityContainer$Stub$Proxy| |release| ||
|android.app.IActivityContainer$Stub| |release| ||
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |release| ||
|com.android.internal.telephony.PhoneFactory| |getCdmaPhone| |int|
|com.android.internal.telephony.PhoneProxy| |deleteAndCreatePhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhones| |android.content.Context|
|com.android.internal.telephony.imsphone.ImsPhoneFactory| |makePhone| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.sip.SipPhoneFactory| |makePhone| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.PhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |updateSubscriptionInfoByIccId| ||
|com.android.server.NativeDaemonConnector| |run| ||
|com.android.server.twilight.TwilightService$TwilightListenerRecord| |run| ||
|android.widget.TextView| |performLongClick| ||
|com.android.server.display.DisplayPowerController$ScreenOnUnblocker| |onScreenOn| ||
|com.android.server.display.DisplayPowerController| |sendUpdatePowerStateLocked| ||
|com.android.server.display.DisplayPowerController| |access$500| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |handleProximitySensorEvent| |long,boolean|
|com.android.server.display.DisplayAdapter$1| |run| ||
|com.android.server.display.DisplayPowerState$PhotonicModulator| |requestDisplayState| |int|
|com.android.server.wm.WindowManagerService| |computeScreenConfigurationLocked| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |newDisplayContentLocked| |android.view.Display|
|com.android.server.am.ActivityStack| |resetTargetTaskIfNeededLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.am.ActivityStack| |resetAffinityTaskIfNeededLocked| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int|
|android.app.IActivityContainer$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityContainer| |release| ||
|com.android.internal.telephony.PhoneProxy| |phoneObjectUpdater| |int|
|com.android.internal.telephony.PhoneFactory| |makeImsPhone| |com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.PhoneFactory| |makeSipPhone| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.Phone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.Phone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimAbsent| |int|
|android.inputmethodservice.ExtractButton| |performLongClick| ||
|android.inputmethodservice.ExtractEditText| |performLongClick| ||
|android.media.ClosedCaptionWidget$CCLineBox| |performLongClick| ||
|android.widget.AutoCompleteTextView| |performLongClick| ||
|android.widget.Button| |performLongClick| ||
|android.widget.CheckBox| |performLongClick| ||
|android.widget.CheckedTextView| |performLongClick| ||
|android.widget.Chronometer| |performLongClick| ||
|android.widget.CompoundButton| |performLongClick| ||
|android.widget.DateTimeView| |performLongClick| ||
|android.widget.DigitalClock| |performLongClick| ||
|android.widget.EditText| |performLongClick| ||
|android.widget.MultiAutoCompleteTextView| |performLongClick| ||
|android.widget.NumberPicker$CustomEditText| |performLongClick| ||
|android.widget.RadioButton| |performLongClick| ||
|android.widget.SearchView$SearchAutoComplete| |performLongClick| ||
|android.widget.Switch| |performLongClick| ||
|android.widget.TextClock| |performLongClick| ||
|android.widget.TextViewWithCircularIndicator| |performLongClick| ||
|android.widget.ToggleButton| |performLongClick| ||
|com.android.internal.view.menu.ActionMenuItemView| |performLongClick| ||
|com.android.internal.view.menu.IconMenuItemView| |performLongClick| ||
|com.android.internal.widget.DialogTitle| |performLongClick| ||
|com.android.server.display.DisplayPowerController| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |sendUpdatePowerState| ||
|com.android.server.display.DisplayPowerController| |access$1000| |com.android.server.display.DisplayPowerController,long,boolean|
|com.android.server.display.DisplayPowerState$PhotonicModulator| |run| ||
|com.android.server.wm.WindowManagerService| |computeNewConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |getDisplayContentLocked| |int|
|com.android.server.am.ActivityStack| |resetTaskIfNeededLocked| |com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityView$ActivityContainerWrapper| |release| ||
|com.android.internal.telephony.PhoneProxy| |updatePhoneObject| |int|
|com.android.internal.telephony.PhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.PhoneProxy| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.PhoneProxy| |setOperatorBrandOverride| |java.lang.String|
|com.android.server.display.DisplayManagerService$LocalService| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |access$000| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |updateBrightness| ||
|com.android.server.display.DisplayPowerController$8| |onSensorChanged| |android.hardware.SensorEvent|
|com.android.server.display.DisplayPowerState| |<init>| |com.android.server.display.DisplayBlanker,com.android.server.lights.Light,com.android.server.display.ColorFade|
|com.android.server.wm.WindowAnimator| |getPendingLayoutChanges| |int|
|com.android.server.wm.WindowAnimator| |setPendingLayoutChanges| |int,int|
|com.android.server.wm.WindowAnimator| |updateAppWindowsLocked| |int|
|com.android.server.wm.WindowAnimator| |updateWallpaperLocked| |int|
|com.android.server.wm.WindowManagerService| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayContentLocked| ||
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |int|
|com.android.server.wm.WindowManagerService| |addWindow| |com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.WindowManagerService| |getBaseDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |getInitialDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |createDisplayContentLocked| |android.view.Display|
|com.android.server.wm.WindowManagerService| |displayReady| |int|
|com.android.server.wm.WindowManagerService| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.wm.WindowManagerService| |getInitialDisplaySize| |int,android.graphics.Point|
|android.app.ActivityView$ActivityContainerWrapper| |finalize| ||
|android.app.ActivityView| |release| ||
|com.android.internal.telephony.Phone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateImsPhone| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateImsPhone| ||
|com.android.internal.telephony.gsm.GSMPhone| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhone| |updateImsPhone| ||
|com.android.internal.telephony.PhoneBase$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.sip.SipPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.sip.SipPhone| |updateImsPhone| ||
|android.hardware.display.DisplayManagerInternal| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController$1| |onAnimationEnd| |android.animation.Animator|
|com.android.server.display.DisplayPowerController$2| |onAnimationEnd| ||
|com.android.server.display.DisplayPowerController$3| |run| ||
|com.android.server.display.AutomaticBrightnessController$Callbacks| |updateBrightness| ||
|com.android.server.display.DisplayPowerController| |initialize| ||
|com.android.server.wm.WindowAnimator| |setAppLayoutChanges| |com.android.server.wm.AppWindowAnimator,int,java.lang.String|
|com.android.server.wm.WindowAnimator| |hideWallpapersLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |prepareSurfaceLocked| |boolean|
|com.android.server.wm.WindowStateAnimator| |setSurfaceBoundariesLocked| |boolean|
|android.view.IWindowManager$Stub$Proxy| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|android.view.IWindowManager$Stub| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |screenshotActivities| |com.android.server.am.ActivityRecord|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |populateWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |populateVisibleWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayInfoLocked| ||
|com.android.server.wm.WindowManagerService| |getDefaultWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |adjustWallpaperWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |getOrientationFromAppTokensLocked| ||
|com.android.server.wm.WindowManagerService| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |handleAnimatingStoppedAndTransitionLocked| ||
|com.android.server.wm.WindowManagerService| |createWatermarkInTransaction| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean|
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |saveLastInputMethodWindowForTransition| ||
|com.android.server.wm.WindowManagerService| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.wm.WindowManagerService| |showCircularMask| |boolean|
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlay| ||
|com.android.server.wm.WindowManagerService| |showStrictModeViolation| |int,int|
|com.android.server.wm.WindowManagerService| |startFreezingDisplayLocked| |boolean,int,int|
|com.android.server.wm.WindowManagerService| |updateWallpaperVisibilityLocked| ||
|com.android.server.wm.WindowAnimator| |dumpLocked| |java.io.PrintWriter,java.lang.String,boolean|
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |android.view.Display|
|com.android.server.wm.Session| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.am.ProcessList| |applyDisplaySize| |com.android.server.wm.WindowManagerService|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.internal.telephony.PhoneBase| |updatePhoneObject| |int|
|com.android.server.power.PowerManagerService| |updateDisplayPowerStateLocked| |int|
|com.android.server.display.RampAnimator$Listener| |onAnimationEnd| ||
|com.android.server.display.AutomaticBrightnessController| |updateAutoBrightness| |boolean|
|com.android.server.wm.AppWindowAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowStateAnimator| |destroyDeferredSurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |destroySurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |finishExit| ||
|android.view.IWindowManager| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |startPausingLocked| |boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |handleLaunchTaskBehindCompleteLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.TaskRecord| |getTaskThumbnailLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |recomputeBoundsLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |computeChangedWindows| ||
|com.android.server.wm.WindowManagerService| |applyAnimationLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |checkWaitingForWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.server.wm.WindowManagerService| |moveInputMethodWindowsIfNeededLocked| |boolean|
|com.android.server.wm.WindowManagerService| |findDesiredInputMethodWindowIndexLocked| |boolean|
|com.android.server.wm.WindowManagerService| |getOrientationFromWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |addInputMethodWindowToListLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |moveInputMethodDialogsLocked| |int|
|com.android.server.wm.WindowManagerService| |updateStatusBarVisibilityLocked| |int|
|android.view.IWindowManager$Stub$Proxy| |getPreferredOptionsPanelGravity| ||
|android.view.IWindowManager$Stub| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1|
|com.android.server.InputMethodManagerService| |unbindCurrentMethodLocked| |boolean,boolean|
|android.view.IWindowManager$Stub$Proxy| |setAppVisibility| |android.os.IBinder,boolean|
|android.view.IWindowManager$Stub| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityStackSupervisor| |processStoppingActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |setVisibile| |com.android.server.am.ActivityRecord,boolean|
|com.android.server.wm.WindowManagerService| |updateCircularDisplayMaskIfNeeded| ||
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlayIfNeeded| ||
|com.android.server.wm.WindowManagerService| |access$800| |com.android.server.wm.WindowManagerService,int,int|
|com.android.server.wm.WindowManagerService| |dumpAnimatorLocked| |java.io.PrintWriter,java.lang.String[],boolean|
|com.android.server.wm.DragState| |getTouchedWinAtPointLw| |float,float|
|com.android.server.wm.DragState| |broadcastDragStartedLw| |float,float|
|android.view.IWindowSession$Stub$Proxy| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|com.android.server.wm.Session| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager| |getBaseDisplayDensity| |int|
|android.view.IWindowManager| |getInitialDisplayDensity| |int|
|android.view.IWindowManager| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.gsm.GSMPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.ServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.sip.SipPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.sip.SipPhone| |updatePhoneObject| |int|
|com.android.server.power.PowerManagerService| |updatePowerStateLocked| ||
|com.android.server.display.RampAnimator$1| |run| ||
|com.android.server.display.RampAnimator| |animateTo| |int,int|
|com.android.server.display.AutomaticBrightnessController| |access$300| |com.android.server.display.AutomaticBrightnessController,boolean|
|com.android.server.display.AutomaticBrightnessController| |configure| |boolean,float,boolean|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| |long|
|com.android.server.wm.WindowState| |removeLocked| ||
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowStateAnimator| |cancelExitAnimationForNextAnimationLocked| ||
|com.android.server.am.ActivityStack| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |pauseBackStacks| |boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |pauseChildStacks| |com.android.server.am.ActivityRecord,boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |drawWindowIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |<init>| |com.android.server.wm.AccessibilityController$DisplayMagnifier|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |onRotationChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |performComputeChangedWindowsNotLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |scheduleComputeChangedWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |updateTokenInPlaceLocked| |com.android.server.wm.AppWindowToken,int|
|android.view.IWindowManager$Stub$Proxy| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager$Stub| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService$2| |run| ||
|com.android.server.InputMethodManagerService| |startInputInnerLocked| ||
|com.android.server.InputMethodManagerService| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.InputMethodManagerService| |resetAllInternalStateLocked| |boolean,boolean|
|com.android.server.InputMethodManagerService| |updateInputMethodsFromSettingsLocked| |boolean|
|android.view.IWindowManager| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityRecord| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |activityIdleInternalLocked| |android.os.IBinder,boolean,android.content.res.Configuration|
|com.android.server.am.ActivityStack| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.wm.WindowManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.wm.WindowManagerService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wm.DragState| |notifyDropLw| |float,float|
|com.android.server.wm.DragState| |notifyMoveLw| |float,float|
|android.view.IWindowSession| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub$Proxy| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |runDisplayDensity| ||
|com.android.commands.wm.Wm| |runDisplaySize| ||
|com.android.internal.view.RotationPolicy| |getRotationLockOrientation| |android.content.Context|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.server.power.PowerManagerService| |access$1100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |acquireWakeLockInternal| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |boostScreenBrightnessInternal| |long,int|
|com.android.server.power.PowerManagerService| |goToSleepInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |handleBatteryStateChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleSandman| ||
|com.android.server.power.PowerManagerService| |handleScreenBrightnessBoostTimeout| ||
|com.android.server.power.PowerManagerService| |handleSettingsChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleUserActivityTimeout| ||
|com.android.server.power.PowerManagerService| |napInternal| |long,int|
|com.android.server.power.PowerManagerService| |onBootPhase| |int|
|com.android.server.power.PowerManagerService| |removeWakeLockLocked| |com.android.server.power.PowerManagerService$WakeLock,int|
|com.android.server.power.PowerManagerService| |setDozeOverrideFromDreamManagerInternal| |int,int|
|com.android.server.power.PowerManagerService| |setMaximumScreenOffTimeoutFromDeviceAdminInternal| |int|
|com.android.server.power.PowerManagerService| |setScreenBrightnessOverrideFromWindowManagerInternal| |int|
|com.android.server.power.PowerManagerService| |setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal| |float|
|com.android.server.power.PowerManagerService| |setTemporaryScreenBrightnessSettingOverrideInternal| |int|
|com.android.server.power.PowerManagerService| |setUserActivityTimeoutOverrideFromWindowManagerInternal| |long|
|com.android.server.power.PowerManagerService| |systemReady| |com.android.internal.app.IAppOpsService|
|com.android.server.power.PowerManagerService| |userActivityInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |wakeUpInternal| |long,int|
|com.android.server.display.DisplayPowerController| |animateScreenBrightness| |int,int|
|com.android.server.display.AutomaticBrightnessController$2| |onTwilightStateChanged| ||
|com.android.server.display.AutomaticBrightnessController| |handleLightSensorEvent| |long,float|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| ||
|com.android.server.am.ActivityStackSupervisor| |shutdownLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |checkReadyForSleepLocked| ||
|android.app.ActivityManagerNative| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController| |onWindowFocusChangedNotLocked| ||
|com.android.server.wm.AccessibilityController| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onSomeWindowResizedOrMovedLocked| ||
|com.android.server.wm.AccessibilityController| |onWindowTransitionLocked| |com.android.server.wm.WindowState,int|
|android.view.IWindowManager| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.internal.policy.impl.PhoneWindow| |getOptionsPanelGravity| ||
|com.android.server.InputMethodManagerService| |startInputUncheckedLocked| |com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.server.InputMethodManagerService| |systemRunning| |com.android.server.statusbar.StatusBarManagerService|
|com.android.server.InputMethodManagerService| |resetStateIfCurrentLocaleChangedLocked| ||
|com.android.server.InputMethodManagerService| |switchUserLocked| |int|
|com.android.server.InputMethodManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.InputMethodManagerService| |buildInputMethodListLocked| |java.util.ArrayList,java.util.HashMap,boolean|
|com.android.server.InputMethodManagerService| |updateFromSettingsLocked| |boolean|
|com.android.server.am.ActivityRecord$Token| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler| |activityIdleInternal| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.am.ActivityStack| |goToSleep| ||
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |android.content.pm.ApplicationInfo,int|
|android.service.wallpaper.WallpaperService$Engine| |updateSurface| |boolean,boolean,boolean|
|android.view.ViewRootImpl| |setView| |android.view.View,android.view.WindowManager$LayoutParams,android.view.View|
|android.view.IWindowSession| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.SurfaceView| |updateWindow| |boolean,boolean|
|android.view.IWindowSession| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |onRun| ||
|com.android.server.power.PowerManagerService$2| |onProximityNegative| ||
|com.android.server.power.PowerManagerService$2| |onProximityPositive| ||
|com.android.server.power.PowerManagerService$2| |onStateChanged| ||
|com.android.server.power.PowerManagerService$DockReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |access$3200| |com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |access$5000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |access$3900| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |access$1900| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2400| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2500| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2300| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$4000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |handleWakeLockDeath| |com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |releaseWakeLockInternal| |android.os.IBinder,int|
|com.android.server.power.PowerManagerService| |access$5300| |com.android.server.power.PowerManagerService,int,int|
|com.android.server.power.PowerManagerService| |access$5500| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5200| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$4800| |com.android.server.power.PowerManagerService,float|
|com.android.server.power.PowerManagerService| |access$4700| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5400| |com.android.server.power.PowerManagerService,long|
|com.android.server.power.PowerManagerService| |access$3700| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |userActivityFromNative| |long,int,int|
|com.android.server.power.PowerManagerService| |access$3800| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.display.AutomaticBrightnessController| |access$200| |com.android.server.display.AutomaticBrightnessController,long,float|
|com.android.server.display.AutomaticBrightnessController| |access$000| |com.android.server.display.AutomaticBrightnessController|
|com.android.server.am.ActivityManagerService| |shutdown| |int|
|com.android.server.am.ActivityStackSupervisor| |activitySleptLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |goingToSleepLocked| ||
|com.android.server.am.ActivityStack| |completePauseLocked| |boolean|
|com.android.server.am.ActivityStackSupervisor| |scheduleSleepTimeout| ||
|android.app.IActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationCallbacksLocked| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.WindowManagerService| |assignLayersLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.wm.WindowManagerService$LocalService| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.WindowState| |reportResized| ||
|com.android.server.wm.WindowStateAnimator| |applyEnterAnimationLocked| ||
|com.android.server.InputMethodManagerService| |startInputLocked| |com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.internal.policy.impl.PhoneWindow| |onOptionsPanelRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.KeyEvent|
|com.android.server.InputMethodManagerService| |access$1100| |com.android.server.InputMethodManagerService|
|com.android.server.InputMethodManagerService| |access$1000| |com.android.server.InputMethodManagerService,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.InputMethodManagerService| |<init>| |android.content.Context,com.android.server.wm.WindowManagerService|
|android.view.IApplicationToken$Stub$Proxy| |windowsVisible| ||
|android.view.IApplicationToken$Stub| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleTimeoutLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleLocked| ||
|com.android.server.am.ActivityManagerService| |handleAppDiedLocked| |com.android.server.am.ProcessRecord,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |attachApplicationLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.CompatModePackages| |setFrontActivityScreenCompatModeLocked| |int|
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |java.lang.String,int|
|android.service.wallpaper.WallpaperService$Engine| |attach| |android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper|
|android.service.wallpaper.WallpaperService$Engine| |doDisplayPaddingChanged| |android.graphics.Rect|
|android.service.wallpaper.WallpaperService$Engine| |reportVisibility| ||
|android.service.wallpaper.WallpaperService$Engine| |setOffsetNotificationsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |setTouchEventsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper| |executeMessage| |android.os.Message|
|android.view.WindowManagerGlobal| |addView| |android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window|
|com.android.internal.os.BaseCommand| |onRun| ||
|com.android.server.power.PowerManagerService$BatteryReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |scheduleSandmanLocked| ||
|com.android.server.power.PowerManagerService| |updateScreenBrightnessBoostLocked| |int|
|com.android.server.power.PowerManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.power.PowerManagerService$UserSwitchedReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |updateUserActivitySummaryLocked| |long,int|
|com.android.server.power.PowerManagerService| |access$2700| |com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |access$3300| |com.android.server.power.PowerManagerService,android.os.IBinder,int|
|com.android.server.power.PowerManagerService$LocalService| |setDozeOverrideFromDreamManager| |int,int|
|com.android.server.power.PowerManagerService$LocalService| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|com.android.server.power.PowerManagerService$LocalService| |setScreenBrightnessOverrideFromWindowManager| |int|
|com.android.server.power.PowerManagerService$LocalService| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|com.android.server.display.AutomaticBrightnessController$1| |onSensorChanged| |android.hardware.SensorEvent|
|android.app.ActivityManagerNative| |shutdown| |int|
|com.android.server.am.ActivityManagerService$12| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |updateSleepIfNeededLocked| ||
|com.android.server.am.ActivityStack| |activityPausedLocked| |android.os.IBinder,boolean|
|android.app.ActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|android.view.WindowManagerInternal| |setMagnificationSpec| |android.view.MagnificationSpec|
|android.view.WindowManagerInternal| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher| |dispatchRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUpPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanelsAfterRestore| ||
|com.android.internal.policy.impl.PhoneWindow| |reopenMenu| |boolean|
|com.android.internal.policy.impl.PhoneWindow| |togglePanel| |int,android.view.KeyEvent|
|com.android.server.InputMethodManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$3| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.content.PackageMonitor| |onSomePackagesChanged| ||
|android.view.IApplicationToken$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IApplicationToken| |windowsVisible| ||
|com.android.server.am.ActivityStack| |backgroundResourcesReleased| ||
|com.android.server.am.ActivityStack| |clearLaunchTime| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStack| |completeResumeLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |attachApplicationLocked| |android.app.IApplicationThread,int|
|com.android.server.am.ActivityManagerService| |removeProcessLocked| |com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord,int,android.app.IApplicationThread|
|com.android.server.am.ActivityManagerService| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.am.CompatModeDialog$1| |onCheckedChanged| |android.widget.CompoundButton,boolean|
|android.service.wallpaper.WallpaperService$Engine$3| |onDisplayChanged| |int|
|android.service.wallpaper.WallpaperService$Engine| |doVisibilityChanged| |boolean|
|android.view.WindowManagerImpl| |addView| |android.view.View,android.view.ViewGroup$LayoutParams|
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|com.android.server.power.PowerManagerService| |access$2000| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |updateDreamLocked| |int,boolean|
|com.android.server.power.PowerManagerService$WakeLock| |binderDied| ||
|android.os.PowerManagerInternal| |setDozeOverrideFromDreamManager| |int,int|
|android.os.PowerManagerInternal| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|android.os.PowerManagerInternal| |setScreenBrightnessOverrideFromWindowManager| |int|
|android.os.PowerManagerInternal| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|android.app.IActivityManager| |shutdown| |int|
|com.android.server.am.ActivityManagerService| |finishRunningVoiceLocked| ||
|com.android.server.am.ActivityManagerService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityManagerService| |startRunningVoiceLocked| ||
|com.android.server.am.ActivityStack| |awakeFromSleepingLocked| ||
|android.view.WindowManagerInternal| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.accessibility.AccessibilityManagerService| |updateWindowsForAccessibilityCallbackLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher$1| |run| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUp| |int,int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |access$2200| |com.android.internal.policy.impl.PhoneWindow|
|com.android.internal.policy.impl.PhoneWindow| |onConfigurationChanged| |android.content.res.Configuration|
|com.android.internal.policy.impl.PhoneWindow| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.app.IUserSwitchObserver$Stub$Proxy| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.content.PackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.LocationManagerService$4| |onSomePackagesChanged| ||
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onSomePackagesChanged| ||
|com.android.server.ServiceWatcher$2| |onSomePackagesChanged| ||
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.am.ActivityRecord$Token| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStack| |releaseBackgroundResources| ||
|com.android.server.am.ActivityManagerService| |access$400| |com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |broadcastIntentLocked| |com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |finishInstrumentationLocked| |com.android.server.am.ProcessRecord,int,android.os.Bundle|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |forceStopUserLocked| |int,java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppCrashLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killPackageProcessesLocked| |java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActivityManagerService$AppDeathRecipient| |binderDied| ||
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord|
|android.app.ActivityManagerNative| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|com.android.server.power.PowerManagerService$DreamReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.dreams.DreamManagerService| |startDozingInternal| |android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |stopDozingInternal| |android.os.IBinder|
|com.android.server.power.ShutdownThread| |run| ||
|com.android.server.am.ActivityManagerService$LocalService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |comeOutOfSleepIfNeededLocked| ||
|com.android.server.accessibility.ScreenMagnifier| |<init>| |android.content.Context,int,com.android.server.accessibility.AccessibilityManagerService|
|com.android.server.accessibility.ScreenMagnifier| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |offsetMagnifiedRegionCenter| |float,float|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |reset| |boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScaleAndMagnifiedRegionCenter| |float,float,float,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |onUserStateChangedLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |dispatchKeyEvent| |android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |onAttachedToWindow| ||
|com.android.internal.view.menu.MenuBuilder$Callback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.app.ResolverActivity$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.ServiceWatcher$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.trust.TrustManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.tv.TvInputManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService$7| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |deliverPreBootCompleted| |java.lang.Runnable,java.util.ArrayList,int|
|com.android.server.am.ActivityManagerService| |access$200| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |closeSystemDialogsLocked| |java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserBoot| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserStop| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |makeAppCrashingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killAppAtUsersRequest| |com.android.server.am.ProcessRecord,android.app.Dialog|
|com.android.server.am.ActivityManagerService| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |bringUpServiceLocked| |com.android.server.am.ServiceRecord,int,boolean,boolean|
|com.android.server.am.ActivityManagerService| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |processNextBroadcast| |boolean|
|com.android.server.am.ActivityManagerService$LocalService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |realStartServiceLocked| |com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean|
|android.app.IActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|com.android.server.dreams.DreamManagerService| |access$1800| |com.android.server.dreams.DreamManagerService,android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |access$1900| |com.android.server.dreams.DreamManagerService,android.os.IBinder|
|com.android.server.power.ShutdownThread| |beginShutdownSequence| |android.content.Context|
|com.android.server.accessibility.AccessibilityInputFilter| |enableFeatures| ||
|com.android.server.accessibility.AccessibilityInputFilter| |disableFeatures| ||
|com.android.server.accessibility.EventStreamTransformation| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScroll| |android.view.MotionEvent,android.view.MotionEvent,float,float|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRectangleOnScreenRequested| |int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |handleOnScreenStateChange| |java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |resetMagnificationIfNeeded| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTapAndHold| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnifiedRegionCenter| |float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScale| |float,float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier| |handleOnMagnifiedBoundsChanged| |android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService| |access$500| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |ensureWindowsAvailableTimed| ||
|com.android.server.accessibility.AccessibilityManagerService| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |switchUser| |int|
|com.android.server.accessibility.AccessibilityManagerService| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuView$MenuBuilderCallback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|com.android.internal.view.menu.MenuBuilder| |changeMenuMode| ||
|android.app.ActivityManagerNative| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService$29| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |finishUserSwitch| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService$28| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceInnerLocked| |com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |performServiceRestartLocked| |com.android.server.am.ServiceRecord|
|android.app.ActivityManagerNative| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |broadcastTimeoutLocked| |boolean|
|com.android.server.am.BroadcastQueue| |scheduleBroadcastsLocked| ||
|android.app.ActivityManagerInternal| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |attachApplicationLocked| |com.android.server.am.ProcessRecord,java.lang.String|
|android.app.ActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |runScreenCompat| ||
|com.android.server.power.ShutdownThread| |access$000| |android.content.Context|
|com.android.server.power.ShutdownThread| |shutdownInner| |android.content.Context,boolean|
|com.android.server.accessibility.AccessibilityInputFilter| |onInstalled| ||
|com.android.server.accessibility.AccessibilityInputFilter| |setEnabledFeatures| |int|
|com.android.server.accessibility.AccessibilityInputFilter| |onUninstalled| ||
|com.android.server.accessibility.AccessibilityManagerService| |updateInputFilter| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |access$100| |com.android.server.accessibility.ScreenMagnifier,int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |access$2900| |com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver,java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |access$600| |com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRotationChanged| |int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnUserContextChanged| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1700| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScale| |android.view.ScaleGestureDetector|
|com.android.server.accessibility.ScreenMagnifier| |access$000| |com.android.server.accessibility.ScreenMagnifier,android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$1| |onSomePackagesChanged| ||
|com.android.server.accessibility.AccessibilityManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$4| |onClick| |android.content.DialogInterface,int|
|com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.accessibility.AccessibilityManagerService$Service| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accessibility.AccessibilityManagerService| |access$3300| |com.android.server.accessibility.AccessibilityManagerService|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager$Stub| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |access$800| |com.android.server.accessibility.AccessibilityManagerService,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.view.accessibility.IAccessibilityManager$Stub| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuPresenter$OpenOverflowRunnable| |run| ||
|com.android.internal.view.menu.ContextMenuBuilder| |changeMenuMode| ||
|com.android.internal.view.menu.IconMenuView$1| |onClick| |android.view.View|
|com.android.internal.view.menu.SubMenuBuilder| |changeMenuMode| ||
|android.app.IActivityManager| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub$Proxy| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.content.IIntentReceiver$Stub| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |keyDispatchingTimedOut| |java.lang.String|
|android.app.IActivityManager| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceLocked| |android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int|
|com.android.server.am.ActiveServices$ServiceMap| |rescheduleDelayedStarts| ||
|com.android.server.am.ActiveServices$ServiceRestarter| |run| ||
|android.app.IActivityManager| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.ActivityManagerService| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |setBroadcastTimeoutLocked| |long|
|com.android.server.am.ActivityManagerService| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.BroadcastQueue| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |createRelroFile| |boolean,java.lang.String[]|
|com.android.commands.am.Am| |onRun| ||
|com.android.server.power.ShutdownThread$1| |onClick| |android.content.DialogInterface,int|
|com.android.server.power.ShutdownThread| |reboot| |android.content.Context,java.lang.String,boolean|
|com.android.server.power.ShutdownThread| |rebootSafeMode| |android.content.Context,boolean|
|com.android.server.power.ShutdownThread| |shutdown| |android.content.Context,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |access$2100| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |access$300| |com.android.server.accessibility.ScreenMagnifier,int|
|com.android.server.accessibility.ScreenMagnifier| |access$200| |com.android.server.accessibility.ScreenMagnifier|
|com.android.internal.content.PackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.content.PackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$UserState$1| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$UserState| |onSwitchToAnotherUser| ||
|com.android.server.accessibility.AccessibilityManagerService| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.accessibility.AccessibilityManagerService$Service$2| |run| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindow| |int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindows| ||
|android.view.accessibility.IAccessibilityManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.IAccessibilityManager| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|com.android.server.pm.PackageManagerService| |killApplication| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IIntentReceiver| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.IActivityManager| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|android.view.IApplicationToken$Stub$Proxy| |keyDispatchingTimedOut| |java.lang.String|
|android.view.IApplicationToken$Stub| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActiveServices$ServiceMap| |ensureNotStartingBackground| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService| |bindToAgentSynchronous| |android.content.pm.ApplicationInfo,int|
|android.app.ActivityManagerNative| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| |java.lang.String[]|
|com.android.server.power.PowerManagerService$3| |run| ||
|com.android.server.wm.WindowManagerService| |rebootSafeMode| |boolean|
|com.android.server.wm.WindowManagerService| |shutdown| |boolean|
|com.android.server.accessibility.EventStreamTransformation| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |sendDelayedMotionEvents| ||
|com.android.server.accessibility.ScreenMagnifier| |onUserContextChanged| ||
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.app.ResolverActivity$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.LocationManagerService$4| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.ServiceWatcher$2| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.trust.TrustManagerService$3| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.tv.TvInputManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.app.ResolverActivity$1| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.LocationManagerService$4| |onPackageRemoved| |java.lang.String,int|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.trust.TrustManagerService$3| |onPackageRemoved| |java.lang.String,int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.view.accessibility.IAccessibilityManager$Stub| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindows| ||
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindows| ||
|com.android.server.accessibility.AccessibilityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomationConnection| |registerUiTestAutomationServiceLocked| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |enableAccessibility| ||
|com.android.server.pm.PackageManagerService| |scanPackageDirtyLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageLI| |java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |replaceSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|android.app.LoadedApk$ReceiverDispatcher$InnerReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.PendingIntent$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IntentSender$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.am.Am$IntentReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.monkey.MonkeyNetworkMonitor| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$13| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$15| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$24| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$25| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$28| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$29| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$8| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService$12| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.BroadcastQueue| |performReceiveLocked| |com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.wm.InputMonitor| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.view.IApplicationToken| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActiveServices| |bringDownServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$FullBackupEngine| |backupOnePackage| |android.content.pm.PackageInfo|
|com.android.server.backup.BackupManagerService$FullRestoreEngine| |restoreOneFile| |java.io.InputStream|
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |restoreOneFile| |java.io.InputStream,byte[]|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeNextAgent| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreKeyValue| ||
|android.app.IActivityManager| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |cleanUpApplicationRecordLocked| |com.android.server.am.ProcessRecord,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |startAppProblemLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|android.webkit.WebViewFactory| |onWebViewUpdateInstalled| ||
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| ||
|android.view.WindowManagerPolicy$WindowManagerFuncs| |rebootSafeMode| |boolean|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |shutdown| |boolean|
|com.android.server.accessibility.AccessibilityInputFilter| |handleMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleMotionEventStateDelegating| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendMotionEvent| |android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1800| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |transitionToDelegatingStateAndClear| ||
|android.view.accessibility.IAccessibilityManager| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindows| ||
|android.app.UiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |access$200| |com.android.internal.policy.impl.EnableAccessibilityController|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |java.io.File,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageX| |java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installNewPackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |replaceNonSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |unloadMediaPackages| |android.util.ArrayMap,int[],boolean|
|com.android.server.pm.PackageManagerService| |replacePackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.am.BroadcastQueue| |deliverToRegisteredReceiverLocked| |com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices| |forceStopLocked| |java.lang.String,int,boolean,boolean|
|com.android.server.am.ActiveServices| |bringDownServiceIfNeededLocked| |com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |killServicesLocked| |com.android.server.am.ProcessRecord,boolean|
|com.android.server.am.ActiveServices| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|com.android.server.backup.BackupManagerService$PerformAdbBackupTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$EngineThread| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |execute| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |execute| ||
|com.android.commands.monkey.MonkeyNetworkMonitor| |register| |android.app.IActivityManager|
|com.android.server.am.ActivityManagerService| |trimApplications| ||
|com.android.server.am.ActivityManagerService| |makeAppNotRespondingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |access$300| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord|
|com.android.server.webkit.WebViewUpdateService| |onWebViewUpdateInstalled| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |powerLongPress| ||
|com.android.server.accessibility.AccessibilityInputFilter| |processBatchedEvents| |long|
|com.android.server.accessibility.TouchExplorer| |access$2800| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDelegating| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDragging| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateTouchExploring| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendActionDownAndUp| |android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |sendDownForAllNotInjectedPointers| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendHoverExitAndTouchExplorationGestureEndIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendTouchExplorationGestureStartAndHoverEnterIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendUpForInjectedDownPointers| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |unregisterUiTestAutomationServiceLocked| ||
|android.view.accessibility.AccessibilityInteractionClient| |getWindow| |int,int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.AccessibilityInteractionClient| |getWindows| |int|
|android.app.IUiAutomationConnection$Stub$Proxy| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|android.app.IUiAutomationConnection$Stub| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |onInterceptTouchEvent| |android.view.MotionEvent|
|com.android.server.pm.PackageManagerService| |deleteSystemPackageLI| |com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |<init>| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService| |loadMediaPackages| |android.util.ArrayMap,int[]|
|com.android.server.pm.PackageManagerService| |scanDirLI| |java.io.File,int,int,long|
|com.android.server.pm.PackageManagerService| |access$4000| |com.android.server.pm.PackageManagerService,java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installPackageLI| |com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |updateExternalMediaStatusInner| |boolean,boolean,boolean|
|com.android.server.input.InputManagerService| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices| |removeConnectionLocked| |com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActiveServices| |stopServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |execute| ||
|com.android.commands.monkey.Monkey| |getSystemInterfaces| ||
|com.android.server.am.ActivityManagerService| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]|
|com.android.server.webkit.WebViewUpdateService| |access$000| |com.android.server.webkit.WebViewUpdateService|
|com.android.internal.policy.impl.GlobalActions$LongPressAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$Action| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$SinglePressAction| |onPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$800| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.server.accessibility.AccessibilityInputFilter| |access$100| |com.android.server.accessibility.AccessibilityInputFilter,long|
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$1700| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |access$2600| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$2400| |com.android.server.accessibility.TouchExplorer,int|
|com.android.server.accessibility.TouchExplorer| |clear| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |disconnect| ||
|android.view.accessibility.AccessibilityNodeInfo| |getWindow| ||
|android.view.accessibility.AccessibilityWindowInfo| |getChild| |int|
|android.view.accessibility.AccessibilityWindowInfo| |getParent| ||
|android.accessibilityservice.AccessibilityService| |getWindows| ||
|android.app.UiAutomation| |getWindows| ||
|android.app.IUiAutomationConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IUiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |dispatchTouchEvent| |android.view.MotionEvent|
|com.android.server.pm.PackageManagerService| |main| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService$14| |run| ||
|com.android.server.pm.PackageManagerService$8| |run| ||
|com.android.server.pm.PackageManagerService| |access$2300| |com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |access$4500| |com.android.server.pm.PackageManagerService,boolean,boolean,boolean|
|com.android.server.pm.PackageManagerService| |scanAvailableAsecs| ||
|com.android.server.am.ActiveServices| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |executeNextState| |com.android.server.backup.BackupManagerService$BackupState|
|com.android.commands.monkey.Monkey| |run| |java.lang.String[]|
|android.app.ActivityManagerNative| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |addAppLocked| |android.content.pm.ApplicationInfo,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String|
|com.android.server.webkit.WebViewUpdateService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.policy.impl.GlobalActions$2| |onItemLongClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.internal.policy.impl.GlobalActions| |onClick| |android.content.DialogInterface,int|
|com.android.internal.policy.impl.GlobalActions| |handleShow| ||
|com.android.server.accessibility.AccessibilityInputFilter$1| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onDoubleTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |clear| ||
|com.android.server.accessibility.TouchExplorer| |handleMotionEventGestureDetecting| |android.view.MotionEvent,int|
|android.app.IUiAutomationConnection$Stub$Proxy| |disconnect| ||
|android.app.IUiAutomationConnection$Stub| |disconnect| ||
|android.app.UiAutomationConnection| |shutdown| ||
|android.app.UiAutomationConnection| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomation| |connect| ||
|com.android.server.pm.PackageManagerService$6| |run| ||
|com.android.server.pm.PackageManagerService$11| |run| ||
|com.android.server.am.ActivityManagerService| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |agentErrorCleanup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |beginBackup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |operationComplete| ||
|com.android.commands.monkey.Monkey| |main| |java.lang.String[]|
|android.app.IActivityManager| |setProcessLimit| |int|
|com.android.internal.policy.impl.GlobalActions| |access$1800| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.GlobalActions| |showDialog| |boolean,boolean|
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.EventStreamTransformation| |clear| ||
|com.android.server.accessibility.TouchExplorer$ExitGestureDetectionModeDelayed| |run| ||
|android.app.IUiAutomationConnection| |disconnect| ||
|android.app.IUiAutomationConnection$Stub$Proxy| |shutdown| ||
|android.app.IUiAutomationConnection$Stub| |shutdown| ||
|android.app.Instrumentation| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetworkViews| |setup| ||
|com.android.uiautomator.core.UiAutomationShellWrapper| |connect| ||
|com.android.server.am.ActivityManagerService| |removeTaskByIdLocked| |int,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeAgentForBackup| |java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |operationComplete| ||
|com.android.internal.policy.impl.PhoneWindowManager| |showGlobalActionsInternal| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |clear| ||
|android.app.UiAutomation| |disconnect| ||
|android.app.IUiAutomationConnection| |shutdown| ||
|android.test.InstrumentationCoreTestRunner| |getUiAutomation| ||
|android.test.InstrumentationTestRunner| |getUiAutomation| ||
|android.test.LaunchPerformanceBase| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetwork| |startServer| ||
|com.android.commands.uiautomator.DumpCommand| |run| |java.lang.String[]|
|com.android.commands.uiautomator.EventsCommand| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |start| ||
|com.android.server.am.ActivityManagerService| |access$1400| |com.android.server.am.ActivityManagerService,int,boolean|
|com.android.server.am.ActivityManagerService| |removeTasksByPackageNameLocked| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |removeTasksByRemovedPackageComponentsLocked| |java.lang.String,int|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService| |opComplete| |int|
|com.android.internal.policy.impl.PhoneWindowManager$4| |run| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onInputEvent| |android.view.InputEvent,int|
|android.app.Instrumentation| |finish| |int,android.os.Bundle|
|com.android.uiautomator.core.UiAutomationShellWrapper| |disconnect| ||
|com.android.commands.monkey.MonkeySourceNetwork| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher$Command| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |run| |java.util.List,android.os.Bundle,boolean,boolean|
|com.android.server.backup.BackupManagerService| |handleTimeout| |int,java.lang.Object|
|com.android.server.backup.Trampoline| |opComplete| |int|
|android.test.InstrumentationCoreTestRunner| |finish| |int,android.os.Bundle|
|android.test.InstrumentationTestRunner| |finish| |int,android.os.Bundle|
|android.test.LaunchPerformanceBase| |finish| |int,android.os.Bundle|
|com.android.commands.monkey.MonkeyEventSource| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher| |main| |java.lang.String[]|
|com.android.commands.uiautomator.RunTestCommand| |run| |java.lang.String[]|
|com.android.server.backup.BackupManagerService| |prepareOperationTimeout| |int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask|
|android.app.backup.IBackupManager$Stub$Proxy| |opComplete| |int|
|android.app.backup.IBackupManager$Stub| |opComplete| |int|
|android.test.InstrumentationTestRunner| |onStart| ||
|com.android.commands.monkey.Monkey| |runMonkeyCycles| ||
|com.android.server.backup.BackupManagerService$FullBackupEngine$FullBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$FullBackupObbConnection| |backupObbs| |android.content.pm.PackageInfo,java.io.OutputStream|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |initiateOneRestore| |android.content.pm.PackageInfo,int|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreFinished| ||
|android.app.backup.IBackupManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.IBackupManager| |opComplete| |int|
|android.test.InstrumentationCoreTestRunner| |onStart| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |startRestore| ||
|com.android.server.backup.Trampoline| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.BackupAgent$BackupServiceBinder| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IBackupAgent| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreFileRunnable| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable| |run| ||
|com.android.server.wifi.WifiStateMachine| |<init>| |android.content.Context,java.lang.String,com.android.server.wifi.WifiTrafficPoller|
|com.android.server.wifi.WifiServiceImpl| |<init>| |android.content.Context|
|com.android.server.wifi.WifiService| |<init>| |android.content.Context|
|com.android.server.SystemService| |<init>| |android.content.Context|
|com.android.server.AlarmManagerService| |<init>| |android.content.Context|
|com.android.server.am.ActivityManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.appwidget.AppWidgetService| |<init>| |android.content.Context|
|com.android.server.backup.BackupManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.BatteryService| |<init>| |android.content.Context|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.display.DisplayManagerService| |<init>| |android.content.Context|
|com.android.server.DockObserver| |<init>| |android.content.Context|
|com.android.server.dreams.DreamManagerService| |<init>| |android.content.Context|
|com.android.server.ethernet.EthernetService| |<init>| |android.content.Context|
|com.android.server.fingerprint.FingerprintService| |<init>| |android.content.Context|
|com.android.server.hdmi.HdmiControlService| |<init>| |android.content.Context|
|com.android.server.job.JobSchedulerService| |<init>| |android.content.Context|
|com.android.server.lights.LightsService| |<init>| |android.content.Context|
|com.android.server.media.MediaSessionService| |<init>| |android.content.Context|
|com.android.server.media.projection.MediaProjectionManagerService| |<init>| |android.content.Context|
|com.android.server.MmsServiceBroker| |<init>| |android.content.Context|
|com.android.server.notification.NotificationManagerService| |<init>| |android.content.Context|
|com.android.server.PersistentDataBlockService| |<init>| |android.content.Context|
|com.android.server.pm.Installer| |<init>| |android.content.Context|
|com.android.server.pm.LauncherAppsService| |<init>| |android.content.Context|
|com.android.server.power.PowerManagerService| |<init>| |android.content.Context|
|com.android.server.print.PrintManagerService| |<init>| |android.content.Context|
|com.android.server.restrictions.RestrictionsManagerService| |<init>| |android.content.Context|
|com.android.server.storage.DeviceStorageMonitorService| |<init>| |android.content.Context|
|com.android.server.telecom.TelecomLoaderService| |<init>| |android.content.Context|
|com.android.server.trust.TrustManagerService| |<init>| |android.content.Context|
|com.android.server.tv.TvInputManagerService| |<init>| |android.content.Context|
|com.android.server.twilight.TwilightService| |<init>| |android.content.Context|
|com.android.server.UiModeManagerService| |<init>| |android.content.Context|
|com.android.server.usage.UsageStatsService| |<init>| |android.content.Context|
|com.android.server.usb.UsbService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |<init>| |android.content.Context|
|com.android.server.webkit.WebViewUpdateService| |<init>| |android.content.Context|
|com.android.server.wifi.p2p.WifiP2pService| |<init>| |android.content.Context|
|com.android.server.wifi.RttService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiScanningService| |<init>| |android.content.Context|
|com.android.server.content.SyncManager| |<init>| |android.content.Context,boolean|
|com.android.server.content.ContentService| |getSyncManager| ||
|com.android.server.content.ContentService| |systemReady| ||
|com.android.server.search.SearchManagerService| |<init>| |android.content.Context|
|com.android.internal.policy.impl.PhoneWindowManager| |checkAddPermission| |android.view.WindowManager$LayoutParams,int[]|
|android.view.WindowManagerPolicy| |checkAddPermission| |android.view.WindowManager$LayoutParams,int[]|
|com.android.server.wm.WindowManagerService| |addWindow| |com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub$Proxy| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|com.android.server.wm.Session| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession$Stub$Proxy| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub$Proxy| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.service.wallpaper.WallpaperService$Engine| |updateSurface| |boolean,boolean,boolean|
|android.view.ViewRootImpl| |setView| |android.view.View,android.view.WindowManager$LayoutParams,android.view.View|
|com.android.server.wm.Session| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.SurfaceView| |updateWindow| |boolean,boolean|
|android.view.IWindowSession| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.service.wallpaper.WallpaperService$Engine| |attach| |android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper|
|android.service.wallpaper.WallpaperService$Engine| |doDisplayPaddingChanged| |android.graphics.Rect|
|android.service.wallpaper.WallpaperService$Engine| |reportVisibility| ||
|android.service.wallpaper.WallpaperService$Engine| |setOffsetNotificationsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |setTouchEventsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper| |executeMessage| |android.os.Message|
|android.view.WindowManagerGlobal| |addView| |android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window|
|android.service.wallpaper.WallpaperService$Engine$3| |onDisplayChanged| |int|
|android.service.wallpaper.WallpaperService$Engine| |doVisibilityChanged| |boolean|
|android.view.WindowManagerImpl| |addView| |android.view.View,android.view.ViewGroup$LayoutParams|
|com.android.server.BluetoothManagerService| |enableNoAutoConnect| ||
|android.bluetooth.IBluetoothManager$Stub$Proxy| |enableNoAutoConnect| ||
|android.bluetooth.IBluetoothManager$Stub| |enableNoAutoConnect| ||
|android.bluetooth.IBluetoothManager| |enableNoAutoConnect| ||
|android.bluetooth.IBluetoothManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.bluetooth.BluetoothAdapter| |enableNoAutoConnect| ||
|com.android.server.BluetoothManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.nfc.beam.BeamReceiveService| |prepareToReceive| |com.android.nfc.beam.BeamTransferRecord|
|com.android.nfc.beam.BeamSendService| |doTransfer| |com.android.nfc.beam.BeamTransferRecord|
|com.android.nfc.handover.PeripheralHandoverService| |enableBluetooth| ||
|com.android.nfc.beam.BeamReceiveService| |onStartCommand| |android.content.Intent,int,int|
|com.android.nfc.beam.BeamSendService| |onStartCommand| |android.content.Intent,int,int|
|com.android.nfc.handover.PeripheralHandoverService| |doPeripheralHandover| |android.os.Bundle|
|com.android.nfc.handover.PeripheralHandoverService| |onStartCommand| |android.content.Intent,int,int|
|com.android.server.BluetoothManagerService| |enable| ||
|android.bluetooth.IBluetoothManager$Stub$Proxy| |enable| ||
|android.bluetooth.IBluetoothManager$Stub| |enable| ||
|android.bluetooth.IBluetoothManager| |enable| ||
|android.bluetooth.BluetoothAdapter| |enable| ||
|com.android.server.BluetoothManagerService| |disable| |boolean|
|android.bluetooth.IBluetoothManager$Stub$Proxy| |disable| |boolean|
|android.bluetooth.IBluetoothManager$Stub| |disable| |boolean|
|android.bluetooth.IBluetoothManager| |disable| |boolean|
|android.bluetooth.BluetoothAdapter| |disable| |boolean|
|android.bluetooth.BluetoothAdapter| |disable| ||
|com.android.server.power.ShutdownThread$5| |run| ||
|com.android.nfc.beam.BeamReceiveService| |onTransferComplete| |com.android.nfc.beam.BeamTransferManager,boolean|
|com.android.nfc.beam.BeamSendService| |onTransferComplete| |com.android.nfc.beam.BeamTransferManager,boolean|
|com.android.nfc.handover.PeripheralHandoverService| |disableBluetoothIfNeeded| ||
|com.android.nfc.beam.BeamTransferManager$Callback| |onTransferComplete| |com.android.nfc.beam.BeamTransferManager,boolean|
|com.android.nfc.handover.PeripheralHandoverService| |onBluetoothPeripheralHandoverComplete| |boolean|
|com.android.nfc.beam.BeamTransferManager| |updateStateAndNotification| |int|
|com.android.nfc.handover.BluetoothPeripheralHandover$Callback| |onBluetoothPeripheralHandoverComplete| |boolean|
|com.android.nfc.beam.BeamTransferManager| |cancel| ||
|com.android.nfc.beam.BeamTransferManager| |finishTransfer| |boolean,android.net.Uri,java.lang.String|
|com.android.nfc.beam.BeamTransferManager| |onScanCompleted| |java.lang.String,android.net.Uri|
|com.android.nfc.beam.BeamTransferManager| |processFiles| ||
|com.android.nfc.beam.BeamTransferManager| |sendBluetoothCancelIntentAndUpdateState| ||
|com.android.nfc.beam.BeamTransferManager| |updateFileProgress| |float|
|com.android.nfc.handover.BluetoothPeripheralHandover| |complete| |boolean|
|com.android.nfc.beam.BeamStatusReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.nfc.beam.BeamStatusReceiver| |handleTransferEvent| |android.content.Intent,int|
|com.android.nfc.beam.BeamTransferManager| |setBluetoothTransferId| |int|
|com.android.nfc.handover.BluetoothPeripheralHandover| |handleIntent| |android.content.Intent|
|com.android.nfc.handover.BluetoothPeripheralHandover| |nextStepConnect| ||
|com.android.nfc.handover.BluetoothPeripheralHandover| |nextStepDisconnect| ||
|com.android.nfc.handover.BluetoothPeripheralHandover| |nextStepInit| ||
|com.android.nfc.handover.BluetoothPeripheralHandover| |startBonding| ||
|com.android.nfc.handover.BluetoothPeripheralHandover| |start| ||
|com.android.nfc.handover.BluetoothPeripheralHandover$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.nfc.handover.BluetoothPeripheralHandover| |nextStep| ||
|com.android.nfc.handover.PeripheralHandoverService| |handleBluetoothStateChanged| |android.content.Intent|
|com.android.nfc.handover.BluetoothPeripheralHandover| |onServiceConnected| |int,android.bluetooth.BluetoothProfile|
|com.android.nfc.handover.PeripheralHandoverService| |access$000| |com.android.nfc.handover.PeripheralHandoverService,android.content.Intent|
|com.android.nfc.handover.PeripheralHandoverService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.IccPhoneBookInterfaceManager| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.UiccPhoneBookController| |updateAdnRecordsInEfBySearchForSubscriber| |int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |updateAdnRecordsInEfBySearchForSubscriber| |int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub| |updateAdnRecordsInEfBySearchForSubscriber| |int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.UiccPhoneBookController| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook| |updateAdnRecordsInEfBySearchForSubscriber| |int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IccProvider| |addIccRecordToEf| |int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int|
|com.android.internal.telephony.IccProvider| |deleteIccRecordFromEf| |int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int|
|com.android.internal.telephony.IccProvider| |updateIccRecordInEf| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int|
|com.android.internal.telephony.UiccPhoneBookController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.IIccPhoneBook| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IccProvider| |insert| |android.net.Uri,android.content.ContentValues|
|com.android.internal.telephony.IccProvider| |delete| |android.net.Uri,java.lang.String,java.lang.String[]|
|com.android.internal.telephony.IccProvider| |update| |android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]|
|com.android.internal.telephony.IccPhoneBookInterfaceManager| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.UiccPhoneBookController| |updateAdnRecordsInEfByIndexForSubscriber| |int,int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |updateAdnRecordsInEfByIndexForSubscriber| |int,int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub| |updateAdnRecordsInEfByIndexForSubscriber| |int,int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.UiccPhoneBookController| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook| |updateAdnRecordsInEfByIndexForSubscriber| |int,int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook$Stub| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IIccPhoneBook| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|android.provider.Contacts$Settings| |setSetting| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String|
|android.provider.Contacts$People| |addToGroup| |android.content.ContentResolver,long,long|
|android.provider.Contacts$People| |addToGroup| |android.content.ContentResolver,long,java.lang.String|
|android.provider.Contacts$People| |addToMyContactsGroup| |android.content.ContentResolver,long|
|android.provider.Contacts$People| |createPersonInMyContactsGroup| |android.content.ContentResolver,android.content.ContentValues|
|android.provider.ContactsContract$PinnedPositions| |pin| |android.content.ContentResolver,long,int|
|android.provider.CallLog$Calls| |updateDataUsageStatForData| |android.content.ContentResolver,java.lang.String|
|android.provider.CallLog$Calls| |addCall| |com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,int,android.telecom.PhoneAccountHandle,long,int,java.lang.Long,boolean|
|android.provider.CallLog$Calls| |addCall| |com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,int,android.telecom.PhoneAccountHandle,long,int,java.lang.Long|
|android.provider.CallLog$Calls| |updateNormalizedNumber| |android.content.Context,android.content.ContentResolver,java.lang.String,java.lang.String|
|android.provider.ContactsContract$ProfileSyncState| |newSetOperation| |android.accounts.Account,byte[]|
|android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder| |build| ||
|android.provider.ContactsContract$Contacts| |getLookupUri| |long,java.lang.String|
|android.provider.ContactsContract$Contacts| |getLookupUri| |android.content.ContentResolver,android.net.Uri|
|android.provider.ContactsContract$Data| |getContactLookupUri| |android.content.ContentResolver,android.net.Uri|
|android.provider.ContactsContract$RawContacts| |getContactLookupUri| |android.content.ContentResolver,android.net.Uri|
|android.widget.QuickContactBadge$QueryHandler| |onQueryComplete| |int,java.lang.Object,android.database.Cursor|
|android.provider.Contacts$People| |markAsContacted| |android.content.ContentResolver,long|
|android.provider.Contacts$ContactMethods| |addPostalLocation| |android.content.Context,long,double,double|
|android.provider.ContactsContract$SyncState| |newSetOperation| |android.accounts.Account,byte[]|
|android.provider.ContactsContract$Directory| |notifyDirectoryChange| |android.content.ContentResolver|
|android.provider.ContactsContract$Contacts| |markAsContacted| |android.content.ContentResolver,long|
|com.android.contacts.ContactsListActivity| |getContactUri| |int|
|com.android.contacts.ContactsListActivity| |getUriToQuery| ||
|com.android.contacts.ContactsListActivity| |getSelectedUri| |int|
|com.android.server.content.ContentService| |syncAsUser| |android.content.SyncRequest,int|
|android.content.IContentService$Stub$Proxy| |syncAsUser| |android.content.SyncRequest,int|
|android.content.IContentService$Stub| |syncAsUser| |android.content.SyncRequest,int|
|com.android.server.content.ContentService| |sync| |android.content.SyncRequest|
|android.content.IContentService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IContentService| |syncAsUser| |android.content.SyncRequest,int|
|android.content.IContentService$Stub$Proxy| |sync| |android.content.SyncRequest|
|android.content.IContentService$Stub| |sync| |android.content.SyncRequest|
|com.android.server.content.ContentService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.ContentResolver| |requestSyncAsUser| |android.accounts.Account,java.lang.String,int,android.os.Bundle|
|android.content.IContentService| |sync| |android.content.SyncRequest|
|android.app.ContextImpl$ApplicationContentResolver| |requestSyncAsUser| |android.accounts.Account,java.lang.String,int,android.os.Bundle|
|android.content.ContentResolver| |requestSync| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.test.mock.MockContentResolver| |requestSyncAsUser| |android.accounts.Account,java.lang.String,int,android.os.Bundle|
|android.content.ContentResolver| |requestSync| |android.content.SyncRequest|
|android.app.ContextImpl$ApplicationContentResolver| |requestSync| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.content.ContentResolver| |startSync| |android.net.Uri,android.os.Bundle|
|android.content.SyncActivityTooManyDeletes| |startSyncReallyDelete| ||
|android.content.SyncActivityTooManyDeletes| |startSyncUndoDeletes| ||
|android.test.mock.MockContentResolver| |requestSync| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.test.SyncBaseInstrumentation| |syncProvider| |android.net.Uri,java.lang.String,java.lang.String|
|com.android.commands.requestsync.RequestSync| |run| |java.lang.String[]|
|com.android.server.content.SyncStorageEngine| |requestSync| |android.accounts.Account,int,int,java.lang.String,android.os.Bundle|
|android.app.ContextImpl$ApplicationContentResolver| |requestSync| |android.content.SyncRequest|
|android.test.mock.MockContentResolver| |requestSync| |android.content.SyncRequest|
|com.android.server.content.SyncStorageEngine| |requestSync| |com.android.server.content.SyncStorageEngine$AuthorityInfo,int,android.os.Bundle|
|android.app.ContextImpl$ApplicationContentResolver| |startSync| |android.net.Uri,android.os.Bundle|
|android.test.mock.MockContentResolver| |startSync| |android.net.Uri,android.os.Bundle|
|android.content.SyncActivityTooManyDeletes| |onItemClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.commands.requestsync.RequestSync| |main| |java.lang.String[]|
|com.android.server.content.SyncStorageEngine| |setMasterSyncAutomatically| |boolean,int|
|com.android.server.content.SyncStorageEngine| |setSyncAutomatically| |android.accounts.Account,int,java.lang.String,boolean|
|com.android.server.content.SyncStorageEngine| |setSyncableStateForEndPoint| |com.android.server.content.SyncStorageEngine$EndPoint,int|
|com.android.server.content.SyncStorageEngine| |readAndDeleteLegacyAccountInfoLocked| ||
|com.android.server.content.SyncStorageEngine| |setIsSyncable| |android.accounts.Account,int,java.lang.String,int|
|com.android.server.content.SyncStorageEngine| |setIsTargetServiceActive| |android.content.ComponentName,int,boolean|
|com.android.server.content.SyncStorageEngine| |clearAndReadState| ||
|com.android.server.content.SyncStorageEngine| |<init>| |android.content.Context,java.io.File|
|com.android.server.content.SyncManager| |scheduleSync| |android.accounts.Account,int,int,java.lang.String,android.os.Bundle,long,long,boolean|
|com.android.server.content.SyncStorageEngine| |newTestInstance| |android.content.Context|
|com.android.server.content.SyncStorageEngine| |init| |android.content.Context|
|com.android.server.content.SyncManager$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.SyncManager$7| |onSyncRequest| |com.android.server.content.SyncStorageEngine$EndPoint,int,android.os.Bundle|
|com.android.server.content.SyncManager$8| |onServiceChanged| |android.content.SyncAdapterType,int,boolean|
|com.android.server.content.SyncManager| |onUserStarting| |int|
|com.android.server.content.SyncManager| |scheduleLocalSync| |android.accounts.Account,int,int,java.lang.String|
|com.android.server.content.SyncManager| |<init>| |android.content.Context,boolean|
|com.android.server.content.SyncStorageEngine$OnSyncRequestListener| |onSyncRequest| |com.android.server.content.SyncStorageEngine$EndPoint,int,android.os.Bundle|
|com.android.server.content.SyncManager$8| |onServiceChanged| |java.lang.Object,int,boolean|
|com.android.server.content.SyncManager| |access$800| |com.android.server.content.SyncManager,int|
|com.android.server.content.ContentService| |getSyncManager| ||
|com.android.server.content.SyncManager$6| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.ContentService| |systemReady| ||
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.server.SystemServer| |run| ||
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.server.content.ContentService| |cancelRequest| |android.content.SyncRequest|
|android.content.IContentService$Stub$Proxy| |cancelRequest| |android.content.SyncRequest|
|android.content.IContentService$Stub| |cancelRequest| |android.content.SyncRequest|
|android.content.IContentService| |cancelRequest| |android.content.SyncRequest|
|android.content.ContentResolver| |cancelSync| |android.content.SyncRequest|
|android.app.ContextImpl$ApplicationContentResolver| |cancelSync| |android.content.SyncRequest|
|android.test.mock.MockContentResolver| |cancelSync| |android.content.SyncRequest|
|com.android.server.content.ContentService| |setSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,boolean,int|
|android.content.IContentService$Stub$Proxy| |setSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,boolean,int|
|android.content.IContentService$Stub| |setSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,boolean,int|
|com.android.server.content.ContentService| |setSyncAutomatically| |android.accounts.Account,java.lang.String,boolean|
|android.content.IContentService| |setSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,boolean,int|
|android.content.IContentService$Stub$Proxy| |setSyncAutomatically| |android.accounts.Account,java.lang.String,boolean|
|android.content.IContentService$Stub| |setSyncAutomatically| |android.accounts.Account,java.lang.String,boolean|
|android.content.ContentResolver| |setSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,boolean,int|
|android.content.IContentService| |setSyncAutomatically| |android.accounts.Account,java.lang.String,boolean|
|android.app.ContextImpl$ApplicationContentResolver| |setSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,boolean,int|
|android.content.ContentResolver| |setSyncAutomatically| |android.accounts.Account,java.lang.String,boolean|
|android.test.mock.MockContentResolver| |setSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,boolean,int|
|android.app.ContextImpl$ApplicationContentResolver| |setSyncAutomatically| |android.accounts.Account,java.lang.String,boolean|
|android.test.mock.MockContentResolver| |setSyncAutomatically| |android.accounts.Account,java.lang.String,boolean|
|com.android.server.content.ContentService| |addPeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle,long|
|android.content.IContentService$Stub$Proxy| |addPeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle,long|
|android.content.IContentService$Stub| |addPeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle,long|
|android.content.IContentService| |addPeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle,long|
|android.content.ContentResolver| |addPeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle,long|
|android.app.ContextImpl$ApplicationContentResolver| |addPeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle,long|
|android.test.mock.MockContentResolver| |addPeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle,long|
|com.android.server.content.ContentService| |removePeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.content.IContentService$Stub$Proxy| |removePeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.content.IContentService$Stub| |removePeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.content.IContentService| |removePeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.content.ContentResolver| |removePeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.app.ContextImpl$ApplicationContentResolver| |removePeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle|
|android.test.mock.MockContentResolver| |removePeriodicSync| |android.accounts.Account,java.lang.String,android.os.Bundle|
|com.android.server.content.ContentService| |setIsSyncable| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService$Stub$Proxy| |setIsSyncable| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService$Stub| |setIsSyncable| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService| |setIsSyncable| |android.accounts.Account,java.lang.String,int|
|android.content.ContentResolver| |setIsSyncable| |android.accounts.Account,java.lang.String,int|
|android.app.ContextImpl$ApplicationContentResolver| |setIsSyncable| |android.accounts.Account,java.lang.String,int|
|android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl| |startSync| |android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle|
|android.test.mock.MockContentResolver| |setIsSyncable| |android.accounts.Account,java.lang.String,int|
|android.content.ISyncAdapter$Stub$Proxy| |startSync| |android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle|
|android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl| |initialize| |android.accounts.Account,java.lang.String|
|android.content.ISyncAdapter$Stub| |startSync| |android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle|
|android.content.ISyncAdapter$Stub$Proxy| |initialize| |android.accounts.Account,java.lang.String|
|android.content.ISyncAdapter$Stub| |initialize| |android.accounts.Account,java.lang.String|
|android.content.ISyncAdapter$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.ISyncAdapter| |startSync| |android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle|
|android.content.ISyncAdapter| |initialize| |android.accounts.Account,java.lang.String|
|android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.content.SyncManager$SyncHandler| |runBoundToAdapter| |com.android.server.content.SyncManager$ActiveSyncContext,android.os.IBinder|
|com.android.server.content.SyncManager$ActiveSyncContext| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.content.ContentService| |setMasterSyncAutomaticallyAsUser| |boolean,int|
|android.content.IContentService$Stub$Proxy| |setMasterSyncAutomaticallyAsUser| |boolean,int|
|android.content.IContentService$Stub| |setMasterSyncAutomaticallyAsUser| |boolean,int|
|com.android.server.content.ContentService| |setMasterSyncAutomatically| |boolean|
|android.content.IContentService| |setMasterSyncAutomaticallyAsUser| |boolean,int|
|android.content.IContentService$Stub$Proxy| |setMasterSyncAutomatically| |boolean|
|android.content.IContentService$Stub| |setMasterSyncAutomatically| |boolean|
|android.content.ContentResolver| |setMasterSyncAutomaticallyAsUser| |boolean,int|
|android.content.IContentService| |setMasterSyncAutomatically| |boolean|
|android.app.ContextImpl$ApplicationContentResolver| |setMasterSyncAutomaticallyAsUser| |boolean,int|
|android.content.ContentResolver| |setMasterSyncAutomatically| |boolean|
|android.test.mock.MockContentResolver| |setMasterSyncAutomaticallyAsUser| |boolean,int|
|android.app.ContextImpl$ApplicationContentResolver| |setMasterSyncAutomatically| |boolean|
|android.test.mock.MockContentResolver| |setMasterSyncAutomatically| |boolean|
|android.test.SyncBaseInstrumentation| |cancelSyncsandDisableAutoSync| ||
|com.android.server.LocationManagerService| |checkMockPermissionsSafe| ||
|com.android.server.LocationManagerService| |addTestProvider| |java.lang.String,com.android.internal.location.ProviderProperties|
|com.android.server.LocationManagerService| |clearTestProviderEnabled| |java.lang.String|
|com.android.server.LocationManagerService| |clearTestProviderLocation| |java.lang.String|
|com.android.server.LocationManagerService| |clearTestProviderStatus| |java.lang.String|
|com.android.server.LocationManagerService| |removeTestProvider| |java.lang.String|
|com.android.server.LocationManagerService| |setTestProviderEnabled| |java.lang.String,boolean|
|com.android.server.LocationManagerService| |setTestProviderLocation| |java.lang.String,android.location.Location|
|com.android.server.LocationManagerService| |setTestProviderStatus| |java.lang.String,int,android.os.Bundle,long|
|android.location.ILocationManager$Stub$Proxy| |addTestProvider| |java.lang.String,com.android.internal.location.ProviderProperties|
|android.location.ILocationManager$Stub| |addTestProvider| |java.lang.String,com.android.internal.location.ProviderProperties|
|android.location.ILocationManager$Stub$Proxy| |clearTestProviderEnabled| |java.lang.String|
|android.location.ILocationManager$Stub| |clearTestProviderEnabled| |java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |clearTestProviderLocation| |java.lang.String|
|android.location.ILocationManager$Stub| |clearTestProviderLocation| |java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |clearTestProviderStatus| |java.lang.String|
|android.location.ILocationManager$Stub| |clearTestProviderStatus| |java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |removeTestProvider| |java.lang.String|
|android.location.ILocationManager$Stub| |removeTestProvider| |java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |setTestProviderEnabled| |java.lang.String,boolean|
|android.location.ILocationManager$Stub| |setTestProviderEnabled| |java.lang.String,boolean|
|android.location.ILocationManager$Stub$Proxy| |setTestProviderLocation| |java.lang.String,android.location.Location|
|android.location.ILocationManager$Stub| |setTestProviderLocation| |java.lang.String,android.location.Location|
|android.location.ILocationManager$Stub$Proxy| |setTestProviderStatus| |java.lang.String,int,android.os.Bundle,long|
|android.location.ILocationManager$Stub| |setTestProviderStatus| |java.lang.String,int,android.os.Bundle,long|
|android.location.ILocationManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.location.ILocationManager| |addTestProvider| |java.lang.String,com.android.internal.location.ProviderProperties|
|android.location.ILocationManager| |clearTestProviderEnabled| |java.lang.String|
|android.location.ILocationManager| |clearTestProviderLocation| |java.lang.String|
|android.location.ILocationManager| |clearTestProviderStatus| |java.lang.String|
|android.location.ILocationManager| |removeTestProvider| |java.lang.String|
|android.location.ILocationManager| |setTestProviderEnabled| |java.lang.String,boolean|
|android.location.ILocationManager| |setTestProviderLocation| |java.lang.String,android.location.Location|
|android.location.ILocationManager| |setTestProviderStatus| |java.lang.String,int,android.os.Bundle,long|
|com.android.server.LocationManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.location.LocationManager| |addTestProvider| |java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int|
|android.location.LocationManager| |clearTestProviderEnabled| |java.lang.String|
|android.location.LocationManager| |clearTestProviderLocation| |java.lang.String|
|android.location.LocationManager| |clearTestProviderStatus| |java.lang.String|
|android.location.LocationManager| |removeTestProvider| |java.lang.String|
|android.location.LocationManager| |setTestProviderEnabled| |java.lang.String,boolean|
|android.location.LocationManager| |setTestProviderLocation| |java.lang.String,android.location.Location|
|android.location.LocationManager| |setTestProviderStatus| |java.lang.String,int,android.os.Bundle,long|
|com.android.server.statusbar.StatusBarManagerService| |enforceExpandStatusBar| ||
|com.android.server.statusbar.StatusBarManagerService| |collapsePanels| ||
|com.android.server.statusbar.StatusBarManagerService| |expandNotificationsPanel| ||
|com.android.server.statusbar.StatusBarManagerService| |expandSettingsPanel| ||
|com.android.internal.statusbar.IStatusBarService$Stub$Proxy| |collapsePanels| ||
|com.android.internal.statusbar.IStatusBarService$Stub| |collapsePanels| ||
|com.android.internal.statusbar.IStatusBarService$Stub$Proxy| |expandNotificationsPanel| ||
|com.android.internal.statusbar.IStatusBarService$Stub| |expandNotificationsPanel| ||
|com.android.internal.statusbar.IStatusBarService$Stub$Proxy| |expandSettingsPanel| ||
|com.android.internal.statusbar.IStatusBarService$Stub| |expandSettingsPanel| ||
|com.android.internal.statusbar.IStatusBarService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.statusbar.IStatusBarService| |collapsePanels| ||
|com.android.internal.statusbar.IStatusBarService| |expandNotificationsPanel| ||
|com.android.internal.statusbar.IStatusBarService| |expandSettingsPanel| ||
|com.android.server.statusbar.StatusBarManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.StatusBarManager| |collapsePanels| ||
|android.app.StatusBarManager| |expandNotificationsPanel| ||
|android.app.StatusBarManager| |expandSettingsPanel| ||
|com.android.server.sip.SipService| |getListOfProfiles| ||
|android.net.sip.ISipService$Stub$Proxy| |getListOfProfiles| ||
|android.net.sip.ISipService$Stub| |getListOfProfiles| ||
|android.net.sip.ISipService| |getListOfProfiles| ||
|android.net.sip.ISipService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.sip.SipManager| |getListOfProfiles| ||
|com.android.server.sip.SipService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.sip.SipService| |open| |android.net.sip.SipProfile|
|android.net.sip.ISipService$Stub$Proxy| |open| |android.net.sip.SipProfile|
|android.net.sip.ISipService$Stub| |open| |android.net.sip.SipProfile|
|android.net.sip.ISipService| |open| |android.net.sip.SipProfile|
|android.net.sip.SipManager| |open| |android.net.sip.SipProfile|
|com.android.server.sip.SipService| |open3| |android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener|
|android.net.sip.ISipService$Stub$Proxy| |open3| |android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener|
|android.net.sip.ISipService$Stub| |open3| |android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener|
|android.net.sip.ISipService| |open3| |android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener|
|android.net.sip.SipManager| |open| |android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener|
|com.android.server.sip.SipService| |close| |java.lang.String|
|android.net.sip.ISipService$Stub$Proxy| |close| |java.lang.String|
|android.net.sip.ISipService$Stub| |close| |java.lang.String|
|android.net.sip.ISipService| |close| |java.lang.String|
|android.net.sip.SipManager| |close| |java.lang.String|
|com.android.server.sip.SipService| |isOpened| |java.lang.String|
|android.net.sip.ISipService$Stub$Proxy| |isOpened| |java.lang.String|
|android.net.sip.ISipService$Stub| |isOpened| |java.lang.String|
|android.net.sip.ISipService| |isOpened| |java.lang.String|
|android.net.sip.SipManager| |isOpened| |java.lang.String|
|com.android.server.sip.SipService| |isRegistered| |java.lang.String|
|android.net.sip.ISipService$Stub$Proxy| |isRegistered| |java.lang.String|
|android.net.sip.ISipService$Stub| |isRegistered| |java.lang.String|
|android.net.sip.ISipService| |isRegistered| |java.lang.String|
|android.net.sip.SipManager| |isRegistered| |java.lang.String|
|com.android.server.sip.SipService| |setRegistrationListener| |java.lang.String,android.net.sip.ISipSessionListener|
|android.net.sip.ISipService$Stub$Proxy| |setRegistrationListener| |java.lang.String,android.net.sip.ISipSessionListener|
|android.net.sip.ISipService$Stub| |setRegistrationListener| |java.lang.String,android.net.sip.ISipSessionListener|
|android.net.sip.ISipService| |setRegistrationListener| |java.lang.String,android.net.sip.ISipSessionListener|
|android.net.sip.SipManager| |setRegistrationListener| |java.lang.String,android.net.sip.SipRegistrationListener|
|com.android.server.sip.SipService| |createSession| |android.net.sip.SipProfile,android.net.sip.ISipSessionListener|
|android.net.sip.ISipService$Stub$Proxy| |createSession| |android.net.sip.SipProfile,android.net.sip.ISipSessionListener|
|android.net.sip.ISipService$Stub| |createSession| |android.net.sip.SipProfile,android.net.sip.ISipSessionListener|
|android.net.sip.ISipService| |createSession| |android.net.sip.SipProfile,android.net.sip.ISipSessionListener|
|android.net.sip.SipManager| |createSipSession| |android.net.sip.SipProfile,android.net.sip.SipSession$Listener|
|android.net.sip.SipManager| |register| |android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener|
|android.net.sip.SipManager| |unregister| |android.net.sip.SipProfile,android.net.sip.SipRegistrationListener|
|android.net.sip.SipManager| |makeAudioCall| |android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int|
|android.net.sip.SipManager| |makeAudioCall| |java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int|
|com.android.internal.telephony.sip.SipPhone$SipConnection| |dial| ||
|com.android.internal.telephony.sip.SipPhone$SipCall| |dial| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |dialInternal| |java.lang.String,int|
|com.android.internal.telephony.sip.SipPhone| |dial| |java.lang.String,int|
|com.android.internal.telephony.sip.SipPhoneBase| |dial| |java.lang.String,int|
|com.android.internal.telephony.sip.SipPhoneBase| |dial| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.sip.SipPhone| |dial| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.server.sip.SipService| |getPendingSession| |java.lang.String|
|android.net.sip.ISipService$Stub$Proxy| |getPendingSession| |java.lang.String|
|android.net.sip.ISipService$Stub| |getPendingSession| |java.lang.String|
|android.net.sip.ISipService| |getPendingSession| |java.lang.String|
|android.net.sip.SipManager| |takeAudioCall| |android.content.Intent,android.net.sip.SipAudioCall$Listener|
|android.net.sip.SipManager| |getSessionFor| |android.content.Intent|
|android.provider.CalendarContract$Instances| |query| |android.content.ContentResolver,java.lang.String[],long,long,java.lang.String|
|android.provider.CalendarContract$Reminders| |query| |android.content.ContentResolver,long,java.lang.String[]|
|android.provider.CalendarContract$CalendarAlerts| |rescheduleMissedAlarms| |android.content.ContentResolver,android.content.Context,android.app.AlarmManager|
|android.provider.CalendarContract$CalendarAlerts| |findNextAlarmTime| |android.content.ContentResolver,long|
|android.provider.CalendarContract$Attendees| |query| |android.content.ContentResolver,long,java.lang.String[]|
|android.provider.CalendarContract$EventDays| |query| |android.content.ContentResolver,int,int,java.lang.String[]|
|android.provider.CalendarContract$CalendarAlerts| |alarmExists| |android.content.ContentResolver,long,long,long|
|android.provider.CalendarContract$EventsEntity$EntityIteratorImpl| |getEntityAndIncrementCursor| |android.database.Cursor|
|android.content.CursorEntityIterator| |getEntityAndIncrementCursor| |android.database.Cursor|
|android.content.CursorEntityIterator| |next| ||
|android.content.CursorEntityIterator| |next| ||
|android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl| |next| ||
|android.provider.CalendarContract$EventsEntity$EntityIteratorImpl| |next| ||
|android.provider.ContactsContract$Groups$EntityIteratorImpl| |next| ||
|android.provider.ContactsContract$RawContacts$EntityIteratorImpl| |next| ||
|android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl| |next| ||
|android.provider.CalendarContract$EventsEntity$EntityIteratorImpl| |next| ||
|android.provider.ContactsContract$Groups$EntityIteratorImpl| |next| ||
|android.provider.ContactsContract$RawContacts$EntityIteratorImpl| |next| ||
|android.provider.CalendarContract$Instances| |query| |android.content.ContentResolver,java.lang.String[],long,long|
|com.android.calendar.AgendaWindowAdapter| |buildQueryUri| |int,int|
|com.android.server.wm.WindowManagerService| |disableKeyguard| |android.os.IBinder,java.lang.String|
|android.view.IWindowManager$Stub$Proxy| |disableKeyguard| |android.os.IBinder,java.lang.String|
|android.view.IWindowManager$Stub| |disableKeyguard| |android.os.IBinder,java.lang.String|
|com.android.server.am.ActivityStackSupervisor| |setLockTaskModeLocked| |com.android.server.am.TaskRecord,boolean,java.lang.String|
|android.view.IWindowManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowManager| |disableKeyguard| |android.os.IBinder,java.lang.String|
|com.android.server.wm.WindowManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.KeyguardManager$KeyguardLock| |disableKeyguard| ||
|com.android.server.wm.WindowManagerService| |reenableKeyguard| |android.os.IBinder|
|android.view.IWindowManager$Stub$Proxy| |reenableKeyguard| |android.os.IBinder|
|android.view.IWindowManager$Stub| |reenableKeyguard| |android.os.IBinder|
|com.android.server.am.ActivityStackSupervisor| |endLockTaskModeIfTaskEnding| |com.android.server.am.TaskRecord|
|android.view.IWindowManager| |reenableKeyguard| |android.os.IBinder|
|com.android.server.am.ActivityStack| |moveTaskToBackLocked| |int|
|com.android.server.am.ActivityStack| |removeTask| |com.android.server.am.TaskRecord,java.lang.String|
|android.app.KeyguardManager$KeyguardLock| |reenableKeyguard| ||
|com.android.server.am.ActivityRecord| |setTask| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord|
|com.android.server.am.ActivityStackSupervisor| |moveTaskToStackLocked| |int,int,boolean|
|com.android.server.am.ActivityStack| |resetTargetTaskIfNeededLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.am.ActivityStack| |resetAffinityTaskIfNeededLocked| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int|
|com.android.server.am.ActivityStack| |resetTaskIfNeededLocked| |com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord|
|com.android.server.wm.WindowManagerService| |exitKeyguardSecurely| |android.view.IOnKeyguardExitResult|
|android.view.IWindowManager$Stub$Proxy| |exitKeyguardSecurely| |android.view.IOnKeyguardExitResult|
|android.view.IWindowManager$Stub| |exitKeyguardSecurely| |android.view.IOnKeyguardExitResult|
|android.view.IWindowManager| |exitKeyguardSecurely| |android.view.IOnKeyguardExitResult|
|android.app.KeyguardManager| |exitKeyguardSecurely| |android.app.KeyguardManager$OnKeyguardExitResult|
|com.android.server.wm.WindowManagerService| |dismissKeyguard| ||
|android.view.IWindowManager$Stub$Proxy| |dismissKeyguard| ||
|android.view.IWindowManager$Stub| |dismissKeyguard| ||
|android.view.IWindowManager| |dismissKeyguard| ||
|com.android.server.wm.WindowManagerService| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager$Stub$Proxy| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager$Stub| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wifi.p2p.WifiP2pServiceImpl| |enforceChangePermission| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl| |getMessenger| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl| |getP2pStateMachineMessenger| ||
|android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy| |getMessenger| ||
|android.net.wifi.p2p.IWifiP2pManager$Stub| |getMessenger| ||
|android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy| |getP2pStateMachineMessenger| ||
|android.net.wifi.p2p.IWifiP2pManager$Stub| |getP2pStateMachineMessenger| ||
|com.android.server.wifi.WifiStateMachine$InitialState| |enter| ||
|android.net.wifi.p2p.IWifiP2pManager| |getMessenger| ||
|android.net.wifi.p2p.IWifiP2pManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.p2p.IWifiP2pManager| |getP2pStateMachineMessenger| ||
|com.android.internal.util.State| |enter| ||
|android.net.wifi.p2p.WifiP2pManager| |getMessenger| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.p2p.WifiP2pManager| |getP2pStateMachineMessenger| ||
|android.net.DhcpStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady| |enter| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateStart| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectingState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectionErrorCreatingConnection| |enter| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$DefaultState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$StartupState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$WaitingState| |enter| ||
|com.android.internal.telephony.WakeLockStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.WakeLockStateMachine$WaitingState| |enter| ||
|com.android.internal.util.IState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler$HaltingState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler$QuittingState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler| |invokeEnterMethods| |int|
|com.android.server.connectivity.NetworkMonitor$DefaultState| |enter| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState| |enter| ||
|com.android.server.NsdService$NsdStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pNotSupportedState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$EnabledState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$RequestPendingState| |enter| ||
|com.android.server.wifi.WifiApConfigStore$DefaultState| |enter| ||
|com.android.server.wifi.WifiApConfigStore$InactiveState| |enter| ||
|com.android.server.wifi.WifiController$ApEnabledState| |enter| ||
|com.android.server.wifi.WifiController$DefaultState| |enter| ||
|com.android.server.wifi.WifiController$DeviceInactiveState| |enter| ||
|com.android.server.wifi.WifiStateMachine$ConnectModeState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppingState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SoftApStartedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SupplicantStartingState| |enter| ||
|com.android.server.wifi.WifiStateMachine$TetheredState| |enter| ||
|android.net.wifi.p2p.WifiP2pManager| |initialize| |android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener|
|android.net.wifi.p2p.WifiP2pManager| |initializeInternal| |android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener|
|com.android.internal.util.StateMachine$SmHandler| |performTransitions| |com.android.internal.util.State,android.os.Message|
|com.android.server.display.WifiDisplayController| |<init>| |android.content.Context,android.os.Handler,com.android.server.display.WifiDisplayController$Listener|
|com.android.server.display.WifiDisplayAdapter$1| |run| ||
|com.android.server.wifi.WifiServiceImpl| |enforceChangePermission| ||
|com.android.server.wifi.WifiServiceImpl| |getWifiServiceMessenger| ||
|com.android.server.wifi.WifiServiceImpl| |disableNetwork| |int|
|com.android.server.wifi.WifiServiceImpl| |enableNetwork| |int,boolean|
|com.android.server.wifi.WifiServiceImpl| |removeNetwork| |int|
|com.android.server.wifi.WifiServiceImpl| |requestBatchedScan| |android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource|
|com.android.server.wifi.WifiServiceImpl| |saveConfiguration| ||
|com.android.server.wifi.WifiServiceImpl| |setWifiEnabled| |boolean|
|com.android.server.wifi.WifiServiceImpl| |addOrUpdateNetwork| |android.net.wifi.WifiConfiguration|
|com.android.server.wifi.WifiServiceImpl| |addToBlacklist| |java.lang.String|
|com.android.server.wifi.WifiServiceImpl| |clearBlacklist| ||
|com.android.server.wifi.WifiServiceImpl| |disableEphemeralNetwork| |java.lang.String|
|com.android.server.wifi.WifiServiceImpl| |disconnect| ||
|com.android.server.wifi.WifiServiceImpl| |pollBatchedScan| ||
|com.android.server.wifi.WifiServiceImpl| |reassociate| ||
|com.android.server.wifi.WifiServiceImpl| |reconnect| ||
|com.android.server.wifi.WifiServiceImpl| |setFrequencyBand| |int,boolean|
|com.android.server.wifi.WifiServiceImpl| |setWifiApConfiguration| |android.net.wifi.WifiConfiguration|
|com.android.server.wifi.WifiServiceImpl| |setWifiApEnabled| |android.net.wifi.WifiConfiguration,boolean|
|com.android.server.wifi.WifiServiceImpl| |startLocationRestrictedScan| |android.os.WorkSource|
|com.android.server.wifi.WifiServiceImpl| |startScan| |android.net.wifi.ScanSettings,android.os.WorkSource|
|com.android.server.wifi.WifiServiceImpl| |stopBatchedScan| |android.net.wifi.BatchedScanSettings|
|android.net.wifi.IWifiManager$Stub$Proxy| |getWifiServiceMessenger| ||
|android.net.wifi.IWifiManager$Stub| |getWifiServiceMessenger| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |disableNetwork| |int|
|android.net.wifi.IWifiManager$Stub| |disableNetwork| |int|
|android.net.wifi.IWifiManager$Stub$Proxy| |enableNetwork| |int,boolean|
|android.net.wifi.IWifiManager$Stub| |enableNetwork| |int,boolean|
|android.net.wifi.IWifiManager$Stub$Proxy| |removeNetwork| |int|
|android.net.wifi.IWifiManager$Stub| |removeNetwork| |int|
|android.net.wifi.IWifiManager$Stub$Proxy| |requestBatchedScan| |android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub| |requestBatchedScan| |android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub$Proxy| |saveConfiguration| ||
|android.net.wifi.IWifiManager$Stub| |saveConfiguration| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |setWifiEnabled| |boolean|
|android.net.wifi.IWifiManager$Stub| |setWifiEnabled| |boolean|
|com.android.server.wifi.WifiServiceImpl| |checkAndStartWifi| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |addOrUpdateNetwork| |android.net.wifi.WifiConfiguration|
|android.net.wifi.IWifiManager$Stub| |addOrUpdateNetwork| |android.net.wifi.WifiConfiguration|
|android.net.wifi.IWifiManager$Stub$Proxy| |addToBlacklist| |java.lang.String|
|android.net.wifi.IWifiManager$Stub| |addToBlacklist| |java.lang.String|
|android.net.wifi.IWifiManager$Stub$Proxy| |clearBlacklist| ||
|android.net.wifi.IWifiManager$Stub| |clearBlacklist| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |disableEphemeralNetwork| |java.lang.String|
|android.net.wifi.IWifiManager$Stub| |disableEphemeralNetwork| |java.lang.String|
|android.net.wifi.IWifiManager$Stub$Proxy| |disconnect| ||
|android.net.wifi.IWifiManager$Stub| |disconnect| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |pollBatchedScan| ||
|android.net.wifi.IWifiManager$Stub| |pollBatchedScan| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |reassociate| ||
|android.net.wifi.IWifiManager$Stub| |reassociate| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |reconnect| ||
|android.net.wifi.IWifiManager$Stub| |reconnect| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |setFrequencyBand| |int,boolean|
|android.net.wifi.IWifiManager$Stub| |setFrequencyBand| |int,boolean|
|android.net.wifi.IWifiManager$Stub$Proxy| |setWifiApConfiguration| |android.net.wifi.WifiConfiguration|
|android.net.wifi.IWifiManager$Stub| |setWifiApConfiguration| |android.net.wifi.WifiConfiguration|
|android.net.wifi.IWifiManager$Stub$Proxy| |setWifiApEnabled| |android.net.wifi.WifiConfiguration,boolean|
|android.net.wifi.IWifiManager$Stub| |setWifiApEnabled| |android.net.wifi.WifiConfiguration,boolean|
|android.net.wifi.IWifiManager$Stub$Proxy| |startLocationRestrictedScan| |android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub| |startLocationRestrictedScan| |android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub$Proxy| |startScan| |android.net.wifi.ScanSettings,android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub| |startScan| |android.net.wifi.ScanSettings,android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub$Proxy| |stopBatchedScan| |android.net.wifi.BatchedScanSettings|
|android.net.wifi.IWifiManager$Stub| |stopBatchedScan| |android.net.wifi.BatchedScanSettings|
|android.net.wifi.IWifiManager| |getWifiServiceMessenger| ||
|android.net.wifi.IWifiManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.IWifiManager| |disableNetwork| |int|
|android.net.wifi.IWifiManager| |enableNetwork| |int,boolean|
|android.net.wifi.IWifiManager| |removeNetwork| |int|
|android.net.wifi.IWifiManager| |requestBatchedScan| |android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource|
|android.net.wifi.IWifiManager| |saveConfiguration| ||
|android.net.wifi.IWifiManager| |setWifiEnabled| |boolean|
|com.android.server.wifi.WifiService| |onBootPhase| |int|
|android.net.wifi.IWifiManager| |addOrUpdateNetwork| |android.net.wifi.WifiConfiguration|
|android.net.wifi.IWifiManager| |addToBlacklist| |java.lang.String|
|android.net.wifi.IWifiManager| |clearBlacklist| ||
|android.net.wifi.IWifiManager| |disableEphemeralNetwork| |java.lang.String|
|android.net.wifi.IWifiManager| |disconnect| ||
|android.net.wifi.IWifiManager| |pollBatchedScan| ||
|android.net.wifi.IWifiManager| |reassociate| ||
|android.net.wifi.IWifiManager| |reconnect| ||
|android.net.wifi.IWifiManager| |setFrequencyBand| |int,boolean|
|android.net.wifi.IWifiManager| |setWifiApConfiguration| |android.net.wifi.WifiConfiguration|
|android.net.wifi.IWifiManager| |setWifiApEnabled| |android.net.wifi.WifiConfiguration,boolean|
|android.net.wifi.IWifiManager| |startLocationRestrictedScan| |android.os.WorkSource|
|android.net.wifi.IWifiManager| |startScan| |android.net.wifi.ScanSettings,android.os.WorkSource|
|android.net.wifi.IWifiManager| |stopBatchedScan| |android.net.wifi.BatchedScanSettings|
|android.net.wifi.WifiManager| |getWifiServiceMessenger| ||
|com.android.server.wifi.WifiServiceImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.WifiManager| |disableNetwork| |int|
|android.net.wifi.WifiManager| |enableNetwork| |int,boolean|
|android.net.wifi.WifiManager| |removeNetwork| |int|
|android.net.wifi.WifiManager| |requestBatchedScan| |android.net.wifi.BatchedScanSettings,android.os.WorkSource|
|android.net.wifi.WifiManager| |requestBatchedScan| |android.net.wifi.BatchedScanSettings|
|android.net.wifi.WifiManager| |saveConfiguration| ||
|android.net.wifi.WifiManager| |setWifiEnabled| |boolean|
|com.android.commands.svc.WifiCommand| |run| |java.lang.String[]|
|com.android.server.SystemService| |onBootPhase| |int|
|android.net.wifi.WifiManager| |addOrUpdateNetwork| |android.net.wifi.WifiConfiguration|
|android.net.wifi.WifiManager| |addToBlacklist| |java.lang.String|
|android.net.wifi.WifiManager| |clearBlacklist| ||
|android.net.wifi.WifiManager| |disableEphemeralNetwork| |java.lang.String|
|android.net.wifi.WifiManager| |disconnect| ||
|android.net.wifi.WifiManager| |pollBatchedScan| ||
|android.net.wifi.WifiManager| |reassociate| ||
|android.net.wifi.WifiManager| |reconnect| ||
|android.net.wifi.WifiManager| |setFrequencyBand| |int,boolean|
|android.net.wifi.WifiManager| |setWifiApConfiguration| |android.net.wifi.WifiConfiguration|
|android.net.wifi.WifiManager| |setWifiApEnabled| |android.net.wifi.WifiConfiguration,boolean|
|android.net.wifi.WifiManager| |startLocationRestrictedScan| |android.os.WorkSource|
|android.net.wifi.WifiManager| |startCustomizedScan| |android.net.wifi.ScanSettings,android.os.WorkSource|
|android.net.wifi.WifiManager| |startCustomizedScan| |android.net.wifi.ScanSettings|
|android.net.wifi.WifiManager| |startScan| |android.os.WorkSource|
|android.net.wifi.WifiManager| |startScan| ||
|android.net.wifi.WifiManager| |stopBatchedScan| |android.net.wifi.BatchedScanSettings|
|android.net.wifi.WifiManager| |init| ||
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |onClick| |android.view.View|
|com.android.commands.svc.Svc$Command| |run| |java.lang.String[]|
|com.android.server.AlarmManagerService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.fingerprint.FingerprintService| |onBootPhase| |int|
|com.android.server.lights.LightsService| |onBootPhase| |int|
|com.android.server.media.MediaSessionService| |onBootPhase| |int|
|com.android.server.media.projection.MediaProjectionManagerService| |onBootPhase| |int|
|com.android.server.MmsServiceBroker| |onBootPhase| |int|
|com.android.server.PersistentDataBlockService| |onBootPhase| |int|
|com.android.server.pm.Installer| |onBootPhase| |int|
|com.android.server.pm.LauncherAppsService| |onBootPhase| |int|
|com.android.server.print.PrintManagerService| |onBootPhase| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onBootPhase| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onBootPhase| |int|
|com.android.server.SystemServiceManager| |startBootPhase| |int|
|com.android.server.twilight.TwilightService| |onBootPhase| |int|
|com.android.server.usage.UsageStatsService| |onBootPhase| |int|
|com.android.server.webkit.WebViewUpdateService| |onBootPhase| |int|
|android.net.wifi.WifiManager| |addNetwork| |android.net.wifi.WifiConfiguration|
|android.net.wifi.WifiManager| |updateNetwork| |android.net.wifi.WifiConfiguration|
|android.net.wifi.WifiManager| |<init>| |android.content.Context,android.net.wifi.IWifiManager|
|com.android.commands.svc.Svc| |main| |java.lang.String[]|
|com.android.server.am.ActivityManagerService| |finishBooting| ||
|com.android.server.SystemServer$2| |run| ||
|com.android.server.SystemServer| |startBootstrapServices| ||
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |doConnect| |android.net.wifi.WifiManager|
|com.android.server.am.ActivityManagerService| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |ensureBootCompleted| ||
|com.android.server.SystemServer| |run| ||
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |access$300| |com.android.nfc.ConfirmConnectToWifiNetworkActivity,android.net.wifi.WifiManager|
|android.app.ActivityManagerNative| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |appNotResponding| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |systemReady| |java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |crashApplication| |com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.nfc.ConfirmConnectToWifiNetworkActivity$3| |onReceive| |android.content.Context,android.content.Intent|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |bootAnimationComplete| ||
|com.android.server.am.ActiveServices| |serviceTimeout| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService$10| |run| ||
|com.android.server.am.BroadcastQueue$AppNotResponding| |run| ||
|com.android.server.am.ActivityManagerService$14| |run| ||
|com.android.server.am.ActivityManagerService| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrashInner| |java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.wm.WindowManagerService| |performEnableScreen| ||
|android.app.ActivityManagerNative| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener$NativeCrashReporter| |run| ||
|com.android.server.wm.WindowManagerService| |enableScreenAfterBoot| ||
|com.android.server.wm.WindowManagerService| |performBootTimeout| ||
|com.android.server.wm.WindowManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeededLocked| ||
|com.android.server.wm.WindowManagerService| |checkBootAnimationCompleteLocked| ||
|android.app.IActivityManager| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |consumeNativeCrashData| |java.io.FileDescriptor|
|com.android.server.am.ActivityManagerService| |enableScreenAfterBoot| ||
|com.android.server.am.ActivityManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedInner| |boolean|
|com.android.server.wm.WindowStateAnimator| |performShowLocked| ||
|com.android.server.wm.WindowStateAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$1100| |com.android.server.wm.WindowManagerService|
|com.android.internal.os.RuntimeInit| |wtf| |java.lang.String,java.lang.Throwable,boolean|
|android.app.IActivityManager| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |run| ||
|android.app.ActivityManagerNative| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub$Proxy| |enableScreenIfNeeded| ||
|android.view.IWindowManager$Stub| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedLoop| ||
|com.android.server.wm.AppWindowAnimator| |showAllWindowsLocked| ||
|com.android.server.wm.WindowAnimator| |updateWindowsLocked| |int|
|com.android.server.wm.WindowStateAnimator| |commitFinishDrawingLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean|
|com.android.server.wm.WindowState| |setAppOpVisibilityLw| |boolean|
|android.util.Log$1| |onTerribleFailure| |java.lang.String,android.util.Log$TerribleFailure,boolean|
|com.android.internal.os.RuntimeInit$UncaughtHandler| |uncaughtException| |java.lang.Thread,java.lang.Throwable|
|com.android.server.am.ActivityManagerService| |startObservingNativeCrashes| ||
|android.app.IActivityManager| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowManager| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLocked| ||
|com.android.server.wm.WindowAnimator| |testTokenMayBeDrawnLocked| |int|
|com.android.server.wm.WindowManagerService| |handleAppTransitionReadyLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowAnimator| |animateLocked| ||
|android.view.WindowManagerPolicy$WindowState| |hideLw| |boolean|
|com.android.server.wm.DisplayContent| |switchUserStacks| |int|
|com.android.server.wm.WindowManagerService| |updateAppOpsState| ||
|com.android.server.pm.PackageManagerService| |performBootDexOpt| |android.content.pm.PackageParser$Package,int,int|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| ||
|com.android.server.wm.WindowManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.policy.impl.PhoneWindowManager| |finishScreenTurningOn| ||
|com.android.server.wm.WindowManagerService| |computeNewConfiguration| ||
|com.android.server.wm.WindowManagerService| |setTokenVisibilityLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$400| |com.android.server.wm.WindowManagerService|
|com.android.server.wm.WindowManagerService| |addTask| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |moveStackWindowsLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reconfigureDisplayLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.WindowManagerService| |removeWindowInnerLocked| |com.android.server.wm.Session,com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |resizeStack| |int,android.graphics.Rect|
|com.android.server.wm.WindowManagerService| |setCurrentUser| |int,int[]|
|com.android.server.wm.WindowManagerService| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |setUniverseTransformLocked| |com.android.server.wm.WindowState,float,float,float,float,float,float,float|
|com.android.server.wm.WindowManagerService| |unsetAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken,boolean,boolean|
|com.android.server.wm.WindowAnimator| |access$000| |com.android.server.wm.WindowAnimator|
|com.android.internal.policy.impl.BarController| |setBarShowingLw| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |finishPostLayoutPolicyLw| ||
|com.android.internal.policy.impl.PhoneWindowManager| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|com.android.server.wm.WindowManagerService$5| |onOpChanged| |int,java.lang.String|
|android.content.pm.IPackageManager$Stub$Proxy| |performBootDexOpt| ||
|android.content.pm.IPackageManager$Stub| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishKeyguardDrawn| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishWindowsDrawn| ||
|com.android.server.am.ActivityManagerService| |updateConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |prepareAppTransition| |int,boolean|
|com.android.server.wm.WindowManagerService| |updateRotationUncheckedLocked| |boolean|
|com.android.server.wm.WindowManagerService| |makeWindowFreezingScreenIfNeededLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |requestTraversalLocked| ||
|com.android.server.am.ActivityStackSupervisor| |moveTaskToStackLocked| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |setForcedDisplayDensityLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.WindowManagerService| |setForcedDisplaySizeLocked| |com.android.server.wm.DisplayContent,int,int|
|com.android.server.wm.WindowManagerService| |setOverscanLocked| |com.android.server.wm.DisplayContent,int,int,int,int|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.TaskStack| |detachDisplay| ||
|android.view.IWindowManager$Stub$Proxy| |setNewConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |updateConfigurationLocked| |android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean|
|com.android.server.wm.WindowManagerService| |startAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken|
|com.android.server.wm.WindowAnimator$1| |run| ||
|com.android.internal.policy.impl.BarController| |checkHiddenLw| ||
|com.android.internal.policy.impl.BarController| |adjustSystemUiVisibilityLw| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |beginLayoutLw| |boolean,int,int,int|
|android.view.WindowManagerPolicy| |finishPostLayoutPolicyLw| ||
|android.view.WindowManagerPolicy| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|android.content.pm.IPackageManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$300| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$400| |com.android.internal.policy.impl.PhoneWindowManager|
|android.app.ActivityManagerNative| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub$Proxy| |prepareAppTransition| |int,boolean|
|android.view.IWindowManager$Stub| |prepareAppTransition| |int,boolean|
|com.android.server.am.ActivityManagerService| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStack| |moveTaskToBackLocked| |int|
|com.android.server.am.ActivityStack| |moveTaskToFrontLocked| |com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle,java.lang.String|
|com.android.server.am.ActivityStack| |updateTransitLocked| |int,android.os.Bundle|
|com.android.server.wm.WindowManagerService| |resumeRotationLocked| ||
|com.android.server.wm.WindowManagerService| |stopFreezingDisplayLocked| ||
|com.android.server.wm.WindowManagerService| |updateResizingWindows| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |createSurfaceLocked| ||
|com.android.server.wm.WindowManagerService$LocalService| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.wm.WindowManagerService| |handleDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayChangedLocked| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayRemovedLocked| |int|
|com.android.server.wm.WindowManagerService| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |requestTraversal| ||
|com.android.server.wm.WindowManagerService| |setAppFullscreen| |android.os.IBinder,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$9| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |clearClearableFlagsLw| ||
|com.android.server.wm.WindowManagerService| |detachStackLocked| |com.android.server.wm.DisplayContent,com.android.server.wm.TaskStack|
|android.view.IWindowManager| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |retrieveSettings| ||
|com.android.server.wm.WindowManagerService| |updateOrientationFromAppTokensLocked| |android.content.res.Configuration,android.os.IBinder|
|com.android.internal.policy.impl.PhoneWindowManager| |adjustSystemUiVisibilityLw| |int|
|android.view.WindowManagerPolicy| |beginLayoutLw| |boolean,int,int,int|
|com.android.server.pm.PackageManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.WindowManagerPolicy| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |systemBooted| ||
|com.android.internal.policy.impl.PhoneWindowManager$1| |run| ||
|android.app.IActivityManager| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager| |prepareAppTransition| |int,boolean|
|android.app.ActivityManagerNative| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |findTaskToMoveToFrontLocked| |com.android.server.am.TaskRecord,int,android.os.Bundle,java.lang.String|
|com.android.server.wm.DragState| |unregister| ||
|com.android.server.wm.WindowManagerService| |access$500| |com.android.server.wm.WindowManagerService|
|android.view.WindowManagerInternal| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay| |<init>| |com.android.server.am.ActivityStackSupervisor,int,int,int|
|com.android.server.wm.WindowManagerService| |onDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |access$1000| |com.android.server.wm.WindowManagerService,int|
|com.android.server.wm.WindowManagerService| |access$900| |com.android.server.wm.WindowManagerService,int|
|android.view.IWindowManager$Stub$Proxy| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager$Stub| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService$LocalService| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemBarsLw| |android.view.WindowManagerPolicy$WindowState,int,int|
|com.android.server.wm.DisplayContent| |checkForDeferredActions| ||
|com.android.server.wm.WindowManagerService| |detachStack| |int|
|android.view.WindowManagerPolicy| |adjustSystemUiVisibilityLw| |int|
|com.android.server.wm.WindowManagerService| |performLayoutLockedInner| |com.android.server.wm.DisplayContent,boolean,boolean|
|com.android.server.power.Notifier$2| |run| ||
|android.view.WindowManagerPolicy| |systemBooted| ||
|com.android.internal.app.LocalePicker| |updateLocale| |java.util.Locale|
|com.android.internal.telephony.MccTable| |setSystemLocale| |android.content.Context,java.lang.String,java.lang.String|
|com.android.internal.telephony.MccTable| |updateMccMncConfiguration| |android.content.Context,java.lang.String,boolean|
|com.android.server.MountService| |copyLocaleFromMountService| ||
|com.android.server.UiModeManagerService| |sendConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |displayReady| ||
|com.android.server.wm.WindowManagerService| |sendNewConfiguration| ||
|android.app.IActivityManager| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |setLockTaskModeLocked| |com.android.server.am.TaskRecord,boolean,java.lang.String|
|com.android.server.wm.DragState| |endDragLw| ||
|com.android.server.wm.Session| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.WindowManagerService| |prepareDragSurface| |android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface|
|com.android.server.wm.WindowManagerService| |startFreezingScreen| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |setSurfaceLocked| |android.view.Surface,int,int,int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayAddedLocked| |int|
|com.android.server.wm.WindowManagerService| |onDisplayChanged| |int|
|com.android.server.wm.WindowManagerService| |onDisplayRemoved| |int|
|android.view.IWindowManager| |keyguardGoingAway| |boolean,boolean|
|android.view.WindowManagerInternal| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemUiVisibilityLw| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |detachLocked| ||
|com.android.server.wm.WindowManagerService| |statusBarVisibilityChanged| |int|
|com.android.server.wm.WindowManagerService| |updateFocusedWindowLocked| |int,boolean|
|com.android.internal.telephony.PhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |setLocaleFromCsim| ||
|com.android.internal.telephony.uicc.SIMRecords| |setLocaleFromUsim| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setProperties| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.PhoneFactory| |setDefaultSubscription| |int|
|com.android.internal.telephony.ServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |setDefaultFallbackSubId| |int|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLoaded| |int|
|com.android.server.MountService| |access$2000| |com.android.server.MountService|
|com.android.server.UiModeManagerService| |sendConfigurationAndStartDreamOrDockAppLocked| |java.lang.String|
|com.android.server.wm.WindowManagerService$DragInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|android.view.IWindowSession$Stub$Proxy| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.Session| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager$Stub$Proxy| |startFreezingScreen| |int,int|
|android.view.IWindowManager$Stub| |startFreezingScreen| |int,int|
|android.view.WindowManagerPolicy| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |onDisplayAdded| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayChangedLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayRemovedLocked| |int|
|com.android.server.display.DisplayManagerService| |scheduleTraversalLocked| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1900| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |requestTransientBars| |android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |detachLocked| ||
|android.view.IWindowManager$Stub$Proxy| |statusBarVisibilityChanged| |int|
|android.view.IWindowManager$Stub| |statusBarVisibilityChanged| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.gsm.GSMPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.sip.SipPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionInfoUpdater$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.MountService$3| |run| ||
|com.android.server.UiModeManagerService| |updateAfterBroadcastLocked| |java.lang.String,int,int|
|com.android.server.UiModeManagerService| |updateLocked| |int,int|
|android.view.IWindowSession| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession$Stub$Proxy| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowSession$Stub| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager| |startFreezingScreen| |int,int|
|com.android.server.display.DisplayPowerController| |setScreenState| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayRemoved| |int|
|com.android.server.display.DisplayManagerService| |access$1600| |com.android.server.display.DisplayManagerService,boolean|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAddedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceChanged| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemovedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |requestGlobalDisplayStateInternal| |int|
|com.android.server.display.DisplayManagerService| |setDisplayInfoOverrideFromWindowManagerInternal| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |setDisplayPropertiesInternal| |int,boolean,float,boolean|
|com.android.server.display.DisplayManagerService| |windowManagerAndInputReady| ||
|com.android.internal.policy.impl.PhoneWindowManager$17| |onReceive| |android.content.Context,android.content.Intent|
|android.view.WindowManagerPolicy| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1700| |com.android.internal.policy.impl.PhoneWindowManager,android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTaskListEmptyLocked| ||
|android.view.IWindowManager| |statusBarVisibilityChanged| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.uicc.IccRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.RuimRecords| |onRecordLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onRecordLoaded| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |addSubInfoRecord| |java.lang.String,int|
|com.android.server.MountService| |onDaemonConnected| ||
|com.android.server.UiModeManagerService| |access$000| |com.android.server.UiModeManagerService,java.lang.String,int,int|
|com.android.server.UiModeManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |updateDockState| |int|
|com.android.server.UiModeManagerService| |updateTwilight| ||
|android.view.View| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.wm.Session| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|com.android.server.display.DisplayPowerController| |animateScreenStateChange| |int,boolean|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |createVirtualDisplayInternal| |android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAdded| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$1400| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemoved| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |releaseVirtualDisplayInternal| |android.os.IBinder|
|com.android.server.display.DisplayManagerService| |access$3700| |com.android.server.display.DisplayManagerService,int|
|com.android.server.display.DisplayManagerService| |access$4100| |com.android.server.display.DisplayManagerService,int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |access$4300| |com.android.server.display.DisplayManagerService,int,boolean,float,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$18| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromRight| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromTop| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTaskListEmptyLocked| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.uicc.IccRecords| |onRecordLoaded| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollState| ||
|com.android.internal.telephony.ISub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.INativeDaemonConnectorCallbacks| |onDaemonConnected| ||
|com.android.server.UiModeManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |access$100| |com.android.server.UiModeManagerService,int|
|com.android.server.UiModeManagerService$4| |onTwilightStateChanged| ||
|android.app.ActivityView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.FragmentBreadCrumbs| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.MediaRouteButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.NativeActivity$NativeContentView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.SearchDialog$SearchBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.appwidget.AppWidgetHostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.filterfw.core.FilterSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.gesture.GestureOverlayView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.KeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLineBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.TtmlRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView$3| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$CueLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$RegionLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$SpanLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.opengl.GLSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.preference.PreferenceFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSTextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.GhostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.LayoutInflater$BlinkLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.SurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.TextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewOverlay$OverlayViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewStub| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.webkit.WebView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsoluteLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSpinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuPresenter$OverflowMenuButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActivityChooserView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AnalogClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AppSecurityPermissions$PermissionItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Button| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarViewLegacyDelegate$WeekView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckedTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Chronometer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CompoundButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DatePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DateTimeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DayPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DialerFilter| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DigitalClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$HandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$InsertionHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionEndHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionStartHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.EditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ExpandableListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.FrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Gallery| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.HorizontalScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.LinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListPopupWindow$DropDownListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MediaController| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MultiAutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker$CustomEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.PopupWindow$PopupViewContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.QuickContactBadge| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadialTimePickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RatingBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RelativeLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView$SearchAutoComplete| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SimpleMonthView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SlidingDrawer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Space| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Spinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView$StackFrame| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Switch| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabHost| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableRow| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextViewWithCircularIndicator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TimePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ToggleButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Toolbar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TwoLineListItem| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.VideoView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.YearPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButtonsController$Container| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomControls| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.AlertController$RecycleListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.PlatLogoActivity$1| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.RecentApplicationsBackground| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ActionMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ExpandedMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ListMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AbsActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccessibleDateAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccountItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarOverlayLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView$HomeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.DialogTitle| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.FaceUnlockView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LockPatternView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PasswordEntryKeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PointerLocationView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PreferenceImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ResolverDrawerLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.RotarySelector| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView$TabView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SizeAdaptiveLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SlidingTab| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SubtitleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SwipeDismissLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.TextProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WaveView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WeightedLinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.display.DisplayPowerController| |updatePowerState| ||
|com.android.server.display.DisplayAdapter$Listener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |access$3200| |com.android.server.display.DisplayManagerService,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |access$1300| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayManagerService| |access$1500| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$3500| |com.android.server.display.DisplayManagerService,android.os.IBinder|
|com.android.server.display.DisplayManagerService$LocalService$1| |requestDisplayState| |int|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromRight| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromTop| ||
|com.android.server.am.ActivityStack| |finishAllActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |removeTask| |com.android.server.am.TaskRecord,java.lang.String|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |release| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.PhoneFactory| |getGsmPhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhone| |android.content.Context|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.ServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.ServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.gsm.GSMPhone| |setOperatorBrandOverride| |java.lang.String|
|android.telephony.SubscriptionManager| |addSubscriptionInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.NativeDaemonConnector| |listenToSocket| ||
|com.android.server.UiModeManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.twilight.TwilightListener| |onTwilightStateChanged| ||
|android.widget.Editor| |performLongClick| |boolean|
|com.android.server.display.DisplayPowerController| |access$400| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |debounceProximitySensor| ||
|com.android.server.display.DisplayAdapter$2| |run| ||
|com.android.server.display.DisplayAdapter$Listener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayBlanker| |requestDisplayState| |int|
|android.hardware.display.DisplayManagerInternal| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|android.hardware.display.DisplayManagerInternal| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener| |onPointerEvent| |android.view.MotionEvent|
|com.android.server.am.ActivityRecord| |setTask| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord|
|android.app.IActivityContainer$Stub$Proxy| |release| ||
|android.app.IActivityContainer$Stub| |release| ||
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |release| ||
|com.android.internal.telephony.PhoneFactory| |getCdmaPhone| |int|
|com.android.internal.telephony.PhoneProxy| |deleteAndCreatePhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhones| |android.content.Context|
|com.android.internal.telephony.imsphone.ImsPhoneFactory| |makePhone| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.sip.SipPhoneFactory| |makePhone| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.PhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |updateSubscriptionInfoByIccId| ||
|com.android.server.NativeDaemonConnector| |run| ||
|com.android.server.twilight.TwilightService$TwilightListenerRecord| |run| ||
|android.widget.TextView| |performLongClick| ||
|com.android.server.display.DisplayPowerController$ScreenOnUnblocker| |onScreenOn| ||
|com.android.server.display.DisplayPowerController| |sendUpdatePowerStateLocked| ||
|com.android.server.display.DisplayPowerController| |access$500| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |handleProximitySensorEvent| |long,boolean|
|com.android.server.display.DisplayAdapter$1| |run| ||
|com.android.server.display.DisplayPowerState$PhotonicModulator| |requestDisplayState| |int|
|com.android.server.wm.WindowManagerService| |computeScreenConfigurationLocked| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |newDisplayContentLocked| |android.view.Display|
|com.android.server.am.ActivityStack| |resetTargetTaskIfNeededLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.am.ActivityStack| |resetAffinityTaskIfNeededLocked| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int|
|android.app.IActivityContainer$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityContainer| |release| ||
|com.android.internal.telephony.PhoneProxy| |phoneObjectUpdater| |int|
|com.android.internal.telephony.PhoneFactory| |makeImsPhone| |com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.PhoneFactory| |makeSipPhone| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.Phone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.Phone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimAbsent| |int|
|android.inputmethodservice.ExtractButton| |performLongClick| ||
|android.inputmethodservice.ExtractEditText| |performLongClick| ||
|android.media.ClosedCaptionWidget$CCLineBox| |performLongClick| ||
|android.widget.AutoCompleteTextView| |performLongClick| ||
|android.widget.Button| |performLongClick| ||
|android.widget.CheckBox| |performLongClick| ||
|android.widget.CheckedTextView| |performLongClick| ||
|android.widget.Chronometer| |performLongClick| ||
|android.widget.CompoundButton| |performLongClick| ||
|android.widget.DateTimeView| |performLongClick| ||
|android.widget.DigitalClock| |performLongClick| ||
|android.widget.EditText| |performLongClick| ||
|android.widget.MultiAutoCompleteTextView| |performLongClick| ||
|android.widget.NumberPicker$CustomEditText| |performLongClick| ||
|android.widget.RadioButton| |performLongClick| ||
|android.widget.SearchView$SearchAutoComplete| |performLongClick| ||
|android.widget.Switch| |performLongClick| ||
|android.widget.TextClock| |performLongClick| ||
|android.widget.TextViewWithCircularIndicator| |performLongClick| ||
|android.widget.ToggleButton| |performLongClick| ||
|com.android.internal.view.menu.ActionMenuItemView| |performLongClick| ||
|com.android.internal.view.menu.IconMenuItemView| |performLongClick| ||
|com.android.internal.widget.DialogTitle| |performLongClick| ||
|com.android.server.display.DisplayPowerController| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |sendUpdatePowerState| ||
|com.android.server.display.DisplayPowerController| |access$1000| |com.android.server.display.DisplayPowerController,long,boolean|
|com.android.server.display.DisplayPowerState$PhotonicModulator| |run| ||
|com.android.server.wm.WindowManagerService| |computeNewConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |getDisplayContentLocked| |int|
|com.android.server.am.ActivityStack| |resetTaskIfNeededLocked| |com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityView$ActivityContainerWrapper| |release| ||
|com.android.internal.telephony.PhoneProxy| |updatePhoneObject| |int|
|com.android.internal.telephony.PhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.PhoneProxy| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.PhoneProxy| |setOperatorBrandOverride| |java.lang.String|
|com.android.server.display.DisplayManagerService$LocalService| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |access$000| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |updateBrightness| ||
|com.android.server.display.DisplayPowerController$8| |onSensorChanged| |android.hardware.SensorEvent|
|com.android.server.display.DisplayPowerState| |<init>| |com.android.server.display.DisplayBlanker,com.android.server.lights.Light,com.android.server.display.ColorFade|
|com.android.server.wm.WindowAnimator| |getPendingLayoutChanges| |int|
|com.android.server.wm.WindowAnimator| |setPendingLayoutChanges| |int,int|
|com.android.server.wm.WindowAnimator| |updateAppWindowsLocked| |int|
|com.android.server.wm.WindowAnimator| |updateWallpaperLocked| |int|
|com.android.server.wm.WindowManagerService| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayContentLocked| ||
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |int|
|com.android.server.wm.WindowManagerService| |addWindow| |com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.WindowManagerService| |getBaseDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |getInitialDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |createDisplayContentLocked| |android.view.Display|
|com.android.server.wm.WindowManagerService| |displayReady| |int|
|com.android.server.wm.WindowManagerService| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.wm.WindowManagerService| |getInitialDisplaySize| |int,android.graphics.Point|
|android.app.ActivityView$ActivityContainerWrapper| |finalize| ||
|android.app.ActivityView| |release| ||
|com.android.internal.telephony.Phone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateImsPhone| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateImsPhone| ||
|com.android.internal.telephony.gsm.GSMPhone| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhone| |updateImsPhone| ||
|com.android.internal.telephony.PhoneBase$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.sip.SipPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.sip.SipPhone| |updateImsPhone| ||
|android.hardware.display.DisplayManagerInternal| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController$1| |onAnimationEnd| |android.animation.Animator|
|com.android.server.display.DisplayPowerController$2| |onAnimationEnd| ||
|com.android.server.display.DisplayPowerController$3| |run| ||
|com.android.server.display.AutomaticBrightnessController$Callbacks| |updateBrightness| ||
|com.android.server.display.DisplayPowerController| |initialize| ||
|com.android.server.wm.WindowAnimator| |setAppLayoutChanges| |com.android.server.wm.AppWindowAnimator,int,java.lang.String|
|com.android.server.wm.WindowAnimator| |hideWallpapersLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |prepareSurfaceLocked| |boolean|
|com.android.server.wm.WindowStateAnimator| |setSurfaceBoundariesLocked| |boolean|
|android.view.IWindowManager$Stub$Proxy| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|android.view.IWindowManager$Stub| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |screenshotActivities| |com.android.server.am.ActivityRecord|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |populateWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |populateVisibleWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayInfoLocked| ||
|com.android.server.wm.WindowManagerService| |getDefaultWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |adjustWallpaperWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |getOrientationFromAppTokensLocked| ||
|com.android.server.wm.WindowManagerService| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |handleAnimatingStoppedAndTransitionLocked| ||
|com.android.server.wm.WindowManagerService| |createWatermarkInTransaction| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean|
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |saveLastInputMethodWindowForTransition| ||
|com.android.server.wm.WindowManagerService| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.wm.WindowManagerService| |showCircularMask| |boolean|
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlay| ||
|com.android.server.wm.WindowManagerService| |showStrictModeViolation| |int,int|
|com.android.server.wm.WindowManagerService| |startFreezingDisplayLocked| |boolean,int,int|
|com.android.server.wm.WindowManagerService| |updateWallpaperVisibilityLocked| ||
|com.android.server.wm.WindowAnimator| |dumpLocked| |java.io.PrintWriter,java.lang.String,boolean|
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |android.view.Display|
|com.android.server.wm.Session| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.am.ProcessList| |applyDisplaySize| |com.android.server.wm.WindowManagerService|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.internal.telephony.PhoneBase| |updatePhoneObject| |int|
|com.android.server.power.PowerManagerService| |updateDisplayPowerStateLocked| |int|
|com.android.server.display.RampAnimator$Listener| |onAnimationEnd| ||
|com.android.server.display.AutomaticBrightnessController| |updateAutoBrightness| |boolean|
|com.android.server.wm.AppWindowAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowStateAnimator| |destroyDeferredSurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |destroySurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |finishExit| ||
|android.view.IWindowManager| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |startPausingLocked| |boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |handleLaunchTaskBehindCompleteLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.TaskRecord| |getTaskThumbnailLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |recomputeBoundsLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |computeChangedWindows| ||
|com.android.server.wm.WindowManagerService| |applyAnimationLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |checkWaitingForWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.server.wm.WindowManagerService| |moveInputMethodWindowsIfNeededLocked| |boolean|
|com.android.server.wm.WindowManagerService| |findDesiredInputMethodWindowIndexLocked| |boolean|
|com.android.server.wm.WindowManagerService| |getOrientationFromWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |addInputMethodWindowToListLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |moveInputMethodDialogsLocked| |int|
|com.android.server.wm.WindowManagerService| |updateStatusBarVisibilityLocked| |int|
|android.view.IWindowManager$Stub$Proxy| |getPreferredOptionsPanelGravity| ||
|android.view.IWindowManager$Stub| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1|
|com.android.server.InputMethodManagerService| |unbindCurrentMethodLocked| |boolean,boolean|
|android.view.IWindowManager$Stub$Proxy| |setAppVisibility| |android.os.IBinder,boolean|
|android.view.IWindowManager$Stub| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityStackSupervisor| |processStoppingActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |setVisibile| |com.android.server.am.ActivityRecord,boolean|
|com.android.server.wm.WindowManagerService| |updateCircularDisplayMaskIfNeeded| ||
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlayIfNeeded| ||
|com.android.server.wm.WindowManagerService| |access$800| |com.android.server.wm.WindowManagerService,int,int|
|com.android.server.wm.WindowManagerService| |dumpAnimatorLocked| |java.io.PrintWriter,java.lang.String[],boolean|
|com.android.server.wm.DragState| |getTouchedWinAtPointLw| |float,float|
|com.android.server.wm.DragState| |broadcastDragStartedLw| |float,float|
|android.view.IWindowSession$Stub$Proxy| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|com.android.server.wm.Session| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager| |getBaseDisplayDensity| |int|
|android.view.IWindowManager| |getInitialDisplayDensity| |int|
|android.view.IWindowManager| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.gsm.GSMPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.ServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.sip.SipPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.sip.SipPhone| |updatePhoneObject| |int|
|com.android.server.power.PowerManagerService| |updatePowerStateLocked| ||
|com.android.server.display.RampAnimator$1| |run| ||
|com.android.server.display.RampAnimator| |animateTo| |int,int|
|com.android.server.display.AutomaticBrightnessController| |access$300| |com.android.server.display.AutomaticBrightnessController,boolean|
|com.android.server.display.AutomaticBrightnessController| |configure| |boolean,float,boolean|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| |long|
|com.android.server.wm.WindowState| |removeLocked| ||
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowStateAnimator| |cancelExitAnimationForNextAnimationLocked| ||
|com.android.server.am.ActivityStack| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |pauseBackStacks| |boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |pauseChildStacks| |com.android.server.am.ActivityRecord,boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |drawWindowIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |<init>| |com.android.server.wm.AccessibilityController$DisplayMagnifier|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |onRotationChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |performComputeChangedWindowsNotLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |scheduleComputeChangedWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |updateTokenInPlaceLocked| |com.android.server.wm.AppWindowToken,int|
|android.view.IWindowManager$Stub$Proxy| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager$Stub| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService$2| |run| ||
|com.android.server.InputMethodManagerService| |startInputInnerLocked| ||
|com.android.server.InputMethodManagerService| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.InputMethodManagerService| |resetAllInternalStateLocked| |boolean,boolean|
|com.android.server.InputMethodManagerService| |updateInputMethodsFromSettingsLocked| |boolean|
|android.view.IWindowManager| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityRecord| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |activityIdleInternalLocked| |android.os.IBinder,boolean,android.content.res.Configuration|
|com.android.server.am.ActivityStack| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.wm.WindowManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.wm.WindowManagerService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wm.DragState| |notifyDropLw| |float,float|
|com.android.server.wm.DragState| |notifyMoveLw| |float,float|
|android.view.IWindowSession| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub$Proxy| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |runDisplayDensity| ||
|com.android.commands.wm.Wm| |runDisplaySize| ||
|com.android.internal.view.RotationPolicy| |getRotationLockOrientation| |android.content.Context|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.server.power.PowerManagerService| |access$1100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |acquireWakeLockInternal| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |boostScreenBrightnessInternal| |long,int|
|com.android.server.power.PowerManagerService| |goToSleepInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |handleBatteryStateChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleSandman| ||
|com.android.server.power.PowerManagerService| |handleScreenBrightnessBoostTimeout| ||
|com.android.server.power.PowerManagerService| |handleSettingsChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleUserActivityTimeout| ||
|com.android.server.power.PowerManagerService| |napInternal| |long,int|
|com.android.server.power.PowerManagerService| |onBootPhase| |int|
|com.android.server.power.PowerManagerService| |removeWakeLockLocked| |com.android.server.power.PowerManagerService$WakeLock,int|
|com.android.server.power.PowerManagerService| |setDozeOverrideFromDreamManagerInternal| |int,int|
|com.android.server.power.PowerManagerService| |setMaximumScreenOffTimeoutFromDeviceAdminInternal| |int|
|com.android.server.power.PowerManagerService| |setScreenBrightnessOverrideFromWindowManagerInternal| |int|
|com.android.server.power.PowerManagerService| |setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal| |float|
|com.android.server.power.PowerManagerService| |setTemporaryScreenBrightnessSettingOverrideInternal| |int|
|com.android.server.power.PowerManagerService| |setUserActivityTimeoutOverrideFromWindowManagerInternal| |long|
|com.android.server.power.PowerManagerService| |systemReady| |com.android.internal.app.IAppOpsService|
|com.android.server.power.PowerManagerService| |userActivityInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |wakeUpInternal| |long,int|
|com.android.server.display.DisplayPowerController| |animateScreenBrightness| |int,int|
|com.android.server.display.AutomaticBrightnessController$2| |onTwilightStateChanged| ||
|com.android.server.display.AutomaticBrightnessController| |handleLightSensorEvent| |long,float|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| ||
|com.android.server.am.ActivityStackSupervisor| |shutdownLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |checkReadyForSleepLocked| ||
|android.app.ActivityManagerNative| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController| |onWindowFocusChangedNotLocked| ||
|com.android.server.wm.AccessibilityController| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onSomeWindowResizedOrMovedLocked| ||
|com.android.server.wm.AccessibilityController| |onWindowTransitionLocked| |com.android.server.wm.WindowState,int|
|android.view.IWindowManager| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.internal.policy.impl.PhoneWindow| |getOptionsPanelGravity| ||
|com.android.server.InputMethodManagerService| |startInputUncheckedLocked| |com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.server.InputMethodManagerService| |systemRunning| |com.android.server.statusbar.StatusBarManagerService|
|com.android.server.InputMethodManagerService| |resetStateIfCurrentLocaleChangedLocked| ||
|com.android.server.InputMethodManagerService| |switchUserLocked| |int|
|com.android.server.InputMethodManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.InputMethodManagerService| |buildInputMethodListLocked| |java.util.ArrayList,java.util.HashMap,boolean|
|com.android.server.InputMethodManagerService| |updateFromSettingsLocked| |boolean|
|com.android.server.am.ActivityRecord$Token| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler| |activityIdleInternal| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.am.ActivityStack| |goToSleep| ||
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |android.content.pm.ApplicationInfo,int|
|android.service.wallpaper.WallpaperService$Engine| |updateSurface| |boolean,boolean,boolean|
|android.view.ViewRootImpl| |setView| |android.view.View,android.view.WindowManager$LayoutParams,android.view.View|
|android.view.IWindowSession| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.SurfaceView| |updateWindow| |boolean,boolean|
|android.view.IWindowSession| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |onRun| ||
|com.android.server.power.PowerManagerService$2| |onProximityNegative| ||
|com.android.server.power.PowerManagerService$2| |onProximityPositive| ||
|com.android.server.power.PowerManagerService$2| |onStateChanged| ||
|com.android.server.power.PowerManagerService$DockReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |access$3200| |com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |access$5000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |access$3900| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |access$1900| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2400| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2500| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2300| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$4000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |handleWakeLockDeath| |com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |releaseWakeLockInternal| |android.os.IBinder,int|
|com.android.server.power.PowerManagerService| |access$5300| |com.android.server.power.PowerManagerService,int,int|
|com.android.server.power.PowerManagerService| |access$5500| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5200| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$4800| |com.android.server.power.PowerManagerService,float|
|com.android.server.power.PowerManagerService| |access$4700| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5400| |com.android.server.power.PowerManagerService,long|
|com.android.server.power.PowerManagerService| |access$3700| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |userActivityFromNative| |long,int,int|
|com.android.server.power.PowerManagerService| |access$3800| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.display.AutomaticBrightnessController| |access$200| |com.android.server.display.AutomaticBrightnessController,long,float|
|com.android.server.display.AutomaticBrightnessController| |access$000| |com.android.server.display.AutomaticBrightnessController|
|com.android.server.am.ActivityManagerService| |shutdown| |int|
|com.android.server.am.ActivityStackSupervisor| |activitySleptLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |goingToSleepLocked| ||
|com.android.server.am.ActivityStack| |completePauseLocked| |boolean|
|com.android.server.am.ActivityStackSupervisor| |scheduleSleepTimeout| ||
|android.app.IActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationCallbacksLocked| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.WindowManagerService| |assignLayersLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.wm.WindowManagerService$LocalService| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.WindowState| |reportResized| ||
|com.android.server.wm.WindowStateAnimator| |applyEnterAnimationLocked| ||
|com.android.server.InputMethodManagerService| |startInputLocked| |com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.internal.policy.impl.PhoneWindow| |onOptionsPanelRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.KeyEvent|
|com.android.server.InputMethodManagerService| |access$1100| |com.android.server.InputMethodManagerService|
|com.android.server.InputMethodManagerService| |access$1000| |com.android.server.InputMethodManagerService,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.InputMethodManagerService| |<init>| |android.content.Context,com.android.server.wm.WindowManagerService|
|android.view.IApplicationToken$Stub$Proxy| |windowsVisible| ||
|android.view.IApplicationToken$Stub| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleTimeoutLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleLocked| ||
|com.android.server.am.ActivityManagerService| |handleAppDiedLocked| |com.android.server.am.ProcessRecord,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |attachApplicationLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.CompatModePackages| |setFrontActivityScreenCompatModeLocked| |int|
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |java.lang.String,int|
|android.service.wallpaper.WallpaperService$Engine| |attach| |android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper|
|android.service.wallpaper.WallpaperService$Engine| |doDisplayPaddingChanged| |android.graphics.Rect|
|android.service.wallpaper.WallpaperService$Engine| |reportVisibility| ||
|android.service.wallpaper.WallpaperService$Engine| |setOffsetNotificationsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |setTouchEventsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper| |executeMessage| |android.os.Message|
|android.view.WindowManagerGlobal| |addView| |android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window|
|com.android.internal.os.BaseCommand| |onRun| ||
|com.android.server.power.PowerManagerService$BatteryReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |scheduleSandmanLocked| ||
|com.android.server.power.PowerManagerService| |updateScreenBrightnessBoostLocked| |int|
|com.android.server.power.PowerManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.power.PowerManagerService$UserSwitchedReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |updateUserActivitySummaryLocked| |long,int|
|com.android.server.power.PowerManagerService| |access$2700| |com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |access$3300| |com.android.server.power.PowerManagerService,android.os.IBinder,int|
|com.android.server.power.PowerManagerService$LocalService| |setDozeOverrideFromDreamManager| |int,int|
|com.android.server.power.PowerManagerService$LocalService| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|com.android.server.power.PowerManagerService$LocalService| |setScreenBrightnessOverrideFromWindowManager| |int|
|com.android.server.power.PowerManagerService$LocalService| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|com.android.server.display.AutomaticBrightnessController$1| |onSensorChanged| |android.hardware.SensorEvent|
|android.app.ActivityManagerNative| |shutdown| |int|
|com.android.server.am.ActivityManagerService$12| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |updateSleepIfNeededLocked| ||
|com.android.server.am.ActivityStack| |activityPausedLocked| |android.os.IBinder,boolean|
|android.app.ActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|android.view.WindowManagerInternal| |setMagnificationSpec| |android.view.MagnificationSpec|
|android.view.WindowManagerInternal| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher| |dispatchRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUpPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanelsAfterRestore| ||
|com.android.internal.policy.impl.PhoneWindow| |reopenMenu| |boolean|
|com.android.internal.policy.impl.PhoneWindow| |togglePanel| |int,android.view.KeyEvent|
|com.android.server.InputMethodManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$3| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.content.PackageMonitor| |onSomePackagesChanged| ||
|android.view.IApplicationToken$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IApplicationToken| |windowsVisible| ||
|com.android.server.am.ActivityStack| |backgroundResourcesReleased| ||
|com.android.server.am.ActivityStack| |clearLaunchTime| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStack| |completeResumeLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |attachApplicationLocked| |android.app.IApplicationThread,int|
|com.android.server.am.ActivityManagerService| |removeProcessLocked| |com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord,int,android.app.IApplicationThread|
|com.android.server.am.ActivityManagerService| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.am.CompatModeDialog$1| |onCheckedChanged| |android.widget.CompoundButton,boolean|
|android.service.wallpaper.WallpaperService$Engine$3| |onDisplayChanged| |int|
|android.service.wallpaper.WallpaperService$Engine| |doVisibilityChanged| |boolean|
|android.view.WindowManagerImpl| |addView| |android.view.View,android.view.ViewGroup$LayoutParams|
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|com.android.server.power.PowerManagerService| |access$2000| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |updateDreamLocked| |int,boolean|
|com.android.server.power.PowerManagerService$WakeLock| |binderDied| ||
|android.os.PowerManagerInternal| |setDozeOverrideFromDreamManager| |int,int|
|android.os.PowerManagerInternal| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|android.os.PowerManagerInternal| |setScreenBrightnessOverrideFromWindowManager| |int|
|android.os.PowerManagerInternal| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|android.app.IActivityManager| |shutdown| |int|
|com.android.server.am.ActivityManagerService| |finishRunningVoiceLocked| ||
|com.android.server.am.ActivityManagerService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityManagerService| |startRunningVoiceLocked| ||
|com.android.server.am.ActivityStack| |awakeFromSleepingLocked| ||
|android.view.WindowManagerInternal| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.accessibility.AccessibilityManagerService| |updateWindowsForAccessibilityCallbackLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher$1| |run| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUp| |int,int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |access$2200| |com.android.internal.policy.impl.PhoneWindow|
|com.android.internal.policy.impl.PhoneWindow| |onConfigurationChanged| |android.content.res.Configuration|
|com.android.internal.policy.impl.PhoneWindow| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.app.IUserSwitchObserver$Stub$Proxy| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.content.PackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.LocationManagerService$4| |onSomePackagesChanged| ||
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onSomePackagesChanged| ||
|com.android.server.ServiceWatcher$2| |onSomePackagesChanged| ||
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.am.ActivityRecord$Token| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStack| |releaseBackgroundResources| ||
|com.android.server.am.ActivityManagerService| |access$400| |com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |broadcastIntentLocked| |com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |finishInstrumentationLocked| |com.android.server.am.ProcessRecord,int,android.os.Bundle|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |forceStopUserLocked| |int,java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppCrashLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killPackageProcessesLocked| |java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActivityManagerService$AppDeathRecipient| |binderDied| ||
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord|
|android.app.ActivityManagerNative| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|com.android.server.power.PowerManagerService$DreamReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.dreams.DreamManagerService| |startDozingInternal| |android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |stopDozingInternal| |android.os.IBinder|
|com.android.server.power.ShutdownThread| |run| ||
|com.android.server.am.ActivityManagerService$LocalService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |comeOutOfSleepIfNeededLocked| ||
|com.android.server.accessibility.ScreenMagnifier| |<init>| |android.content.Context,int,com.android.server.accessibility.AccessibilityManagerService|
|com.android.server.accessibility.ScreenMagnifier| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |offsetMagnifiedRegionCenter| |float,float|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |reset| |boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScaleAndMagnifiedRegionCenter| |float,float,float,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |onUserStateChangedLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |dispatchKeyEvent| |android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |onAttachedToWindow| ||
|com.android.internal.view.menu.MenuBuilder$Callback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.app.ResolverActivity$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.ServiceWatcher$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.trust.TrustManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.tv.TvInputManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService$7| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |deliverPreBootCompleted| |java.lang.Runnable,java.util.ArrayList,int|
|com.android.server.am.ActivityManagerService| |access$200| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |closeSystemDialogsLocked| |java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserBoot| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserStop| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |makeAppCrashingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killAppAtUsersRequest| |com.android.server.am.ProcessRecord,android.app.Dialog|
|com.android.server.am.ActivityManagerService| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |bringUpServiceLocked| |com.android.server.am.ServiceRecord,int,boolean,boolean|
|com.android.server.am.ActivityManagerService| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |processNextBroadcast| |boolean|
|com.android.server.am.ActivityManagerService$LocalService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |realStartServiceLocked| |com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean|
|android.app.IActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|com.android.server.dreams.DreamManagerService| |access$1800| |com.android.server.dreams.DreamManagerService,android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |access$1900| |com.android.server.dreams.DreamManagerService,android.os.IBinder|
|com.android.server.power.ShutdownThread| |beginShutdownSequence| |android.content.Context|
|com.android.server.accessibility.AccessibilityInputFilter| |enableFeatures| ||
|com.android.server.accessibility.AccessibilityInputFilter| |disableFeatures| ||
|com.android.server.accessibility.EventStreamTransformation| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScroll| |android.view.MotionEvent,android.view.MotionEvent,float,float|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRectangleOnScreenRequested| |int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |handleOnScreenStateChange| |java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |resetMagnificationIfNeeded| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTapAndHold| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnifiedRegionCenter| |float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScale| |float,float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier| |handleOnMagnifiedBoundsChanged| |android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService| |access$500| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |ensureWindowsAvailableTimed| ||
|com.android.server.accessibility.AccessibilityManagerService| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |switchUser| |int|
|com.android.server.accessibility.AccessibilityManagerService| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuView$MenuBuilderCallback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|com.android.internal.view.menu.MenuBuilder| |changeMenuMode| ||
|android.app.ActivityManagerNative| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService$29| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |finishUserSwitch| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService$28| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceInnerLocked| |com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |performServiceRestartLocked| |com.android.server.am.ServiceRecord|
|android.app.ActivityManagerNative| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |broadcastTimeoutLocked| |boolean|
|com.android.server.am.BroadcastQueue| |scheduleBroadcastsLocked| ||
|android.app.ActivityManagerInternal| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |attachApplicationLocked| |com.android.server.am.ProcessRecord,java.lang.String|
|android.app.ActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |runScreenCompat| ||
|com.android.server.power.ShutdownThread| |access$000| |android.content.Context|
|com.android.server.power.ShutdownThread| |shutdownInner| |android.content.Context,boolean|
|com.android.server.accessibility.AccessibilityInputFilter| |onInstalled| ||
|com.android.server.accessibility.AccessibilityInputFilter| |setEnabledFeatures| |int|
|com.android.server.accessibility.AccessibilityInputFilter| |onUninstalled| ||
|com.android.server.accessibility.AccessibilityManagerService| |updateInputFilter| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |access$100| |com.android.server.accessibility.ScreenMagnifier,int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |access$2900| |com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver,java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |access$600| |com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRotationChanged| |int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnUserContextChanged| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1700| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScale| |android.view.ScaleGestureDetector|
|com.android.server.accessibility.ScreenMagnifier| |access$000| |com.android.server.accessibility.ScreenMagnifier,android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$1| |onSomePackagesChanged| ||
|com.android.server.accessibility.AccessibilityManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$4| |onClick| |android.content.DialogInterface,int|
|com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.accessibility.AccessibilityManagerService$Service| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accessibility.AccessibilityManagerService| |access$3300| |com.android.server.accessibility.AccessibilityManagerService|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager$Stub| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |access$800| |com.android.server.accessibility.AccessibilityManagerService,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.view.accessibility.IAccessibilityManager$Stub| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuPresenter$OpenOverflowRunnable| |run| ||
|com.android.internal.view.menu.ContextMenuBuilder| |changeMenuMode| ||
|com.android.internal.view.menu.IconMenuView$1| |onClick| |android.view.View|
|com.android.internal.view.menu.SubMenuBuilder| |changeMenuMode| ||
|android.app.IActivityManager| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub$Proxy| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.content.IIntentReceiver$Stub| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |keyDispatchingTimedOut| |java.lang.String|
|android.app.IActivityManager| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceLocked| |android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int|
|com.android.server.am.ActiveServices$ServiceMap| |rescheduleDelayedStarts| ||
|com.android.server.am.ActiveServices$ServiceRestarter| |run| ||
|android.app.IActivityManager| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.ActivityManagerService| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |setBroadcastTimeoutLocked| |long|
|com.android.server.am.ActivityManagerService| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.BroadcastQueue| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |createRelroFile| |boolean,java.lang.String[]|
|com.android.commands.am.Am| |onRun| ||
|com.android.server.power.ShutdownThread$1| |onClick| |android.content.DialogInterface,int|
|com.android.server.power.ShutdownThread| |reboot| |android.content.Context,java.lang.String,boolean|
|com.android.server.power.ShutdownThread| |rebootSafeMode| |android.content.Context,boolean|
|com.android.server.power.ShutdownThread| |shutdown| |android.content.Context,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |access$2100| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |access$300| |com.android.server.accessibility.ScreenMagnifier,int|
|com.android.server.accessibility.ScreenMagnifier| |access$200| |com.android.server.accessibility.ScreenMagnifier|
|com.android.internal.content.PackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.content.PackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$UserState$1| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$UserState| |onSwitchToAnotherUser| ||
|com.android.server.accessibility.AccessibilityManagerService| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.accessibility.AccessibilityManagerService$Service$2| |run| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindow| |int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindows| ||
|android.view.accessibility.IAccessibilityManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.IAccessibilityManager| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|com.android.server.pm.PackageManagerService| |killApplication| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IIntentReceiver| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.IActivityManager| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|android.view.IApplicationToken$Stub$Proxy| |keyDispatchingTimedOut| |java.lang.String|
|android.view.IApplicationToken$Stub| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActiveServices$ServiceMap| |ensureNotStartingBackground| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService| |bindToAgentSynchronous| |android.content.pm.ApplicationInfo,int|
|android.app.ActivityManagerNative| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| |java.lang.String[]|
|com.android.server.power.PowerManagerService$3| |run| ||
|com.android.server.wm.WindowManagerService| |rebootSafeMode| |boolean|
|com.android.server.wm.WindowManagerService| |shutdown| |boolean|
|com.android.server.accessibility.EventStreamTransformation| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |sendDelayedMotionEvents| ||
|com.android.server.accessibility.ScreenMagnifier| |onUserContextChanged| ||
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.app.ResolverActivity$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.LocationManagerService$4| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.ServiceWatcher$2| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.trust.TrustManagerService$3| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.tv.TvInputManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.app.ResolverActivity$1| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.LocationManagerService$4| |onPackageRemoved| |java.lang.String,int|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.trust.TrustManagerService$3| |onPackageRemoved| |java.lang.String,int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.view.accessibility.IAccessibilityManager$Stub| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindows| ||
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindows| ||
|com.android.server.accessibility.AccessibilityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomationConnection| |registerUiTestAutomationServiceLocked| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |enableAccessibility| ||
|com.android.server.pm.PackageManagerService| |scanPackageDirtyLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageLI| |java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |replaceSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|android.app.LoadedApk$ReceiverDispatcher$InnerReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.PendingIntent$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IntentSender$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.am.Am$IntentReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.monkey.MonkeyNetworkMonitor| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$13| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$15| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$24| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$25| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$28| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$29| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$8| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService$12| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.BroadcastQueue| |performReceiveLocked| |com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.wm.InputMonitor| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.view.IApplicationToken| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActiveServices| |bringDownServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$FullBackupEngine| |backupOnePackage| |android.content.pm.PackageInfo|
|com.android.server.backup.BackupManagerService$FullRestoreEngine| |restoreOneFile| |java.io.InputStream|
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |restoreOneFile| |java.io.InputStream,byte[]|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeNextAgent| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreKeyValue| ||
|android.app.IActivityManager| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |cleanUpApplicationRecordLocked| |com.android.server.am.ProcessRecord,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |startAppProblemLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|android.webkit.WebViewFactory| |onWebViewUpdateInstalled| ||
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| ||
|android.view.WindowManagerPolicy$WindowManagerFuncs| |rebootSafeMode| |boolean|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |shutdown| |boolean|
|com.android.server.accessibility.AccessibilityInputFilter| |handleMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleMotionEventStateDelegating| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendMotionEvent| |android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1800| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |transitionToDelegatingStateAndClear| ||
|android.view.accessibility.IAccessibilityManager| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindows| ||
|android.app.UiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |access$200| |com.android.internal.policy.impl.EnableAccessibilityController|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |java.io.File,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageX| |java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installNewPackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |replaceNonSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |unloadMediaPackages| |android.util.ArrayMap,int[],boolean|
|com.android.server.pm.PackageManagerService| |replacePackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.am.BroadcastQueue| |deliverToRegisteredReceiverLocked| |com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices| |forceStopLocked| |java.lang.String,int,boolean,boolean|
|com.android.server.am.ActiveServices| |bringDownServiceIfNeededLocked| |com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |killServicesLocked| |com.android.server.am.ProcessRecord,boolean|
|com.android.server.am.ActiveServices| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|com.android.server.backup.BackupManagerService$PerformAdbBackupTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$EngineThread| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |execute| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |execute| ||
|com.android.commands.monkey.MonkeyNetworkMonitor| |register| |android.app.IActivityManager|
|com.android.server.am.ActivityManagerService| |trimApplications| ||
|com.android.server.am.ActivityManagerService| |makeAppNotRespondingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |access$300| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord|
|com.android.server.webkit.WebViewUpdateService| |onWebViewUpdateInstalled| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |powerLongPress| ||
|com.android.server.accessibility.AccessibilityInputFilter| |processBatchedEvents| |long|
|com.android.server.accessibility.TouchExplorer| |access$2800| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDelegating| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDragging| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateTouchExploring| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendActionDownAndUp| |android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |sendDownForAllNotInjectedPointers| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendHoverExitAndTouchExplorationGestureEndIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendTouchExplorationGestureStartAndHoverEnterIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendUpForInjectedDownPointers| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |unregisterUiTestAutomationServiceLocked| ||
|android.view.accessibility.AccessibilityInteractionClient| |getWindow| |int,int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.AccessibilityInteractionClient| |getWindows| |int|
|android.app.IUiAutomationConnection$Stub$Proxy| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|android.app.IUiAutomationConnection$Stub| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |onInterceptTouchEvent| |android.view.MotionEvent|
|com.android.server.pm.PackageManagerService| |deleteSystemPackageLI| |com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |<init>| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService| |loadMediaPackages| |android.util.ArrayMap,int[]|
|com.android.server.pm.PackageManagerService| |scanDirLI| |java.io.File,int,int,long|
|com.android.server.pm.PackageManagerService| |access$4000| |com.android.server.pm.PackageManagerService,java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installPackageLI| |com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |updateExternalMediaStatusInner| |boolean,boolean,boolean|
|com.android.server.input.InputManagerService| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices| |removeConnectionLocked| |com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActiveServices| |stopServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |execute| ||
|com.android.commands.monkey.Monkey| |getSystemInterfaces| ||
|com.android.server.am.ActivityManagerService| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]|
|com.android.server.webkit.WebViewUpdateService| |access$000| |com.android.server.webkit.WebViewUpdateService|
|com.android.internal.policy.impl.GlobalActions$LongPressAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$Action| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$SinglePressAction| |onPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$800| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.server.accessibility.AccessibilityInputFilter| |access$100| |com.android.server.accessibility.AccessibilityInputFilter,long|
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$1700| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |access$2600| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$2400| |com.android.server.accessibility.TouchExplorer,int|
|com.android.server.accessibility.TouchExplorer| |clear| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |disconnect| ||
|android.view.accessibility.AccessibilityNodeInfo| |getWindow| ||
|android.view.accessibility.AccessibilityWindowInfo| |getChild| |int|
|android.view.accessibility.AccessibilityWindowInfo| |getParent| ||
|android.accessibilityservice.AccessibilityService| |getWindows| ||
|android.app.UiAutomation| |getWindows| ||
|android.app.IUiAutomationConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IUiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |dispatchTouchEvent| |android.view.MotionEvent|
|com.android.server.pm.PackageManagerService| |main| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService$14| |run| ||
|com.android.server.pm.PackageManagerService$8| |run| ||
|com.android.server.pm.PackageManagerService| |access$2300| |com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |access$4500| |com.android.server.pm.PackageManagerService,boolean,boolean,boolean|
|com.android.server.pm.PackageManagerService| |scanAvailableAsecs| ||
|com.android.server.am.ActiveServices| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |executeNextState| |com.android.server.backup.BackupManagerService$BackupState|
|com.android.commands.monkey.Monkey| |run| |java.lang.String[]|
|android.app.ActivityManagerNative| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |addAppLocked| |android.content.pm.ApplicationInfo,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String|
|com.android.server.webkit.WebViewUpdateService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.policy.impl.GlobalActions$2| |onItemLongClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.internal.policy.impl.GlobalActions| |onClick| |android.content.DialogInterface,int|
|com.android.internal.policy.impl.GlobalActions| |handleShow| ||
|com.android.server.accessibility.AccessibilityInputFilter$1| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onDoubleTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |clear| ||
|com.android.server.accessibility.TouchExplorer| |handleMotionEventGestureDetecting| |android.view.MotionEvent,int|
|android.app.IUiAutomationConnection$Stub$Proxy| |disconnect| ||
|android.app.IUiAutomationConnection$Stub| |disconnect| ||
|android.app.UiAutomationConnection| |shutdown| ||
|android.app.UiAutomationConnection| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomation| |connect| ||
|com.android.server.pm.PackageManagerService$6| |run| ||
|com.android.server.pm.PackageManagerService$11| |run| ||
|com.android.server.am.ActivityManagerService| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |agentErrorCleanup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |beginBackup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |operationComplete| ||
|com.android.commands.monkey.Monkey| |main| |java.lang.String[]|
|android.app.IActivityManager| |setProcessLimit| |int|
|com.android.internal.policy.impl.GlobalActions| |access$1800| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.GlobalActions| |showDialog| |boolean,boolean|
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.EventStreamTransformation| |clear| ||
|com.android.server.accessibility.TouchExplorer$ExitGestureDetectionModeDelayed| |run| ||
|android.app.IUiAutomationConnection| |disconnect| ||
|android.app.IUiAutomationConnection$Stub$Proxy| |shutdown| ||
|android.app.IUiAutomationConnection$Stub| |shutdown| ||
|android.app.Instrumentation| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetworkViews| |setup| ||
|com.android.uiautomator.core.UiAutomationShellWrapper| |connect| ||
|com.android.server.am.ActivityManagerService| |removeTaskByIdLocked| |int,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeAgentForBackup| |java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |operationComplete| ||
|com.android.internal.policy.impl.PhoneWindowManager| |showGlobalActionsInternal| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |clear| ||
|android.app.UiAutomation| |disconnect| ||
|android.app.IUiAutomationConnection| |shutdown| ||
|android.test.InstrumentationCoreTestRunner| |getUiAutomation| ||
|android.test.InstrumentationTestRunner| |getUiAutomation| ||
|android.test.LaunchPerformanceBase| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetwork| |startServer| ||
|com.android.commands.uiautomator.DumpCommand| |run| |java.lang.String[]|
|com.android.commands.uiautomator.EventsCommand| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |start| ||
|com.android.server.am.ActivityManagerService| |access$1400| |com.android.server.am.ActivityManagerService,int,boolean|
|com.android.server.am.ActivityManagerService| |removeTasksByPackageNameLocked| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |removeTasksByRemovedPackageComponentsLocked| |java.lang.String,int|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService| |opComplete| |int|
|com.android.internal.policy.impl.PhoneWindowManager$4| |run| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onInputEvent| |android.view.InputEvent,int|
|android.app.Instrumentation| |finish| |int,android.os.Bundle|
|com.android.uiautomator.core.UiAutomationShellWrapper| |disconnect| ||
|com.android.commands.monkey.MonkeySourceNetwork| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher$Command| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |run| |java.util.List,android.os.Bundle,boolean,boolean|
|com.android.server.backup.BackupManagerService| |handleTimeout| |int,java.lang.Object|
|com.android.server.backup.Trampoline| |opComplete| |int|
|android.test.InstrumentationCoreTestRunner| |finish| |int,android.os.Bundle|
|android.test.InstrumentationTestRunner| |finish| |int,android.os.Bundle|
|android.test.LaunchPerformanceBase| |finish| |int,android.os.Bundle|
|com.android.commands.monkey.MonkeyEventSource| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher| |main| |java.lang.String[]|
|com.android.commands.uiautomator.RunTestCommand| |run| |java.lang.String[]|
|com.android.server.backup.BackupManagerService| |prepareOperationTimeout| |int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask|
|android.app.backup.IBackupManager$Stub$Proxy| |opComplete| |int|
|android.app.backup.IBackupManager$Stub| |opComplete| |int|
|android.test.InstrumentationTestRunner| |onStart| ||
|com.android.commands.monkey.Monkey| |runMonkeyCycles| ||
|com.android.server.backup.BackupManagerService$FullBackupEngine$FullBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$FullBackupObbConnection| |backupObbs| |android.content.pm.PackageInfo,java.io.OutputStream|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |initiateOneRestore| |android.content.pm.PackageInfo,int|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreFinished| ||
|android.app.backup.IBackupManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.IBackupManager| |opComplete| |int|
|android.test.InstrumentationCoreTestRunner| |onStart| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |startRestore| ||
|com.android.server.backup.Trampoline| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.BackupAgent$BackupServiceBinder| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IBackupAgent| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreFileRunnable| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable| |run| ||
|com.android.server.VibratorService| |vibrate| |int,java.lang.String,long,int,android.os.IBinder|
|android.os.IVibratorService$Stub$Proxy| |vibrate| |int,java.lang.String,long,int,android.os.IBinder|
|android.os.IVibratorService$Stub| |vibrate| |int,java.lang.String,long,int,android.os.IBinder|
|android.os.IVibratorService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.os.IVibratorService| |vibrate| |int,java.lang.String,long,int,android.os.IBinder|
|com.android.server.VibratorService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.os.SystemVibrator| |vibrate| |int,java.lang.String,long,android.media.AudioAttributes|
|android.os.Vibrator| |vibrate| |int,java.lang.String,long,android.media.AudioAttributes|
|android.os.Vibrator| |vibrate| |long,android.media.AudioAttributes|
|com.android.internal.policy.impl.PhoneWindowManager| |performHapticFeedbackLw| |android.view.WindowManagerPolicy$WindowState,int,boolean|
|android.hardware.input.InputManager$InputDeviceVibrator| |vibrate| |long,android.media.AudioAttributes|
|android.os.NullVibrator| |vibrate| |long,android.media.AudioAttributes|
|android.os.SystemVibrator| |vibrate| |long,android.media.AudioAttributes|
|android.os.Vibrator| |vibrate| |long|
|com.android.internal.widget.multiwaveview.GlowPadView| |vibrate| ||
|com.android.internal.widget.RotarySelector| |vibrate| |long|
|com.android.internal.widget.SlidingTab| |vibrate| |long|
|com.android.internal.widget.WaveView| |vibrate| |long|
|com.android.server.power.ShutdownThread| |rebootOrShutdown| |boolean,java.lang.String|
|com.android.server.VibratorService| |doVibratorOn| |long,int,int|
|android.view.WindowManagerPolicy| |performHapticFeedbackLw| |android.view.WindowManagerPolicy$WindowState,int,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$4| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager$MyWakeGestureListener| |onWakeUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |handleLongPressOnHome| ||
|com.android.internal.policy.impl.PhoneWindowManager| |launchAssistLongPressAction| ||
|com.android.internal.policy.impl.PhoneWindowManager| |powerLongPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |setSafeMode| |boolean|
|android.hardware.input.InputManager$InputDeviceVibrator| |vibrate| |long|
|android.os.NullVibrator| |vibrate| |long|
|android.os.SystemVibrator| |vibrate| |long|
|com.android.internal.widget.multiwaveview.GlowPadView| |dispatchTriggerEvent| |int|
|com.android.internal.widget.multiwaveview.GlowPadView| |setGrabbedState| |int|
|com.android.internal.widget.RotarySelector| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.RotarySelector| |dispatchTriggerEvent| |int|
|com.android.internal.widget.SlidingTab| |onInterceptTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.SlidingTab| |dispatchTriggerEvent| |int|
|com.android.internal.widget.WaveView| |dispatchTriggerEvent| |int|
|com.android.server.power.ShutdownThread| |run| ||
|com.android.server.SystemServer| |performPendingShutdown| ||
|com.android.server.VibratorService| |access$1400| |com.android.server.VibratorService,long,int,int|
|com.android.server.VibratorService| |startVibrationLocked| |com.android.server.VibratorService$Vibration|
|android.view.WindowManagerPolicy| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager| |interceptFallback| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.policy.impl.WakeGestureListener| |onWakeUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |interceptKeyBeforeDispatching| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager| |access$800| |com.android.internal.policy.impl.PhoneWindowManager|
|android.view.WindowManagerPolicy| |setSafeMode| |boolean|
|android.os.NullVibrator| |vibrate| |int,java.lang.String,long,android.media.AudioAttributes|
|com.android.internal.widget.multiwaveview.GlowPadView| |doFinish| ||
|com.android.internal.widget.multiwaveview.GlowPadView| |switchToState| |int,float,float|
|com.android.internal.widget.SlidingTab| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.WaveView| |waveUpdateFrame| |float,float,boolean|
|com.android.server.power.ShutdownThread| |beginShutdownSequence| |android.content.Context|
|com.android.server.SystemServer| |run| ||
|com.android.server.VibratorService$VibrateThread| |run| ||
|com.android.server.VibratorService| |startNextVibrationLocked| ||
|com.android.server.wm.InputMonitor| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager| |dispatchUnhandledKey| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.policy.impl.WakeGestureListener$2| |run| ||
|android.view.WindowManagerPolicy| |interceptKeyBeforeDispatching| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.server.wm.WindowManagerService| |detectSafeMode| ||
|com.android.internal.widget.multiwaveview.GlowPadView| |trySwitchToFirstTouchState| |float,float|
|com.android.internal.widget.multiwaveview.GlowPadView| |access$300| |com.android.internal.widget.multiwaveview.GlowPadView,int,float,float|
|com.android.internal.widget.multiwaveview.GlowPadView| |handleCancel| |android.view.MotionEvent|
|com.android.internal.widget.multiwaveview.GlowPadView| |handleDown| |android.view.MotionEvent|
|com.android.internal.widget.multiwaveview.GlowPadView| |handleMove| |android.view.MotionEvent|
|com.android.internal.widget.multiwaveview.GlowPadView| |handleUp| |android.view.MotionEvent|
|com.android.internal.widget.WaveView| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.WaveView| |onDraw| |android.graphics.Canvas|
|com.android.server.power.ShutdownThread| |access$000| |android.content.Context|
|com.android.server.power.ShutdownThread| |shutdownInner| |android.content.Context,boolean|
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.server.VibratorService| |access$300| |com.android.server.VibratorService|
|com.android.server.VibratorService| |updateInputDeviceVibrators| ||
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|android.view.WindowManagerPolicy| |dispatchUnhandledKey| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.server.wm.InputMonitor| |interceptKeyBeforeDispatching| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.internal.widget.multiwaveview.GlowPadView$1| |onAnimationEnd| |android.animation.Animator|
|com.android.internal.widget.multiwaveview.GlowPadView$2| |onAnimationEnd| |android.animation.Animator|
|com.android.internal.widget.multiwaveview.GlowPadView| |onTouchEvent| |android.view.MotionEvent|
|com.android.internal.widget.WaveView| |onHoverEvent| |android.view.MotionEvent|
|com.android.server.power.ShutdownThread$1| |onClick| |android.content.DialogInterface,int|
|com.android.server.power.ShutdownThread| |reboot| |android.content.Context,java.lang.String,boolean|
|com.android.server.power.ShutdownThread| |rebootSafeMode| |android.content.Context,boolean|
|com.android.server.power.ShutdownThread| |shutdown| |android.content.Context,boolean|
|com.android.server.VibratorService$3| |run| ||
|com.android.server.VibratorService$Vibration| |binderDied| ||
|com.android.server.VibratorService| |access$400| |com.android.server.VibratorService|
|com.android.server.VibratorService| |onInputDeviceAdded| |int|
|com.android.server.VibratorService| |onInputDeviceChanged| |int|
|com.android.server.VibratorService| |onInputDeviceRemoved| |int|
|com.android.server.VibratorService| |systemReady| ||
|com.android.server.input.InputManagerService| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.server.wm.InputMonitor| |dispatchUnhandledKey| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |interceptKeyBeforeDispatching| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |onHoverEvent| |android.view.MotionEvent|
|com.android.server.power.PowerManagerService$3| |run| ||
|com.android.server.wm.WindowManagerService| |rebootSafeMode| |boolean|
|com.android.server.wm.WindowManagerService| |shutdown| |boolean|
|com.android.server.VibratorService$1| |onLowPowerModeChanged| |boolean|
|com.android.server.VibratorService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.VibratorService$SettingsObserver| |onChange| |boolean|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |dispatchUnhandledKey| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.server.input.InputManagerService| |interceptKeyBeforeDispatching| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |rebootSafeMode| |boolean|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |shutdown| |boolean|
|com.android.server.input.InputManagerService| |dispatchUnhandledKey| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$LongPressAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$Action| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$SinglePressAction| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$2| |onItemLongClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.internal.policy.impl.GlobalActions| |onClick| |android.content.DialogInterface,int|
|com.android.internal.policy.impl.GlobalActions| |handleShow| ||
|com.android.internal.policy.impl.GlobalActions| |access$1800| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.GlobalActions| |showDialog| |boolean,boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |showGlobalActionsInternal| ||
|com.android.server.VibratorService| |vibratePattern| |int,java.lang.String,long[],int,int,android.os.IBinder|
|android.os.IVibratorService$Stub$Proxy| |vibratePattern| |int,java.lang.String,long[],int,int,android.os.IBinder|
|android.os.IVibratorService$Stub| |vibratePattern| |int,java.lang.String,long[],int,int,android.os.IBinder|
|android.os.IVibratorService| |vibratePattern| |int,java.lang.String,long[],int,int,android.os.IBinder|
|android.os.SystemVibrator| |vibrate| |int,java.lang.String,long[],int,android.media.AudioAttributes|
|android.os.Vibrator| |vibrate| |int,java.lang.String,long[],int,android.media.AudioAttributes|
|android.os.Vibrator| |vibrate| |long[],int,android.media.AudioAttributes|
|android.hardware.input.InputManager$InputDeviceVibrator| |vibrate| |long[],int,android.media.AudioAttributes|
|android.os.NullVibrator| |vibrate| |long[],int,android.media.AudioAttributes|
|android.os.SystemVibrator| |vibrate| |long[],int,android.media.AudioAttributes|
|android.os.Vibrator| |vibrate| |long[],int|
|android.hardware.input.InputManager$InputDeviceVibrator| |vibrate| |long[],int|
|android.os.NullVibrator| |vibrate| |long[],int|
|android.os.SystemVibrator| |vibrate| |long[],int|
|com.android.nfc.P2pEventManager| |onP2pHandoverBusy| ||
|com.android.nfc.P2pEventManager| |onP2pHandoverNotSupported| ||
|com.android.nfc.P2pEventManager| |onP2pInRange| ||
|com.android.nfc.P2pEventManager| |onP2pNfcTapRequested| ||
|com.android.nfc.P2pEventManager| |onP2pReceiveComplete| |boolean|
|com.android.nfc.P2pEventManager| |onP2pResumeSend| ||
|com.android.nfc.P2pEventManager| |onP2pSendComplete| ||
|android.hardware.input.InputManager$InputDeviceVibrator| |vibrate| |int,java.lang.String,long,android.media.AudioAttributes|
|com.android.nfc.P2pEventListener| |onP2pHandoverBusy| ||
|com.android.nfc.P2pEventListener| |onP2pHandoverNotSupported| ||
|com.android.nfc.P2pEventListener| |onP2pInRange| ||
|com.android.nfc.P2pEventListener| |onP2pNfcTapRequested| ||
|com.android.nfc.P2pEventListener| |onP2pReceiveComplete| |boolean|
|com.android.nfc.P2pEventListener| |onP2pResumeSend| ||
|com.android.nfc.P2pEventListener| |onP2pSendComplete| ||
|com.android.nfc.P2pLinkManager| |onLlcpActivated| ||
|com.android.nfc.P2pLinkManager| |onManualBeamInvoke| |android.nfc.BeamShareData|
|com.android.nfc.P2pLinkManager| |onLlcpServicesConnected| ||
|com.android.nfc.NfcService$NfcServiceHandler| |llcpActivated| |com.android.nfc.DeviceHost$NfcDepEndpoint|
|com.android.nfc.NfcService$NfcAdapterService| |invokeBeam| ||
|com.android.nfc.NfcService$NfcAdapterService| |invokeBeamInternal| |android.nfc.BeamShareData|
|com.android.nfc.NfcService| |routeAids| |java.lang.String,int|
|com.android.nfc.NfcService| |sendMessage| |int,java.lang.Object|
|com.android.nfc.P2pLinkManager$ConnectTask| |onPostExecute| |java.lang.Boolean|
|com.android.nfc.NfcService| |commitRouting| ||
|android.nfc.INfcAdapter$Stub$Proxy| |invokeBeam| ||
|android.nfc.INfcAdapter$Stub| |invokeBeam| ||
|android.nfc.INfcAdapter$Stub$Proxy| |invokeBeamInternal| |android.nfc.BeamShareData|
|android.nfc.INfcAdapter$Stub| |invokeBeamInternal| |android.nfc.BeamShareData|
|com.android.nfc.cardemulation.AidRoutingManager| |configureRouting| |java.util.HashMap|
|com.android.nfc.NfcService| |onLlcpFirstPacketReceived| |com.android.nfc.DeviceHost$NfcDepEndpoint|
|com.android.nfc.NfcService| |onLlcpLinkActivated| |com.android.nfc.DeviceHost$NfcDepEndpoint|
|com.android.nfc.NfcService| |onLlcpLinkDeactivated| |com.android.nfc.DeviceHost$NfcDepEndpoint|
|com.android.nfc.NfcService| |onRemoteEndpointDiscovered| |com.android.nfc.DeviceHost$TagEndpoint|
|com.android.nfc.NfcService| |onRemoteFieldActivated| ||
|com.android.nfc.NfcService| |onRemoteFieldDeactivated| ||
|com.android.nfc.NfcService| |sendMockNdefTag| |android.nfc.NdefMessage|
|com.android.nfc.NfcService| |unrouteAids| |java.lang.String|
|com.android.nfc.P2pLinkManager$ConnectTask| |onPostExecute| |java.lang.Object|
|android.nfc.INfcAdapter$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.INfcAdapter| |invokeBeam| ||
|android.nfc.INfcAdapter| |invokeBeamInternal| |android.nfc.BeamShareData|
|com.android.nfc.cardemulation.RegisteredAidCache| |updateRoutingLocked| ||
|com.android.nfc.DeviceHost$DeviceHostListener| |onLlcpFirstPacketReceived| |com.android.nfc.DeviceHost$NfcDepEndpoint|
|com.android.nfc.DeviceHost$DeviceHostListener| |onLlcpLinkActivated| |com.android.nfc.DeviceHost$NfcDepEndpoint|
|com.android.nfc.DeviceHost$DeviceHostListener| |onLlcpLinkDeactivated| |com.android.nfc.DeviceHost$NfcDepEndpoint|
|com.android.nfc.DeviceHost$DeviceHostListener| |onRemoteEndpointDiscovered| |com.android.nfc.DeviceHost$TagEndpoint|
|com.android.nfc.DeviceHost$DeviceHostListener| |onRemoteFieldActivated| ||
|com.android.nfc.DeviceHost$DeviceHostListener| |onRemoteFieldDeactivated| ||
|com.android.nfc.cardemulation.AidRoutingManager| |clearNfcRoutingTableLocked| ||
|com.android.nfc.NfcService$NfcAdapterService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.NfcAdapter| |invokeBeam| |android.app.Activity|
|android.nfc.NfcAdapter| |invokeBeam| |android.nfc.BeamShareData|
|com.android.nfc.cardemulation.RegisteredAidCache| |generateAidCacheLocked| ||
|com.android.nfc.cardemulation.RegisteredAidCache| |onNfcEnabled| ||
|com.android.nfc.dhimpl.NativeNfcManager| |notifyLlcpLinkActivation| |com.android.nfc.dhimpl.NativeP2pDevice|
|com.android.nfc.dhimpl.NativeNfcManager| |notifyLlcpLinkDeactivated| |com.android.nfc.dhimpl.NativeP2pDevice|
|com.android.nfc.dhimpl.NativeNfcManager| |notifyNdefMessageListeners| |com.android.nfc.dhimpl.NativeNfcTag|
|com.android.nfc.dhimpl.NativeNfcManager| |notifyRfFieldActivated| ||
|com.android.nfc.dhimpl.NativeNfcManager| |notifyRfFieldDeactivated| ||
|com.android.nfc.BeamShareActivity| |parseShareIntentAndFinish| |android.content.Intent|
|com.android.nfc.cardemulation.RegisteredAidCache| |onPreferredForegroundServiceChanged| |android.content.ComponentName|
|com.android.nfc.cardemulation.RegisteredAidCache| |onPreferredPaymentServiceChanged| |android.content.ComponentName|
|com.android.nfc.cardemulation.RegisteredAidCache| |onServicesUpdated| |int,java.util.List|
|com.android.nfc.cardemulation.CardEmulationManager| |onNfcEnabled| ||
|com.android.nfc.BeamShareActivity$2| |onClick| |android.content.DialogInterface,int|
|com.android.nfc.BeamShareActivity$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.nfc.BeamShareActivity| |onCreate| |android.os.Bundle|
|com.android.nfc.cardemulation.CardEmulationManager| |onPreferredForegroundServiceChanged| |android.content.ComponentName|
|com.android.nfc.cardemulation.CardEmulationManager| |onPreferredPaymentServiceChanged| |android.content.ComponentName|
|com.android.nfc.cardemulation.CardEmulationManager| |onServicesUpdated| |int,java.util.List|
|com.android.nfc.NfcService$EnableDisableTask| |enableInternal| ||
|com.android.nfc.cardemulation.PreferredServices$Callback| |onPreferredForegroundServiceChanged| |android.content.ComponentName|
|com.android.nfc.cardemulation.PreferredServices$Callback| |onPreferredPaymentServiceChanged| |android.content.ComponentName|
|com.android.nfc.cardemulation.RegisteredServicesCache$Callback| |onServicesUpdated| |int,java.util.List|
|com.android.nfc.NfcService$EnableDisableTask| |doInBackground| |java.lang.Integer[]|
|com.android.nfc.cardemulation.PreferredServices| |computePreferredForegroundService| ||
|com.android.nfc.cardemulation.PreferredServices| |loadDefaultsFromSettings| |int|
|com.android.nfc.cardemulation.RegisteredServicesCache| |registerAidGroupForService| |int,int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|com.android.nfc.cardemulation.RegisteredServicesCache| |removeAidGroupForService| |int,int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.RegisteredServicesCache| |invalidateCache| |int|
|com.android.nfc.NfcService$EnableDisableTask| |doInBackground| |java.lang.Object[]|
|com.android.nfc.cardemulation.PreferredServices| |registerPreferredForegroundService| |android.content.ComponentName,int|
|com.android.nfc.cardemulation.PreferredServices| |setDefaultForNextTap| |android.content.ComponentName|
|com.android.nfc.cardemulation.PreferredServices| |unregisterForegroundService| |int|
|com.android.nfc.cardemulation.PreferredServices| |onHostEmulationDeactivated| ||
|com.android.nfc.cardemulation.PreferredServices| |onServicesUpdated| ||
|com.android.nfc.cardemulation.PreferredServices$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.nfc.cardemulation.PreferredServices| |<init>| |android.content.Context,com.android.nfc.cardemulation.RegisteredServicesCache,com.android.nfc.cardemulation.RegisteredAidCache,com.android.nfc.cardemulation.PreferredServices$Callback|
|com.android.nfc.cardemulation.PreferredServices| |onUserSwitched| |int|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager| |isServiceRegistered| |int,android.content.ComponentName|
|com.android.nfc.cardemulation.CardEmulationManager| |onUserSwitched| |int|
|com.android.nfc.cardemulation.RegisteredServicesCache$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.nfc.cardemulation.RegisteredServicesCache| |initialize| ||
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |setPreferredService| |android.content.ComponentName|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |setDefaultForNextTap| |int,android.content.ComponentName|
|com.android.nfc.cardemulation.PreferredServices| |unregisteredPreferredForegroundService| |int|
|com.android.nfc.cardemulation.PreferredServices| |onUidToBackground| |int|
|com.android.nfc.cardemulation.CardEmulationManager| |onHostCardEmulationDeactivated| ||
|com.android.nfc.cardemulation.CardEmulationManager| |<init>| |android.content.Context|
|android.nfc.INfcCardEmulation$Stub$Proxy| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|android.nfc.INfcCardEmulation$Stub| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|android.nfc.INfcCardEmulation$Stub$Proxy| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.NfcService$1| |onReceive| |android.content.Context,android.content.Intent|
|android.nfc.INfcCardEmulation$Stub$Proxy| |setPreferredService| |android.content.ComponentName|
|android.nfc.INfcCardEmulation$Stub| |setPreferredService| |android.content.ComponentName|
|android.nfc.INfcCardEmulation$Stub$Proxy| |setDefaultForNextTap| |int,android.content.ComponentName|
|android.nfc.INfcCardEmulation$Stub| |setDefaultForNextTap| |int,android.content.ComponentName|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |unsetPreferredService| ||
|com.android.nfc.ForegroundUtils$Callback| |onUidToBackground| |int|
|com.android.nfc.NfcService| |onHostCardEmulationDeactivated| ||
|com.android.nfc.NfcService| |<init>| |android.app.Application|
|android.nfc.INfcCardEmulation| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|android.nfc.INfcCardEmulation$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.INfcCardEmulation| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation| |setPreferredService| |android.content.ComponentName|
|android.nfc.INfcCardEmulation| |setDefaultForNextTap| |int,android.content.ComponentName|
|android.nfc.INfcCardEmulation$Stub$Proxy| |unsetPreferredService| ||
|android.nfc.INfcCardEmulation$Stub| |unsetPreferredService| ||
|com.android.nfc.ForegroundUtils| |handleUidToBackground| |int|
|com.android.nfc.DeviceHost$DeviceHostListener| |onHostCardEmulationDeactivated| ||
|com.android.nfc.NfcApplication| |onCreate| ||
|android.nfc.cardemulation.CardEmulation| |registerAidsForService| |android.content.ComponentName,java.lang.String,java.util.List|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.cardemulation.CardEmulation| |removeAidsForService| |android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.cardemulation.CardEmulation| |setPreferredService| |android.app.Activity,android.content.ComponentName|
|android.nfc.cardemulation.CardEmulation| |setDefaultForNextTap| |android.content.ComponentName|
|android.nfc.INfcCardEmulation| |unsetPreferredService| ||
|com.android.nfc.ForegroundUtils| |onForegroundActivitiesChanged| |int,int,boolean|
|android.nfc.cardemulation.CardEmulation| |getAidsForService| |android.content.ComponentName,java.lang.String|
|android.nfc.cardemulation.CardEmulation| |isDefaultServiceForAid| |android.content.ComponentName,java.lang.String|
|android.nfc.cardemulation.CardEmulation| |isDefaultServiceForCategory| |android.content.ComponentName,java.lang.String|
|android.nfc.cardemulation.CardEmulation| |setDefaultServiceForCategory| |android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.AppChooserActivity| |onItemClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.nfc.cardemulation.TapAgainDialog| |onStop| ||
|android.nfc.cardemulation.CardEmulation| |unsetPreferredService| |android.app.Activity|
|android.app.IProcessObserver$Stub$Proxy| |onForegroundActivitiesChanged| |int,int,boolean|
|com.android.nfc.ForegroundUtils| |onProcessDied| |int,int|
|com.android.internal.app.AlertActivity| |onStop| ||
|android.app.IProcessObserver$Stub$Proxy| |onProcessDied| |int,int|
|com.android.server.VibratorService| |cancelVibrate| |android.os.IBinder|
|android.os.IVibratorService$Stub$Proxy| |cancelVibrate| |android.os.IBinder|
|android.os.IVibratorService$Stub| |cancelVibrate| |android.os.IBinder|
|android.os.IVibratorService| |cancelVibrate| |android.os.IBinder|
|android.os.SystemVibrator| |cancel| ||
|android.os.Vibrator| |cancel| ||
|com.android.server.VibratorService| |doVibratorOff| ||
|com.android.server.VibratorService| |doCancelVibrateLocked| ||
|com.android.server.VibratorService| |access$200| |com.android.server.VibratorService|
|com.android.server.VibratorService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.ContentService| |isSyncActive| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService$Stub$Proxy| |isSyncActive| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService$Stub| |isSyncActive| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService| |isSyncActive| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.ContentResolver| |isSyncActive| |android.accounts.Account,java.lang.String|
|com.android.server.content.ContentService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ContextImpl$ApplicationContentResolver| |isSyncActive| |android.accounts.Account,java.lang.String|
|android.test.mock.MockContentResolver| |isSyncActive| |android.accounts.Account,java.lang.String|
|android.test.SyncBaseInstrumentation| |syncProvider| |android.net.Uri,java.lang.String,java.lang.String|
|com.android.server.content.ContentService| |getCurrentSyncsAsUser| |int|
|android.content.IContentService$Stub$Proxy| |getCurrentSyncsAsUser| |int|
|android.content.IContentService$Stub| |getCurrentSyncsAsUser| |int|
|com.android.server.content.ContentService| |getCurrentSyncs| ||
|android.content.IContentService| |getCurrentSyncsAsUser| |int|
|android.content.IContentService$Stub$Proxy| |getCurrentSyncs| ||
|android.content.IContentService$Stub| |getCurrentSyncs| ||
|android.content.ContentResolver| |getCurrentSyncsAsUser| |int|
|android.content.IContentService| |getCurrentSyncs| ||
|android.app.ContextImpl$ApplicationContentResolver| |getCurrentSyncsAsUser| |int|
|android.test.mock.MockContentResolver| |getCurrentSyncsAsUser| |int|
|android.content.ContentResolver| |getCurrentSync| ||
|android.content.ContentResolver| |getCurrentSyncs| ||
|android.app.ContextImpl$ApplicationContentResolver| |getCurrentSync| ||
|android.test.mock.MockContentResolver| |getCurrentSync| ||
|android.app.ContextImpl$ApplicationContentResolver| |getCurrentSyncs| ||
|android.test.mock.MockContentResolver| |getCurrentSyncs| ||
|com.android.server.content.ContentService| |getSyncStatusAsUser| |android.accounts.Account,java.lang.String,android.content.ComponentName,int|
|android.content.IContentService$Stub$Proxy| |getSyncStatusAsUser| |android.accounts.Account,java.lang.String,android.content.ComponentName,int|
|android.content.IContentService$Stub| |getSyncStatusAsUser| |android.accounts.Account,java.lang.String,android.content.ComponentName,int|
|com.android.server.content.ContentService| |getSyncStatus| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService| |getSyncStatusAsUser| |android.accounts.Account,java.lang.String,android.content.ComponentName,int|
|android.content.IContentService$Stub$Proxy| |getSyncStatus| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService$Stub| |getSyncStatus| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.ContentResolver| |getSyncStatusAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService| |getSyncStatus| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.app.ContextImpl$ApplicationContentResolver| |getSyncStatusAsUser| |android.accounts.Account,java.lang.String,int|
|android.test.mock.MockContentResolver| |getSyncStatusAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.ContentResolver| |getSyncStatus| |android.accounts.Account,java.lang.String|
|android.app.ContextImpl$ApplicationContentResolver| |getSyncStatus| |android.accounts.Account,java.lang.String|
|android.test.mock.MockContentResolver| |getSyncStatus| |android.accounts.Account,java.lang.String|
|com.android.server.content.ContentService| |isSyncPendingAsUser| |android.accounts.Account,java.lang.String,android.content.ComponentName,int|
|android.content.IContentService$Stub$Proxy| |isSyncPendingAsUser| |android.accounts.Account,java.lang.String,android.content.ComponentName,int|
|android.content.IContentService$Stub| |isSyncPendingAsUser| |android.accounts.Account,java.lang.String,android.content.ComponentName,int|
|com.android.server.content.ContentService| |isSyncPending| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService| |isSyncPendingAsUser| |android.accounts.Account,java.lang.String,android.content.ComponentName,int|
|android.content.IContentService$Stub$Proxy| |isSyncPending| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService$Stub| |isSyncPending| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.ContentResolver| |isSyncPendingAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService| |isSyncPending| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.app.ContextImpl$ApplicationContentResolver| |isSyncPendingAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.ContentResolver| |isSyncPending| |android.accounts.Account,java.lang.String|
|android.test.mock.MockContentResolver| |isSyncPendingAsUser| |android.accounts.Account,java.lang.String,int|
|android.app.ContextImpl$ApplicationContentResolver| |isSyncPending| |android.accounts.Account,java.lang.String|
|android.test.mock.MockContentResolver| |isSyncPending| |android.accounts.Account,java.lang.String|
|com.android.server.wifi.WifiServiceImpl| |acquireWifiLock| |android.os.IBinder,int,java.lang.String,android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub$Proxy| |acquireWifiLock| |android.os.IBinder,int,java.lang.String,android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub| |acquireWifiLock| |android.os.IBinder,int,java.lang.String,android.os.WorkSource|
|android.net.wifi.IWifiManager| |acquireWifiLock| |android.os.IBinder,int,java.lang.String,android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.WifiManager$WifiLock| |acquire| ||
|com.android.server.wifi.WifiServiceImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.sip.SipAudioCall| |grabWifiHighPerfLock| ||
|com.android.server.sip.SipService| |updateWakeLocks| ||
|android.net.sip.SipAudioCall| |startAudioInternal| ||
|com.android.server.sip.SipService| |close| |java.lang.String|
|com.android.server.sip.SipService| |onConnectivityChanged| |android.net.NetworkInfo|
|com.android.server.sip.SipService| |open3| |android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener|
|android.net.sip.SipAudioCall| |startAudio| ||
|android.net.sip.ISipService$Stub$Proxy| |close| |java.lang.String|
|android.net.sip.ISipService$Stub| |close| |java.lang.String|
|com.android.server.sip.SipService| |access$1700| |com.android.server.sip.SipService,android.net.NetworkInfo|
|android.net.sip.ISipService$Stub$Proxy| |open3| |android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener|
|android.net.sip.ISipService$Stub| |open3| |android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener|
|android.net.sip.SipAudioCall| |transferToNewSession| ||
|com.android.internal.telephony.sip.SipPhone$SipConnection$1| |onCallEstablished| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.sip.SipPhone$SipConnection$1| |onCallHeld| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.sip.SipPhone$SipConnection| |separate| ||
|android.net.sip.ISipService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.sip.ISipService| |close| |java.lang.String|
|com.android.server.sip.SipService$ConnectivityReceiver$1| |run| ||
|android.net.sip.ISipService| |open3| |android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener|
|android.net.sip.SipAudioCall| |access$800| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.Connection| |separate| ||
|com.android.server.sip.SipService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.sip.SipManager| |close| |java.lang.String|
|android.net.sip.SipManager| |open| |android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener|
|android.net.sip.SipAudioCall$1| |onCallEstablished| |android.net.sip.SipSession,java.lang.String|
|com.android.server.wifi.WifiServiceImpl| |releaseWifiLock| |android.os.IBinder|
|android.net.wifi.IWifiManager$Stub$Proxy| |releaseWifiLock| |android.os.IBinder|
|android.net.wifi.IWifiManager$Stub| |releaseWifiLock| |android.os.IBinder|
|android.net.wifi.IWifiManager| |releaseWifiLock| |android.os.IBinder|
|android.net.wifi.WifiManager$WifiLock| |finalize| ||
|android.net.wifi.WifiManager$WifiLock| |release| ||
|android.net.sip.SipAudioCall| |releaseWifiHighPerfLock| ||
|com.android.server.sip.SipService| |unregisterReceivers| ||
|android.net.sip.SipAudioCall| |stopCall| |boolean|
|com.android.server.sip.SipService| |notifyProfileRemoved| |android.net.sip.SipProfile|
|android.net.sip.SipAudioCall| |close| |boolean|
|android.net.sip.SipAudioCall| |endCall| ||
|android.net.sip.SipAudioCall| |access$1000| |android.net.sip.SipAudioCall,boolean|
|android.net.sip.SipAudioCall| |close| ||
|android.net.sip.SipAudioCall| |onError| |int,java.lang.String|
|com.android.internal.telephony.sip.SipPhone$SipConnection| |hangup| ||
|android.net.sip.SipAudioCall$1| |onCallBusy| |android.net.sip.SipSession|
|android.net.sip.SipAudioCall$1| |onCallEnded| |android.net.sip.SipSession|
|com.android.internal.telephony.sip.SipPhone$SipConnection$1| |onCallEnded| |int|
|android.net.sip.SipAudioCall| |access$1300| |android.net.sip.SipAudioCall,int,java.lang.String|
|com.android.internal.telephony.Connection| |hangup| ||
|com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter| |onCallEnded| |int|
|com.android.internal.telephony.sip.SipPhone$SipConnection$1| |onChanged| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.sip.SipPhone$SipConnection$1| |onError| |int|
|android.net.sip.SipAudioCall$1| |onError| |android.net.sip.SipSession,int,java.lang.String|
|com.android.internal.telephony.sip.SipPhone$SipCall| |hangup| ||
|com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter| |onCallBusy| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter| |onCallEnded| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter| |onError| |int|
|com.android.internal.telephony.Call| |hangup| ||
|com.android.internal.telephony.sip.SipPhone$SipCall| |rejectCall| ||
|com.android.internal.telephony.sip.SipPhone$SipConnection$1| |onCallBusy| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.sip.SipPhone$SipConnection$1| |onCallEnded| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter| |onError| |android.net.sip.SipAudioCall,int,java.lang.String|
|com.android.internal.telephony.CallManager| |dial| |com.android.internal.telephony.Phone,java.lang.String,int|
|com.android.internal.telephony.CallManager| |acceptCall| |com.android.internal.telephony.Call|
|com.android.internal.telephony.CallManager| |hangupForegroundResumeBackground| |com.android.internal.telephony.Call|
|com.android.internal.telephony.Call| |hangupIfAlive| ||
|com.android.internal.telephony.sip.SipPhone| |rejectCall| ||
|com.android.internal.telephony.sip.SipPhone$SipConnection$1| |onError| |android.net.sip.SipAudioCall,int,java.lang.String|
|com.android.internal.telephony.cdma.CdmaCall| |hangupIfAlive| ||
|com.android.internal.telephony.gsm.GsmCall| |hangupIfAlive| ||
|com.android.internal.telephony.imsphone.ImsPhoneCall| |hangupIfAlive| ||
|com.android.internal.telephony.sip.SipCallBase| |hangupIfAlive| ||
|com.android.internal.telephony.sip.SipPhone$SipCall| |hangupIfAlive| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |hangupAndPowerOff| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |hangupAndPowerOff| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |hangupAndPowerOff| ||
|com.android.internal.telephony.ServiceStateTracker| |hangupAndPowerOff| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setPowerStateToDesired| ||
|com.android.internal.telephony.ServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.ServiceStateTracker| |processPendingRadioPowerOffAfterDataOff| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollState| ||
|com.android.internal.telephony.ServiceStateTracker| |setPowerStateToDesired| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.dataconnection.DcTracker| |restartRadio| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |processPendingRadioPowerOffAfterDataOff| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |processPendingRadioPowerOffAfterDataOff| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onDisconnectDone| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |processPendingRadioPowerOffAfterDataOff| ||
|com.android.internal.telephony.ServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GSMPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.ServiceStateTracker| |pollState| ||
|com.android.internal.telephony.ServiceStateTracker| |requestShutdown| ||
|com.android.internal.telephony.ServiceStateTracker| |setRadioPower| |boolean|
|com.android.internal.telephony.ServiceStateTracker| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setPowerStateToDesired| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |restartRadio| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onDisconnectDone| |int,android.os.AsyncResult|
|com.android.internal.telephony.PhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |requestShutdown| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |requestShutdown| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |requestShutdown| ||
|com.android.internal.telephony.PhoneBase| |shutdownRadio| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setRadioPower| |boolean|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setRadioPower| |boolean|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setRadioPower| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.PhoneProxy| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setPowerStateToDesired| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |doRecovery| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.Phone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.Phone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMALTEPhone| |shutdownRadio| ||
|com.android.internal.telephony.cdma.CDMAPhone| |shutdownRadio| ||
|com.android.internal.telephony.gsm.GSMPhone| |shutdownRadio| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |shutdownRadio| ||
|com.android.internal.telephony.imsphone.ImsPhone| |shutdownRadio| ||
|com.android.internal.telephony.Phone| |shutdownRadio| ||
|com.android.internal.telephony.sip.SipPhoneBase| |shutdownRadio| ||
|com.android.internal.telephony.sip.SipPhone| |shutdownRadio| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setRadioPower| |boolean|
|com.android.internal.telephony.gsm.GSMPhone| |setRadioPower| |boolean|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.Phone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |doRecovery| ||
|com.android.internal.telephony.PhoneProxy| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneProxy| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.PhoneProxy| |shutdownRadio| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRadioPower| |boolean|
|com.android.internal.telephony.PhoneBase| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.gsm.GSMPhone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.imsphone.ImsPhone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.sip.SipPhoneBase| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.sip.SipPhone| |setImsRegistrationState| |boolean|
|com.android.server.power.PowerManagerService$BinderService| |acquireWakeLock| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String|
|android.os.IPowerManager$Stub$Proxy| |acquireWakeLock| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String|
|android.os.IPowerManager$Stub| |acquireWakeLock| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String|
|com.android.server.power.PowerManagerService$BinderService| |acquireWakeLockWithUid| |android.os.IBinder,int,java.lang.String,java.lang.String,int|
|android.os.IPowerManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.os.IPowerManager| |acquireWakeLock| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String|
|android.os.IPowerManager$Stub$Proxy| |acquireWakeLockWithUid| |android.os.IBinder,int,java.lang.String,java.lang.String,int|
|android.os.IPowerManager$Stub| |acquireWakeLockWithUid| |android.os.IBinder,int,java.lang.String,java.lang.String,int|
|com.android.server.power.PowerManagerService$BinderService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.os.PowerManager$WakeLock| |acquireLocked| ||
|android.os.IPowerManager| |acquireWakeLockWithUid| |android.os.IBinder,int,java.lang.String,java.lang.String,int|
|android.os.PowerManager$WakeLock| |acquire| |long|
|android.os.PowerManager$WakeLock| |acquire| ||
|android.net.DhcpStateMachine$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsStorageMonitor| |handleIccFull| ||
|com.android.server.devicepolicy.DevicePolicyManagerService| |wipeDataLocked| |boolean,java.lang.String|
|com.android.server.notification.NextAlarmTracker$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.sip.SipWakeLock| |acquire| |long|
|com.android.server.wifi.WifiStateMachine| |handleScreenStateChanged| |boolean,boolean|
|android.hardware.location.GeofenceHardwareImpl| |acquireWakeLock| ||
|android.media.AsyncPlayer| |acquireWakeLock| ||
|android.media.MediaFocusControl| |dispatchMediaKeyEvent| |android.view.KeyEvent,boolean|
|android.media.MediaFocusControl| |dispatchMediaKeyEventForCalls| |android.view.KeyEvent,boolean|
|android.media.MediaFocusControl| |startVoiceBasedInteractions| |boolean|
|android.media.MediaPlayer| |setWakeMode| |android.content.Context,int|
|android.media.MediaPlayer| |stayAwake| |boolean|
|com.android.internal.os.storage.ExternalStorageFormatter| |onCreate| ||
|com.android.internal.policy.impl.PhoneWindowManager| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager| |interceptPowerKeyDown| |android.view.KeyEvent,boolean|
|com.android.internal.telephony.cdma.CdmaConnection| |acquireWakeLock| ||
|com.android.internal.telephony.cdma.CDMAPhone| |handleEnterEmergencyCallbackMode| |android.os.Message|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.gsm.GsmConnection| |acquireWakeLock| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |acquireWakeLock| ||
|com.android.internal.telephony.imsphone.ImsPhone| |handleEnterEmergencyCallbackMode| ||
|com.android.internal.telephony.InboundSmsHandler$IdleState| |exit| ||
|com.android.internal.telephony.InboundSmsHandler| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CellBroadcastHandler|
|com.android.internal.telephony.ProxyController| |setRadioCapability| |android.telephony.RadioAccessFamily[]|
|com.android.internal.telephony.RIL| |acquireWakeLock| ||
|com.android.internal.telephony.WakeLockStateMachine$IdleState| |exit| ||
|com.android.internal.telephony.WakeLockStateMachine| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneBase|
|com.android.nfc.NfcService$ApplyRoutingTask| |doInBackground| |java.lang.Integer[]|
|com.android.nfc.NfcService$EnableDisableTask| |enableInternal| ||
|com.android.server.AlarmManagerService| |deliverAlarmsLocked| |java.util.ArrayList,long|
|com.android.server.am.ActivityStackSupervisor| |acquireLaunchWakelock| ||
|com.android.server.am.ActivityStackSupervisor| |goingToSleepLocked| ||
|com.android.server.backup.BackupManagerService$RunBackupReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.backup.BackupManagerService$RunInitializeReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.backup.BackupManagerService| |restoreAtInstall| |java.lang.String,int|
|com.android.server.content.SyncManager$ActiveSyncContext| |<init>| |com.android.server.content.SyncManager,com.android.server.content.SyncOperation,long,int|
|com.android.server.content.SyncManager$SyncAlarmIntentReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.DockObserver| |updateLocked| ||
|com.android.server.dreams.DreamManagerService| |startDozingInternal| |android.os.IBinder,int,int|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |setActiveSource| |boolean|
|com.android.server.job.JobServiceContext| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.location.GeofenceManager| |sendIntent| |android.app.PendingIntent,android.content.Intent|
|com.android.server.location.GpsLocationProvider| |handleDownloadXtraData| ||
|com.android.server.location.GpsLocationProvider| |handleInjectNtpTime| ||
|com.android.server.location.GpsLocationProvider| |sendMessage| |int,int,java.lang.Object|
|com.android.server.LocationManagerService$Receiver| |incrementPendingBroadcastsLocked| ||
|com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver| |aquireWakeLockLocked| ||
|com.android.server.media.MediaSessionService$SessionManagerImpl| |dispatchMediaKeyEventLocked| |android.view.KeyEvent,boolean,com.android.server.media.MediaSessionRecord|
|com.android.server.media.MediaSessionService$SessionManagerImpl| |startVoiceInput| |boolean|
|com.android.server.NativeDaemonConnector| |listenToSocket| ||
|com.android.server.net.NetworkStatsService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.net.NetworkStatsService$5| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.net.NetworkStatsService| |performPoll| |int|
|com.android.server.net.NetworkStatsService| |updateIfaces| ||
|com.android.server.power.ShutdownThread| |beginShutdownSequence| |android.content.Context|
|com.android.server.sip.SipWakeLock| |acquire| |java.lang.Object|
|com.android.server.UiModeManagerService| |updateLocked| |int,int|
|com.android.server.VibratorService$VibrateThread| |<init>| |com.android.server.VibratorService,com.android.server.VibratorService$Vibration|
|com.android.server.wifi.WifiStateMachine$DriverStartedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DriverStartingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DriverStoppedState| |processMessage| |android.os.Message|
|com.android.server.WiredAccessoryManager| |systemReady| ||
|com.android.server.WiredAccessoryManager| |updateLocked| |java.lang.String,int|
|com.android.server.wm.WindowManagerService| |setHoldScreenLocked| |com.android.server.wm.Session|
|com.android.server.wm.WindowManagerService| |startFreezingDisplayLocked| |boolean,int,int|
|com.android.server.content.SyncManager$ActiveSyncContext| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.content.SyncManager$ActiveSyncContext| |onServiceDisconnected| |android.content.ComponentName|
|com.android.server.content.SyncManager| |sendSyncAlarmMessage| ||
|com.android.server.content.SyncManager| |sendCheckAlarmsMessage| ||
|com.android.server.content.SyncManager| |sendSyncFinishedOrCanceledMessage| |com.android.server.content.SyncManager$ActiveSyncContext,android.content.SyncResult|
|com.android.server.content.SyncManager| |sendCancelSyncsMessage| |com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle|
|com.android.server.content.SyncManager| |postSyncExpiryMessage| |com.android.server.content.SyncManager$ActiveSyncContext|
|com.android.server.devicepolicy.DevicePolicyManagerService| |wipeDeviceOrUserLocked| |boolean,int,java.lang.String|
|com.android.server.sip.SipSessionGroup| |processRequest| |javax.sip.RequestEvent|
|com.android.server.wifi.WifiStateMachine| |access$2400| |com.android.server.wifi.WifiStateMachine,boolean,boolean|
|android.hardware.location.GeofenceHardwareImpl| |reportGeofenceMonitorStatus| |int,int,android.location.Location,int|
|android.hardware.location.GeofenceHardwareImpl| |reportGeofenceOperationStatus| |int,int,int|
|android.hardware.location.GeofenceHardwareImpl| |reportGeofenceTransition| |int,android.location.Location,int,long,int,int|
|android.media.AsyncPlayer| |enqueueLocked| |android.media.AsyncPlayer$Command|
|android.media.MediaFocusControl| |filterMediaKeyEvent| |android.view.KeyEvent,boolean|
|android.media.MediaFocusControl| |sendSimulatedMediaButtonEvent| |android.view.KeyEvent,boolean|
|android.media.MediaFocusControl| |filterVoiceInputKeyEvent| |android.view.KeyEvent,boolean|
|android.media.MediaPlayer| |access$900| |android.media.MediaPlayer,boolean|
|android.media.MediaPlayer| |pause| ||
|android.media.MediaPlayer| |release| ||
|android.media.MediaPlayer| |reset| ||
|android.media.MediaPlayer| |start| ||
|android.media.MediaPlayer| |stop| ||
|android.view.WindowManagerPolicy| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager| |interceptFallback| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.telephony.cdma.CdmaConnection| |<init>| |android.content.Context,com.android.internal.telephony.cdma.CdmaCallWaitingNotification,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall|
|com.android.internal.telephony.cdma.CdmaConnection| |<init>| |android.content.Context,com.android.internal.telephony.DriverCall,com.android.internal.telephony.cdma.CdmaCallTracker,int|
|com.android.internal.telephony.cdma.CdmaConnection| |<init>| |android.content.Context,java.lang.String,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall|
|com.android.internal.telephony.cdma.CdmaConnection| |setPostDialState| |com.android.internal.telephony.Connection$PostDialState|
|com.android.internal.telephony.cdma.CDMALTEPhone| |handleEnterEmergencyCallbackMode| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.gsm.GsmConnection| |<init>| |android.content.Context,com.android.internal.telephony.DriverCall,com.android.internal.telephony.gsm.GsmCallTracker,int|
|com.android.internal.telephony.gsm.GsmConnection| |<init>| |android.content.Context,java.lang.String,com.android.internal.telephony.gsm.GsmCallTracker,com.android.internal.telephony.gsm.GsmCall|
|com.android.internal.telephony.gsm.GsmConnection| |setPostDialState| |com.android.internal.telephony.Connection$PostDialState|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |<init>| |android.content.Context,com.android.ims.ImsCall,com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.internal.telephony.imsphone.ImsPhoneCall|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |<init>| |android.content.Context,java.lang.String,com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.internal.telephony.imsphone.ImsPhoneCall|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |setPostDialState| |com.android.internal.telephony.Connection$PostDialState|
|com.android.internal.telephony.imsphone.ImsPhone| |access$000| |com.android.internal.telephony.imsphone.ImsPhone|
|com.android.internal.util.State| |exit| ||
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |<init>| |android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.cdma.CdmaSMSDispatcher|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CellBroadcastHandler|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |<init>| |android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CellBroadcastHandler|
|com.android.internal.telephony.SubscriptionController| |setDefaultDataSubId| |int|
|com.android.internal.telephony.RIL| |send| |com.android.internal.telephony.RILRequest|
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.CellBroadcastHandler| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneBase|
|com.android.nfc.NfcService$ApplyRoutingTask| |doInBackground| |java.lang.Object[]|
|com.android.nfc.NfcService$EnableDisableTask| |doInBackground| |java.lang.Integer[]|
|com.android.server.AlarmManagerService$AlarmThread| |run| ||
|com.android.server.AlarmManagerService| |interactiveStateChangedLocked| |boolean|
|com.android.server.am.ActivityStack| |startPausingLocked| |boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |updateSleepIfNeededLocked| ||
|com.android.server.am.ActivityStackSupervisor| |shutdownLocked| |int|
|com.android.server.backup.Trampoline| |restoreAtInstall| |java.lang.String,int|
|com.android.server.content.SyncManager$SyncHandler| |dispatchSyncOperation| |com.android.server.content.SyncOperation|
|com.android.server.DockObserver| |onBootPhase| |int|
|com.android.server.DockObserver| |setDockStateLocked| |int|
|com.android.server.dreams.DreamManagerService| |access$1800| |com.android.server.dreams.DreamManagerService,android.os.IBinder,int,int|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |disableDevice| |boolean,com.android.server.hdmi.HdmiCecLocalDevice$PendingActionClearedCallback|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |mayResetActiveSource| |int|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |maySetActiveSource| |int|
|com.android.server.hdmi.OneTouchPlayAction| |broadcastActiveSource| ||
|com.android.server.location.GeofenceManager| |sendIntentEnter| |android.app.PendingIntent|
|com.android.server.location.GeofenceManager| |sendIntentExit| |android.app.PendingIntent|
|com.android.server.location.GpsLocationProvider| |access$3600| |com.android.server.location.GpsLocationProvider|
|com.android.server.location.GpsLocationProvider| |access$3400| |com.android.server.location.GpsLocationProvider|
|com.android.server.location.GpsLocationProvider| |access$1900| |com.android.server.location.GpsLocationProvider,int,int,java.lang.Object|
|com.android.server.location.GpsLocationProvider| |disable| ||
|com.android.server.location.GpsLocationProvider| |enable| ||
|com.android.server.location.GpsLocationProvider| |handleUpdateNetworkState| |int,android.net.NetworkInfo|
|com.android.server.location.GpsLocationProvider| |requestUtcTime| ||
|com.android.server.location.GpsLocationProvider| |setRequest| |com.android.internal.location.ProviderRequest,android.os.WorkSource|
|com.android.server.location.GpsLocationProvider| |updateNetworkState| |int,android.net.NetworkInfo|
|com.android.server.location.GpsLocationProvider| |xtraDownloadRequest| ||
|com.android.server.LocationManagerService$Receiver| |callLocationChangedLocked| |android.location.Location|
|com.android.server.LocationManagerService$Receiver| |callProviderEnabledLocked| |java.lang.String,boolean|
|com.android.server.LocationManagerService$Receiver| |callStatusChangedLocked| |java.lang.String,int,android.os.Bundle|
|com.android.server.media.MediaSessionService$SessionManagerImpl| |handleVoiceKeyEventLocked| |android.view.KeyEvent,boolean,com.android.server.media.MediaSessionRecord|
|com.android.server.NativeDaemonConnector| |run| ||
|com.android.server.net.NetworkStatsService| |access$600| |com.android.server.net.NetworkStatsService,int|
|com.android.server.net.NetworkStatsService| |access$1400| |com.android.server.net.NetworkStatsService|
|com.android.server.power.ShutdownThread| |access$000| |android.content.Context|
|com.android.server.power.ShutdownThread| |shutdownInner| |android.content.Context,boolean|
|com.android.server.sip.SipService$MyExecutor| |execute| |java.lang.Runnable|
|com.android.server.sip.SipService$SipAutoReg| |onResponse| |boolean|
|com.android.server.sip.SipService$SipAutoReg| |run| ||
|com.android.server.sip.SipService$SipAutoReg| |start| |com.android.server.sip.SipSessionGroup|
|com.android.server.UiModeManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |updateDockState| |int|
|com.android.server.UiModeManagerService| |updateTwilight| ||
|com.android.server.VibratorService| |startVibrationLocked| |com.android.server.VibratorService$Vibration|
|com.android.internal.util.State| |processMessage| |android.os.Message|
|com.android.server.input.InputManagerService$WiredAccessoryCallbacks| |systemReady| ||
|com.android.server.WiredAccessoryManager| |access$700| |com.android.server.WiredAccessoryManager,java.lang.String,int|
|com.android.server.WiredAccessoryManager| |notifyWiredAccessoryChanged| |long,int,int|
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedInner| |boolean|
|com.android.server.wm.WindowManagerService| |updateOrientationFromAppTokensLocked| |android.content.res.Configuration,android.os.IBinder|
|com.android.server.wm.WindowManagerService| |updateRotationUncheckedLocked| |boolean|
|com.android.server.wm.WindowManagerService| |reconfigureDisplayLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |startAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken|
|com.android.server.content.SyncManager| |access$1100| |com.android.server.content.SyncManager|
|com.android.server.content.SyncManager| |access$100| |com.android.server.content.SyncManager|
|com.android.server.content.SyncManager| |onUserStarting| |int|
|com.android.server.content.SyncManager| |scheduleSyncOperation| |com.android.server.content.SyncOperation|
|com.android.server.content.SyncManager| |updateRunningAccounts| ||
|com.android.server.content.SyncManager| |access$1300| |com.android.server.content.SyncManager,com.android.server.content.SyncManager$ActiveSyncContext,android.content.SyncResult|
|com.android.server.content.SyncManager| |cancelActiveSync| |com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle|
|com.android.server.content.SyncManager| |access$3400| |com.android.server.content.SyncManager,com.android.server.content.SyncManager$ActiveSyncContext|
|com.android.server.wifi.WifiStateMachine$DefaultState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DriverStartedState| |enter| ||
|com.android.server.location.FlpHardwareProvider| |onGeofenceMonitorStatus| |int,int,android.location.Location|
|com.android.server.location.GpsLocationProvider| |reportGeofenceStatus| |int,int,double,double,double,float,float,float,long|
|android.hardware.location.GeofenceHardwareImpl| |reportGeofenceAddStatus| |int,int|
|android.hardware.location.GeofenceHardwareImpl| |reportGeofencePauseStatus| |int,int|
|android.hardware.location.GeofenceHardwareImpl| |reportGeofenceRemoveStatus| |int,int|
|android.hardware.location.GeofenceHardwareImpl| |reportGeofenceResumeStatus| |int,int|
|com.android.server.location.FlpHardwareProvider| |onGeofenceTransition| |int,android.location.Location,int,long,int|
|com.android.server.location.GpsLocationProvider| |reportGeofenceTransition| |int,int,double,double,double,float,float,float,long,int,long|
|android.media.AsyncPlayer| |play| |android.content.Context,android.net.Uri,boolean,int|
|android.media.AsyncPlayer| |stop| ||
|android.media.MediaFocusControl| |dispatchMediaKeyEvent| |android.view.KeyEvent|
|android.media.MediaFocusControl| |dispatchMediaKeyEventUnderWakelock| |android.view.KeyEvent|
|android.filterpacks.videosrc.MediaSource| |pauseVideo| |boolean|
|android.widget.VideoView| |pause| ||
|android.filterpacks.videosrc.MediaSource| |setupMediaPlayer| |boolean|
|android.filterpacks.videosrc.MediaSource| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |process| |android.filterfw.core.FilterContext|
|android.media.AsyncPlayer$Thread| |run| ||
|android.media.AsyncPlayer| |startSound| |android.media.AsyncPlayer$Command|
|android.media.AudioService$AudioHandler| |cleanupPlayer| |android.media.MediaPlayer|
|android.media.Ringtone| |destroyLocalPlayer| ||
|android.speech.tts.AudioPlaybackQueueItem| |finish| ||
|android.widget.VideoView| |getAudioSessionId| ||
|android.widget.VideoView| |release| |boolean|
|android.widget.VideoView| |stopPlayback| ||
|android.media.AudioService$AudioHandler| |onPlaySoundEffect| |int,int|
|android.media.MediaPlayer| |postEventFromNative| |java.lang.Object,int,int,int,java.lang.Object|
|android.media.Ringtone| |playFallbackRingtone| ||
|android.media.Ringtone| |play| ||
|android.speech.tts.AudioPlaybackQueueItem| |run| ||
|android.widget.VideoView| |start| ||
|com.android.server.wm.InputMonitor| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager| |dispatchUnhandledKey| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.telephony.cdma.CdmaCallTracker| |handleCallWaitingInfo| |com.android.internal.telephony.cdma.CdmaCallWaitingNotification|
|com.android.internal.telephony.cdma.CdmaCallTracker| |handlePollCalls| |android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaCallTracker| |dial| |java.lang.String,int|
|com.android.internal.telephony.cdma.CdmaCallTracker| |dialThreeWay| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaConnection| |processPostDialChar| |char|
|com.android.internal.telephony.cdma.CdmaConnection| |cancelPostDial| ||
|com.android.internal.telephony.cdma.CdmaConnection| |proceedAfterWaitChar| ||
|com.android.internal.telephony.cdma.CdmaConnection| |proceedAfterWildChar| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaConnection| |processNextPostDialChar| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.gsm.GsmCallTracker| |handlePollCalls| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmCallTracker| |dial| |java.lang.String,int,com.android.internal.telephony.UUSInfo|
|com.android.internal.telephony.gsm.GsmConnection| |processPostDialChar| |char|
|com.android.internal.telephony.gsm.GsmConnection| |cancelPostDial| ||
|com.android.internal.telephony.gsm.GsmConnection| |proceedAfterWaitChar| ||
|com.android.internal.telephony.gsm.GsmConnection| |proceedAfterWildChar| |java.lang.String|
|com.android.internal.telephony.gsm.GsmConnection| |processNextPostDialChar| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |dial| |java.lang.String,int,int|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |processPostDialChar| |char|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |cancelPostDial| ||
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |proceedAfterWaitChar| ||
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |proceedAfterWildChar| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |processNextPostDialChar| ||
|com.android.internal.telephony.imsphone.ImsPhone$2| |onECBMEntered| ||
|android.net.DhcpStateMachine$RunningState| |exit| ||
|android.net.DhcpStateMachine$StoppedState| |exit| ||
|android.net.DhcpStateMachine$WaitBeforeStartState| |exit| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady| |exit| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateStart| |exit| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState| |exit| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectingState| |exit| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectionErrorCreatingConnection| |exit| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcRetryingState| |exit| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachedState| |exit| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachingState| |exit| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DefaultState| |exit| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DetachingState| |exit| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$IdleState| |exit| ||
|com.android.internal.telephony.InboundSmsHandler$DefaultState| |exit| ||
|com.android.internal.telephony.InboundSmsHandler$StartupState| |exit| ||
|com.android.internal.telephony.InboundSmsHandler$WaitingState| |exit| ||
|com.android.internal.telephony.WakeLockStateMachine$DefaultState| |exit| ||
|com.android.internal.telephony.WakeLockStateMachine$WaitingState| |exit| ||
|com.android.internal.util.IState| |exit| ||
|com.android.internal.util.StateMachine$SmHandler$HaltingState| |exit| ||
|com.android.internal.util.StateMachine$SmHandler$QuittingState| |exit| ||
|com.android.internal.util.StateMachine$SmHandler| |invokeExitMethods| |com.android.internal.util.StateMachine$SmHandler$StateInfo|
|com.android.server.connectivity.NetworkMonitor$DefaultState| |exit| ||
|com.android.server.connectivity.NetworkMonitor$ValidatedState| |exit| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState| |exit| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState| |exit| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState| |exit| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState| |exit| ||
|com.android.server.NsdService$NsdStateMachine$DefaultState| |exit| ||
|com.android.server.NsdService$NsdStateMachine$DisabledState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatingState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupNegotiationState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$InactiveState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$OngoingGroupRemovalState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pDisabledState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pEnablingState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pNotSupportedState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$ProvisionDiscoveryState| |exit| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$EnabledState| |exit| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$RequestPendingState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$CompletedState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$DefaultState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$DormantState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$HandshakeState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$ScanState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |exit| ||
|com.android.server.wifi.WifiApConfigStore$ActiveState| |exit| ||
|com.android.server.wifi.WifiApConfigStore$DefaultState| |exit| ||
|com.android.server.wifi.WifiApConfigStore$InactiveState| |exit| ||
|com.android.server.wifi.WifiController$ApEnabledState| |exit| ||
|com.android.server.wifi.WifiController$ApStaDisabledState| |exit| ||
|com.android.server.wifi.WifiController$DefaultState| |exit| ||
|com.android.server.wifi.WifiController$DeviceActiveState| |exit| ||
|com.android.server.wifi.WifiController$DeviceInactiveState| |exit| ||
|com.android.server.wifi.WifiController$EcmState| |exit| ||
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |exit| ||
|com.android.server.wifi.WifiController$FullLockHeldState| |exit| ||
|com.android.server.wifi.WifiController$NoLockHeldState| |exit| ||
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |exit| ||
|com.android.server.wifi.WifiController$StaDisabledWithScanState| |exit| ||
|com.android.server.wifi.WifiController$StaEnabledState| |exit| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$StationaryState| |exit| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine$PausedState| |exit| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine$StartedState| |exit| ||
|com.android.server.wifi.WifiStateMachine$ConnectModeState| |exit| ||
|com.android.server.wifi.WifiStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.WifiStateMachine$DisconnectingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$DriverStartingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppedState| |exit| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$InitialState| |exit| ||
|com.android.server.wifi.WifiStateMachine$ObtainingIpState| |exit| ||
|com.android.server.wifi.WifiStateMachine$ScanModeState| |exit| ||
|com.android.server.wifi.WifiStateMachine$SoftApStartedState| |exit| ||
|com.android.server.wifi.WifiStateMachine$SoftApStartingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$SupplicantStartingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$SupplicantStoppingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$TetheredState| |exit| ||
|com.android.server.wifi.WifiStateMachine$TetheringState| |exit| ||
|com.android.server.wifi.WifiStateMachine$UntetheringState| |exit| ||
|com.android.server.wifi.WifiStateMachine$VerifyingLinkState| |exit| ||
|com.android.server.wifi.WifiStateMachine$WaitForP2pDisableState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$ConnectedState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$LinkMonitoringState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$OnlineState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$OnlineWatchState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$VerifyingLinkState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$WatchdogDisabledState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$WatchdogEnabledState| |exit| ||
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |makeInboundSmsHandler| |android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.cdma.CdmaSMSDispatcher|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |makeInboundSmsHandler| |android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.ISub$Stub$Proxy| |setDefaultDataSubId| |int|
|com.android.internal.telephony.ISub$Stub| |setDefaultDataSubId| |int|
|com.android.internal.telephony.SubscriptionController| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.RIL| |acceptCall| |android.os.Message|
|com.android.internal.telephony.RIL| |acknowledgeIncomingGsmSmsWithPdu| |boolean,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |acknowledgeLastIncomingCdmaSms| |boolean,int,android.os.Message|
|com.android.internal.telephony.RIL| |acknowledgeLastIncomingGsmSms| |boolean,int,android.os.Message|
|com.android.internal.telephony.RIL| |cancelPendingUssd| |android.os.Message|
|com.android.internal.telephony.RIL| |changeBarringPassword| |java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |changeIccPin2ForApp| |java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |changeIccPinForApp| |java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |conference| |android.os.Message|
|com.android.internal.telephony.RIL| |deactivateDataCall| |int,int,android.os.Message|
|com.android.internal.telephony.RIL| |deleteSmsOnRuim| |int,android.os.Message|
|com.android.internal.telephony.RIL| |deleteSmsOnSim| |int,android.os.Message|
|com.android.internal.telephony.RIL| |dial| |java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message|
|com.android.internal.telephony.RIL| |exitEmergencyCallbackMode| |android.os.Message|
|com.android.internal.telephony.RIL| |explicitCallTransfer| |android.os.Message|
|com.android.internal.telephony.RIL| |getAvailableNetworks| |android.os.Message|
|com.android.internal.telephony.RIL| |getBasebandVersion| |android.os.Message|
|com.android.internal.telephony.RIL| |getCdmaBroadcastConfig| |android.os.Message|
|com.android.internal.telephony.RIL| |getCDMASubscription| |android.os.Message|
|com.android.internal.telephony.RIL| |getCdmaSubscriptionSource| |android.os.Message|
|com.android.internal.telephony.RIL| |getCellInfoList| |android.os.Message|
|com.android.internal.telephony.RIL| |getCLIR| |android.os.Message|
|com.android.internal.telephony.RIL| |getCurrentCalls| |android.os.Message|
|com.android.internal.telephony.RIL| |getDataCallList| |android.os.Message|
|com.android.internal.telephony.RIL| |getDataRegistrationState| |android.os.Message|
|com.android.internal.telephony.RIL| |getDeviceIdentity| |android.os.Message|
|com.android.internal.telephony.RIL| |getGsmBroadcastConfig| |android.os.Message|
|com.android.internal.telephony.RIL| |getHardwareConfig| |android.os.Message|
|com.android.internal.telephony.RIL| |getIccCardStatus| |android.os.Message|
|com.android.internal.telephony.RIL| |getIMEI| |android.os.Message|
|com.android.internal.telephony.RIL| |getIMEISV| |android.os.Message|
|com.android.internal.telephony.RIL| |getIMSIForApp| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |getImsRegistrationState| |android.os.Message|
|com.android.internal.telephony.RIL| |getLastCallFailCause| |android.os.Message|
|com.android.internal.telephony.RIL| |getLastDataCallFailCause| |android.os.Message|
|com.android.internal.telephony.RIL| |getMute| |android.os.Message|
|com.android.internal.telephony.RIL| |getNeighboringCids| |android.os.Message|
|com.android.internal.telephony.RIL| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.RIL| |getOperator| |android.os.Message|
|com.android.internal.telephony.RIL| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.RIL| |getPreferredVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.RIL| |getRadioCapability| |android.os.Message|
|com.android.internal.telephony.RIL| |getSignalStrength| |android.os.Message|
|com.android.internal.telephony.RIL| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.RIL| |getVoiceRadioTechnology| |android.os.Message|
|com.android.internal.telephony.RIL| |getVoiceRegistrationState| |android.os.Message|
|com.android.internal.telephony.RIL| |handleCallSetupRequestFromSim| |boolean,android.os.Message|
|com.android.internal.telephony.RIL| |hangupConnection| |int,android.os.Message|
|com.android.internal.telephony.RIL| |hangupForegroundResumeBackground| |android.os.Message|
|com.android.internal.telephony.RIL| |hangupWaitingOrBackground| |android.os.Message|
|com.android.internal.telephony.RIL| |iccCloseLogicalChannel| |int,android.os.Message|
|com.android.internal.telephony.RIL| |iccIOForApp| |int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |iccOpenLogicalChannel| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |iccTransmitApduHelper| |int,int,int,int,int,int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.RIL| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.RIL| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.RIL| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.RIL| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.RIL| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.RIL| |queryCallForwardStatus| |int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |queryCallWaiting| |int,android.os.Message|
|com.android.internal.telephony.RIL| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.RIL| |queryCLIP| |android.os.Message|
|com.android.internal.telephony.RIL| |queryFacilityLockForApp| |java.lang.String,java.lang.String,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.RIL| |rejectCall| |android.os.Message|
|com.android.internal.telephony.RIL| |reportSmsMemoryStatus| |boolean,android.os.Message|
|com.android.internal.telephony.RIL| |reportStkServiceIsRunning| |android.os.Message|
|com.android.internal.telephony.RIL| |requestIccSimAuthentication| |int,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |requestIsimAuthentication| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |requestShutdown| |android.os.Message|
|com.android.internal.telephony.RIL| |resetRadio| |android.os.Message|
|com.android.internal.telephony.RIL| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.RIL| |sendCDMAFeatureCode| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |sendCdmaSms| |byte[],android.os.Message|
|com.android.internal.telephony.RIL| |sendDtmf| |char,android.os.Message|
|com.android.internal.telephony.RIL| |sendEnvelope| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |sendEnvelopeWithStatus| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |sendImsCdmaSms| |byte[],int,int,android.os.Message|
|com.android.internal.telephony.RIL| |sendImsGsmSms| |java.lang.String,java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.RIL| |sendScreenState| |boolean|
|com.android.internal.telephony.RIL| |sendSMSExpectMore| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |sendSMS| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |sendTerminalResponse| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |sendUSSD| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |separateConnection| |int,android.os.Message|
|com.android.internal.telephony.RIL| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.RIL| |setCallForward| |int,int,int,java.lang.String,int,android.os.Message|
|com.android.internal.telephony.RIL| |setCallWaiting| |boolean,int,android.os.Message|
|com.android.internal.telephony.RIL| |setCdmaBroadcastActivation| |boolean,android.os.Message|
|com.android.internal.telephony.RIL| |setCdmaBroadcastConfig| |com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[],android.os.Message|
|com.android.internal.telephony.RIL| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.RIL| |setCdmaSubscriptionSource| |int,android.os.Message|
|com.android.internal.telephony.RIL| |setCellInfoListRate| |int,android.os.Message|
|com.android.internal.telephony.RIL| |setCLIR| |int,android.os.Message|
|com.android.internal.telephony.RIL| |setDataAllowed| |boolean,android.os.Message|
|com.android.internal.telephony.RIL| |setDataProfile| |com.android.internal.telephony.dataconnection.DataProfile[],android.os.Message|
|com.android.internal.telephony.RIL| |setFacilityLockForApp| |java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |setGsmBroadcastActivation| |boolean,android.os.Message|
|com.android.internal.telephony.RIL| |setGsmBroadcastConfig| |com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message|
|com.android.internal.telephony.RIL| |setInitialAttachApn| |java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |setLocationUpdates| |boolean,android.os.Message|
|com.android.internal.telephony.RIL| |setMute| |boolean,android.os.Message|
|com.android.internal.telephony.RIL| |setNetworkSelectionModeAutomatic| |android.os.Message|
|com.android.internal.telephony.RIL| |setNetworkSelectionModeManual| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.RIL| |setPreferredVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.RIL| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.RIL| |setRadioPower| |boolean,android.os.Message|
|com.android.internal.telephony.RIL| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |setSuppServiceNotifications| |boolean,android.os.Message|
|com.android.internal.telephony.RIL| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.RIL| |setUiccSubscription| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.RIL| |setupDataCall| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |startDtmf| |char,android.os.Message|
|com.android.internal.telephony.RIL| |stopDtmf| |android.os.Message|
|com.android.internal.telephony.RIL| |supplyIccPin2ForApp| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |supplyIccPinForApp| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |supplyIccPuk2ForApp| |java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |supplyIccPukForApp| |java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |supplyNetworkDepersonalization| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |switchWaitingOrHoldingAndActive| |android.os.Message|
|com.android.internal.telephony.RIL| |writeSmsToRuim| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |writeSmsToSim| |int,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler| |makeScpHandler| |android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.CellBroadcastHandler| |<init>| |android.content.Context,com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |<init>| |android.content.Context,com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneBase|
|com.android.nfc.NfcService$EnableDisableTask| |doInBackground| |java.lang.Object[]|
|com.android.server.AlarmManagerService| |onStart| ||
|com.android.server.AlarmManagerService$InteractiveStateReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityStack| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |pauseBackStacks| |boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |setSurfaceLocked| |android.view.Surface,int,int,int|
|com.android.server.am.ActivityStackSupervisor| |pauseChildStacks| |com.android.server.am.ActivityRecord,boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |finishRunningVoiceLocked| ||
|com.android.server.am.ActivityManagerService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityManagerService| |startRunningVoiceLocked| ||
|com.android.server.am.ActivityManagerService| |shutdown| |int|
|android.app.backup.IBackupManager$Stub$Proxy| |restoreAtInstall| |java.lang.String,int|
|android.app.backup.IBackupManager$Stub| |restoreAtInstall| |java.lang.String,int|
|com.android.server.content.SyncManager$SyncHandler| |maybeStartNextSyncLocked| ||
|com.android.server.SystemService| |onBootPhase| |int|
|com.android.server.DockObserver| |access$900| |com.android.server.DockObserver,int|
|com.android.server.DockObserver| |setActualDockStateLocked| |int|
|com.android.server.hdmi.HdmiCecLocalDevice| |disableDevice| |boolean,com.android.server.hdmi.HdmiCecLocalDevice$PendingActionClearedCallback|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |handleActiveSource| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |handleRoutingChange| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |handleRoutingInformation| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |handleSetStreamPath| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.OneTouchPlayAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.OneTouchPlayAction| |start| ||
|com.android.server.location.GeofenceManager| |updateFences| ||
|com.android.server.location.GpsLocationProvider$8| |run| ||
|com.android.server.location.GpsLocationProvider$9| |run| ||
|com.android.server.location.LocationProviderInterface| |disable| ||
|com.android.server.location.LocationProviderInterface| |enable| ||
|com.android.server.location.GpsLocationProvider| |access$3300| |com.android.server.location.GpsLocationProvider,int,android.net.NetworkInfo|
|com.android.server.location.GpsLocationProvider| |setEngineCapabilities| |int|
|com.android.server.location.LocationProviderInterface| |setRequest| |com.android.internal.location.ProviderRequest,android.os.WorkSource|
|com.android.server.location.GpsLocationProvider$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService| |handleLocationChangedLocked| |android.location.Location,boolean|
|com.android.server.LocationManagerService| |requestLocationUpdatesLocked| |android.location.LocationRequest,com.android.server.LocationManagerService$Receiver,int,int,java.lang.String|
|com.android.server.LocationManagerService| |updateProviderListenersLocked| |java.lang.String,boolean|
|com.android.server.net.NetworkStatsService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.net.NetworkStatsService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.ShutdownThread$1| |onClick| |android.content.DialogInterface,int|
|com.android.server.power.ShutdownThread| |reboot| |android.content.Context,java.lang.String,boolean|
|com.android.server.power.ShutdownThread| |rebootSafeMode| |android.content.Context,boolean|
|com.android.server.power.ShutdownThread| |shutdown| |android.content.Context,boolean|
|com.android.server.sip.SipService$ConnectivityReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.sip.SipService$SipAutoReg| |onError| |int,java.lang.String|
|com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback| |onResponse| |boolean|
|com.android.server.sip.SipService$SipAutoReg| |onRegistrationDone| |android.net.sip.ISipSession,int|
|com.android.server.sip.SipService$SipSessionGroupExt| |openToReceiveCalls| ||
|com.android.server.UiModeManagerService| |access$100| |com.android.server.UiModeManagerService,int|
|com.android.server.UiModeManagerService$4| |onTwilightStateChanged| ||
|com.android.server.VibratorService| |startNextVibrationLocked| ||
|com.android.internal.util.IState| |processMessage| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |processMsg| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DormantState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$ScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$NoLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |processMessage| |android.os.Message|
|com.android.server.input.InputManagerService| |systemRunning| ||
|com.android.server.WiredAccessoryManager$WiredAccessoryObserver| |updateStateLocked| |java.lang.String,java.lang.String,int|
|com.android.server.input.InputManagerService$WiredAccessoryCallbacks| |notifyWiredAccessoryChanged| |long,int,int|
|com.android.server.WiredAccessoryManager| |onSystemReady| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedLoop| ||
|com.android.server.wm.WindowManagerService| |resumeRotationLocked| ||
|com.android.server.wm.WindowManagerService| |stopFreezingDisplayLocked| ||
|com.android.server.wm.WindowManagerService| |setForcedDisplayDensityLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.WindowManagerService| |setForcedDisplaySizeLocked| |com.android.server.wm.DisplayContent,int,int|
|com.android.server.wm.WindowManagerService| |setOverscanLocked| |com.android.server.wm.DisplayContent,int,int,int,int|
|com.android.server.content.SyncManager$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.SyncManager$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.SyncManager$9| |onStatusChanged| |int|
|com.android.server.content.SyncManager| |access$800| |com.android.server.content.SyncManager,int|
|com.android.server.content.SyncManager$SyncHandler| |scheduleReadyPeriodicSyncs| ||
|com.android.server.content.SyncManager$SyncHandler| |runBoundToAdapter| |com.android.server.content.SyncManager$ActiveSyncContext,android.os.IBinder|
|com.android.server.content.SyncManager$SyncHandler| |runSyncFinishedOrCanceledLocked| |android.content.SyncResult,com.android.server.content.SyncManager$ActiveSyncContext|
|com.android.server.content.SyncManager| |maybeRescheduleSync| |android.content.SyncResult,com.android.server.content.SyncOperation|
|com.android.server.content.SyncManager| |scheduleSync| |android.accounts.Account,int,int,java.lang.String,android.os.Bundle,long,long,boolean|
|com.android.server.content.SyncManager| |scheduleSync| |android.content.ComponentName,int,int,android.os.Bundle,long,long|
|com.android.server.content.SyncManager$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.SyncManager| |onUserRemoved| |int|
|com.android.server.content.SyncManager| |onUserStopping| |int|
|com.android.server.content.SyncManager$ActiveSyncContext| |binderDied| ||
|com.android.server.content.SyncManager$ActiveSyncContext| |onFinished| |android.content.SyncResult|
|com.android.internal.util.State| |enter| ||
|com.android.server.location.FlpHardwareProvider| |onGeofenceAdd| |int,int|
|com.android.server.location.GpsLocationProvider| |reportGeofenceAddStatus| |int,int|
|com.android.server.location.FlpHardwareProvider| |onGeofencePause| |int,int|
|com.android.server.location.GpsLocationProvider| |reportGeofencePauseStatus| |int,int|
|com.android.server.location.FlpHardwareProvider| |onGeofenceRemove| |int,int|
|com.android.server.location.GpsLocationProvider| |reportGeofenceRemoveStatus| |int,int|
|com.android.server.location.FlpHardwareProvider| |onGeofenceResume| |int,int|
|com.android.server.location.GpsLocationProvider| |reportGeofenceResumeStatus| |int,int|
|android.widget.VideoView| |onKeyDown| |int,android.view.KeyEvent|
|android.filterpacks.videosrc.MediaSource| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |open| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |close| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |process| |android.filterfw.core.FilterContext|
|android.media.AsyncPlayer| |access$200| |android.media.AsyncPlayer,android.media.AsyncPlayer$Command|
|android.media.AudioService$AudioHandler| |access$6000| |android.media.AudioService$AudioHandler,android.media.MediaPlayer|
|android.media.Ringtone| |setUri| |android.net.Uri|
|android.media.Ringtone| |stop| ||
|android.widget.VideoView| |access$2200| |android.widget.VideoView,boolean|
|android.widget.VideoView| |openVideo| ||
|android.widget.VideoView| |suspend| ||
|android.preference.SeekBarVolumizer| |onStartSample| ||
|com.android.internal.policy.impl.PhoneWindowManager| |performAuditoryFeedbackForAccessibilityIfNeed| ||
|com.android.server.DockObserver| |handleDockStateChange| ||
|com.android.server.power.Notifier| |playWirelessChargingStartedSound| ||
|com.android.internal.policy.impl.EnableAccessibilityController| |onInterceptTouchEvent| |android.view.MotionEvent|
|android.speech.tts.PlaybackQueueItem| |run| ||
|android.widget.VideoView$2| |onPrepared| |android.media.MediaPlayer|
|android.widget.VideoView$7| |surfaceChanged| |android.view.SurfaceHolder,int,int,int|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|android.view.WindowManagerPolicy| |dispatchUnhandledKey| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.telephony.CallTracker| |handlePollCalls| |android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaCallTracker| |dial| |java.lang.String|
|com.android.internal.telephony.Connection| |cancelPostDial| ||
|com.android.internal.telephony.Connection| |proceedAfterWaitChar| ||
|com.android.internal.telephony.Connection| |proceedAfterWildChar| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaConnection| |onConnectedInOrOut| ||
|com.android.internal.telephony.gsm.GsmCallTracker| |dial| |java.lang.String,com.android.internal.telephony.UUSInfo|
|com.android.internal.telephony.gsm.GsmCallTracker| |dial| |java.lang.String,int|
|com.android.internal.telephony.gsm.GsmCallTracker| |dial| |java.lang.String|
|com.android.internal.telephony.gsm.GSMPhone| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.gsm.GsmConnection| |access$000| |com.android.internal.telephony.gsm.GsmConnection|
|com.android.internal.telephony.gsm.GsmConnection| |onConnectedInOrOut| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |dial| |java.lang.String,int|
|com.android.internal.telephony.imsphone.ImsPhone| |dialInternal| |java.lang.String,int|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |access$000| |com.android.internal.telephony.imsphone.ImsPhoneConnection|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |onConnectedInOrOut| ||
|com.android.ims.ImsEcbmStateListener| |onECBMEntered| ||
|com.android.internal.util.StateMachine$SmHandler| |performTransitions| |com.android.internal.util.State,android.os.Message|
|com.android.internal.telephony.ImsSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.SmsUsageMonitor|
|com.android.internal.telephony.ISub$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISub| |setDefaultDataSubId| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub$Proxy| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.ISub$Stub| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.CommandsInterface| |acceptCall| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |acknowledgeIncomingGsmSmsWithPdu| |boolean,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |acknowledgeLastIncomingCdmaSms| |boolean,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |acknowledgeLastIncomingGsmSms| |boolean,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |cancelPendingUssd| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |changeBarringPassword| |java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |changeIccPin2ForApp| |java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |changeIccPin2| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |changeIccPinForApp| |java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |changeIccPin| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |conference| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |deactivateDataCall| |int,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |deleteSmsOnRuim| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |deleteSmsOnSim| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |dial| |java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message|
|com.android.internal.telephony.RIL| |dial| |java.lang.String,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |exitEmergencyCallbackMode| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |explicitCallTransfer| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getAvailableNetworks| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getBasebandVersion| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getCdmaBroadcastConfig| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getCDMASubscription| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getCdmaSubscriptionSource| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getCellInfoList| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getCLIR| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getCurrentCalls| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getDataCallList| |android.os.Message|
|com.android.internal.telephony.RIL| |getPDPContextList| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getDataRegistrationState| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getDeviceIdentity| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getGsmBroadcastConfig| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getHardwareConfig| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getIccCardStatus| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getIMEI| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getIMEISV| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getIMSIForApp| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |getIMSI| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getImsRegistrationState| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getLastCallFailCause| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getLastDataCallFailCause| |android.os.Message|
|com.android.internal.telephony.RIL| |getLastPdpFailCause| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getMute| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getNeighboringCids| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getOperator| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getPreferredVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.BaseCommands| |getRadioCapability| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getRadioCapability| |android.os.Message|
|com.android.internal.telephony.RIL| |processUnsolicited| |android.os.Parcel|
|com.android.internal.telephony.CommandsInterface| |getSignalStrength| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getVoiceRadioTechnology| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getVoiceRegistrationState| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |handleCallSetupRequestFromSim| |boolean,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |hangupConnection| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |hangupForegroundResumeBackground| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |hangupWaitingOrBackground| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |iccCloseLogicalChannel| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |iccIOForApp| |int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |iccIO| |int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |iccOpenLogicalChannel| |java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |iccTransmitApduBasicChannel| |int,int,int,int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |iccTransmitApduLogicalChannel| |int,int,int,int,int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.CommandsInterface| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.CommandsInterface| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.CommandsInterface| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |queryCallForwardStatus| |int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |queryCallWaiting| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |queryCLIP| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |queryFacilityLockForApp| |java.lang.String,java.lang.String,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |queryFacilityLock| |java.lang.String,java.lang.String,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |rejectCall| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |reportSmsMemoryStatus| |boolean,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |reportStkServiceIsRunning| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |requestIccSimAuthentication| |int,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |requestIsimAuthentication| |java.lang.String,android.os.Message|
|com.android.internal.telephony.BaseCommands| |requestShutdown| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |requestShutdown| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |resetRadio| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendCDMAFeatureCode| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendCdmaSms| |byte[],android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendDtmf| |char,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendEnvelope| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendEnvelopeWithStatus| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendImsCdmaSms| |byte[],int,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendImsGsmSms| |java.lang.String,java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.RIL| |updateScreenState| ||
|com.android.internal.telephony.CommandsInterface| |sendSMSExpectMore| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendSMS| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendTerminalResponse| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |sendUSSD| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |separateConnection| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setCallForward| |int,int,int,java.lang.String,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setCallWaiting| |boolean,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setCdmaBroadcastActivation| |boolean,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setCdmaBroadcastConfig| |com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[],android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setCdmaSubscriptionSource| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setCellInfoListRate| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setCLIR| |int,android.os.Message|
|com.android.internal.telephony.BaseCommands| |setDataAllowed| |boolean,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setDataAllowed| |boolean,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setDataProfile| |com.android.internal.telephony.dataconnection.DataProfile[],android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setFacilityLockForApp| |java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |setFacilityLock| |java.lang.String,boolean,java.lang.String,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setGsmBroadcastActivation| |boolean,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setGsmBroadcastConfig| |com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setInitialAttachApn| |java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setLocationUpdates| |boolean,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setMute| |boolean,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setNetworkSelectionModeAutomatic| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setNetworkSelectionModeManual| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setPreferredVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.BaseCommands| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setRadioPower| |boolean,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setSuppServiceNotifications| |boolean,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.BaseCommands| |setUiccSubscription| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setUiccSubscription| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setupDataCall| |java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |startDtmf| |char,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |stopDtmf| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |supplyIccPin2ForApp| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |supplyIccPin2| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |supplyIccPinForApp| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |supplyIccPin| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |supplyIccPuk2ForApp| |java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |supplyIccPuk2| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |supplyIccPukForApp| |java.lang.String,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.RIL| |supplyIccPuk| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |supplyNetworkDepersonalization| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |switchWaitingOrHoldingAndActive| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |writeSmsToRuim| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |writeSmsToSim| |int,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CellBroadcastHandler| |makeCellBroadcastHandler| |android.content.Context,com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |makeGsmCellBroadcastHandler| |android.content.Context,com.android.internal.telephony.PhoneBase|
|com.android.server.SystemService| |onStart| ||
|com.android.server.am.ActivityStackSupervisor| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityManagerService$LocalService| |onWakefulnessChanged| |int|
|android.app.ActivityManagerNative| |shutdown| |int|
|com.android.server.am.ActivityManagerService$12| |onReceive| |android.content.Context,android.content.Intent|
|android.app.backup.IBackupManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.IBackupManager| |restoreAtInstall| |java.lang.String,int|
|com.android.server.AlarmManagerService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.fingerprint.FingerprintService| |onBootPhase| |int|
|com.android.server.lights.LightsService| |onBootPhase| |int|
|com.android.server.media.MediaSessionService| |onBootPhase| |int|
|com.android.server.media.projection.MediaProjectionManagerService| |onBootPhase| |int|
|com.android.server.MmsServiceBroker| |onBootPhase| |int|
|com.android.server.PersistentDataBlockService| |onBootPhase| |int|
|com.android.server.pm.Installer| |onBootPhase| |int|
|com.android.server.pm.LauncherAppsService| |onBootPhase| |int|
|com.android.server.print.PrintManagerService| |onBootPhase| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onBootPhase| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onBootPhase| |int|
|com.android.server.SystemServiceManager| |startBootPhase| |int|
|com.android.server.twilight.TwilightService| |onBootPhase| |int|
|com.android.server.usage.UsageStatsService| |onBootPhase| |int|
|com.android.server.webkit.WebViewUpdateService| |onBootPhase| |int|
|com.android.server.DockObserver| |access$400| |com.android.server.DockObserver,int|
|com.android.server.DockObserver| |init| ||
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |disableDevice| |boolean,com.android.server.hdmi.HdmiCecLocalDevice$PendingActionClearedCallback|
|com.android.server.hdmi.HdmiControlService| |disableDevices| |com.android.server.hdmi.HdmiCecLocalDevice$PendingActionClearedCallback|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleActiveSource| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleRoutingChange| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleRoutingInformation| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleSetStreamPath| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecFeatureAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecFeatureAction| |start| ||
|com.android.server.location.GeofenceManager| |access$000| |com.android.server.location.GeofenceManager|
|com.android.server.location.GeofenceManager| |onLocationChanged| |android.location.Location|
|com.android.server.LocationManagerService| |removeProviderLocked| |com.android.server.location.LocationProviderInterface|
|com.android.server.LocationManagerService| |applyRequirementsLocked| |java.lang.String|
|com.android.server.LocationManagerService| |handleLocationChanged| |android.location.Location,boolean|
|com.android.server.LocationManagerService| |switchUser| |int|
|com.android.server.LocationManagerService| |updateProvidersLocked| ||
|com.android.server.power.PowerManagerService$3| |run| ||
|com.android.server.wm.WindowManagerService| |rebootSafeMode| |boolean|
|com.android.server.wm.WindowManagerService| |shutdown| |boolean|
|com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback| |onError| |int,java.lang.String|
|com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy$1| |run| ||
|com.android.server.sip.SipSessionGroup$SipSessionImpl$SipKeepAlive| |process| |java.util.EventObject|
|com.android.server.sip.SipService$SipSessionGroupExt| |onConnectivityChanged| |boolean|
|com.android.server.UiModeManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.twilight.TwilightListener| |onTwilightStateChanged| ||
|com.android.server.VibratorService| |access$300| |com.android.server.VibratorService|
|com.android.server.VibratorService| |updateInputDeviceVibrators| ||
|com.android.server.SystemServer$2| |run| ||
|com.android.server.WiredAccessoryManager$WiredAccessoryObserver| |init| ||
|com.android.server.WiredAccessoryManager$WiredAccessoryObserver| |onUEvent| |android.os.UEventObserver$UEvent|
|com.android.server.input.InputManagerService| |notifySwitch| |long,int,int|
|com.android.server.WiredAccessoryManager| |access$200| |com.android.server.WiredAccessoryManager|
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLocked| ||
|com.android.server.wm.DragState| |unregister| ||
|com.android.server.wm.WindowManagerService| |access$500| |com.android.server.wm.WindowManagerService|
|com.android.server.wm.WindowManagerService| |unsetAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken,boolean,boolean|
|android.content.ISyncStatusObserver$Stub$Proxy| |onStatusChanged| |int|
|com.android.server.content.SyncManager$6| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.SyncManager$SyncHandler| |cancelActiveSyncLocked| |com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle|
|com.android.server.content.SyncManager$7| |onSyncRequest| |com.android.server.content.SyncStorageEngine$EndPoint,int,android.os.Bundle|
|com.android.server.content.SyncManager$8| |onServiceChanged| |android.content.SyncAdapterType,int,boolean|
|com.android.server.content.SyncManager| |scheduleLocalSync| |android.accounts.Account,int,int,java.lang.String|
|com.android.server.content.SyncManager| |access$700| |com.android.server.content.SyncManager,int|
|com.android.server.content.SyncManager| |access$900| |com.android.server.content.SyncManager,int|
|android.content.ISyncContext$Stub$Proxy| |onFinished| |android.content.SyncResult|
|android.net.DhcpStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady| |enter| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateStart| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectingState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectionErrorCreatingConnection| |enter| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$DefaultState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$StartupState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$WaitingState| |enter| ||
|com.android.internal.telephony.WakeLockStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.WakeLockStateMachine$WaitingState| |enter| ||
|com.android.internal.util.IState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler$HaltingState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler$QuittingState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler| |invokeEnterMethods| |int|
|com.android.server.connectivity.NetworkMonitor$DefaultState| |enter| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState| |enter| ||
|com.android.server.NsdService$NsdStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pNotSupportedState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$EnabledState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$RequestPendingState| |enter| ||
|com.android.server.wifi.WifiApConfigStore$DefaultState| |enter| ||
|com.android.server.wifi.WifiApConfigStore$InactiveState| |enter| ||
|com.android.server.wifi.WifiController$ApEnabledState| |enter| ||
|com.android.server.wifi.WifiController$DefaultState| |enter| ||
|com.android.server.wifi.WifiController$DeviceInactiveState| |enter| ||
|com.android.server.wifi.WifiStateMachine$ConnectModeState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppingState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SoftApStartedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SupplicantStartingState| |enter| ||
|com.android.server.wifi.WifiStateMachine$TetheredState| |enter| ||
|android.filterfw.core.Filter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |open| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |close| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |close| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |performProcess| |android.filterfw.core.FilterContext|
|android.media.AudioService$AudioHandler$1| |onCompletion| |android.media.MediaPlayer|
|android.media.AudioService$AudioHandler$2| |onError| |android.media.MediaPlayer,int,int|
|android.media.RingtoneManager| |getRingtone| |android.content.Context,android.net.Uri,int|
|android.media.Ringtone| |setAudioAttributes| |android.media.AudioAttributes|
|android.media.RingtoneManager| |getRingtone| |int|
|android.media.RingtoneManager| |stopPreviousRingtone| ||
|android.preference.SeekBarVolumizer| |onStopSample| ||
|android.widget.VideoView$7| |surfaceDestroyed| |android.view.SurfaceHolder|
|android.widget.VideoView| |access$2100| |android.widget.VideoView|
|android.widget.VideoView| |resume| ||
|android.widget.VideoView| |setVideoURI| |android.net.Uri,java.util.Map|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1300| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |powerLongPress| ||
|com.android.server.DockObserver| |access$100| |com.android.server.DockObserver|
|com.android.server.power.Notifier| |access$500| |com.android.server.power.Notifier|
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |dispatchTouchEvent| |android.view.MotionEvent|
|android.speech.tts.AudioPlaybackHandler$MessageLoop| |run| ||
|com.android.server.input.InputManagerService| |interceptKeyBeforeQueueing| |android.view.KeyEvent,int|
|com.android.server.wm.InputMonitor| |dispatchUnhandledKey| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.internal.telephony.cdma.CDMAPhone| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.cdma.CdmaCallTracker| |checkMtFindNewRinging| |com.android.internal.telephony.DriverCall,int|
|com.android.internal.telephony.cdma.CdmaCallTracker| |acceptCall| ||
|com.android.internal.telephony.cdma.CdmaConnection| |update| |com.android.internal.telephony.DriverCall|
|com.android.internal.telephony.gsm.GSMPhone| |dial| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.PhoneBase| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.gsm.GsmConnection| |update| |com.android.internal.telephony.DriverCall|
|com.android.internal.telephony.imsphone.ImsPhone| |dial| |java.lang.String,int|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |update| |com.android.ims.ImsCall,com.android.internal.telephony.Call$State|
|com.android.ims.ImsEcbm$ImsEcbmListenerProxy| |enteredECBM| ||
|com.android.internal.telephony.IccSmsInterfaceManager| |<init>| |com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.SubscriptionController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.telephony.SubscriptionManager| |setDefaultDataSubId| |int|
|com.android.internal.telephony.ISub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.gsm.GsmCallTracker| |acceptCall| ||
|com.android.internal.telephony.gsm.UsimDataDownloadHandler| |sendSmsAckForEnvelopeResponse| |com.android.internal.telephony.uicc.IccIoResult,int,int|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |acknowledgeLastIncomingSms| |boolean,int,android.os.Message|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |acknowledgeLastIncomingSms| |boolean,int,android.os.Message|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |handleStatusReport| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.UsimDataDownloadHandler| |acknowledgeSmsWithError| |int|
|com.android.internal.telephony.gsm.GsmMmiCode| |cancel| ||
|com.android.internal.telephony.gsm.GsmMmiCode| |processCode| ||
|com.android.internal.telephony.uicc.UiccCardApplication| |changeIccFdnPassword| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |changeIccPin2| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.UiccCardApplication| |changeIccLockPassword| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |changeIccPin| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.gsm.GsmCallTracker| |conference| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDefaultState| |processMessage| |android.os.Message|
|com.android.internal.telephony.dataconnection.DataConnection| |tearDownData| |java.lang.Object|
|com.android.internal.telephony.IccSmsInterfaceManager| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.CommandsInterface| |dial| |java.lang.String,int,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMAPhone| |exitEmergencyCallbackMode| ||
|com.android.internal.telephony.cdma.CDMAPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CdmaCallTracker| |explicitCallTransfer| ||
|com.android.internal.telephony.gsm.GsmCallTracker| |explicitCallTransfer| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |getAvailableNetworks| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |getAvailableNetworks| |android.os.Message|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateCdmaSubscription| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.uicc.RuimRecords| |onReady| ||
|com.android.internal.telephony.ServiceStateTracker| |getAllCellInfo| ||
|com.android.internal.telephony.gsm.GSMPhone| |getOutgoingCallerIdDisplay| |android.os.Message|
|com.android.internal.telephony.CallTracker| |pollCallsWhenSafe| ||
|com.android.internal.telephony.cdma.CdmaCallTracker| |operationComplete| ||
|com.android.internal.telephony.gsm.GsmCallTracker| |operationComplete| ||
|com.android.internal.telephony.cdma.CDMAPhone| |getDataCallList| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |getDataCallList| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getPDPContextList| |android.os.Message|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollState| ||
|com.android.internal.telephony.TelephonyDevController| |registerRIL| |com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.uicc.UiccController| |onSimRefresh| |android.os.AsyncResult,java.lang.Integer|
|com.android.internal.telephony.uicc.RuimRecords| |fetchRuimRecords| ||
|com.android.internal.telephony.uicc.SIMRecords| |fetchSimRecords| ||
|com.android.internal.telephony.CommandsInterface| |getIMSI| |android.os.Message|
|com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState| |processMessage| |android.os.Message|
|com.android.internal.telephony.CommandsInterface| |getLastPdpFailCause| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |getNeighboringCids| |android.os.Message|
|com.android.internal.telephony.PhoneBase| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.PhoneBase| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.ServiceStateTracker| |reRegisterNetwork| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |getEnhancedVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.sip.SipCommandInterface| |getRadioCapability| |android.os.Message|
|com.android.internal.telephony.test.SimulatedCommands| |getRadioCapability| |android.os.Message|
|com.android.internal.telephony.RIL| |processResponse| |android.os.Parcel|
|com.android.internal.telephony.PhoneBase| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.PhoneProxy| |updatePhoneObject| |int|
|com.android.internal.telephony.cat.CatService| |handleCmdResponse| |com.android.internal.telephony.cat.CatResponseMessage|
|com.android.internal.telephony.cat.CatService| |handleCommand| |com.android.internal.telephony.cat.CommandParams,boolean|
|com.android.internal.telephony.cdma.CdmaCallTracker| |hangupAllConnections| |com.android.internal.telephony.cdma.CdmaCall|
|com.android.internal.telephony.cdma.CdmaCallTracker| |hangup| |com.android.internal.telephony.cdma.CdmaConnection|
|com.android.internal.telephony.cdma.CdmaCallTracker| |hangupConnectionByIndex| |com.android.internal.telephony.cdma.CdmaCall,int|
|com.android.internal.telephony.gsm.GsmCallTracker| |hangupAllConnections| |com.android.internal.telephony.gsm.GsmCall|
|com.android.internal.telephony.gsm.GsmCallTracker| |hangup| |com.android.internal.telephony.gsm.GsmConnection|
|com.android.internal.telephony.gsm.GsmCallTracker| |hangupConnectionByIndex| |com.android.internal.telephony.gsm.GsmCall,int|
|com.android.internal.telephony.cdma.CdmaCallTracker| |hangupForegroundResumeBackground| ||
|com.android.internal.telephony.gsm.GsmCallTracker| |hangupForegroundResumeBackground| ||
|com.android.internal.telephony.cdma.CdmaCallTracker| |hangup| |com.android.internal.telephony.cdma.CdmaCall|
|com.android.internal.telephony.cdma.CdmaCallTracker| |hangupWaitingOrBackground| ||
|com.android.internal.telephony.gsm.GsmCallTracker| |hangup| |com.android.internal.telephony.gsm.GsmCall|
|com.android.internal.telephony.gsm.GsmCallTracker| |hangupWaitingOrBackground| ||
|com.android.internal.telephony.uicc.UiccCard| |iccCloseLogicalChannel| |int,android.os.Message|
|com.android.internal.telephony.uicc.IccFileHandler| |getEFLinearRecordSize| |int,android.os.Message|
|com.android.internal.telephony.uicc.IccFileHandler| |loadEFImgLinearFixed| |int,android.os.Message|
|com.android.internal.telephony.uicc.IccFileHandler| |loadEFImgTransparent| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.uicc.IccFileHandler| |loadEFLinearFixedAll| |int,android.os.Message|
|com.android.internal.telephony.uicc.IccFileHandler| |loadEFLinearFixed| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.IccFileHandler| |loadEFTransparent| |int,android.os.Message|
|com.android.internal.telephony.uicc.IccFileHandler| |loadEFTransparent| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.IccFileHandler| |updateEFLinearFixed| |int,int,byte[],java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IccFileHandler| |updateEFTransparent| |int,byte[],android.os.Message|
|com.android.internal.telephony.uicc.RuimFileHandler| |loadEFImgTransparent| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |iccIO| |int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.UiccCard| |iccOpenLogicalChannel| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |iccTransmitApduBasicChannel| |int,int,int,int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |iccTransmitApduLogicalChannel| |int,int,int,int,int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.PhoneBase| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.PhoneBase| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.PhoneBase| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.PhoneBase| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.PhoneBase| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.PhoneBase| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.PhoneBase| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |getCallForwardingOption| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |getCallWaiting| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |getCallWaiting| |android.os.Message|
|com.android.internal.telephony.PhoneBase| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.uicc.UiccCardApplication| |queryFdn| ||
|com.android.internal.telephony.uicc.UiccCardApplication| |queryPin1State| ||
|com.android.internal.telephony.CommandsInterface| |queryFacilityLock| |java.lang.String,java.lang.String,int,android.os.Message|
|com.android.internal.telephony.PhoneBase| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.cdma.CdmaCallTracker| |rejectCall| ||
|com.android.internal.telephony.gsm.GsmCallTracker| |rejectCall| ||
|com.android.internal.telephony.SmsStorageMonitor$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.cat.CatService| |updateIccAvailability| ||
|com.android.internal.telephony.uicc.IccRecords| |getIccSimChallengeResponse| |int,java.lang.String|
|com.android.internal.telephony.uicc.IsimUiccRecords| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.cdma.CdmaCallTracker$1| |run| ||
|com.android.internal.telephony.cdma.CdmaCallTracker| |flashAndSetGenericTrue| ||
|com.android.internal.telephony.cdma.CdmaCallTracker| |switchWaitingOrHoldingAndActive| ||
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler$1| |sendScpResults| ||
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendSmsByPstn| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CDMAPhone| |sendDtmf| |char|
|com.android.internal.telephony.gsm.GSMPhone| |sendDtmf| |char|
|com.android.internal.telephony.cat.CatService| |eventDownload| |int,int,int,byte[],boolean|
|com.android.internal.telephony.cat.CatService| |sendMenuSelection| |int,boolean|
|com.android.internal.telephony.gsm.UsimDataDownloadHandler| |handleDataDownload| |com.android.internal.telephony.gsm.SmsMessage|
|com.android.internal.telephony.uicc.UiccCard| |sendEnvelopeWithStatus| |java.lang.String,android.os.Message|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendSmsByPstn| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.RIL| |access$000| |com.android.internal.telephony.RIL|
|com.android.internal.telephony.RIL| |onRadioAvailable| ||
|com.android.internal.telephony.cat.CatService| |sendTerminalResponse| |com.android.internal.telephony.cat.CommandDetails,com.android.internal.telephony.cat.ResultCode,boolean,int,com.android.internal.telephony.cat.ResponseData|
|com.android.internal.telephony.gsm.GsmMmiCode| |sendUssd| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaCallTracker| |separate| |com.android.internal.telephony.cdma.CdmaConnection|
|com.android.internal.telephony.gsm.GsmCallTracker| |separate| |com.android.internal.telephony.gsm.GsmConnection|
|com.android.internal.telephony.PhoneBase| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setCallForwardingOption| |int,int,java.lang.String,int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setCallWaiting| |boolean,android.os.Message|
|com.android.internal.telephony.IccSmsInterfaceManager| |setCdmaBroadcastActivation| |boolean|
|com.android.internal.telephony.IccSmsInterfaceManager| |setCdmaBroadcastConfig| |com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[]|
|com.android.internal.telephony.PhoneBase| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.PhoneBase| |setCdmaSubscription| |int,android.os.Message|
|com.android.internal.telephony.PhoneBase| |setCellInfoListRate| |int|
|com.android.internal.telephony.gsm.GSMPhone| |setOutgoingCallerIdDisplay| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |syncClirSetting| ||
|com.android.internal.telephony.imsphone.ImsPhoneCommandInterface| |setDataAllowed| |boolean,android.os.Message|
|com.android.internal.telephony.sip.SipCommandInterface| |setDataAllowed| |boolean,android.os.Message|
|com.android.internal.telephony.test.SimulatedCommands| |setDataAllowed| |boolean,android.os.Message|
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachingState| |processMessage| |android.os.Message|
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DetachingState| |enter| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$IdleState| |processMessage| |android.os.Message|
|com.android.internal.telephony.dataconnection.DcTracker| |setDataAllowed| |boolean,android.os.Message|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |setDataProfilesAsNeeded| ||
|com.android.internal.telephony.uicc.UiccCardApplication| |setIccFdnEnabled| |boolean,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.UiccCardApplication| |setIccLockEnabled| |boolean,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |setFacilityLock| |java.lang.String,boolean,java.lang.String,int,android.os.Message|
|com.android.internal.telephony.IccSmsInterfaceManager| |setCellBroadcastActivation| |boolean|
|com.android.internal.telephony.IccSmsInterfaceManager| |setCellBroadcastConfig| |com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[]|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |setInitialAttachApn| ||
|com.android.internal.telephony.ServiceStateTracker| |disableLocationUpdates| ||
|com.android.internal.telephony.ServiceStateTracker| |disableSingleLocationUpdate| ||
|com.android.internal.telephony.ServiceStateTracker| |enableLocationUpdates| ||
|com.android.internal.telephony.ServiceStateTracker| |enableSingleLocationUpdate| ||
|com.android.internal.telephony.cdma.CdmaCallTracker| |setMute| |boolean|
|com.android.internal.telephony.gsm.GsmCallTracker| |setMute| |boolean|
|com.android.internal.telephony.PhoneBase| |restoreSavedNetworkSelection| |android.os.Message|
|com.android.internal.telephony.PhoneBase| |setNetworkSelectionModeAutomatic| |android.os.Message|
|com.android.internal.telephony.PhoneBase| |selectNetworkManually| |com.android.internal.telephony.OperatorInfo,android.os.Message|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |onSetPhoneRCDone| |java.util.ArrayList|
|com.android.internal.telephony.PhoneBase| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener| |onSubscriptionsChanged| ||
|com.android.internal.telephony.cdma.CDMAPhone| |enableEnhancedVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.sip.SipCommandInterface| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.test.SimulatedCommands| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.PhoneBase| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |phoneObjectUpdater| |int|
|com.android.internal.telephony.PhoneBase| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |registerForSuppServiceNotification| |android.os.Handler,int,java.lang.Object|
|com.android.internal.telephony.gsm.GSMPhone| |unregisterForSuppServiceNotification| |android.os.Handler|
|com.android.internal.telephony.PhoneBase| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneCommandInterface| |setUiccSubscription| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.sip.SipCommandInterface| |setUiccSubscription| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.test.SimulatedCommands| |setUiccSubscription| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.dataconnection.DataConnection| |onConnect| |com.android.internal.telephony.dataconnection.DataConnection$ConnectionParams|
|com.android.internal.telephony.cdma.CDMAPhone| |startDtmf| |char|
|com.android.internal.telephony.gsm.GSMPhone| |startDtmf| |char|
|com.android.internal.telephony.cdma.CDMAPhone| |stopDtmf| ||
|com.android.internal.telephony.gsm.GSMPhone| |stopDtmf| ||
|com.android.internal.telephony.uicc.UiccCardApplication| |supplyPin2| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |supplyIccPin2| |java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.UiccCardApplication| |supplyPin| |java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |supplyIccPin| |java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.UiccCardApplication| |supplyPuk2| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |supplyIccPuk2| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.UiccCardApplication| |supplyPuk| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.CommandsInterface| |supplyIccPuk| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.UiccCardApplication| |supplyNetworkDepersonalization| |java.lang.String,android.os.Message|
|com.android.internal.telephony.gsm.GsmCallTracker| |switchWaitingOrHoldingAndActive| ||
|com.android.internal.telephony.IccSmsInterfaceManager| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.gsm.UsimDataDownloadHandler| |handleUsimDataDownload| |com.android.internal.telephony.uicc.UsimServiceTable,com.android.internal.telephony.gsm.SmsMessage|
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |makeCellBroadcastHandler| |android.content.Context,com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |onUpdatePhoneObject| |com.android.internal.telephony.PhoneBase|
|com.android.server.SystemServiceManager| |startService| |java.lang.Class|
|com.android.server.am.ActivityStackSupervisor| |activitySleptLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStack| |completePauseLocked| |boolean|
|com.android.server.am.ActivityStackSupervisor| |scheduleSleepTimeout| ||
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |shutdown| |int|
|com.android.server.backup.Trampoline| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService$6| |run| ||
|com.android.server.am.ActivityManagerService| |finishBooting| ||
|com.android.server.SystemServer| |startBootstrapServices| ||
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.server.DockObserver$2| |onUEvent| |android.os.UEventObserver$UEvent|
|com.android.server.DockObserver| |<init>| |android.content.Context|
|com.android.server.hdmi.HdmiControlService| |disableHdmiControlService| ||
|com.android.server.hdmi.HdmiControlService| |onStandby| ||
|com.android.server.hdmi.HdmiCecLocalDevice| |onMessage| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleRoutingInformation| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleSetStreamPath| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevice| |dispatchMessageToAction| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevice| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.HdmiCecLocalDevice| |startQueuedActions| ||
|com.android.server.location.GeofenceManager| |scheduleUpdateFencesLocked| ||
|com.android.server.LocationManagerService| |applyAllProviderRequirementsLocked| ||
|com.android.server.LocationManagerService| |removeUpdatesLocked| |com.android.server.LocationManagerService$Receiver|
|com.android.server.LocationManagerService| |access$1800| |com.android.server.LocationManagerService,android.location.Location,boolean|
|com.android.server.LocationManagerService| |access$400| |com.android.server.LocationManagerService,int|
|com.android.server.LocationManagerService| |access$300| |com.android.server.LocationManagerService|
|com.android.server.LocationManagerService| |systemRunning| ||
|android.view.WindowManagerPolicy$WindowManagerFuncs| |rebootSafeMode| |boolean|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |shutdown| |boolean|
|com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy$2| |run| ||
|com.android.server.sip.SipSessionGroup$SipSessionImpl$SipKeepAlive| |onError| |android.net.sip.ISipSession,int,java.lang.String|
|com.android.server.sip.SipSessionGroup$SipSessionImpl| |process| |java.util.EventObject|
|com.android.server.twilight.TwilightService$TwilightListenerRecord| |run| ||
|com.android.server.VibratorService$3| |run| ||
|com.android.server.VibratorService$VibrateThread| |run| ||
|com.android.server.VibratorService$Vibration| |binderDied| ||
|com.android.server.VibratorService| |access$400| |com.android.server.VibratorService|
|com.android.server.VibratorService| |onInputDeviceAdded| |int|
|com.android.server.VibratorService| |onInputDeviceChanged| |int|
|com.android.server.VibratorService| |onInputDeviceRemoved| |int|
|com.android.server.VibratorService| |systemReady| ||
|com.android.server.wm.WindowManagerService| |computeNewConfiguration| ||
|com.android.server.wm.WindowManagerService| |setTokenVisibilityLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$400| |com.android.server.wm.WindowManagerService|
|com.android.server.wm.WindowManagerService| |addTask| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |moveStackWindowsLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.WindowManagerService| |removeWindowInnerLocked| |com.android.server.wm.Session,com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |resizeStack| |int,android.graphics.Rect|
|com.android.server.wm.WindowManagerService| |setCurrentUser| |int,int[]|
|com.android.server.wm.WindowManagerService| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |setUniverseTransformLocked| |com.android.server.wm.WindowState,float,float,float,float,float,float,float|
|com.android.server.wm.DragState| |endDragLw| ||
|com.android.server.wm.Session| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.WindowManagerService| |prepareDragSurface| |android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface|
|com.android.server.wm.WindowManagerService| |startFreezingScreen| |int,int|
|com.android.server.wm.WindowAnimator| |testTokenMayBeDrawnLocked| |int|
|com.android.server.content.SyncStorageEngine$OnSyncRequestListener| |onSyncRequest| |com.android.server.content.SyncStorageEngine$EndPoint,int,android.os.Bundle|
|com.android.server.content.SyncManager$8| |onServiceChanged| |java.lang.Object,int,boolean|
|android.filterfw.core.Filter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |fieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |open| |android.filterfw.core.FilterContext|
|android.filterfw.core.FilterFunction| |close| ||
|android.filterfw.core.FilterGraph| |closeFilters| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |performClose| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |performClose| |android.filterfw.core.FilterContext|
|android.filterfw.core.FilterFunction| |execute| |android.filterfw.core.KeyValueMap|
|android.filterfw.core.SyncRunner| |processFilterNode| |android.filterfw.core.Filter|
|android.filterpacks.base.CallbackFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |performProcess| |android.filterfw.core.FilterContext|
|android.media.RingtoneManager| |getRingtone| |android.content.Context,android.net.Uri|
|android.media.Ringtone| |setStreamType| |int|
|android.widget.VideoView$7| |surfaceCreated| |android.view.SurfaceHolder|
|android.widget.VideoView| |setVideoURI| |android.net.Uri|
|com.android.internal.policy.impl.PhoneWindowManager$4| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$800| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.server.power.Notifier| |onWirelessChargingStarted| ||
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |dispatchUnhandledKey| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.cdma.CDMAPhone| |dial| |java.lang.String,int|
|com.android.internal.telephony.cdma.CDMAPhone| |acceptCall| |int|
|com.android.internal.telephony.gsm.GSMPhone| |dial| |java.lang.String,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.imsphone.ImsPhone| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.sip.SipPhoneBase| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.sip.SipPhone| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |dial| |java.lang.String,int|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |hangup| |com.android.internal.telephony.imsphone.ImsPhoneCall|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |processCallStateChange| |com.android.ims.ImsCall,com.android.internal.telephony.Call$State,int|
|com.android.internal.telephony.imsphone.ImsPhoneCall| |merge| |com.android.internal.telephony.imsphone.ImsPhoneCall,com.android.internal.telephony.Call$State|
|com.android.ims.internal.IImsEcbmListener$Stub$Proxy| |enteredECBM| ||
|com.android.ims.internal.IImsEcbmListener$Stub| |enteredECBM| ||
|com.android.internal.telephony.PhoneProxy| |<init>| |com.android.internal.telephony.PhoneBase|
|android.telephony.SubscriptionManager| |addSubscriptionInfoRecord| |java.lang.String,int|
|android.telephony.SubscriptionManager| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.gsm.GSMPhone| |handleCallHoldIncallSupplementaryService| |java.lang.String|
|com.android.internal.telephony.gsm.GSMPhone| |acceptCall| |int|
|com.android.internal.telephony.InboundSmsHandler| |acknowledgeLastIncomingSms| |boolean,int,android.os.Message|
|com.android.internal.telephony.MmiCode| |cancel| ||
|com.android.internal.telephony.gsm.GSMPhone| |handlePinMmi| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaMmiCode| |processCode| ||
|com.android.internal.telephony.uicc.IccCardProxy| |changeIccFdnPassword| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IccCardProxy| |changeIccLockPassword| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |conference| ||
|com.android.internal.telephony.dataconnection.DataConnection| |access$5600| |com.android.internal.telephony.dataconnection.DataConnection,java.lang.Object|
|com.android.internal.telephony.UiccSmsController| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.cdma.CDMALTEPhone| |exitEmergencyCallbackMode| ||
|com.android.internal.telephony.cdma.CDMAPhone$1| |run| ||
|com.android.internal.telephony.PhoneBase| |exitEmergencyCallbackMode| ||
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.gsm.GSMPhone| |explicitCallTransfer| ||
|com.android.internal.telephony.cdma.CDMAPhone| |getAvailableNetworks| |android.os.Message|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.uicc.IccRecords| |onReady| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getAllCellInfo| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |getAllCellInfo| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |getAllCellInfo| ||
|com.android.internal.telephony.PhoneBase| |getAllCellInfo| ||
|com.android.internal.telephony.CallTracker| |handleRadioAvailable| ||
|com.android.internal.telephony.cdma.CdmaCallTracker| |pollCallsWhenSafe| ||
|com.android.internal.telephony.gsm.GsmCallTracker| |pollCallsWhenSafe| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |pollCallsWhenSafe| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |getDataCallList| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.RIL| |<init>| |android.content.Context,int,int,java.lang.Integer|
|com.android.internal.telephony.uicc.RuimRecords| |handleRuimRefresh| |com.android.internal.telephony.uicc.IccRefreshResponse|
|com.android.internal.telephony.uicc.RuimRecords| |onRefresh| |boolean,int[]|
|com.android.internal.telephony.uicc.SIMRecords| |handleFileUpdate| |int|
|com.android.internal.telephony.uicc.SIMRecords| |onReady| ||
|com.android.internal.telephony.uicc.SIMRecords| |onRefresh| |boolean,int[]|
|com.android.internal.telephony.cdma.CDMALTEPhone| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.Phone| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.Phone| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |reRegisterNetwork| |android.os.Message|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |reRegisterNetwork| |android.os.Message|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |reRegisterNetwork| |android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |getEnhancedVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.PhoneBase| |getEnhancedVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.RIL| |access$600| |com.android.internal.telephony.RIL,android.os.Parcel|
|com.android.internal.telephony.cdma.CDMALTEPhone| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.Phone| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.Phone| |updatePhoneObject| |int|
|com.android.internal.telephony.cat.CatService| |handleRilMsg| |com.android.internal.telephony.cat.RilMessage|
|com.android.internal.telephony.cdma.CdmaConnection| |hangup| ||
|com.android.internal.telephony.gsm.GsmConnection| |hangup| ||
|com.android.internal.telephony.gsm.GSMPhone| |handleCallWaitingIncallSupplementaryService| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaCall| |hangup| ||
|com.android.internal.telephony.gsm.GsmCall| |hangup| ||
|com.android.internal.telephony.gsm.GSMPhone| |handleCallDeflectionIncallSupplementaryService| |java.lang.String|
|com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager| |getAdnRecordsSize| |int|
|com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager| |getAdnRecordsSize| |int|
|com.android.internal.telephony.uicc.AdnRecordLoader| |updateEF| |com.android.internal.telephony.uicc.AdnRecord,int,int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.CsimFileHandler| |getEFLinearRecordSize| |int,android.os.Message|
|com.android.internal.telephony.uicc.IsimFileHandler| |getEFLinearRecordSize| |int,android.os.Message|
|com.android.internal.telephony.uicc.RuimFileHandler| |getEFLinearRecordSize| |int,android.os.Message|
|com.android.internal.telephony.uicc.SIMFileHandler| |getEFLinearRecordSize| |int,android.os.Message|
|com.android.internal.telephony.uicc.UsimFileHandler| |getEFLinearRecordSize| |int,android.os.Message|
|com.android.internal.telephony.cat.IconLoader| |readId| ||
|com.android.internal.telephony.uicc.CsimFileHandler| |loadEFImgLinearFixed| |int,android.os.Message|
|com.android.internal.telephony.uicc.IsimFileHandler| |loadEFImgLinearFixed| |int,android.os.Message|
|com.android.internal.telephony.uicc.RuimFileHandler| |loadEFImgLinearFixed| |int,android.os.Message|
|com.android.internal.telephony.uicc.SIMFileHandler| |loadEFImgLinearFixed| |int,android.os.Message|
|com.android.internal.telephony.uicc.UsimFileHandler| |loadEFImgLinearFixed| |int,android.os.Message|
|com.android.internal.telephony.cat.IconLoader| |readClut| ||
|com.android.internal.telephony.cat.IconLoader| |readIconData| ||
|com.android.internal.telephony.uicc.CsimFileHandler| |loadEFImgTransparent| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.uicc.IsimFileHandler| |loadEFImgTransparent| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.uicc.SIMFileHandler| |loadEFImgTransparent| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.uicc.UsimFileHandler| |loadEFImgTransparent| |int,int,int,int,android.os.Message|
|com.android.internal.telephony.gsm.UsimPhoneBookManager| |readEmailFileAndWait| |int|
|com.android.internal.telephony.gsm.UsimPhoneBookManager| |readIapFileAndWait| |int|
|com.android.internal.telephony.gsm.UsimPhoneBookManager| |readPbrFileAndWait| ||
|com.android.internal.telephony.IccSmsInterfaceManager| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.uicc.AdnRecordLoader| |loadAllFromEF| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.CsimFileHandler| |loadEFLinearFixedAll| |int,android.os.Message|
|com.android.internal.telephony.uicc.IsimFileHandler| |loadEFLinearFixedAll| |int,android.os.Message|
|com.android.internal.telephony.uicc.IsimUiccRecords| |fetchIsimRecords| ||
|com.android.internal.telephony.uicc.IsimUiccRecords| |handleFileUpdate| |int|
|com.android.internal.telephony.uicc.RuimFileHandler| |loadEFLinearFixedAll| |int,android.os.Message|
|com.android.internal.telephony.uicc.SIMFileHandler| |loadEFLinearFixedAll| |int,android.os.Message|
|com.android.internal.telephony.uicc.UsimFileHandler| |loadEFLinearFixedAll| |int,android.os.Message|
|com.android.internal.telephony.uicc.AdnRecordLoader| |loadFromEF| |int,int,int,android.os.Message|
|com.android.internal.telephony.uicc.CsimFileHandler| |loadEFLinearFixed| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.IsimFileHandler| |loadEFLinearFixed| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.RuimFileHandler| |loadEFLinearFixed| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.SIMFileHandler| |loadEFLinearFixed| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.UsimFileHandler| |loadEFLinearFixed| |int,int,android.os.Message|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLocked| |int,java.lang.String|
|com.android.internal.telephony.uicc.CsimFileHandler| |loadEFTransparent| |int,android.os.Message|
|com.android.internal.telephony.uicc.IsimFileHandler| |loadEFTransparent| |int,android.os.Message|
|com.android.internal.telephony.uicc.RuimFileHandler| |loadEFTransparent| |int,android.os.Message|
|com.android.internal.telephony.uicc.SIMFileHandler| |loadEFTransparent| |int,android.os.Message|
|com.android.internal.telephony.uicc.SIMRecords| |getSpnFsm| |boolean,android.os.AsyncResult|
|com.android.internal.telephony.uicc.SIMRecords| |loadEfLiAndEfPl| ||
|com.android.internal.telephony.uicc.UsimFileHandler| |loadEFTransparent| |int,android.os.Message|
|com.android.internal.telephony.uicc.CsimFileHandler| |loadEFTransparent| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.IsimFileHandler| |loadEFTransparent| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.RuimFileHandler| |loadEFTransparent| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.SIMFileHandler| |loadEFTransparent| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.UsimFileHandler| |loadEFTransparent| |int,int,android.os.Message|
|com.android.internal.telephony.IccSmsInterfaceManager| |markMessagesAsRead| |java.util.ArrayList|
|com.android.internal.telephony.uicc.CsimFileHandler| |updateEFLinearFixed| |int,int,byte[],java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IsimFileHandler| |updateEFLinearFixed| |int,int,byte[],java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.RuimFileHandler| |updateEFLinearFixed| |int,int,byte[],java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.SIMFileHandler| |updateEFLinearFixed| |int,int,byte[],java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.SIMRecords| |setVoiceCallForwardingFlag| |int,boolean,java.lang.String|
|com.android.internal.telephony.uicc.SIMRecords| |setVoiceMessageWaiting| |int,int|
|com.android.internal.telephony.uicc.UsimFileHandler| |updateEFLinearFixed| |int,int,byte[],java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.CsimFileHandler| |updateEFTransparent| |int,byte[],android.os.Message|
|com.android.internal.telephony.uicc.IsimFileHandler| |updateEFTransparent| |int,byte[],android.os.Message|
|com.android.internal.telephony.uicc.RuimFileHandler| |updateEFTransparent| |int,byte[],android.os.Message|
|com.android.internal.telephony.uicc.SIMFileHandler| |updateEFTransparent| |int,byte[],android.os.Message|
|com.android.internal.telephony.uicc.UsimFileHandler| |updateEFTransparent| |int,byte[],android.os.Message|
|com.android.internal.telephony.uicc.UiccCard| |iccExchangeSimIO| |int,int,int,int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.UiccCarrierPrivilegeRules| |<init>| |com.android.internal.telephony.uicc.UiccCard,android.os.Message|
|com.android.internal.telephony.uicc.UiccCard| |iccTransmitApduBasicChannel| |int,int,int,int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.UiccCard| |iccTransmitApduLogicalChannel| |int,int,int,int,int,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.Phone| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.Phone| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.Phone| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.Phone| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.Phone| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.Phone| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.Phone| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |getCallWaiting| |android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.Phone| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.uicc.UiccCardApplication| |<init>| |com.android.internal.telephony.uicc.UiccCard,com.android.internal.telephony.uicc.IccCardApplicationStatus,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.uicc.UiccCardApplication| |update| |com.android.internal.telephony.uicc.IccCardApplicationStatus,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.cdma.CDMALTEPhone| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.Phone| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |rejectCall| ||
|com.android.internal.telephony.gsm.GSMPhone| |rejectCall| ||
|com.android.internal.telephony.PhoneSubInfo| |getIccSimChallengeResponse| |int,int,java.lang.String|
|com.android.internal.telephony.uicc.IsimUiccRecords| |getIccSimChallengeResponse| |int,java.lang.String|
|com.android.internal.telephony.uicc.RuimRecords| |getIccSimChallengeResponse| |int,java.lang.String|
|com.android.internal.telephony.uicc.SIMRecords| |getIccSimChallengeResponse| |int,java.lang.String|
|com.android.internal.telephony.uicc.IsimRecords| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.PhoneBase| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.cdma.CdmaCallTracker| |conference| ||
|com.android.internal.telephony.cdma.CDMAPhone| |switchHoldingAndActive| ||
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendSms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.SMSDispatcher| |sendSmsByPstn| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CDMALTEPhone| |sendDtmf| |char|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendSms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.RIL$1| |onDisplayChanged| |int|
|com.android.internal.telephony.BaseCommands| |onRadioAvailable| ||
|com.android.internal.telephony.gsm.GSMPhone| |sendUssdResponse| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaConnection| |separate| ||
|com.android.internal.telephony.gsm.GsmConnection| |separate| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.Phone| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.IccSmsInterfaceManager| |disableCdmaBroadcastRange| |int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |enableCdmaBroadcastRange| |int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |access$200| |com.android.internal.telephony.IccSmsInterfaceManager,com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[]|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.Phone| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setCdmaSubscription| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |setCdmaSubscription| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setCdmaSubscription| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setCdmaSubscription| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |setCdmaSubscription| |int,android.os.Message|
|com.android.internal.telephony.Phone| |setCdmaSubscription| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |setCdmaSubscription| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |setCdmaSubscription| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setCellInfoListRate| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |setCellInfoListRate| |int|
|com.android.internal.telephony.gsm.GSMPhone| |setCellInfoListRate| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setCellInfoListRate| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |setCellInfoListRate| |int|
|com.android.internal.telephony.Phone| |setCellInfoListRate| |int|
|com.android.internal.telephony.sip.SipPhoneBase| |setCellInfoListRate| |int|
|com.android.internal.telephony.sip.SipPhone| |setCellInfoListRate| |int|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |setDataAllowed| |boolean,android.os.Message|
|com.android.internal.telephony.dataconnection.DcTracker| |setDataProfilesAsNeeded| ||
|com.android.internal.telephony.uicc.IccCardProxy| |setIccFdnEnabled| |boolean,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IccCardProxy| |setIccLockEnabled| |boolean,java.lang.String,android.os.Message|
|com.android.internal.telephony.IccSmsInterfaceManager| |disableGsmBroadcastRange| |int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |enableGsmBroadcastRange| |int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |access$100| |com.android.internal.telephony.IccSmsInterfaceManager,com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[]|
|com.android.internal.telephony.dataconnection.DcTracker| |setInitialAttachApn| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |disableLocationUpdates| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |disableLocationUpdates| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |disableLocationUpdates| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |disableSingleLocationUpdate| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |disableSingleLocationUpdate| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |disableSingleLocationUpdate| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |enableLocationUpdates| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |enableLocationUpdates| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |enableLocationUpdates| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |enableSingleLocationUpdate| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |enableSingleLocationUpdate| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |enableSingleLocationUpdate| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setMute| |boolean|
|com.android.internal.telephony.gsm.GSMPhone| |setMute| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |restoreSavedNetworkSelection| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |restoreSavedNetworkSelection| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |restoreSavedNetworkSelection| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |restoreSavedNetworkSelection| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |restoreSavedNetworkSelection| |android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |restoreSavedNetworkSelection| |android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |restoreSavedNetworkSelection| |android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setNetworkSelectionModeAutomatic| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |setNetworkSelectionModeAutomatic| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setNetworkSelectionModeAutomatic| |android.os.Message|
|com.android.internal.telephony.Phone| |setNetworkSelectionModeAutomatic| |android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |selectNetworkManually| |com.android.internal.telephony.OperatorInfo,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |selectNetworkManually| |com.android.internal.telephony.OperatorInfo,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |selectNetworkManually| |com.android.internal.telephony.OperatorInfo,android.os.Message|
|com.android.internal.telephony.Phone| |selectNetworkManually| |com.android.internal.telephony.OperatorInfo,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.Phone| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |enableEnhancedVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.PhoneBase| |enableEnhancedVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.Phone| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.Phone| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.Phone| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.dataconnection.DataConnection| |access$3500| |com.android.internal.telephony.dataconnection.DataConnection,com.android.internal.telephony.dataconnection.DataConnection$ConnectionParams|
|com.android.internal.telephony.cdma.CDMALTEPhone| |startDtmf| |char|
|com.android.internal.telephony.cdma.CDMALTEPhone| |stopDtmf| ||
|com.android.internal.telephony.uicc.IccCardProxy| |supplyPin2| |java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IccCardProxy| |supplyPin| |java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IccCardProxy| |supplyPuk2| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IccCardProxy| |supplyPuk| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IccCardProxy| |supplyNetworkDepersonalization| |java.lang.String,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |switchHoldingAndActive| ||
|com.android.internal.telephony.UiccSmsController| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dispatchMessageRadioSpecific| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.InboundSmsHandler| |onUpdatePhoneObject| |com.android.internal.telephony.PhoneBase|
|com.android.server.SystemServer| |startCoreServices| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.String|
|com.android.server.am.ActivityStack| |activityPausedLocked| |android.os.IBinder,boolean|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.power.ShutdownThread| |run| ||
|com.android.server.am.ActivityManagerService| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |ensureBootCompleted| ||
|com.android.server.SystemServer| |run| ||
|com.android.server.SystemService| |<init>| |android.content.Context|
|com.android.server.hdmi.HdmiControlService| |access$5700| |com.android.server.hdmi.HdmiControlService|
|com.android.server.hdmi.HdmiControlService| |access$100| |com.android.server.hdmi.HdmiControlService|
|com.android.server.hdmi.DelayedMessageBuffer| |processActiveSource| |int|
|com.android.server.hdmi.DelayedMessageBuffer| |processAllMessages| ||
|com.android.server.hdmi.DelayedMessageBuffer| |processMessagesForDevice| |int|
|com.android.server.hdmi.HdmiCecLocalDevice| |dispatchMessage| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |onMessage| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |dispatchMessage| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |onMessage| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |dispatchMessageToAction| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |dispatchMessageToAction| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecFeatureAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |startQueuedActions| ||
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |startQueuedActions| ||
|com.android.server.location.GeofenceManager| |addFence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,int,int,java.lang.String|
|com.android.server.location.GeofenceManager| |removeFence| |android.location.Geofence,android.app.PendingIntent|
|com.android.server.location.GeofenceManager| |removeFence| |java.lang.String|
|com.android.server.LocationManagerService| |access$200| |com.android.server.LocationManagerService|
|com.android.server.LocationManagerService| |access$1400| |com.android.server.LocationManagerService,com.android.server.LocationManagerService$Receiver|
|com.android.server.LocationManagerService| |reportLocation| |android.location.Location,boolean|
|com.android.server.LocationManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService$2| |onChange| |boolean|
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onPress| ||
|com.android.server.sip.SipSessionGroup$SipSessionImpl| |processCommand| |java.util.EventObject|
|com.android.server.sip.SipSessionGroup| |process| |java.util.EventObject|
|com.android.server.VibratorService$1| |onLowPowerModeChanged| |boolean|
|com.android.server.VibratorService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.VibratorService$SettingsObserver| |onChange| |boolean|
|com.android.server.am.ActivityManagerService| |updateConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |handleAppTransitionReadyLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowManagerService| |prepareAppTransition| |int,boolean|
|com.android.server.wm.WindowManagerService| |makeWindowFreezingScreenIfNeededLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |requestTraversalLocked| ||
|com.android.server.am.ActivityStackSupervisor| |moveTaskToStackLocked| |int,int,boolean|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.TaskStack| |detachDisplay| ||
|android.view.IWindowManager$Stub$Proxy| |setNewConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |updateConfigurationLocked| |android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean|
|com.android.server.wm.WindowManagerService$DragInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|android.view.IWindowSession$Stub$Proxy| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.Session| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager$Stub$Proxy| |startFreezingScreen| |int,int|
|android.view.IWindowManager$Stub| |startFreezingScreen| |int,int|
|com.android.server.wm.WindowAnimator| |animateLocked| ||
|com.android.server.content.SyncStorageEngine| |requestSync| |android.accounts.Account,int,int,java.lang.String,android.os.Bundle|
|com.android.server.content.SyncStorageEngine| |requestSync| |com.android.server.content.SyncStorageEngine$AuthorityInfo,int,android.os.Bundle|
|android.filterfw.core.FieldPort| |transfer| |android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |notifyFieldPortValueUpdated| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |performOpen| |android.filterfw.core.FilterContext|
|android.filterfw.core.SyncRunner| |close| ||
|android.filterfw.core.FilterFunction| |tearDown| ||
|android.filterfw.core.FilterGraph| |tearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |performTearDown| |android.filterfw.core.FilterContext|
|android.filterfw.core.FilterFunction| |executeWithArgList| |java.lang.Object[]|
|android.filterfw.core.SyncRunner| |performStep| ||
|android.preference.SeekBarVolumizer| |onInitSample| ||
|com.android.internal.policy.impl.EnableAccessibilityController| |<init>| |android.content.Context,java.lang.Runnable|
|android.widget.VideoView| |setVideoPath| |java.lang.String|
|com.android.server.power.PowerManagerService| |updateIsPoweredLocked| |int|
|com.android.server.input.InputManagerService| |dispatchUnhandledKey| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |dial| |java.lang.String,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |acceptCall| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |dial| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.imsphone.ImsPhone| |handleCallDeflectionIncallSupplementaryService| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |handleCallWaitingIncallSupplementaryService| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |hangup| |com.android.internal.telephony.imsphone.ImsPhoneConnection|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |rejectCall| ||
|com.android.internal.telephony.imsphone.ImsPhoneCall| |dispose| ||
|com.android.internal.telephony.imsphone.ImsPhoneCall| |hangup| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |access$900| |com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.ims.ImsCall,com.android.internal.telephony.Call$State,int|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3| |onCallMerged| |com.android.ims.ImsCall,boolean|
|com.android.ims.internal.IImsEcbmListener$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.ims.internal.IImsEcbmListener| |enteredECBM| ||
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhone| |android.content.Context|
|com.android.internal.telephony.SubscriptionInfoUpdater| |updateSubscriptionInfoByIccId| ||
|com.android.internal.telephony.gsm.GSMPhone| |handleInCallMmiCommands| |java.lang.String|
|com.android.internal.telephony.InboundSmsHandler| |notifyAndAcknowledgeLastIncomingSms| |boolean,int,android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |handlePinMmi| |java.lang.String|
|com.android.internal.telephony.IccCard| |changeIccFdnPassword| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.IccCard| |changeIccLockPassword| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |handleMultipartyIncallSupplementaryService| |java.lang.String|
|com.android.internal.telephony.dataconnection.DataConnection$DcActiveState| |processMessage| |android.os.Message|
|com.android.internal.telephony.ISms$Stub$Proxy| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.UiccSmsController| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |exitEmergencyCallbackMode| ||
|com.android.internal.telephony.Phone| |exitEmergencyCallbackMode| ||
|com.android.internal.telephony.sip.SipPhoneBase| |exitEmergencyCallbackMode| ||
|com.android.internal.telephony.sip.SipPhone| |exitEmergencyCallbackMode| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |handleEctIncallSupplementaryService| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getAllCellInfo| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |getCellLocation| ||
|com.android.internal.telephony.imsphone.ImsPhone| |getAllCellInfo| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |getAllCellInfo| ||
|com.android.internal.telephony.cdma.CDMAPhone| |getAllCellInfo| ||
|com.android.internal.telephony.gsm.GSMPhone| |getAllCellInfo| ||
|com.android.internal.telephony.Phone| |getAllCellInfo| ||
|com.android.internal.telephony.sip.SipPhoneBase| |getAllCellInfo| ||
|com.android.internal.telephony.sip.SipPhone| |getAllCellInfo| ||
|com.android.internal.telephony.cdma.CdmaCallTracker| |handleRadioAvailable| ||
|com.android.internal.telephony.gsm.GsmCallTracker| |handleRadioAvailable| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |handleRadioAvailable| ||
|com.android.internal.telephony.cdma.CdmaCallTracker| |handleRadioNotAvailable| ||
|com.android.internal.telephony.gsm.GsmCallTracker| |handleRadioNotAvailable| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |handleRadioNotAvailable| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.RIL| |<init>| |android.content.Context,int,int|
|com.android.internal.telephony.uicc.IccRecords| |onRefresh| |boolean,int[]|
|com.android.internal.telephony.uicc.SIMRecords| |handleSimRefresh| |com.android.internal.telephony.uicc.IccRefreshResponse|
|com.android.internal.telephony.PhoneProxy| |getNetworkSelectionMode| |android.os.Message|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLoaded| |int|
|com.android.internal.telephony.PhoneProxy| |getPreferredNetworkType| |android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |getEnhancedVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |getEnhancedVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |getEnhancedVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.Phone| |getEnhancedVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |getEnhancedVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |getEnhancedVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.RIL$RILReceiver| |run| ||
|com.android.internal.telephony.PhoneProxy| |getSmscAddress| |android.os.Message|
|com.android.internal.telephony.PhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.IccPhoneBookInterfaceManager| |getAdnRecordsSize| |int|
|com.android.internal.telephony.uicc.AdnRecordCache| |updateAdnByIndex| |int,com.android.internal.telephony.uicc.AdnRecord,int,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.AdnRecordCache| |updateAdnBySearch| |int,com.android.internal.telephony.uicc.AdnRecord,com.android.internal.telephony.uicc.AdnRecord,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IccRecords| |setMsisdnNumber| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.SIMRecords| |setMsisdnNumber| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.SIMRecords| |setVoiceMailNumber| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.cat.IconLoader| |startLoadingIcon| |int|
|com.android.internal.telephony.gsm.UsimPhoneBookManager| |loadEfFilesFromUsim| ||
|com.android.internal.telephony.UiccSmsController| |getAllMessagesFromIccEfForSubscriber| |int,java.lang.String|
|com.android.internal.telephony.uicc.AdnRecordCache| |requestLoadAllAdnLike| |int,int,android.os.Message|
|com.android.internal.telephony.uicc.IsimUiccRecords| |handleIsimRefresh| |com.android.internal.telephony.uicc.IccRefreshResponse|
|com.android.internal.telephony.uicc.IsimUiccRecords| |onReady| ||
|com.android.internal.telephony.uicc.IsimUiccRecords| |onRefresh| |boolean,int[]|
|com.android.internal.telephony.SubscriptionInfoUpdater$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.uicc.SIMRecords| |onLocked| ||
|com.android.internal.telephony.uicc.IccRecords| |setVoiceCallForwardingFlag| |int,boolean,java.lang.String|
|com.android.internal.telephony.uicc.IccRecords| |setVoiceMessageWaiting| |int,int|
|com.android.internal.telephony.uicc.UiccCard| |update| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.uicc.IccCardStatus|
|com.android.internal.telephony.PhoneProxy| |invokeOemRilRequestRaw| |byte[],android.os.Message|
|com.android.internal.telephony.PhoneProxy| |invokeOemRilRequestStrings| |java.lang.String[],android.os.Message|
|com.android.internal.telephony.PhoneProxy| |nvReadItem| |int,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |nvResetConfig| |int,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |nvWriteCdmaPrl| |byte[],android.os.Message|
|com.android.internal.telephony.PhoneProxy| |nvWriteItem| |int,java.lang.String,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |queryAvailableBandMode| |android.os.Message|
|com.android.internal.telephony.PhoneProxy| |queryCdmaRoamingPreference| |android.os.Message|
|com.android.internal.telephony.PhoneProxy| |queryTTYMode| |android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |rejectCall| ||
|com.android.internal.telephony.PhoneSubInfoProxy| |getIccSimChallengeResponse| |int,int,java.lang.String|
|com.android.internal.telephony.PhoneSubInfo| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.gsm.GSMPhone| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.Phone| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |switchHoldingAndActive| ||
|com.android.internal.telephony.SMSDispatcher| |sendSms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.BaseCommands| |setRadioState| |com.android.internal.telephony.CommandsInterface$RadioState|
|com.android.internal.telephony.imsphone.ImsPhoneCommandInterface| |onRadioAvailable| ||
|com.android.internal.telephony.sip.SipCommandInterface| |onRadioAvailable| ||
|com.android.internal.telephony.test.SimulatedCommands| |onRadioAvailable| ||
|com.android.internal.telephony.PhoneProxy| |setBandMode| |int,android.os.Message|
|com.android.internal.telephony.IccSmsInterfaceManager| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager| |finishUpdate| ||
|com.android.internal.telephony.PhoneProxy| |setCdmaRoamingPreference| |int,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |setCdmaSubscription| |int,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |setCellInfoListRate| |int|
|com.android.internal.telephony.dataconnection.DcTracker| |createAllApnList| ||
|com.android.internal.telephony.IccCard| |setIccFdnEnabled| |boolean,java.lang.String,android.os.Message|
|com.android.internal.telephony.IccCard| |setIccLockEnabled| |boolean,java.lang.String,android.os.Message|
|com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager| |finishUpdate| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onApnChanged| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onRecordsLoaded| ||
|com.android.internal.telephony.cdma.CDMAPhone| |disableLocationUpdates| ||
|com.android.internal.telephony.gsm.GSMPhone| |disableLocationUpdates| ||
|com.android.internal.telephony.cdma.CDMAPhone| |enableLocationUpdates| ||
|com.android.internal.telephony.gsm.GSMPhone| |enableLocationUpdates| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateServiceLocation| ||
|com.android.internal.telephony.gsm.GSMPhone| |updateServiceLocation| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setMute| |boolean|
|com.android.internal.telephony.PhoneProxy| |setNetworkSelectionModeAutomatic| |android.os.Message|
|com.android.internal.telephony.PhoneProxy| |selectNetworkManually| |com.android.internal.telephony.OperatorInfo,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |setPreferredNetworkType| |int,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |enableEnhancedVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |enableEnhancedVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |enableEnhancedVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.Phone| |enableEnhancedVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.sip.SipPhoneBase| |enableEnhancedVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.sip.SipPhone| |enableEnhancedVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |setRadioCapability| |com.android.internal.telephony.RadioCapability,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |setSmscAddress| |java.lang.String,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |setTTYMode| |int,android.os.Message|
|com.android.internal.telephony.dataconnection.DataConnection$DcInactiveState| |processMessage| |android.os.Message|
|com.android.internal.telephony.dataconnection.DataConnection$DcRetryingState| |processMessage| |android.os.Message|
|com.android.internal.telephony.IccCard| |supplyPin2| |java.lang.String,android.os.Message|
|com.android.internal.telephony.IccCard| |supplyPin| |java.lang.String,android.os.Message|
|com.android.internal.telephony.IccCard| |supplyPuk2| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.IccCard| |supplyPuk| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.IccCard| |supplyNetworkDepersonalization| |java.lang.String,android.os.Message|
|com.android.internal.telephony.ISms$Stub$Proxy| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.UiccSmsController| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.InboundSmsHandler| |dispatchMessageRadioSpecific| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |onUpdatePhoneObject| |com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.InboundSmsHandler$DefaultState| |processMessage| |android.os.Message|
|com.android.server.am.ActivityStack| |awakeFromSleepingLocked| ||
|android.app.ActivityManagerNative| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |appNotResponding| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |systemReady| |java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |crashApplication| |com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.server.AlarmManagerService| |<init>| |android.content.Context|
|com.android.server.am.ActivityManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.appwidget.AppWidgetService| |<init>| |android.content.Context|
|com.android.server.backup.BackupManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.BatteryService| |<init>| |android.content.Context|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.display.DisplayManagerService| |<init>| |android.content.Context|
|com.android.server.dreams.DreamManagerService| |<init>| |android.content.Context|
|com.android.server.ethernet.EthernetService| |<init>| |android.content.Context|
|com.android.server.fingerprint.FingerprintService| |<init>| |android.content.Context|
|com.android.server.hdmi.HdmiControlService| |<init>| |android.content.Context|
|com.android.server.job.JobSchedulerService| |<init>| |android.content.Context|
|com.android.server.lights.LightsService| |<init>| |android.content.Context|
|com.android.server.media.MediaSessionService| |<init>| |android.content.Context|
|com.android.server.media.projection.MediaProjectionManagerService| |<init>| |android.content.Context|
|com.android.server.MmsServiceBroker| |<init>| |android.content.Context|
|com.android.server.notification.NotificationManagerService| |<init>| |android.content.Context|
|com.android.server.PersistentDataBlockService| |<init>| |android.content.Context|
|com.android.server.pm.Installer| |<init>| |android.content.Context|
|com.android.server.pm.LauncherAppsService| |<init>| |android.content.Context|
|com.android.server.power.PowerManagerService| |<init>| |android.content.Context|
|com.android.server.print.PrintManagerService| |<init>| |android.content.Context|
|com.android.server.restrictions.RestrictionsManagerService| |<init>| |android.content.Context|
|com.android.server.storage.DeviceStorageMonitorService| |<init>| |android.content.Context|
|com.android.server.telecom.TelecomLoaderService| |<init>| |android.content.Context|
|com.android.server.trust.TrustManagerService| |<init>| |android.content.Context|
|com.android.server.tv.TvInputManagerService| |<init>| |android.content.Context|
|com.android.server.twilight.TwilightService| |<init>| |android.content.Context|
|com.android.server.UiModeManagerService| |<init>| |android.content.Context|
|com.android.server.usage.UsageStatsService| |<init>| |android.content.Context|
|com.android.server.usb.UsbService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |<init>| |android.content.Context|
|com.android.server.webkit.WebViewUpdateService| |<init>| |android.content.Context|
|com.android.server.wifi.p2p.WifiP2pService| |<init>| |android.content.Context|
|com.android.server.wifi.RttService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiScanningService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiService| |<init>| |android.content.Context|
|com.android.server.hdmi.HdmiControlService$4| |run| ||
|com.android.server.hdmi.HdmiControlService$HdmiControlBroadcastReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |processDelayedActiveSource| |int|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |processAllDelayedMessages| ||
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |processDelayedMessages| |int|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |dispatchMessage| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiControlService| |dispatchMessageToLocalDevice| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.DeviceDiscoveryAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.DevicePowerStatusAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.DeviceSelectAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.HotplugDetectionAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.NewDeviceAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.OneTouchPlayAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.OneTouchRecordAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.PowerStatusMonitorAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.RequestArcAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.RequestArcInitiationAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.RequestArcTerminationAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.RoutingControlAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.SendKeyAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.SetArcTransmissionStateAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.SystemAudioActionFromAvr| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.SystemAudioActionFromTv| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.SystemAudioAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.SystemAudioAutoInitiationAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.SystemAudioStatusAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.TimerRecordingAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.VolumeControlAction| |addAndStartAction| |com.android.server.hdmi.HdmiCecFeatureAction|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |oneTouchPlay| |android.hardware.hdmi.IHdmiControlCallback|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |queryDisplayStatus| |android.hardware.hdmi.IHdmiControlCallback|
|com.android.server.hdmi.HdmiCecLocalDeviceTv$2| |onDeviceDiscoveryDone| |java.util.List|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleInitiateArc| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleRoutingChange| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleSetSystemAudioMode| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleTerminateArc| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |startOneTouchRecord| |int,byte[]|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |changeSystemAudioMode| |boolean,android.hardware.hdmi.IHdmiControlCallback|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |changeVolume| |int,int,int|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |deviceSelect| |int,android.hardware.hdmi.IHdmiControlCallback|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |disableArcIfExist| ||
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |launchDeviceDiscovery| ||
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |onNewAvrAdded| |android.hardware.hdmi.HdmiDeviceInfo|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |sendKeyEvent| |int,boolean|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |startArcAction| |boolean|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |startNewDeviceAction| |com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource,int|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |startRoutingControl| |int,int,boolean,android.hardware.hdmi.IHdmiControlCallback|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |startTimerRecording| |int,int,byte[]|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |onAddressAllocated| |int,int|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |onAddressAllocated| |int,int|
|com.android.server.LocationManagerService$1| |onOpChanged| |int,java.lang.String|
|com.android.server.LocationManagerService$4| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.LocationManagerService$Receiver| |binderDied| ||
|com.android.server.LocationManagerService$UpdateRecord| |disposeLocked| |boolean|
|android.location.ILocationManager$Stub$Proxy| |reportLocation| |android.location.Location,boolean|
|android.location.ILocationManager$Stub| |reportLocation| |android.location.Location,boolean|
|com.android.internal.policy.impl.GlobalActions$LongPressAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$Action| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$SinglePressAction| |onPress| ||
|com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl| |processCommand| |java.util.EventObject|
|com.android.server.sip.SipSessionGroup$SipSessionImpl| |access$1600| |com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject|
|com.android.server.sip.SipSessionGroup| |processDialogTerminated| |javax.sip.DialogTerminatedEvent|
|com.android.server.sip.SipSessionGroup| |processIOException| |javax.sip.IOExceptionEvent|
|com.android.server.sip.SipSessionGroup| |processResponse| |javax.sip.ResponseEvent|
|com.android.server.sip.SipSessionGroup| |processTimeout| |javax.sip.TimeoutEvent|
|com.android.server.sip.SipSessionGroup| |processTransactionTerminated| |javax.sip.TransactionTerminatedEvent|
|android.app.ActivityManagerNative| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub$Proxy| |prepareAppTransition| |int,boolean|
|android.view.IWindowManager$Stub| |prepareAppTransition| |int,boolean|
|com.android.server.am.ActivityManagerService| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStack| |moveTaskToBackLocked| |int|
|com.android.server.am.ActivityStack| |moveTaskToFrontLocked| |com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle,java.lang.String|
|com.android.server.am.ActivityStack| |updateTransitLocked| |int,android.os.Bundle|
|com.android.server.wm.WindowManagerService| |updateResizingWindows| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |createSurfaceLocked| ||
|com.android.server.wm.WindowManagerService$LocalService| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.wm.WindowManagerService| |handleDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayChangedLocked| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayRemovedLocked| |int|
|com.android.server.wm.WindowManagerService| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |requestTraversal| ||
|com.android.server.wm.WindowManagerService| |setAppFullscreen| |android.os.IBinder,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$9| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |clearClearableFlagsLw| ||
|com.android.server.wm.WindowManagerService| |detachStackLocked| |com.android.server.wm.DisplayContent,com.android.server.wm.TaskStack|
|android.view.IWindowManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowManager| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |retrieveSettings| ||
|android.view.IWindowSession| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession$Stub$Proxy| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowSession$Stub| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager| |startFreezingScreen| |int,int|
|com.android.server.wm.WindowAnimator| |access$000| |com.android.server.wm.WindowAnimator|
|com.android.server.content.SyncStorageEngine| |setMasterSyncAutomatically| |boolean,int|
|com.android.server.content.SyncStorageEngine| |setSyncAutomatically| |android.accounts.Account,int,java.lang.String,boolean|
|com.android.server.content.SyncStorageEngine| |setSyncableStateForEndPoint| |com.android.server.content.SyncStorageEngine$EndPoint,int|
|android.filterfw.core.FinalPort| |setFieldFrame| |android.filterfw.core.Frame,boolean|
|android.filterfw.core.FinalPort| |transfer| |android.filterfw.core.FilterContext|
|android.filterfw.core.InputPort| |transfer| |android.filterfw.core.FilterContext|
|android.filterfw.core.AsyncRunner$AsyncRunnerTask| |onPostExecute| |android.filterfw.core.AsyncRunner$RunnerResult|
|android.filterfw.core.AsyncRunner| |close| ||
|android.filterfw.core.GraphRunner| |close| ||
|android.media.effect.SingleFilterEffect| |release| ||
|android.filterfw.core.FilterContext| |tearDown| ||
|android.media.effect.FilterGraphEffect| |release| ||
|android.media.effect.SingleFilterEffect| |apply| |int,int,int,int|
|android.media.effect.SizeChangeEffect| |apply| |int,int,int,int|
|android.filterfw.core.AsyncRunner$AsyncRunnerTask| |doInBackground| |android.filterfw.core.SyncRunner[]|
|android.filterfw.core.SyncRunner| |step| ||
|android.filterfw.core.SyncRunner| |run| ||
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |onStart| ||
|com.android.server.power.PowerManagerService| |updatePowerStateLocked| ||
|com.android.internal.telephony.imsphone.ImsPhone| |dial| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.imsphone.ImsPhone| |handleInCallMmiCommands| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |hangup| ||
|com.android.internal.telephony.imsphone.ImsPhone| |rejectCall| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |dispose| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3| |onCallHeld| |com.android.ims.ImsCall|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3| |onCallProgressing| |com.android.ims.ImsCall|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3| |onCallResumed| |com.android.ims.ImsCall|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3| |onCallStarted| |com.android.ims.ImsCall|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3| |onCallStartFailed| |com.android.ims.ImsCall,com.android.ims.ImsReasonInfo|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3| |onCallTerminated| |com.android.ims.ImsCall,com.android.ims.ImsReasonInfo|
|com.android.ims.ImsCall$Listener| |onCallMerged| |com.android.ims.ImsCall,boolean|
|com.android.ims.ImsEcbm$ImsEcbmListenerProxy| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhones| |android.content.Context|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimAbsent| |int|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |notifyAndAcknowledgeLastIncomingSms| |boolean,int,android.os.Message|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |notifyAndAcknowledgeLastIncomingSms| |boolean,int,android.os.Message|
|com.android.internal.telephony.InboundSmsHandler| |handleNewSms| |android.os.AsyncResult|
|com.android.internal.telephony.cdma.CDMALTEPhone| |handlePinMmi| |java.lang.String|
|com.android.internal.telephony.ISms| |updateMessageOnIccEfForSubscriber| |int,java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.ISms$Stub| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.PhoneProxy| |exitEmergencyCallbackMode| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.gsm.GSMPhone| |getCellLocation| ||
|com.android.internal.telephony.PhoneProxy| |getAllCellInfo| ||
|com.android.internal.telephony.PhoneProxy| |getEnhancedVoicePrivacy| |android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.gsm.GSMPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.ServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.sip.SipPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.sip.SipPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy| |getAdnRecordsSize| |int|
|com.android.internal.telephony.IccPhoneBookInterfaceManager| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IccPhoneBookInterfaceManager| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.gsm.GSMPhone| |setLine1Number| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IsimUiccRecords| |setMsisdnNumber| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.RuimRecords| |setMsisdnNumber| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.uicc.IccRecords| |setVoiceMailNumber| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.cat.IconLoader| |loadIcon| |int,android.os.Message|
|com.android.internal.telephony.cat.IconLoader| |loadIcons| |int[],android.os.Message|
|com.android.internal.telephony.cat.IconLoader| |postIcon| ||
|com.android.internal.telephony.ISms$Stub$Proxy| |getAllMessagesFromIccEfForSubscriber| |int,java.lang.String|
|com.android.internal.telephony.ISms$Stub| |getAllMessagesFromIccEfForSubscriber| |int,java.lang.String|
|com.android.internal.telephony.UiccSmsController| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.gsm.UsimPhoneBookManager| |readAdnFileAndWait| |int|
|com.android.internal.telephony.IccPhoneBookInterfaceManager| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.gsm.GsmMmiCode| |makeCFQueryResultMessage| |com.android.internal.telephony.CallForwardInfo,int|
|com.android.internal.telephony.gsm.GsmMmiCode| |onQueryCfComplete| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmMmiCode| |parseSsData| |com.android.internal.telephony.gsm.SsData|
|com.android.internal.telephony.gsm.GSMPhone| |handleCfuQueryResult| |com.android.internal.telephony.CallForwardInfo[]|
|com.android.internal.telephony.imsphone.ImsPhone| |handleCfQueryResult| |com.android.ims.ImsCallForwardInfo[]|
|com.android.internal.telephony.imsphone.ImsPhoneMmiCode| |makeCFQueryResultMessage| |com.android.internal.telephony.CallForwardInfo,int|
|com.android.internal.telephony.imsphone.ImsPhoneMmiCode| |onQueryCfComplete| |android.os.AsyncResult|
|com.android.internal.telephony.uicc.IsimUiccRecords| |setVoiceCallForwardingFlag| |int,boolean,java.lang.String|
|com.android.internal.telephony.uicc.RuimRecords| |setVoiceCallForwardingFlag| |int,boolean,java.lang.String|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |updateMessageWaitingIndicator| |int|
|com.android.internal.telephony.gsm.GSMPhone| |setVoiceMessageWaiting| |int,int|
|com.android.internal.telephony.uicc.UiccCard| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.uicc.IccCardStatus,int|
|com.android.internal.telephony.uicc.UiccCard| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.uicc.IccCardStatus|
|com.android.internal.telephony.uicc.UiccController| |onGetIccCardStatusDone| |android.os.AsyncResult,java.lang.Integer|
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIccSimChallengeResponse| |int,int,java.lang.String|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIccSimChallengeResponse| |int,int,java.lang.String|
|com.android.internal.telephony.PhoneSubInfoController| |getIccSimChallengeResponse| |int,int,java.lang.String|
|com.android.internal.telephony.PhoneSubInfoProxy| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.CallManager| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.PhoneProxy| |sendBurstDtmf| |java.lang.String,int,int,android.os.Message|
|com.android.internal.telephony.ImsSMSDispatcher| |sendRetrySms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.SMSDispatcher| |sendRawPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.imsphone.ImsPhoneCommandInterface| |setRadioState| |com.android.internal.telephony.CommandsInterface$RadioState|
|com.android.internal.telephony.RIL| |setRadioState| |com.android.internal.telephony.CommandsInterface$RadioState|
|com.android.internal.telephony.sip.SipCommandInterface| |setRadioState| |com.android.internal.telephony.CommandsInterface$RadioState|
|com.android.internal.telephony.test.SimulatedCommands| |setRadioState| |com.android.internal.telephony.CommandsInterface$RadioState|
|com.android.internal.telephony.IccSmsInterfaceManager| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.IccSmsInterfaceManager| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.IntRangeManager| |finishUpdate| ||
|com.android.internal.telephony.dataconnection.DcTracker$ApnChangeObserver| |onChange| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |disableLocationUpdates| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |enableLocationUpdates| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateServiceLocation| ||
|com.android.internal.telephony.PhoneProxy| |enableEnhancedVoicePrivacy| |boolean,android.os.Message|
|com.android.internal.telephony.ProxyController| |sendRadioCapabilityRequest| |int,int,int,int,java.lang.String,int,int|
|com.android.internal.telephony.ISms| |copyMessageToIccEfForSubscriber| |int,java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub$Proxy| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.ISms$Stub| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.InboundSmsHandler| |dispatchMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.server.am.ActivityStackSupervisor| |comeOutOfSleepIfNeededLocked| ||
|android.app.IActivityManager| |bootAnimationComplete| ||
|com.android.server.am.ActiveServices| |serviceTimeout| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService$10| |run| ||
|com.android.server.am.BroadcastQueue$AppNotResponding| |run| ||
|com.android.server.am.ActivityManagerService$14| |run| ||
|com.android.server.am.ActivityManagerService| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrashInner| |java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.hdmi.HdmiCecLocalDeviceTv$1| |onInputAdded| |java.lang.String|
|com.android.server.hdmi.DeviceDiscoveryAction| |wrapUpAndFinish| ||
|com.android.server.hdmi.NewDeviceAction| |addDeviceInfo| ||
|com.android.server.hdmi.HdmiControlService| |handleCecCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HotplugDetectionAction| |mayDisableSystemAudioAndARC| |int|
|com.android.server.hdmi.RequestArcAction| |disableArcTransmission| ||
|com.android.server.hdmi.SystemAudioAction| |startAudioStatusAction| ||
|com.android.server.hdmi.SystemAudioAutoInitiationAction| |handleSystemAudioModeStatusMessage| ||
|com.android.server.hdmi.SystemAudioAutoInitiationAction| |handleSystemAudioModeStatusTimeout| ||
|com.android.server.hdmi.HdmiControlService| |oneTouchPlay| |android.hardware.hdmi.IHdmiControlCallback|
|com.android.server.hdmi.HdmiControlService| |queryDisplayStatus| |android.hardware.hdmi.IHdmiControlCallback|
|com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback| |onDeviceDiscoveryDone| |java.util.List|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleInitiateArc| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleSetSystemAudioMode| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleTerminateArc| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleRecordTvScreen| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiControlService$BinderService$12| |run| ||
|com.android.server.hdmi.HdmiControlService$BinderService$6| |run| ||
|com.android.server.hdmi.HdmiControlService$BinderService$7| |run| ||
|com.android.server.hdmi.HdmiControlService$BinderService$1| |run| ||
|com.android.server.hdmi.HdmiCecLocalDevice| |sendKeyEvent| |int,boolean|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |changeArcFeatureEnabled| |boolean|
|com.android.server.hdmi.ActiveSourceHandler| |process| |com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource,int|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleReportPhysicalAddress| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleNewDeviceAtTheTailOfActivePath| |int|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |doManualPortSwitching| |int,android.hardware.hdmi.IHdmiControlCallback|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleRemoveActiveRoutingPath| |int|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |launchRoutingControl| |boolean|
|com.android.server.hdmi.HdmiControlService$BinderService$14| |run| ||
|com.android.server.hdmi.HdmiCecLocalDevice| |onAddressAllocated| |int,int|
|com.android.internal.content.PackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|android.location.ILocationManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.location.ILocationManager| |reportLocation| |android.location.Location,boolean|
|com.android.internal.policy.impl.GlobalActions$2| |onItemLongClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.internal.policy.impl.GlobalActions| |onClick| |android.content.DialogInterface,int|
|com.android.internal.policy.impl.GlobalActions| |handleShow| ||
|com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl| |access$1600| |com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject|
|com.android.server.sip.SipSessionGroup$SipSessionImpl$1| |run| ||
|android.app.IActivityManager| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager| |prepareAppTransition| |int,boolean|
|android.app.ActivityManagerNative| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |findTaskToMoveToFrontLocked| |com.android.server.am.TaskRecord,int,android.os.Bundle,java.lang.String|
|android.view.WindowManagerInternal| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay| |<init>| |com.android.server.am.ActivityStackSupervisor,int,int,int|
|com.android.server.wm.WindowManagerService| |onDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |access$1000| |com.android.server.wm.WindowManagerService,int|
|com.android.server.wm.WindowManagerService| |access$900| |com.android.server.wm.WindowManagerService,int|
|android.view.IWindowManager$Stub$Proxy| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager$Stub| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService$LocalService| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemBarsLw| |android.view.WindowManagerPolicy$WindowState,int,int|
|com.android.server.wm.DisplayContent| |checkForDeferredActions| ||
|com.android.server.wm.WindowManagerService| |detachStack| |int|
|com.android.server.wm.WindowManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.View| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.wm.Session| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|com.android.server.wm.WindowAnimator$1| |run| ||
|com.android.server.content.SyncStorageEngine| |readAndDeleteLegacyAccountInfoLocked| ||
|com.android.server.content.SyncStorageEngine| |setIsSyncable| |android.accounts.Account,int,java.lang.String,int|
|com.android.server.content.SyncStorageEngine| |setIsTargetServiceActive| |android.content.ComponentName,int,boolean|
|android.filterfw.core.FieldPort| |setFieldFrame| |android.filterfw.core.Frame,boolean|
|android.filterfw.core.Filter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterfw.core.AsyncRunner$AsyncRunnerTask| |onCancelled| |android.filterfw.core.AsyncRunner$RunnerResult|
|android.filterfw.core.AsyncRunner$AsyncRunnerTask| |onPostExecute| |java.lang.Object|
|android.media.effect.effects.AutoFixEffect| |release| ||
|android.media.effect.effects.BitmapOverlayEffect| |release| ||
|android.media.effect.effects.BlackWhiteEffect| |release| ||
|android.media.effect.effects.BrightnessEffect| |release| ||
|android.media.effect.effects.ColorTemperatureEffect| |release| ||
|android.media.effect.effects.ContrastEffect| |release| ||
|android.media.effect.effects.CropEffect| |release| ||
|android.media.effect.effects.CrossProcessEffect| |release| ||
|android.media.effect.effects.DocumentaryEffect| |release| ||
|android.media.effect.effects.DuotoneEffect| |release| ||
|android.media.effect.effects.FillLightEffect| |release| ||
|android.media.effect.effects.FisheyeEffect| |release| ||
|android.media.effect.effects.FlipEffect| |release| ||
|android.media.effect.effects.GrainEffect| |release| ||
|android.media.effect.effects.GrayscaleEffect| |release| ||
|android.media.effect.effects.LomoishEffect| |release| ||
|android.media.effect.effects.NegativeEffect| |release| ||
|android.media.effect.effects.PosterizeEffect| |release| ||
|android.media.effect.effects.RedEyeEffect| |release| ||
|android.media.effect.effects.RotateEffect| |release| ||
|android.media.effect.effects.SaturateEffect| |release| ||
|android.media.effect.effects.SepiaEffect| |release| ||
|android.media.effect.effects.SharpenEffect| |release| ||
|android.media.effect.effects.StraightenEffect| |release| ||
|android.media.effect.effects.TintEffect| |release| ||
|android.media.effect.effects.VignetteEffect| |release| ||
|android.media.effect.SizeChangeEffect| |release| ||
|android.media.effect.EffectContext| |release| ||
|android.media.effect.effects.BackDropperEffect| |release| ||
|android.media.effect.effects.AutoFixEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BitmapOverlayEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BlackWhiteEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BrightnessEffect| |apply| |int,int,int,int|
|android.media.effect.effects.ColorTemperatureEffect| |apply| |int,int,int,int|
|android.media.effect.effects.ContrastEffect| |apply| |int,int,int,int|
|android.media.effect.effects.CrossProcessEffect| |apply| |int,int,int,int|
|android.media.effect.effects.DocumentaryEffect| |apply| |int,int,int,int|
|android.media.effect.effects.DuotoneEffect| |apply| |int,int,int,int|
|android.media.effect.effects.FillLightEffect| |apply| |int,int,int,int|
|android.media.effect.effects.FisheyeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.FlipEffect| |apply| |int,int,int,int|
|android.media.effect.effects.GrainEffect| |apply| |int,int,int,int|
|android.media.effect.effects.GrayscaleEffect| |apply| |int,int,int,int|
|android.media.effect.effects.LomoishEffect| |apply| |int,int,int,int|
|android.media.effect.effects.NegativeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.PosterizeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.RedEyeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.SaturateEffect| |apply| |int,int,int,int|
|android.media.effect.effects.SepiaEffect| |apply| |int,int,int,int|
|android.media.effect.effects.SharpenEffect| |apply| |int,int,int,int|
|android.media.effect.effects.StraightenEffect| |apply| |int,int,int,int|
|android.media.effect.effects.TintEffect| |apply| |int,int,int,int|
|android.media.effect.effects.VignetteEffect| |apply| |int,int,int,int|
|android.media.effect.effects.CropEffect| |apply| |int,int,int,int|
|android.media.effect.effects.RotateEffect| |apply| |int,int,int,int|
|android.filterfw.core.AsyncRunner$AsyncRunnerTask| |doInBackground| |java.lang.Object[]|
|android.filterfw.core.GraphRunner| |run| ||
|com.android.server.power.PowerManagerService| |access$1100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |acquireWakeLockInternal| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |boostScreenBrightnessInternal| |long,int|
|com.android.server.power.PowerManagerService| |goToSleepInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |handleBatteryStateChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleSandman| ||
|com.android.server.power.PowerManagerService| |handleScreenBrightnessBoostTimeout| ||
|com.android.server.power.PowerManagerService| |handleSettingsChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleUserActivityTimeout| ||
|com.android.server.power.PowerManagerService| |napInternal| |long,int|
|com.android.server.power.PowerManagerService| |onBootPhase| |int|
|com.android.server.power.PowerManagerService| |removeWakeLockLocked| |com.android.server.power.PowerManagerService$WakeLock,int|
|com.android.server.power.PowerManagerService| |setDozeOverrideFromDreamManagerInternal| |int,int|
|com.android.server.power.PowerManagerService| |setMaximumScreenOffTimeoutFromDeviceAdminInternal| |int|
|com.android.server.power.PowerManagerService| |setScreenBrightnessOverrideFromWindowManagerInternal| |int|
|com.android.server.power.PowerManagerService| |setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal| |float|
|com.android.server.power.PowerManagerService| |setTemporaryScreenBrightnessSettingOverrideInternal| |int|
|com.android.server.power.PowerManagerService| |setUserActivityTimeoutOverrideFromWindowManagerInternal| |long|
|com.android.server.power.PowerManagerService| |systemReady| |com.android.internal.app.IAppOpsService|
|com.android.server.power.PowerManagerService| |userActivityInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |wakeUpInternal| |long,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |handleInCallMmiCommands| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |dispose| ||
|com.android.ims.ImsCall$Listener| |onCallHeld| |com.android.ims.ImsCall|
|com.android.ims.ImsCall$Listener| |onCallProgressing| |com.android.ims.ImsCall|
|com.android.ims.ImsCall$Listener| |onCallResumed| |com.android.ims.ImsCall|
|com.android.ims.ImsCall$Listener| |onCallStarted| |com.android.ims.ImsCall|
|com.android.ims.ImsCall$Listener| |onCallStartFailed| |com.android.ims.ImsCall,com.android.ims.ImsReasonInfo|
|com.android.ims.ImsCall$Listener| |onCallTerminated| |com.android.ims.ImsCall,com.android.ims.ImsReasonInfo|
|com.android.ims.ImsCall| |processMergeComplete| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4| |onCallMerged| |com.android.ims.ImsCall,boolean|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |handleNewSms| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |handleNewSms| |android.os.AsyncResult|
|com.android.internal.telephony.InboundSmsHandler$DeliveringState| |processMessage| |android.os.Message|
|android.telephony.SmsManager| |deleteMessageFromIcc| |int|
|android.telephony.SmsManager| |updateMessageOnIcc| |int,int,byte[]|
|com.android.internal.telephony.UiccSmsController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISms| |updateMessageOnIccEf| |java.lang.String,int,int,byte[]|
|com.android.internal.telephony.PhoneFactory| |getCdmaPhone| |int|
|com.android.internal.telephony.PhoneBase| |getCellLocation| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.UiccPhoneBookController| |getAdnRecordsSizeForSubscriber| |int,int|
|com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy| |updateAdnRecordsInEfByIndex| |int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy| |updateAdnRecordsInEfBySearch| |int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |setVoiceMailNumber| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.gsm.GSMPhone| |setVoiceMailNumber| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.cat.CommandParamsFactory| |processBIPClient| |com.android.internal.telephony.cat.CommandDetails,java.util.List|
|com.android.internal.telephony.cat.CommandParamsFactory| |processDisplayText| |com.android.internal.telephony.cat.CommandDetails,java.util.List|
|com.android.internal.telephony.cat.CommandParamsFactory| |processEventNotify| |com.android.internal.telephony.cat.CommandDetails,java.util.List|
|com.android.internal.telephony.cat.CommandParamsFactory| |processGetInkey| |com.android.internal.telephony.cat.CommandDetails,java.util.List|
|com.android.internal.telephony.cat.CommandParamsFactory| |processGetInput| |com.android.internal.telephony.cat.CommandDetails,java.util.List|
|com.android.internal.telephony.cat.CommandParamsFactory| |processLaunchBrowser| |com.android.internal.telephony.cat.CommandDetails,java.util.List|
|com.android.internal.telephony.cat.CommandParamsFactory| |processPlayTone| |com.android.internal.telephony.cat.CommandDetails,java.util.List|
|com.android.internal.telephony.cat.CommandParamsFactory| |processSelectItem| |com.android.internal.telephony.cat.CommandDetails,java.util.List|
|com.android.internal.telephony.cat.CommandParamsFactory| |processSetUpIdleModeText| |com.android.internal.telephony.cat.CommandDetails,java.util.List|
|com.android.internal.telephony.cat.CommandParamsFactory| |processSetupCall| |com.android.internal.telephony.cat.CommandDetails,java.util.List|
|com.android.internal.telephony.ISms| |getAllMessagesFromIccEfForSubscriber| |int,java.lang.String|
|com.android.internal.telephony.ISms$Stub$Proxy| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.ISms$Stub| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.gsm.UsimPhoneBookManager| |refreshCache| ||
|com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy| |getAdnRecordsInEf| |int|
|com.android.internal.telephony.gsm.GsmMmiCode| |processSsData| |android.os.AsyncResult|
|com.android.internal.telephony.PhoneBase| |setVoiceMessageWaiting| |int,int|
|com.android.internal.telephony.IPhoneSubInfo| |getIccSimChallengeResponse| |int,int,java.lang.String|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.IPhoneSubInfo$Stub| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.PhoneSubInfoController| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.SMSDispatcher| |sendRetrySms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendRawPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendRawPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.ImsSMSDispatcher| |sendRawPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.RIL| |processSolicited| |android.os.Parcel|
|com.android.internal.telephony.RIL| |switchToRadioState| |com.android.internal.telephony.CommandsInterface$RadioState|
|com.android.internal.telephony.test.SimulatedCommands| |<init>| ||
|com.android.internal.telephony.test.SimulatedCommands| |requestShutdown| |android.os.Message|
|com.android.internal.telephony.test.SimulatedCommands| |setRadioPower| |boolean,android.os.Message|
|com.android.internal.telephony.test.SimulatedCommands| |shutdown| ||
|com.android.internal.telephony.ISms$Stub$Proxy| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.IntRangeManager| |tryAddRanges| |int,int,boolean|
|com.android.internal.telephony.IntRangeManager| |updateRanges| ||
|com.android.internal.telephony.ProxyController| |issueFinish| |int,int|
|com.android.internal.telephony.ProxyController| |onStartRadioCapabilityResponse| |android.os.Message|
|android.telephony.SmsManager| |copyMessageToIcc| |byte[],byte[],int|
|com.android.internal.telephony.ISms| |copyMessageToIccEf| |java.lang.String,int,byte[],byte[]|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |dispatchMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dispatchMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.InboundSmsHandler| |handleInjectSms| |android.os.AsyncResult|
|com.android.server.wm.WindowManagerService| |performEnableScreen| ||
|android.app.ActivityManagerNative| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener$NativeCrashReporter| |run| ||
|com.android.server.hdmi.DeviceDiscoveryAction| |access$000| |com.android.server.hdmi.DeviceDiscoveryAction|
|com.android.server.hdmi.DeviceDiscoveryAction| |checkAndProceedStage| ||
|com.android.server.hdmi.NewDeviceAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.NewDeviceAction| |handleTimerEvent| |int|
|com.android.server.hdmi.HdmiCecController| |onReceiveCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiControlService$CecMessageBuffer$1| |run| ||
|com.android.server.hdmi.HotplugDetectionAction| |removeDevice| |int|
|com.android.server.hdmi.RequestArcAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.RequestArcAction| |handleTimerEvent| |int|
|com.android.server.hdmi.RequestArcInitiationAction| |disableArcTransmission| ||
|com.android.server.hdmi.RequestArcTerminationAction| |disableArcTransmission| ||
|com.android.server.hdmi.SystemAudioAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.SystemAudioActionFromAvr| |startAudioStatusAction| ||
|com.android.server.hdmi.SystemAudioActionFromTv| |startAudioStatusAction| ||
|com.android.server.hdmi.SystemAudioAutoInitiationAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.SystemAudioAutoInitiationAction| |handleTimerEvent| |int|
|com.android.server.hdmi.HdmiControlService| |access$3100| |com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiControlCallback|
|com.android.server.hdmi.HdmiControlService| |access$3200| |com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiControlCallback|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |handleInitiateArc| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |handleSetSystemAudioMode| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |handleTerminateArc| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleRecordTvScreen| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |sendKeyEvent| |int,boolean|
|com.android.server.hdmi.HdmiControlService$BinderService$3| |run| ||
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |updateArcFeatureStatus| |int,boolean|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleActiveSource| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleReportPhysicalAddress| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleInactiveSource| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiControlService$BinderService$2| |run| ||
|com.android.server.hdmi.HdmiControlService| |changeInputForMhl| |int,boolean|
|com.android.server.hdmi.HotplugDetectionAction| |mayChangeRoutingPath| |int|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleAddressAllocated| |int,int|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.internal.app.ResolverActivity$1| |onPackageDisappeared| |java.lang.String,int|
|com.android.internal.content.PackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.ServiceWatcher$2| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.tv.TvInputManagerService$1| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onPackageDisappeared| |java.lang.String,int|
|com.android.server.LocationManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.location.provider.LocationProviderBase| |reportLocation| |android.location.Location|
|com.android.server.location.GpsLocationProvider| |reportLocation| |int,double,double,double,float,float,float,long|
|com.android.server.location.MockProvider| |setLocation| |android.location.Location|
|com.android.server.location.PassiveProvider| |updateLocation| |android.location.Location|
|com.android.internal.policy.impl.GlobalActions| |access$1800| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.GlobalActions| |showDialog| |boolean,boolean|
|com.android.internal.app.LocalePicker| |updateLocale| |java.util.Locale|
|com.android.internal.telephony.MccTable| |setSystemLocale| |android.content.Context,java.lang.String,java.lang.String|
|com.android.internal.telephony.MccTable| |updateMccMncConfiguration| |android.content.Context,java.lang.String,boolean|
|com.android.server.MountService| |copyLocaleFromMountService| ||
|com.android.server.UiModeManagerService| |sendConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |displayReady| ||
|com.android.server.wm.WindowManagerService| |sendNewConfiguration| ||
|android.app.IActivityManager| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |setLockTaskModeLocked| |com.android.server.am.TaskRecord,boolean,java.lang.String|
|com.android.internal.policy.impl.PhoneWindowManager| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayAddedLocked| |int|
|com.android.server.wm.WindowManagerService| |onDisplayChanged| |int|
|com.android.server.wm.WindowManagerService| |onDisplayRemoved| |int|
|android.view.IWindowManager| |keyguardGoingAway| |boolean,boolean|
|android.view.WindowManagerInternal| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemUiVisibilityLw| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |detachLocked| ||
|android.app.ActivityView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.FragmentBreadCrumbs| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.MediaRouteButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.NativeActivity$NativeContentView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.SearchDialog$SearchBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.appwidget.AppWidgetHostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.filterfw.core.FilterSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.gesture.GestureOverlayView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.KeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLineBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.TtmlRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView$3| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$CueLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$RegionLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$SpanLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.opengl.GLSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.preference.PreferenceFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSTextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.GhostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.LayoutInflater$BlinkLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.SurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.TextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewOverlay$OverlayViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewStub| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.webkit.WebView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsoluteLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSpinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuPresenter$OverflowMenuButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActivityChooserView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AnalogClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AppSecurityPermissions$PermissionItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Button| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarViewLegacyDelegate$WeekView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckedTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Chronometer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CompoundButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DatePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DateTimeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DayPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DialerFilter| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DigitalClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$HandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$InsertionHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionEndHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionStartHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.EditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ExpandableListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.FrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Gallery| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.HorizontalScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.LinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListPopupWindow$DropDownListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MediaController| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MultiAutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker$CustomEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.PopupWindow$PopupViewContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.QuickContactBadge| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadialTimePickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RatingBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RelativeLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView$SearchAutoComplete| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SimpleMonthView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SlidingDrawer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Space| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Spinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView$StackFrame| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Switch| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabHost| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableRow| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextViewWithCircularIndicator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TimePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ToggleButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Toolbar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TwoLineListItem| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.VideoView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.YearPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButtonsController$Container| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomControls| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.AlertController$RecycleListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.PlatLogoActivity$1| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.RecentApplicationsBackground| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ActionMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ExpandedMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ListMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AbsActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccessibleDateAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccountItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarOverlayLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView$HomeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.DialogTitle| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.FaceUnlockView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LockPatternView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PasswordEntryKeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PointerLocationView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PreferenceImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ResolverDrawerLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.RotarySelector| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView$TabView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SizeAdaptiveLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SlidingTab| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SubtitleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SwipeDismissLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.TextProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WaveView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WeightedLinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.content.SyncStorageEngine| |clearAndReadState| ||
|com.android.server.content.SyncStorageEngine| |<init>| |android.content.Context,java.io.File|
|android.filterfw.core.FieldPort| |pushFrame| |android.filterfw.core.Frame|
|android.filterfw.core.FieldPort| |setFrame| |android.filterfw.core.Frame|
|android.filterfw.core.ProgramPort| |setFieldFrame| |android.filterfw.core.Frame,boolean|
|android.filterpacks.base.CallbackFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |initProgramInputs| |android.filterfw.core.Program,android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |transferInputFrames| |android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |transferInputPortFrame| |java.lang.String,android.filterfw.core.FilterContext|
|android.filterfw.core.AsyncRunner$AsyncRunnerTask| |onCancelled| |java.lang.Object|
|android.media.effect.FilterGraphEffect| |apply| |int,int,int,int|
|com.android.server.power.PowerManagerService$2| |onProximityNegative| ||
|com.android.server.power.PowerManagerService$2| |onProximityPositive| ||
|com.android.server.power.PowerManagerService$2| |onStateChanged| ||
|com.android.server.power.PowerManagerService$DockReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |access$3200| |com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |access$5000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |access$3900| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |access$1900| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2400| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2500| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2300| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$4000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |handleWakeLockDeath| |com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |releaseWakeLockInternal| |android.os.IBinder,int|
|com.android.server.power.PowerManagerService| |access$5300| |com.android.server.power.PowerManagerService,int,int|
|com.android.server.power.PowerManagerService| |access$5500| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5200| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$4800| |com.android.server.power.PowerManagerService,float|
|com.android.server.power.PowerManagerService| |access$4700| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5400| |com.android.server.power.PowerManagerService,long|
|com.android.server.power.PowerManagerService| |access$3700| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |userActivityFromNative| |long,int,int|
|com.android.server.power.PowerManagerService| |access$3800| |com.android.server.power.PowerManagerService,long,int|
|com.android.internal.telephony.PhoneBase| |acquireOwnershipOfImsPhone| |com.android.internal.telephony.imsphone.ImsPhone|
|com.android.internal.telephony.PhoneBase| |dispose| ||
|com.android.internal.telephony.PhoneBase| |updateImsPhone| ||
|com.android.ims.ImsCall$ImsCallSessionListenerProxy| |callSessionHeld| |com.android.ims.internal.ImsCallSession,com.android.ims.ImsCallProfile|
|com.android.ims.ImsCall| |setListener| |com.android.ims.ImsCall$Listener,boolean|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4| |onCallHeld| |com.android.ims.ImsCall|
|com.android.ims.ImsCall$ImsCallSessionListenerProxy| |callSessionProgressing| |com.android.ims.internal.ImsCallSession,com.android.ims.ImsStreamMediaProfile|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4| |onCallProgressing| |com.android.ims.ImsCall|
|com.android.ims.ImsCall$ImsCallSessionListenerProxy| |callSessionResumed| |com.android.ims.internal.ImsCallSession,com.android.ims.ImsCallProfile|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4| |onCallResumed| |com.android.ims.ImsCall|
|com.android.ims.ImsCall$ImsCallSessionListenerProxy| |callSessionStarted| |com.android.ims.internal.ImsCallSession,com.android.ims.ImsCallProfile|
|com.android.ims.ImsCall$ImsCallSessionListenerProxy| |callSessionStartFailed| |com.android.ims.internal.ImsCallSession,com.android.ims.ImsReasonInfo|
|com.android.ims.ImsCall| |notifyConferenceSessionTerminated| |com.android.ims.ImsReasonInfo|
|com.android.ims.ImsCall| |processCallTerminated| |com.android.ims.ImsReasonInfo|
|com.android.ims.ImsCall| |tryProcessConferenceResult| ||
|android.telephony.gsm.SmsManager| |deleteMessageFromSim| |int|
|android.telephony.gsm.SmsManager| |updateMessageOnSim| |int,int,byte[]|
|com.android.internal.telephony.PhoneProxy| |deleteAndCreatePhone| |int|
|com.android.internal.telephony.dataconnection.DcTracker| |getCellLocationId| ||
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |handleGsmBroadcastSms| |android.os.AsyncResult|
|com.android.internal.telephony.Phone| |getCellLocation| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.IIccPhoneBook$Stub$Proxy| |getAdnRecordsSizeForSubscriber| |int,int|
|com.android.internal.telephony.IIccPhoneBook$Stub| |getAdnRecordsSizeForSubscriber| |int,int|
|com.android.internal.telephony.UiccPhoneBookController| |getAdnRecordsSize| |int|
|com.android.internal.telephony.UiccPhoneBookController| |updateAdnRecordsInEfByIndexForSubscriber| |int,int,java.lang.String,java.lang.String,int,java.lang.String|
|com.android.internal.telephony.UiccPhoneBookController| |updateAdnRecordsInEfBySearchForSubscriber| |int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setVoiceMailNumber| |java.lang.String,java.lang.String,android.os.Message|
|com.android.internal.telephony.cat.CommandParamsFactory| |make| |com.android.internal.telephony.cat.BerTlv|
|android.telephony.SmsManager| |getAllMessagesFromIcc| ||
|com.android.internal.telephony.ISms| |getAllMessagesFromIccEf| |java.lang.String|
|com.android.internal.telephony.UiccPhoneBookController| |getAdnRecordsInEfForSubscriber| |int,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setVoiceMessageWaiting| |int,int|
|com.android.internal.telephony.imsphone.ImsPhone| |setVoiceMessageWaiting| |int,int|
|com.android.internal.telephony.Phone| |setVoiceMessageWaiting| |int,int|
|com.android.internal.telephony.sip.SipPhoneBase| |setVoiceMessageWaiting| |int,int|
|com.android.internal.telephony.sip.SipPhone| |setVoiceMessageWaiting| |int,int|
|android.telephony.TelephonyManager| |getIccSimChallengeResponse| |int,int,java.lang.String|
|com.android.internal.telephony.PhoneSubInfoController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.PhoneSubInfoProxy| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.IPhoneSubInfo| |getIsimChallengeResponse| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendRetrySms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendRetrySms| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |sendSubmitPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendData| |java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendSubmitPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |sendText| |java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String|
|com.android.internal.telephony.ImsSMSDispatcher| |sendSubmitPdu| |com.android.internal.telephony.SMSDispatcher$SmsTracker|
|com.android.internal.telephony.test.SimulatedRadioControl| |shutdown| ||
|com.android.internal.telephony.ISms| |disableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |disableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.ISms$Stub| |disableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.UiccSmsController| |disableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms$Stub| |disableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms| |enableCellBroadcastRangeForSubscriber| |int,int,int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |enableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.ISms$Stub| |enableCellBroadcastForSubscriber| |int,int,int|
|com.android.internal.telephony.UiccSmsController| |enableCellBroadcast| |int,int|
|com.android.internal.telephony.ISms$Stub$Proxy| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.ISms$Stub| |enableCellBroadcastRange| |int,int,int|
|com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager| |tryAddRanges| |int,int,boolean|
|com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager| |tryAddRanges| |int,int,boolean|
|com.android.internal.telephony.IntRangeManager| |enableRange| |int,int,java.lang.String|
|com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager| |updateRanges| ||
|com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager| |updateRanges| ||
|com.android.internal.telephony.IntRangeManager| |disableRange| |int,int,java.lang.String|
|com.android.internal.telephony.ProxyController| |access$800| |com.android.internal.telephony.ProxyController,int,int|
|com.android.internal.telephony.ProxyController| |onNotificationRadioCapabilityChanged| |android.os.Message|
|com.android.internal.telephony.ProxyController| |access$100| |com.android.internal.telephony.ProxyController,android.os.Message|
|android.telephony.gsm.SmsManager| |copyMessageToSim| |byte[],byte[],int|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |handleInjectSms| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |handleInjectSms| |android.os.AsyncResult|
|com.android.server.wm.WindowManagerService| |enableScreenAfterBoot| ||
|com.android.server.wm.WindowManagerService| |performBootTimeout| ||
|com.android.server.wm.WindowManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeededLocked| ||
|com.android.server.wm.WindowManagerService| |checkBootAnimationCompleteLocked| ||
|android.app.IActivityManager| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |consumeNativeCrashData| |java.io.FileDescriptor|
|com.android.server.hdmi.DeviceDiscoveryAction$1| |onPollingFinished| |java.util.List|
|com.android.server.hdmi.DeviceDiscoveryAction| |handleReportPhysicalAddress| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.DeviceDiscoveryAction| |handleSetOsdName| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.DeviceDiscoveryAction| |handleTimerEvent| |int|
|com.android.server.hdmi.DeviceDiscoveryAction| |handleVendorId| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.DeviceDiscoveryAction| |queryOsdName| |int|
|com.android.server.hdmi.DeviceDiscoveryAction| |queryPhysicalAddress| |int|
|com.android.server.hdmi.DeviceDiscoveryAction| |queryVendorId| |int|
|com.android.server.hdmi.DeviceDiscoveryAction| |startOsdNameStage| ||
|com.android.server.hdmi.DeviceDiscoveryAction| |startPhysicalAddressStage| ||
|com.android.server.hdmi.DeviceDiscoveryAction| |startVendorIdStage| ||
|com.android.server.hdmi.NewDeviceAction| |mayProcessCommandIfCached| |int,int|
|com.android.server.hdmi.HdmiCecFeatureAction| |handleTimerEvent| |int|
|com.android.server.hdmi.HdmiCecController| |handleIncomingCecCommand| |int,int,byte[]|
|com.android.server.hdmi.HotplugDetectionAction| |checkHotplug| |java.util.List,boolean|
|com.android.server.hdmi.RequestArcInitiationAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.RequestArcTerminationAction| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.RequestArcInitiationAction| |handleTimerEvent| |int|
|com.android.server.hdmi.RequestArcTerminationAction| |handleTimerEvent| |int|
|com.android.server.hdmi.RequestArcInitiationAction$1| |onSendCompleted| |int|
|com.android.server.hdmi.RequestArcTerminationAction$1| |onSendCompleted| |int|
|com.android.server.hdmi.SystemAudioActionFromAvr| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.SystemAudioActionFromTv| |processCommand| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.SystemAudioActionFromAvr| |handleSystemAudioActionFromAvr| ||
|com.android.server.hdmi.HdmiControlService$BinderService$4| |run| ||
|com.android.server.hdmi.HdmiControlService$BinderService$5| |run| ||
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |handleRecordTvScreen| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |onHotplug| |int,boolean|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |handleReportPhysicalAddress| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevice| |handleInactiveSource| |com.android.server.hdmi.HdmiCecMessage|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |handleAddressAllocated| |int,int|
|com.android.server.hdmi.HdmiCecLocalDeviceTv| |handleAddressAllocated| |int,int|
|com.android.server.hdmi.HdmiControlService| |notifyAddressAllocated| |java.util.ArrayList,int|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.app.ResolverActivity$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.ServiceWatcher$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.trust.TrustManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.tv.TvInputManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.policy.impl.PhoneWindowManager| |showGlobalActionsInternal| ||
|com.android.internal.telephony.PhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |setLocaleFromCsim| ||
|com.android.internal.telephony.uicc.SIMRecords| |setLocaleFromUsim| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setProperties| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.PhoneFactory| |setDefaultSubscription| |int|
|com.android.internal.telephony.ServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |setDefaultFallbackSubId| |int|
|com.android.server.MountService| |access$2000| |com.android.server.MountService|
|com.android.server.UiModeManagerService| |sendConfigurationAndStartDreamOrDockAppLocked| |java.lang.String|
|android.view.WindowManagerPolicy| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.internal.policy.impl.PhoneWindowManager| |systemBooted| ||
|com.android.server.am.ActivityStackSupervisor| |onDisplayAdded| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayChangedLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayRemovedLocked| |int|
|com.android.server.display.DisplayManagerService| |scheduleTraversalLocked| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1900| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |finishPostLayoutPolicyLw| ||
|com.android.internal.policy.impl.PhoneWindowManager| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |beginLayoutLw| |boolean,int,int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |requestTransientBars| |android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |detachLocked| ||
|android.widget.Editor| |performLongClick| |boolean|
|com.android.server.power.PowerManagerService$BinderService| |releaseWakeLock| |android.os.IBinder,int|
|android.os.IPowerManager$Stub$Proxy| |releaseWakeLock| |android.os.IBinder,int|
|android.os.IPowerManager$Stub| |releaseWakeLock| |android.os.IBinder,int|
|android.os.IPowerManager| |releaseWakeLock| |android.os.IBinder,int|
|android.os.PowerManager$WakeLock| |finalize| ||
|android.os.PowerManager$WakeLock| |release| |int|
|android.os.PowerManager$WakeLock| |release| ||
|android.hardware.location.GeofenceHardwareImpl| |releaseWakeLock| ||
|android.media.AsyncPlayer| |releaseWakeLock| ||
|android.media.MediaFocusControl$2| |onReceive| |android.content.Context,android.content.Intent|
|android.media.MediaFocusControl| |onSendFinished| |android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle|
|android.net.DhcpStateMachine$DefaultState| |processMessage| |android.os.Message|
|android.net.DhcpStateMachine$RunningState| |processMessage| |android.os.Message|
|android.net.DhcpStateMachine$WaitBeforeRenewalState| |exit| ||
|android.os.PowerManager$WakeLock$1| |run| ||
|com.android.internal.os.storage.ExternalStorageFormatter| |onDestroy| ||
|com.android.internal.policy.impl.PhoneWindowManager| |dispatchMediaKeyRepeatWithWakeLock| |android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |dispatchMediaKeyWithWakeLock| |android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |finishPowerKeyPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |launchVoiceAssistWithWakeLock| |boolean|
|com.android.internal.telephony.cdma.CdmaConnection| |releaseWakeLock| ||
|com.android.internal.telephony.cdma.CDMAPhone| |finalize| ||
|com.android.internal.telephony.gsm.GsmConnection| |releaseWakeLock| ||
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |releaseWakeLock| ||
|com.android.internal.telephony.imsphone.ImsPhone| |exitEmergencyCallbackMode| ||
|com.android.internal.telephony.InboundSmsHandler$IdleState| |processMessage| |android.os.Message|
|com.android.internal.telephony.InboundSmsHandler| |onQuitting| ||
|com.android.internal.telephony.ProxyController| |clearTransaction| ||
|com.android.internal.telephony.RIL| |clearWakeLock| ||
|com.android.internal.telephony.RIL| |decrementWakeLock| ||
|com.android.internal.telephony.WakeLockStateMachine$IdleState| |processMessage| |android.os.Message|
|com.android.internal.telephony.WakeLockStateMachine| |onQuitting| ||
|com.android.internal.telephony.WakeLockStateMachine$WaitingState| |processMessage| |android.os.Message|
|com.android.server.AlarmManagerService$ResultReceiver| |onSendFinished| |android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle|
|com.android.server.am.ActivityStackSupervisor| |activityIdleInternalLocked| |android.os.IBinder,boolean,android.content.res.Configuration|
|com.android.server.backup.BackupManagerService$PerformAdbBackupTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |finalizeBackup| ||
|com.android.server.backup.BackupManagerService$PerformClearTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformInitializeTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |finalizeRestore| ||
|com.android.server.content.SyncManager$ActiveSyncContext| |close| ||
|com.android.server.dreams.DreamManagerService| |cleanupDreamLocked| ||
|com.android.server.dreams.DreamManagerService| |stopDozingInternal| |android.os.IBinder|
|com.android.server.hdmi.HdmiCecLocalDevicePlayback| |onHotplug| |int,boolean|
|com.android.server.job.JobServiceContext$JobServiceHandler| |closeAndCleanupJobH| |boolean|
|com.android.server.location.GeofenceManager| |onSendFinished| |android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle|
|com.android.server.LocationManagerService$Receiver| |clearPendingBroadcastsLocked| ||
|com.android.server.LocationManagerService$Receiver| |decrementPendingBroadcastsLocked| ||
|com.android.server.media.MediaSessionService$SessionManagerImpl$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver| |releaseWakeLockLocked| ||
|com.android.server.sip.SipWakeLock| |release| |java.lang.Object|
|com.android.server.backup.BackupManagerService$ActiveRestoreSession| |getAvailableRestoreSets| |android.app.backup.IRestoreObserver|
|android.hardware.location.GeofenceHardwareImpl| |access$100| |android.hardware.location.GeofenceHardwareImpl|
|android.media.AsyncPlayer| |access$500| |android.media.AsyncPlayer|
|com.android.internal.policy.impl.PhoneWindowManager| |access$700| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |interceptPowerKeyUp| |android.view.KeyEvent,boolean,boolean|
|com.android.internal.telephony.cdma.CdmaConnection| |onDisconnect| |int|
|com.android.internal.telephony.cdma.CdmaConnection| |access$000| |com.android.internal.telephony.cdma.CdmaConnection|
|com.android.internal.telephony.cdma.CdmaConnection| |finalize| ||
|com.android.internal.telephony.cdma.CdmaConnection| |onLocalDisconnect| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |finalize| ||
|com.android.internal.telephony.gsm.GsmConnection| |onDisconnect| |int|
|com.android.internal.telephony.gsm.GsmConnection| |access$100| |com.android.internal.telephony.gsm.GsmConnection|
|com.android.internal.telephony.gsm.GsmConnection| |finalize| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |transferHandoverConnections| |com.android.internal.telephony.imsphone.ImsPhoneCall|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |onDisconnect| ||
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |finalize| ||
|com.android.internal.telephony.gsm.GSMPhone| |exitEmergencyCallbackMode| ||
|com.android.internal.telephony.imsphone.ImsPhone$1| |run| ||
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |getImsService| ||
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |onQuitting| ||
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |onQuitting| ||
|com.android.internal.util.StateMachine| |onQuitting| ||
|com.android.internal.telephony.ProxyController| |completeRadioCapabilityTransaction| ||
|com.android.internal.telephony.ProxyController| |<init>| |android.content.Context,com.android.internal.telephony.PhoneProxy[],com.android.internal.telephony.uicc.UiccController,com.android.internal.telephony.CommandsInterface[]|
|com.android.internal.telephony.RIL| |access$300| |com.android.internal.telephony.RIL|
|com.android.internal.telephony.RIL| |access$100| |com.android.internal.telephony.RIL|
|com.android.internal.telephony.RIL| |clearRequestList| |int,boolean|
|com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler| |onQuitting| ||
|com.android.internal.telephony.CellBroadcastHandler| |onQuitting| ||
|com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler| |activityIdleInternal| |com.android.server.am.ActivityRecord|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |execute| ||
|com.android.server.backup.BackupManagerService| |clearBackupData| |java.lang.String,java.lang.String|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |execute| ||
|com.android.server.content.SyncManager$SyncHandler| |closeActiveSyncContext| |com.android.server.content.SyncManager$ActiveSyncContext|
|com.android.server.dreams.DreamManagerService| |access$600| |com.android.server.dreams.DreamManagerService|
|com.android.server.dreams.DreamManagerService| |stopDreamLocked| |boolean|
|com.android.server.dreams.DreamManagerService| |access$1900| |com.android.server.dreams.DreamManagerService,android.os.IBinder|
|com.android.server.hdmi.HdmiCecLocalDevice| |onHotplug| |int,boolean|
|com.android.server.job.JobServiceContext$JobServiceHandler| |handleFinishedH| |boolean|
|com.android.server.job.JobServiceContext$JobServiceHandler| |handleOpTimeoutH| ||
|com.android.server.job.JobServiceContext$JobServiceHandler| |handleServiceBoundH| ||
|com.android.server.job.JobServiceContext$JobServiceHandler| |sendStopMessageH| ||
|com.android.server.job.JobServiceContext| |scheduleOpTimeOut| ||
|com.android.server.LocationManagerService$Receiver| |access$1500| |com.android.server.LocationManagerService$Receiver|
|com.android.server.LocationManagerService$Receiver| |onSendFinished| |android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle|
|com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver| |onReceiveResult| |int,android.os.Bundle|
|com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver| |onTimeout| ||
|com.android.server.sip.SipService$MyExecutor| |executeInternal| |java.lang.Runnable|
|com.android.server.sip.SipService$SipAutoReg| |notCurrentSession| |android.net.sip.ISipSession|
|com.android.server.sip.SipService$SipAutoReg| |onRegistrationFailed| |android.net.sip.ISipSession,int,java.lang.String|
|com.android.server.sip.SipService$SipAutoReg| |onRegistrationTimeout| |android.net.sip.ISipSession|
|com.android.server.sip.SipService$SipAutoReg| |stop| ||
|com.android.server.sip.SipWakeLock| |reset| ||
|android.app.backup.IRestoreSession$Stub$Proxy| |getAvailableRestoreSets| |android.app.backup.IRestoreObserver|
|android.app.backup.IRestoreSession$Stub| |getAvailableRestoreSets| |android.app.backup.IRestoreObserver|
|com.android.internal.telephony.cdma.CdmaConnection| |onRemoteDisconnect| |int|
|com.android.internal.telephony.gsm.GsmConnection| |onRemoteDisconnect| |int|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |notifySrvccState| |com.android.internal.telephony.Call$SrvccState|
|com.android.internal.telephony.imsphone.ImsPhoneConnection| |onDisconnect| |int|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |dialInternal| |com.android.internal.telephony.imsphone.ImsPhoneConnection,int,int|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3| |onCallHoldFailed| |com.android.ims.ImsCall,com.android.ims.ImsReasonInfo|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker| |access$700| |com.android.internal.telephony.imsphone.ImsPhoneCallTracker|
|com.android.internal.telephony.cat.RilMessageDecoder| |onQuitting| ||
|com.android.internal.telephony.dataconnection.DataConnection| |onQuitting| ||
|com.android.internal.telephony.dataconnection.DcController| |onQuitting| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine| |onQuitting| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM| |onQuitting| ||
|com.android.server.connectivity.Tethering$TetherMasterSM| |onQuitting| ||
|com.android.server.NsdService$NsdStateMachine| |onQuitting| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |onQuitting| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine| |onQuitting| ||
|com.android.server.wifi.SupplicantStateTracker| |onQuitting| ||
|com.android.server.wifi.WifiApConfigStore| |onQuitting| ||
|com.android.server.wifi.WifiController| |onQuitting| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine| |onQuitting| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine| |onQuitting| ||
|com.android.server.wifi.WifiStateMachine| |onQuitting| ||
|com.android.server.wifi.WifiWatchdogStateMachine| |onQuitting| ||
|com.android.internal.telephony.ProxyController| |access$900| |com.android.internal.telephony.ProxyController|
|com.android.internal.telephony.ProxyController| |onFinishRadioCapabilityResponse| |android.os.Message|
|com.android.internal.telephony.ProxyController| |getInstance| |android.content.Context,com.android.internal.telephony.PhoneProxy[],com.android.internal.telephony.uicc.UiccController,com.android.internal.telephony.CommandsInterface[]|
|com.android.internal.telephony.RIL| |access$700| |com.android.internal.telephony.RIL,int,boolean|
|com.android.internal.telephony.gsm.GsmCellBroadcastHandler| |onQuitting| ||
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleTimeoutLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleLocked| ||
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |execute| ||
|com.android.server.backup.Trampoline| |clearBackupData| |java.lang.String,java.lang.String|
|com.android.server.dreams.DreamManagerService$5| |onDreamStopped| |android.os.Binder|
|com.android.server.dreams.DreamManagerService| |access$300| |com.android.server.dreams.DreamManagerService,boolean|
|com.android.server.dreams.DreamManagerService| |finishSelfInternal| |android.os.IBinder,boolean|
|com.android.server.dreams.DreamManagerService| |startDreamLocked| |android.content.ComponentName,boolean,boolean,int|
|com.android.server.dreams.DreamManagerService| |stopDreamInternal| |boolean|
|com.android.server.hdmi.HdmiControlService| |onHotplug| |int,boolean|
|com.android.server.job.JobServiceContext$JobServiceHandler| |handleStartedH| |boolean|
|com.android.server.job.JobServiceContext$JobServiceHandler| |handleCancelH| ||
|com.android.server.job.JobServiceContext| |executeRunnableJob| |com.android.server.job.controllers.JobStatus|
|com.android.server.job.JobServiceContext| |access$300| |com.android.server.job.JobServiceContext|
|com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver| |onSendFinished| |android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle|
|com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver| |run| ||
|com.android.server.sip.SipService$SipAutoReg| |onRegistering| |android.net.sip.ISipSession|
|com.android.server.sip.SipService$SipSessionGroupExt| |close| ||
|android.app.backup.IRestoreSession| |getAvailableRestoreSets| |android.app.backup.IRestoreObserver|
|android.app.backup.IRestoreSession$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.imsphone.ImsPhone| |notifySrvccState| |com.android.internal.telephony.Call$SrvccState|
|com.android.ims.ImsCall$Listener| |onCallHoldFailed| |com.android.ims.ImsCall,com.android.ims.ImsReasonInfo|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$2| |run| ||
|com.android.internal.telephony.ProxyController$RadioCapabilityRunnable| |run| ||
|com.android.server.am.ActivityStack| |backgroundResourcesReleased| ||
|com.android.server.am.ActivityStack| |clearLaunchTime| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStack| |completeResumeLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityRecord| |windowsVisible| ||
|com.android.server.am.ActivityStack| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |executeNextState| |com.android.server.backup.BackupManagerService$BackupState|
|android.app.backup.IBackupManager$Stub$Proxy| |clearBackupData| |java.lang.String,java.lang.String|
|android.app.backup.IBackupManager$Stub| |clearBackupData| |java.lang.String,java.lang.String|
|com.android.server.dreams.DreamController$Listener| |onDreamStopped| |android.os.Binder|
|com.android.server.dreams.DreamManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.dreams.DreamManagerService| |access$1700| |com.android.server.dreams.DreamManagerService,android.os.IBinder,boolean|
|com.android.server.dreams.DreamManagerService| |startDreamInternal| |boolean|
|com.android.server.dreams.DreamManagerService| |testDreamInternal| |android.content.ComponentName,int|
|com.android.server.dreams.DreamManagerService| |access$2100| |com.android.server.dreams.DreamManagerService,boolean|
|com.android.server.dreams.DreamManagerService| |requestAwakenInternal| ||
|com.android.server.hdmi.HdmiCecController| |handleHotplug| |int,boolean|
|com.android.server.job.JobSchedulerService$JobHandler| |maybeRunPendingJobsH| ||
|com.android.server.sip.SipService$SipKeepAliveProcessCallback| |stop| ||
|android.app.backup.RestoreSession| |getAvailableRestoreSets| |android.app.backup.RestoreObserver|
|com.android.commands.bmgr.Bmgr| |doListRestoreSets| ||
|com.android.commands.bmgr.Bmgr| |doRestoreAll| |long,java.util.HashSet|
|com.android.server.backup.BackupManagerService$ActiveRestoreSession| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.PhoneBase| |handleSrvccStateChanged| |int[]|
|com.android.ims.ImsCall$ImsCallSessionListenerProxy| |callSessionHoldFailed| |com.android.ims.internal.ImsCallSession,com.android.ims.ImsReasonInfo|
|com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4| |onCallHoldFailed| |com.android.ims.ImsCall,com.android.ims.ImsReasonInfo|
|com.android.server.am.ActivityStack| |releaseBackgroundResources| ||
|com.android.server.am.ActivityManagerService| |access$400| |com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |broadcastIntentLocked| |com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |finishInstrumentationLocked| |com.android.server.am.ProcessRecord,int,android.os.Bundle|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |forceStopUserLocked| |int,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.am.ActivityStack| |goToSleep| ||
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |android.content.pm.ApplicationInfo,int|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |agentErrorCleanup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |beginBackup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeNextAgent| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |operationComplete| ||
|android.app.backup.IBackupManager| |clearBackupData| |java.lang.String,java.lang.String|
|com.android.server.dreams.DreamController$3| |run| ||
|com.android.server.dreams.DreamManagerService| |access$2000| |com.android.server.dreams.DreamManagerService,boolean|
|com.android.server.dreams.DreamManagerService| |access$1500| |com.android.server.dreams.DreamManagerService,android.content.ComponentName,int|
|com.android.server.dreams.DreamManagerService$LocalService| |stopDream| |boolean|
|com.android.server.dreams.DreamManagerService| |access$1600| |com.android.server.dreams.DreamManagerService|
|com.android.server.sip.SipService$SipKeepAliveProcessCallback| |onResponse| |boolean|
|com.android.server.sip.SipService| |stopPortMappingMeasurement| ||
|com.android.commands.bmgr.Bmgr| |doList| ||
|com.android.commands.bmgr.Bmgr| |doRestore| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |handleSrvccStateChanged| |int[]|
|com.android.internal.telephony.cdma.CDMAPhone| |handleSrvccStateChanged| |int[]|
|com.android.internal.telephony.gsm.GSMPhone| |handleSrvccStateChanged| |int[]|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |handleSrvccStateChanged| |int[]|
|com.android.internal.telephony.imsphone.ImsPhone| |handleSrvccStateChanged| |int[]|
|com.android.internal.telephony.sip.SipPhoneBase| |handleSrvccStateChanged| |int[]|
|com.android.internal.telephony.sip.SipPhone| |handleSrvccStateChanged| |int[]|
|com.android.ims.internal.ImsCallSession$Listener| |callSessionHoldFailed| |com.android.ims.internal.ImsCallSession,com.android.ims.ImsReasonInfo|
|com.android.server.am.ActivityManagerService$7| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |deliverPreBootCompleted| |java.lang.Runnable,java.util.ArrayList,int|
|com.android.server.am.ActivityManagerService| |access$200| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |closeSystemDialogsLocked| |java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserBoot| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppDiedLocked| |com.android.server.am.ProcessRecord,boolean,boolean|
|com.android.server.am.ActivityManagerService| |finishUserStop| |com.android.server.am.UserStartedState|
|android.view.IApplicationToken$Stub$Proxy| |windowsVisible| ||
|android.view.IApplicationToken$Stub| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |attachApplicationLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.CompatModePackages| |setFrontActivityScreenCompatModeLocked| |int|
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |java.lang.String,int|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeAgentForBackup| |java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |operationComplete| ||
|com.android.commands.bmgr.Bmgr| |doWipe| ||
|com.android.server.dreams.DreamManagerService$LocalService| |startDream| |boolean|
|android.service.dreams.DreamManagerInternal| |stopDream| |boolean|
|com.android.server.sip.SipService| |restartPortMappingLifetimeMeasurement| |android.net.sip.SipProfile,int|
|com.android.commands.bmgr.Bmgr| |run| |java.lang.String[]|
|com.android.ims.internal.ImsCallSession$IImsCallSessionListenerProxy| |callSessionHoldFailed| |com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo|
|android.app.ActivityManagerNative| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService$29| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |finishUserSwitch| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |attachApplicationLocked| |android.app.IApplicationThread,int|
|com.android.server.am.ActivityManagerService| |removeProcessLocked| |com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord,int,android.app.IApplicationThread|
|com.android.server.am.ActivityManagerService$28| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.view.IApplicationToken$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IApplicationToken| |windowsVisible| ||
|com.android.server.am.ActivityManagerService| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.am.CompatModeDialog$1| |onCheckedChanged| |android.widget.CompoundButton,boolean|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService| |opComplete| |int|
|android.service.dreams.DreamManagerInternal| |startDream| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |handleShortPressOnHome| ||
|com.android.server.sip.SipService| |access$1300| |com.android.server.sip.SipService,android.net.sip.SipProfile,int|
|com.android.commands.bmgr.Bmgr| |main| |java.lang.String[]|
|com.android.ims.internal.IImsCallSessionListener$Stub$Proxy| |callSessionHoldFailed| |com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo|
|com.android.ims.internal.IImsCallSessionListener$Stub| |callSessionHoldFailed| |com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo|
|android.app.IActivityManager| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub$Proxy| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.content.IIntentReceiver$Stub| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppCrashLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killPackageProcessesLocked| |java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActivityManagerService$AppDeathRecipient| |binderDied| ||
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityRecord$Token| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityManagerNative| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.backup.BackupManagerService| |handleTimeout| |int,java.lang.Object|
|com.android.server.backup.Trampoline| |opComplete| |int|
|com.android.internal.policy.impl.PhoneWindowManager| |interceptKeyBeforeDispatching| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1500| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.ims.internal.IImsCallSessionListener$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.ims.internal.IImsCallSessionListener| |callSessionHoldFailed| |com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo|
|com.android.server.pm.PackageManagerService| |killApplication| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IIntentReceiver| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.IActivityManager| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|android.view.IApplicationToken$Stub$Proxy| |keyDispatchingTimedOut| |java.lang.String|
|android.view.IApplicationToken$Stub| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |makeAppCrashingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killAppAtUsersRequest| |com.android.server.am.ProcessRecord,android.app.Dialog|
|com.android.server.am.ActivityManagerService| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |bringUpServiceLocked| |com.android.server.am.ServiceRecord,int,boolean,boolean|
|com.android.server.am.ActivityManagerService| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |processNextBroadcast| |boolean|
|com.android.server.am.ActivityManagerService$LocalService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |realStartServiceLocked| |com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean|
|android.app.IActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.backup.BackupManagerService| |prepareOperationTimeout| |int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask|
|android.app.backup.IBackupManager$Stub$Proxy| |opComplete| |int|
|android.app.backup.IBackupManager$Stub| |opComplete| |int|
|android.view.WindowManagerPolicy| |interceptKeyBeforeDispatching| |android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int|
|com.android.internal.policy.impl.PhoneWindowManager$6| |run| ||
|com.android.ims.internal.ImsCallSession$IImsCallSessionListenerProxy| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService| |scanPackageDirtyLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageLI| |java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |replaceSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|android.app.LoadedApk$ReceiverDispatcher$InnerReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.PendingIntent$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IntentSender$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.am.Am$IntentReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.monkey.MonkeyNetworkMonitor| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$13| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$15| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$24| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$25| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$28| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$29| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$8| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService$12| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.BroadcastQueue| |performReceiveLocked| |com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.wm.InputMonitor| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.view.IApplicationToken| |keyDispatchingTimedOut| |java.lang.String|
|android.app.ActivityManagerNative| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceInnerLocked| |com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |performServiceRestartLocked| |com.android.server.am.ServiceRecord|
|android.app.ActivityManagerNative| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |broadcastTimeoutLocked| |boolean|
|com.android.server.am.BroadcastQueue| |scheduleBroadcastsLocked| ||
|android.app.ActivityManagerInternal| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |attachApplicationLocked| |com.android.server.am.ProcessRecord,java.lang.String|
|android.app.ActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |runScreenCompat| ||
|com.android.server.backup.BackupManagerService$FullBackupEngine$FullBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$FullBackupObbConnection| |backupObbs| |android.content.pm.PackageInfo,java.io.OutputStream|
|com.android.server.backup.BackupManagerService$FullRestoreEngine| |restoreOneFile| |java.io.InputStream|
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |restoreOneFile| |java.io.InputStream,byte[]|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |initiateOneRestore| |android.content.pm.PackageInfo,int|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreFinished| ||
|android.app.backup.IBackupManager| |opComplete| |int|
|com.android.server.wm.InputMonitor| |interceptKeyBeforeDispatching| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |java.io.File,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageX| |java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installNewPackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |replaceNonSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |unloadMediaPackages| |android.util.ArrayMap,int[],boolean|
|com.android.server.pm.PackageManagerService| |replacePackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.am.BroadcastQueue| |deliverToRegisteredReceiverLocked| |com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.app.IActivityManager| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceLocked| |android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int|
|com.android.server.am.ActiveServices$ServiceMap| |rescheduleDelayedStarts| ||
|com.android.server.am.ActiveServices$ServiceRestarter| |run| ||
|android.app.IActivityManager| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.ActivityManagerService| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |setBroadcastTimeoutLocked| |long|
|com.android.server.am.ActivityManagerService| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.BroadcastQueue| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |createRelroFile| |boolean,java.lang.String[]|
|com.android.commands.am.Am| |onRun| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$EngineThread| |run| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreKeyValue| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |startRestore| ||
|android.app.backup.BackupAgent$BackupServiceBinder| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |interceptKeyBeforeDispatching| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.server.pm.PackageManagerService| |deleteSystemPackageLI| |com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |<init>| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService| |loadMediaPackages| |android.util.ArrayMap,int[]|
|com.android.server.pm.PackageManagerService| |scanDirLI| |java.io.File,int,int,long|
|com.android.server.pm.PackageManagerService| |access$4000| |com.android.server.pm.PackageManagerService,java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installPackageLI| |com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |updateExternalMediaStatusInner| |boolean,boolean,boolean|
|com.android.server.input.InputManagerService| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices$ServiceMap| |ensureNotStartingBackground| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService| |bindToAgentSynchronous| |android.content.pm.ApplicationInfo,int|
|android.app.ActivityManagerNative| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| |java.lang.String[]|
|com.android.internal.os.BaseCommand| |onRun| ||
|android.app.IBackupAgent$Stub$Proxy| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.server.input.InputManagerService| |interceptKeyBeforeDispatching| |com.android.server.input.InputWindowHandle,android.view.KeyEvent,int|
|com.android.server.pm.PackageManagerService| |main| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService$14| |run| ||
|com.android.server.pm.PackageManagerService$8| |run| ||
|com.android.server.pm.PackageManagerService| |access$2300| |com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |access$4500| |com.android.server.pm.PackageManagerService,boolean,boolean,boolean|
|com.android.server.pm.PackageManagerService| |scanAvailableAsecs| ||
|com.android.server.am.ActiveServices| |bringDownServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$FullBackupEngine| |backupOnePackage| |android.content.pm.PackageInfo|
|android.app.IActivityManager| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |cleanUpApplicationRecordLocked| |com.android.server.am.ProcessRecord,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |startAppProblemLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|android.webkit.WebViewFactory| |onWebViewUpdateInstalled| ||
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| ||
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|android.app.IBackupAgent$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IBackupAgent| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.server.pm.PackageManagerService$11| |run| ||
|com.android.server.MountService$3| |run| ||
|com.android.server.am.ActiveServices| |forceStopLocked| |java.lang.String,int,boolean,boolean|
|com.android.server.am.ActiveServices| |bringDownServiceIfNeededLocked| |com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |killServicesLocked| |com.android.server.am.ProcessRecord,boolean|
|com.android.server.am.ActiveServices| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner| |run| ||
|com.android.commands.monkey.MonkeyNetworkMonitor| |register| |android.app.IActivityManager|
|com.android.server.am.ActivityManagerService| |trimApplications| ||
|com.android.server.am.ActivityManagerService| |makeAppNotRespondingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |access$300| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord|
|com.android.server.webkit.WebViewUpdateService| |onWebViewUpdateInstalled| ||
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|android.app.backup.BackupAgent$BackupServiceBinder| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreFileRunnable| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable| |run| ||
|com.android.server.MountService| |onDaemonConnected| ||
|com.android.server.am.ActiveServices| |removeConnectionLocked| |com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActiveServices| |stopServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.commands.monkey.Monkey| |getSystemInterfaces| ||
|com.android.server.am.ActivityManagerService| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]|
|com.android.server.webkit.WebViewUpdateService| |access$000| |com.android.server.webkit.WebViewUpdateService|
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|com.android.server.INativeDaemonConnectorCallbacks| |onDaemonConnected| ||
|com.android.server.am.ActiveServices| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent|
|com.android.commands.monkey.Monkey| |run| |java.lang.String[]|
|android.app.ActivityManagerNative| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |addAppLocked| |android.content.pm.ApplicationInfo,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String|
|com.android.server.webkit.WebViewUpdateService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.commands.monkey.Monkey| |main| |java.lang.String[]|
|android.app.IActivityManager| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |removeTaskByIdLocked| |int,boolean|
|com.android.server.am.ActivityManagerService| |access$1400| |com.android.server.am.ActivityManagerService,int,boolean|
|com.android.server.am.ActivityManagerService| |removeTasksByPackageNameLocked| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |removeTasksByRemovedPackageComponentsLocked| |java.lang.String,int|
|com.android.server.power.PowerManagerService$BinderService| |updateWakeLockWorkSource| |android.os.IBinder,android.os.WorkSource,java.lang.String|
|android.os.IPowerManager$Stub$Proxy| |updateWakeLockWorkSource| |android.os.IBinder,android.os.WorkSource,java.lang.String|
|android.os.IPowerManager$Stub| |updateWakeLockWorkSource| |android.os.IBinder,android.os.WorkSource,java.lang.String|
|com.android.server.power.PowerManagerService$BinderService| |updateWakeLockUids| |android.os.IBinder,int[]|
|android.os.IPowerManager| |updateWakeLockWorkSource| |android.os.IBinder,android.os.WorkSource,java.lang.String|
|android.os.IPowerManager$Stub$Proxy| |updateWakeLockUids| |android.os.IBinder,int[]|
|android.os.IPowerManager$Stub| |updateWakeLockUids| |android.os.IBinder,int[]|
|android.os.PowerManager$WakeLock| |setWorkSource| |android.os.WorkSource|
|android.os.IPowerManager| |updateWakeLockUids| |android.os.IBinder,int[]|
|com.android.server.AlarmManagerService| |setWakelockWorkSource| |android.app.PendingIntent,android.os.WorkSource,int,java.lang.String,boolean|
|com.android.server.LocationManagerService$Receiver| |<init>| |com.android.server.LocationManagerService,android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|com.android.server.wifi.WifiStateMachine| |updateBatteryWorkSource| |android.os.WorkSource|
|com.android.server.LocationManagerService| |getReceiverLocked| |android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|com.android.server.LocationManagerService| |getReceiverLocked| |android.location.ILocationListener,int,int,java.lang.String,android.os.WorkSource,boolean|
|com.android.server.wifi.WifiController| |updateBatteryWorkSource| ||
|com.android.server.wifi.WifiStateMachine$DriverStartedState| |exit| ||
|com.android.server.LocationManagerService| |checkListenerOrIntentLocked| |android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|com.android.server.wifi.WifiController| |access$700| |com.android.server.wifi.WifiController|
|com.android.server.LocationManagerService| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.wifi.WifiController$DefaultState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$DeviceInactiveState| |processMessage| |android.os.Message|
|android.location.ILocationManager$Stub$Proxy| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|android.location.LocationManager| |removeUpdates| |android.app.PendingIntent|
|android.location.LocationManager| |removeUpdates| |android.location.LocationListener|
|com.android.server.location.LocationBasedCountryDetector| |unregisterListener| |android.location.LocationListener|
|com.android.server.twilight.TwilightService$LocationHandler| |requestLocationUpdate| ||
|com.android.server.location.LocationBasedCountryDetector| |stop| ||
|com.android.server.twilight.TwilightService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.location.CountryDetectorBase| |stop| ||
|com.android.server.location.LocationBasedCountryDetector$1| |onLocationChanged| |android.location.Location|
|com.android.server.location.LocationBasedCountryDetector$2| |run| ||
|com.android.server.location.ComprehensiveCountryDetector| |stopLocationBasedDetector| ||
|com.android.server.location.ComprehensiveCountryDetector| |access$200| |com.android.server.location.ComprehensiveCountryDetector|
|com.android.server.location.ComprehensiveCountryDetector| |runAfterDetection| |android.location.Country,android.location.Country,boolean,boolean|
|com.android.server.location.ComprehensiveCountryDetector| |setCountryListener| |android.location.CountryListener|
|com.android.server.location.ComprehensiveCountryDetector| |stop| ||
|com.android.server.location.ComprehensiveCountryDetector$1| |onCountryDetected| |android.location.Country|
|com.android.server.location.ComprehensiveCountryDetector$2| |run| ||
|com.android.server.CountryDetectorService$2| |run| ||
|com.android.server.location.CountryDetectorBase| |setCountryListener| |android.location.CountryListener|
|com.android.server.location.ComprehensiveCountryDetector| |startLocationBasedDetector| |android.location.CountryListener|
|com.android.server.location.LocationBasedCountryDetector| |setCountryListener| |android.location.CountryListener|
|com.android.server.wifi.p2p.WifiP2pServiceImpl| |enforceAccessPermission| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl| |getMessenger| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl| |getP2pStateMachineMessenger| ||
|android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy| |getMessenger| ||
|android.net.wifi.p2p.IWifiP2pManager$Stub| |getMessenger| ||
|android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy| |getP2pStateMachineMessenger| ||
|android.net.wifi.p2p.IWifiP2pManager$Stub| |getP2pStateMachineMessenger| ||
|com.android.server.wifi.WifiStateMachine$InitialState| |enter| ||
|android.net.wifi.p2p.IWifiP2pManager| |getMessenger| ||
|android.net.wifi.p2p.IWifiP2pManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.p2p.IWifiP2pManager| |getP2pStateMachineMessenger| ||
|com.android.internal.util.State| |enter| ||
|android.net.wifi.p2p.WifiP2pManager| |getMessenger| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.p2p.WifiP2pManager| |getP2pStateMachineMessenger| ||
|android.net.DhcpStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady| |enter| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateStart| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectingState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectionErrorCreatingConnection| |enter| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$DefaultState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$StartupState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$WaitingState| |enter| ||
|com.android.internal.telephony.WakeLockStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.WakeLockStateMachine$WaitingState| |enter| ||
|com.android.internal.util.IState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler$HaltingState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler$QuittingState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler| |invokeEnterMethods| |int|
|com.android.server.connectivity.NetworkMonitor$DefaultState| |enter| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState| |enter| ||
|com.android.server.NsdService$NsdStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pNotSupportedState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$EnabledState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$RequestPendingState| |enter| ||
|com.android.server.wifi.WifiApConfigStore$DefaultState| |enter| ||
|com.android.server.wifi.WifiApConfigStore$InactiveState| |enter| ||
|com.android.server.wifi.WifiController$ApEnabledState| |enter| ||
|com.android.server.wifi.WifiController$DefaultState| |enter| ||
|com.android.server.wifi.WifiController$DeviceInactiveState| |enter| ||
|com.android.server.wifi.WifiStateMachine$ConnectModeState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppingState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SoftApStartedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SupplicantStartingState| |enter| ||
|com.android.server.wifi.WifiStateMachine$TetheredState| |enter| ||
|android.net.wifi.p2p.WifiP2pManager| |initialize| |android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener|
|android.net.wifi.p2p.WifiP2pManager| |initializeInternal| |android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener|
|com.android.internal.util.StateMachine$SmHandler| |performTransitions| |com.android.internal.util.State,android.os.Message|
|com.android.server.display.WifiDisplayController| |<init>| |android.content.Context,android.os.Handler,com.android.server.display.WifiDisplayController$Listener|
|com.android.server.display.WifiDisplayAdapter$1| |run| ||
|com.android.server.wifi.WifiServiceImpl| |enforceAccessPermission| ||
|com.android.server.wifi.WifiServiceImpl| |getDhcpInfo| ||
|com.android.server.wifi.WifiServiceImpl| |reportActivityInfo| ||
|com.android.server.wifi.WifiServiceImpl| |getWifiApConfiguration| ||
|com.android.server.wifi.WifiServiceImpl| |getConnectionStatistics| ||
|com.android.server.wifi.WifiServiceImpl| |getConnectionInfo| ||
|com.android.server.wifi.WifiServiceImpl| |getWifiServiceMessenger| ||
|com.android.server.wifi.WifiServiceImpl| |isMulticastEnabled| ||
|com.android.server.wifi.WifiServiceImpl| |isScanAlwaysAvailable| ||
|com.android.server.wifi.WifiServiceImpl| |pingSupplicant| ||
|com.android.server.wifi.WifiServiceImpl| |getAggressiveHandover| ||
|com.android.server.wifi.WifiServiceImpl| |getAllowScansWithTraffic| ||
|com.android.server.wifi.WifiServiceImpl| |getFrequencyBand| ||
|com.android.server.wifi.WifiServiceImpl| |getSupportedFeatures| ||
|com.android.server.wifi.WifiServiceImpl| |getVerboseLoggingLevel| ||
|com.android.server.wifi.WifiServiceImpl| |getWifiApEnabledState| ||
|com.android.server.wifi.WifiServiceImpl| |getWifiEnabledState| ||
|com.android.server.wifi.WifiServiceImpl| |getConfigFile| ||
|com.android.server.wifi.WifiServiceImpl| |getBatchedScanResults| |java.lang.String|
|com.android.server.wifi.WifiServiceImpl| |getChannelList| ||
|com.android.server.wifi.WifiServiceImpl| |getConfiguredNetworks| ||
|com.android.server.wifi.WifiServiceImpl| |getPrivilegedConfiguredNetworks| ||
|com.android.server.wifi.WifiServiceImpl| |getScanResults| |java.lang.String|
|com.android.server.wifi.WifiServiceImpl| |disableEphemeralNetwork| |java.lang.String|
|com.android.server.wifi.WifiServiceImpl| |enableAggressiveHandover| |int|
|com.android.server.wifi.WifiServiceImpl| |enableVerboseLogging| |int|
|com.android.server.wifi.WifiServiceImpl| |setAllowScansWithTraffic| |int|
|android.net.wifi.IWifiManager$Stub$Proxy| |getDhcpInfo| ||
|android.net.wifi.IWifiManager$Stub| |getDhcpInfo| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |reportActivityInfo| ||
|android.net.wifi.IWifiManager$Stub| |reportActivityInfo| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getWifiApConfiguration| ||
|android.net.wifi.IWifiManager$Stub| |getWifiApConfiguration| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getConnectionStatistics| ||
|android.net.wifi.IWifiManager$Stub| |getConnectionStatistics| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getConnectionInfo| ||
|android.net.wifi.IWifiManager$Stub| |getConnectionInfo| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getWifiServiceMessenger| ||
|android.net.wifi.IWifiManager$Stub| |getWifiServiceMessenger| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |isMulticastEnabled| ||
|android.net.wifi.IWifiManager$Stub| |isMulticastEnabled| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |isScanAlwaysAvailable| ||
|android.net.wifi.IWifiManager$Stub| |isScanAlwaysAvailable| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |pingSupplicant| ||
|android.net.wifi.IWifiManager$Stub| |pingSupplicant| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getAggressiveHandover| ||
|android.net.wifi.IWifiManager$Stub| |getAggressiveHandover| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getAllowScansWithTraffic| ||
|android.net.wifi.IWifiManager$Stub| |getAllowScansWithTraffic| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getFrequencyBand| ||
|android.net.wifi.IWifiManager$Stub| |getFrequencyBand| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getSupportedFeatures| ||
|android.net.wifi.IWifiManager$Stub| |getSupportedFeatures| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getVerboseLoggingLevel| ||
|android.net.wifi.IWifiManager$Stub| |getVerboseLoggingLevel| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getWifiApEnabledState| ||
|android.net.wifi.IWifiManager$Stub| |getWifiApEnabledState| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getWifiEnabledState| ||
|android.net.wifi.IWifiManager$Stub| |getWifiEnabledState| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getConfigFile| ||
|android.net.wifi.IWifiManager$Stub| |getConfigFile| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getBatchedScanResults| |java.lang.String|
|android.net.wifi.IWifiManager$Stub| |getBatchedScanResults| |java.lang.String|
|android.net.wifi.IWifiManager$Stub$Proxy| |getChannelList| ||
|android.net.wifi.IWifiManager$Stub| |getChannelList| ||
|com.android.server.wifi.WifiServiceImpl| |startLocationRestrictedScan| |android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub$Proxy| |getConfiguredNetworks| ||
|android.net.wifi.IWifiManager$Stub| |getConfiguredNetworks| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getPrivilegedConfiguredNetworks| ||
|android.net.wifi.IWifiManager$Stub| |getPrivilegedConfiguredNetworks| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |getScanResults| |java.lang.String|
|android.net.wifi.IWifiManager$Stub| |getScanResults| |java.lang.String|
|android.net.wifi.IWifiManager$Stub$Proxy| |disableEphemeralNetwork| |java.lang.String|
|android.net.wifi.IWifiManager$Stub| |disableEphemeralNetwork| |java.lang.String|
|android.net.wifi.IWifiManager$Stub$Proxy| |enableAggressiveHandover| |int|
|android.net.wifi.IWifiManager$Stub| |enableAggressiveHandover| |int|
|android.net.wifi.IWifiManager$Stub$Proxy| |enableVerboseLogging| |int|
|android.net.wifi.IWifiManager$Stub| |enableVerboseLogging| |int|
|android.net.wifi.IWifiManager$Stub$Proxy| |setAllowScansWithTraffic| |int|
|android.net.wifi.IWifiManager$Stub| |setAllowScansWithTraffic| |int|
|android.net.wifi.IWifiManager| |getDhcpInfo| ||
|android.net.wifi.IWifiManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.IWifiManager| |reportActivityInfo| ||
|android.net.wifi.IWifiManager| |getWifiApConfiguration| ||
|android.net.wifi.IWifiManager| |getConnectionStatistics| ||
|android.net.wifi.IWifiManager| |getConnectionInfo| ||
|android.net.wifi.IWifiManager| |getWifiServiceMessenger| ||
|android.net.wifi.IWifiManager| |isMulticastEnabled| ||
|android.net.wifi.IWifiManager| |isScanAlwaysAvailable| ||
|android.net.wifi.IWifiManager| |pingSupplicant| ||
|android.net.wifi.IWifiManager| |getAggressiveHandover| ||
|android.net.wifi.IWifiManager| |getAllowScansWithTraffic| ||
|android.net.wifi.IWifiManager| |getFrequencyBand| ||
|android.net.wifi.IWifiManager| |getSupportedFeatures| ||
|android.net.wifi.IWifiManager| |getVerboseLoggingLevel| ||
|android.net.wifi.IWifiManager| |getWifiApEnabledState| ||
|android.net.wifi.IWifiManager| |getWifiEnabledState| ||
|android.net.wifi.IWifiManager| |getConfigFile| ||
|android.net.wifi.IWifiManager| |getBatchedScanResults| |java.lang.String|
|android.net.wifi.IWifiManager| |getChannelList| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |startLocationRestrictedScan| |android.os.WorkSource|
|android.net.wifi.IWifiManager$Stub| |startLocationRestrictedScan| |android.os.WorkSource|
|android.net.wifi.IWifiManager| |getConfiguredNetworks| ||
|android.net.wifi.IWifiManager| |getPrivilegedConfiguredNetworks| ||
|android.net.wifi.IWifiManager| |getScanResults| |java.lang.String|
|android.net.wifi.IWifiManager| |disableEphemeralNetwork| |java.lang.String|
|android.net.wifi.IWifiManager| |enableAggressiveHandover| |int|
|android.net.wifi.IWifiManager| |enableVerboseLogging| |int|
|android.net.wifi.IWifiManager| |setAllowScansWithTraffic| |int|
|android.net.wifi.WifiManager| |getDhcpInfo| ||
|com.android.server.wifi.WifiServiceImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.WifiManager| |getControllerActivityEnergyInfo| |int|
|android.net.wifi.WifiManager| |getWifiApConfiguration| ||
|android.net.wifi.WifiManager| |getConnectionStatistics| ||
|android.net.wifi.WifiManager| |getConnectionInfo| ||
|android.net.wifi.WifiManager| |getWifiServiceMessenger| ||
|android.net.wifi.WifiManager| |isMulticastEnabled| ||
|android.net.wifi.WifiManager| |isScanAlwaysAvailable| ||
|android.net.wifi.WifiManager| |pingSupplicant| ||
|android.net.wifi.WifiManager| |getAggressiveHandover| ||
|android.net.wifi.WifiManager| |getAllowScansWithTraffic| ||
|android.net.wifi.WifiManager| |getFrequencyBand| ||
|android.net.wifi.WifiManager| |getSupportedFeatures| ||
|android.net.wifi.WifiManager| |getVerboseLoggingLevel| ||
|android.net.wifi.WifiManager| |getWifiApState| ||
|android.net.wifi.WifiManager| |getWifiState| ||
|android.net.wifi.WifiManager| |getConfigFile| ||
|android.net.wifi.WifiManager| |getBatchedScanResults| ||
|android.net.wifi.WifiManager| |getChannelList| ||
|android.net.wifi.IWifiManager| |startLocationRestrictedScan| |android.os.WorkSource|
|android.net.wifi.WifiManager| |getConfiguredNetworks| ||
|android.net.wifi.WifiManager| |getPrivilegedConfiguredNetworks| ||
|android.net.wifi.WifiManager| |getScanResults| ||
|android.net.wifi.WifiManager| |disableEphemeralNetwork| |java.lang.String|
|android.net.wifi.WifiManager| |enableAggressiveHandover| |int|
|android.net.wifi.WifiManager| |enableVerboseLogging| |int|
|android.net.wifi.WifiManager| |setAllowScansWithTraffic| |int|
|android.net.NetworkIdentity| |buildNetworkIdentity| |android.content.Context,android.net.NetworkState|
|android.net.sip.SipAudioCall| |isWifiOn| ||
|com.android.server.wifi.WifiWatchdogStateMachine$WatchdogEnabledState| |processMessage| |android.os.Message|
|android.net.wifi.WifiManager| |init| ||
|android.net.wifi.WifiManager| |isFeatureSupported| |int|
|android.net.wifi.WifiManager| |isWifiApEnabled| ||
|android.net.wifi.WifiManager| |isWifiEnabled| ||
|android.net.wifi.WifiManager| |startLocationRestrictedScan| |android.os.WorkSource|
|com.android.server.wifi.WifiNetworkScoreCache| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.net.NetworkPolicyManagerService| |getNetworkQuotaInfoUnchecked| |android.net.NetworkState|
|com.android.server.net.NetworkPolicyManagerService| |isNetworkMetered| |android.net.NetworkState|
|com.android.server.net.NetworkPolicyManagerService| |updateNetworkRulesLocked| ||
|com.android.server.net.NetworkStatsService| |updateIfacesLocked| ||
|android.net.sip.SipAudioCall| |startAudioInternal| ||
|com.android.internal.util.State| |processMessage| |android.os.Message|
|android.net.wifi.WifiManager| |<init>| |android.content.Context,android.net.wifi.IWifiManager|
|android.net.wifi.WifiManager| |is5GHzBandSupported| ||
|android.net.wifi.WifiManager| |isAdditionalStaSupported| ||
|android.net.wifi.WifiManager| |isDeviceToApRttSupported| ||
|android.net.wifi.WifiManager| |isDeviceToDeviceRttSupported| ||
|android.net.wifi.WifiManager| |isEnhancedPowerReportingSupported| ||
|android.net.wifi.WifiManager| |isNanSupported| ||
|android.net.wifi.WifiManager| |isOffChannelTdlsSupported| ||
|android.net.wifi.WifiManager| |isP2pSupported| ||
|android.net.wifi.WifiManager| |isPasspointSupported| ||
|android.net.wifi.WifiManager| |isPortableHotspotSupported| ||
|android.net.wifi.WifiManager| |isPreferredNetworkOffloadSupported| ||
|android.net.wifi.WifiManager| |isTdlsSupported| ||
|android.net.wifi.WifiManager| |isWifiScannerSupported| ||
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |onClick| |android.view.View|
|android.net.INetworkPolicyManager$Stub$Proxy| |isNetworkMetered| |android.net.NetworkState|
|android.net.INetworkPolicyManager$Stub| |isNetworkMetered| |android.net.NetworkState|
|com.android.server.net.NetworkPolicyManagerService$11| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.net.NetworkPolicyManagerService$13| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.net.NetworkPolicyManagerService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.net.NetworkPolicyManagerService| |performSnooze| |android.net.NetworkTemplate,int|
|com.android.server.net.NetworkPolicyManagerService| |setNetworkPolicies| |android.net.NetworkPolicy[]|
|com.android.server.net.NetworkPolicyManagerService| |updateRulesForGlobalChangeLocked| |boolean|
|com.android.server.net.NetworkStatsService| |updateIfaces| ||
|android.net.sip.SipAudioCall| |startAudio| ||
|com.android.internal.util.IState| |processMessage| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |processMsg| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DormantState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$ScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$NoLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |processMessage| |android.os.Message|
|android.net.INetworkPolicyManager| |isNetworkMetered| |android.net.NetworkState|
|android.net.INetworkPolicyManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.net.NetworkPolicyManagerService$9| |onReceive| |android.content.Context,android.content.Intent|
|android.net.INetworkPolicyManager$Stub$Proxy| |setNetworkPolicies| |android.net.NetworkPolicy[]|
|android.net.INetworkPolicyManager$Stub| |setNetworkPolicies| |android.net.NetworkPolicy[]|
|com.android.server.net.NetworkPolicyManagerService| |addNetworkPolicyLocked| |android.net.NetworkPolicy|
|com.android.server.net.NetworkPolicyManagerService$1| |onLowPowerModeChanged| |boolean|
|com.android.server.net.NetworkPolicyManagerService$6| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.net.NetworkPolicyManagerService| |setRestrictBackground| |boolean|
|com.android.server.net.NetworkPolicyManagerService| |systemReady| ||
|com.android.server.net.NetworkStatsService| |access$1400| |com.android.server.net.NetworkStatsService|
|android.net.sip.SipAudioCall| |transferToNewSession| ||
|com.android.internal.telephony.sip.SipPhone$SipConnection$1| |onCallEstablished| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.sip.SipPhone$SipConnection$1| |onCallHeld| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.sip.SipPhone$SipConnection| |separate| ||
|com.android.server.net.NetworkPolicyManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.INetworkPolicyManager| |setNetworkPolicies| |android.net.NetworkPolicy[]|
|com.android.server.net.NetworkPolicyManagerService| |ensureActiveMobilePolicyLocked| |java.lang.String|
|android.net.INetworkPolicyManager$Stub$Proxy| |setRestrictBackground| |boolean|
|android.net.INetworkPolicyManager$Stub| |setRestrictBackground| |boolean|
|com.android.server.net.NetworkPolicyManagerService$8| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.SystemServer$2| |run| ||
|android.net.sip.SipAudioCall| |access$800| |android.net.sip.SipAudioCall|
|com.android.internal.telephony.Connection| |separate| ||
|android.net.NetworkPolicyManager| |setNetworkPolicies| |android.net.NetworkPolicy[]|
|com.android.server.net.NetworkPolicyManagerService| |ensureActiveMobilePolicyLocked| ||
|android.net.INetworkPolicyManager| |setRestrictBackground| |boolean|
|android.net.sip.SipAudioCall$1| |onCallEstablished| |android.net.sip.SipSession,java.lang.String|
|com.android.server.net.NetworkPolicyManagerService| |access$100| |com.android.server.net.NetworkPolicyManagerService|
|android.net.NetworkPolicyManager| |setRestrictBackground| |boolean|
|com.android.server.lights.LightsService$1| |setFlashlightEnabled| |boolean|
|android.os.IHardwareService$Stub$Proxy| |setFlashlightEnabled| |boolean|
|android.os.IHardwareService$Stub| |setFlashlightEnabled| |boolean|
|android.os.IHardwareService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.os.IHardwareService| |setFlashlightEnabled| |boolean|
|com.android.server.lights.LightsService$1| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.MmsServiceBroker$BinderService| |downloadMessage| |int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent|
|com.android.internal.telephony.IMms$Stub$Proxy| |downloadMessage| |int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent|
|com.android.internal.telephony.IMms$Stub| |downloadMessage| |int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent|
|com.android.internal.telephony.IMms$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.IMms| |downloadMessage| |int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent|
|com.android.server.MmsServiceBroker$BinderService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.telephony.SmsManager| |downloadMultimediaMessage| |android.content.Context,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent|
|com.android.internal.telephony.WapPushOverSms| |dispatchWapPdu| |byte[],android.content.BroadcastReceiver,com.android.internal.telephony.InboundSmsHandler|
|com.android.internal.telephony.InboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler$DeliveringState| |processMessage| |android.os.Message|
|com.android.internal.util.State| |processMessage| |android.os.Message|
|com.android.internal.util.IState| |processMessage| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |processMsg| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DormantState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$ScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$NoLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |processMessage| |android.os.Message|
|com.android.server.accounts.AccountManagerService| |getAuthToken| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle|
|android.accounts.IAccountManager$Stub$Proxy| |getAuthToken| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle|
|android.accounts.IAccountManager$Stub| |getAuthToken| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle|
|android.accounts.IAccountManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accounts.IAccountManager| |getAuthToken| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle|
|com.android.server.accounts.AccountManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accounts.AccountManager$10| |doWork| ||
|android.accounts.AccountManager$9| |doWork| ||
|android.accounts.AccountManager$AmsTask| |doWork| ||
|android.accounts.AccountManager$AmsTask| |start| ||
|android.accounts.AccountManager$AmsTask$Response| |onResult| |android.os.Bundle|
|android.accounts.AccountManager$10| |start| ||
|android.accounts.AccountManager$11| |start| ||
|android.accounts.AccountManager$12| |start| ||
|android.accounts.AccountManager$14| |start| ||
|android.accounts.AccountManager$15| |start| ||
|android.accounts.AccountManager$16| |start| ||
|android.accounts.AccountManager$6| |start| ||
|android.accounts.AccountManager$8| |start| ||
|android.accounts.AccountManager$9| |start| ||
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |start| ||
|android.accounts.IAccountManagerResponse$Stub$Proxy| |onResult| |android.os.Bundle|
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |addAccount| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |addAccountAsUser| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |confirmCredentialsAsUser| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |updateCredentials| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |editProperties| |java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccount| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccountAsUser| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAuthTokenByFeatures| |java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1| |run| |android.accounts.AccountManagerFuture|
|android.accounts.ChooseTypeAndAccountActivity| |runAddAccountForAuthenticator| |java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |addAccount| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |addAccountAsUser| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |confirmCredentials| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |confirmCredentialsAsUser| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.test.IsolatedContext$MockAccountManager| |updateCredentials| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |editProperties| |java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccount| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccountAsUser| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1| |onResult| |android.os.Bundle|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |run| |android.accounts.AccountManagerFuture|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |getAuthTokenByFeatures| |java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |blockingGetAuthToken| |android.accounts.Account,java.lang.String,boolean|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.ChooseTypeAndAccountActivity| |onResume| ||
|android.test.IsolatedContext$MockAccountManager| |confirmCredentials| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|com.android.server.accounts.AccountManagerService| |checkManageAccountsOrUseCredentialsPermissions| ||
|com.android.server.accounts.AccountManagerService| |invalidateAuthToken| |java.lang.String,java.lang.String|
|android.accounts.IAccountManager$Stub$Proxy| |invalidateAuthToken| |java.lang.String,java.lang.String|
|android.accounts.IAccountManager$Stub| |invalidateAuthToken| |java.lang.String,java.lang.String|
|android.accounts.IAccountManager| |invalidateAuthToken| |java.lang.String,java.lang.String|
|android.accounts.AccountManager| |invalidateAuthToken| |java.lang.String,java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |invalidateAuthToken| |java.lang.String,java.lang.String|
|com.android.nfc.cardemulation.RegisteredServicesCache| |getInstalledServices| |int|
|com.android.nfc.cardemulation.RegisteredServicesCache| |invalidateCache| |int|
|com.android.nfc.cardemulation.CardEmulationManager| |isServiceRegistered| |int,android.content.ComponentName|
|com.android.nfc.cardemulation.CardEmulationManager| |onUserSwitched| |int|
|com.android.nfc.cardemulation.RegisteredServicesCache$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.nfc.cardemulation.RegisteredServicesCache| |initialize| ||
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |setDefaultForNextTap| |int,android.content.ComponentName|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |setPreferredService| |android.content.ComponentName|
|com.android.nfc.NfcService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.nfc.cardemulation.CardEmulationManager| |<init>| |android.content.Context|
|android.nfc.INfcCardEmulation$Stub$Proxy| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|android.nfc.INfcCardEmulation$Stub| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|android.nfc.INfcCardEmulation$Stub$Proxy| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |setDefaultForNextTap| |int,android.content.ComponentName|
|android.nfc.INfcCardEmulation$Stub| |setDefaultForNextTap| |int,android.content.ComponentName|
|android.nfc.INfcCardEmulation$Stub$Proxy| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub$Proxy| |setPreferredService| |android.content.ComponentName|
|android.nfc.INfcCardEmulation$Stub| |setPreferredService| |android.content.ComponentName|
|com.android.nfc.NfcService| |<init>| |android.app.Application|
|android.nfc.INfcCardEmulation| |getAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.INfcCardEmulation| |isDefaultServiceForAid| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation| |isDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation| |registerAidGroupForService| |int,android.content.ComponentName,android.nfc.cardemulation.AidGroup|
|android.nfc.INfcCardEmulation| |removeAidGroupForService| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation| |setDefaultForNextTap| |int,android.content.ComponentName|
|android.nfc.INfcCardEmulation| |setDefaultServiceForCategory| |int,android.content.ComponentName,java.lang.String|
|android.nfc.INfcCardEmulation| |setPreferredService| |android.content.ComponentName|
|com.android.nfc.NfcApplication| |onCreate| ||
|android.nfc.cardemulation.CardEmulation| |getAidsForService| |android.content.ComponentName,java.lang.String|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.cardemulation.CardEmulation| |isDefaultServiceForAid| |android.content.ComponentName,java.lang.String|
|android.nfc.cardemulation.CardEmulation| |isDefaultServiceForCategory| |android.content.ComponentName,java.lang.String|
|android.nfc.cardemulation.CardEmulation| |registerAidsForService| |android.content.ComponentName,java.lang.String,java.util.List|
|android.nfc.cardemulation.CardEmulation| |removeAidsForService| |android.content.ComponentName,java.lang.String|
|android.nfc.cardemulation.CardEmulation| |setDefaultForNextTap| |android.content.ComponentName|
|android.nfc.cardemulation.CardEmulation| |setDefaultServiceForCategory| |android.content.ComponentName,java.lang.String|
|android.nfc.cardemulation.CardEmulation| |setPreferredService| |android.app.Activity,android.content.ComponentName|
|com.android.nfc.cardemulation.AppChooserActivity| |onItemClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.nfc.cardemulation.TapAgainDialog| |onStop| ||
|com.android.internal.app.AlertActivity| |onStop| ||
|com.android.nfc.NfcPermissions| |enforceUserPermissions| |android.content.Context|
|com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface| |unsetPreferredService| ||
|com.android.nfc.NfcService$NfcAdapterService| |invokeBeam| ||
|com.android.nfc.NfcService$NfcAdapterService| |setAppCallback| |android.nfc.IAppCallback|
|com.android.nfc.NfcService$NfcAdapterService| |setForegroundDispatch| |android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel|
|com.android.nfc.NfcService$NfcAdapterService| |verifyNfcPermission| ||
|com.android.nfc.NfcService$TagService| |ndefRead| |int|
|com.android.nfc.NfcService$TagService| |rediscover| |int|
|com.android.nfc.NfcService$TagService| |transceive| |int,byte[],boolean|
|com.android.nfc.NfcService$TagService| |isNdef| |int|
|com.android.nfc.NfcService$TagService| |close| |int|
|com.android.nfc.NfcService$TagService| |connect| |int,int|
|com.android.nfc.NfcService$TagService| |formatNdef| |int,byte[]|
|com.android.nfc.NfcService$TagService| |getTechList| |int|
|com.android.nfc.NfcService$TagService| |getTimeout| |int|
|com.android.nfc.NfcService$TagService| |ndefMakeReadOnly| |int|
|com.android.nfc.NfcService$TagService| |ndefWrite| |int,android.nfc.NdefMessage|
|com.android.nfc.NfcService$TagService| |reconnect| |int|
|com.android.nfc.NfcService$TagService| |setTimeout| |int,int|
|com.android.nfc.NfcService$TagService| |resetTimeouts| ||
|android.nfc.INfcCardEmulation$Stub$Proxy| |unsetPreferredService| ||
|android.nfc.INfcCardEmulation$Stub| |unsetPreferredService| ||
|android.nfc.INfcAdapter$Stub$Proxy| |invokeBeam| ||
|android.nfc.INfcAdapter$Stub| |invokeBeam| ||
|android.nfc.INfcAdapter$Stub$Proxy| |setAppCallback| |android.nfc.IAppCallback|
|android.nfc.INfcAdapter$Stub| |setAppCallback| |android.nfc.IAppCallback|
|android.nfc.INfcAdapter$Stub$Proxy| |setForegroundDispatch| |android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel|
|android.nfc.INfcAdapter$Stub| |setForegroundDispatch| |android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel|
|android.nfc.INfcAdapter$Stub$Proxy| |verifyNfcPermission| ||
|android.nfc.INfcAdapter$Stub| |verifyNfcPermission| ||
|android.nfc.INfcTag$Stub$Proxy| |ndefRead| |int|
|android.nfc.INfcTag$Stub| |ndefRead| |int|
|android.nfc.INfcTag$Stub$Proxy| |rediscover| |int|
|android.nfc.INfcTag$Stub| |rediscover| |int|
|android.nfc.INfcTag$Stub$Proxy| |transceive| |int,byte[],boolean|
|android.nfc.INfcTag$Stub| |transceive| |int,byte[],boolean|
|android.nfc.INfcTag$Stub$Proxy| |isNdef| |int|
|android.nfc.INfcTag$Stub| |isNdef| |int|
|android.nfc.INfcTag$Stub$Proxy| |close| |int|
|android.nfc.INfcTag$Stub| |close| |int|
|android.nfc.INfcTag$Stub$Proxy| |connect| |int,int|
|android.nfc.INfcTag$Stub| |connect| |int,int|
|android.nfc.INfcTag$Stub$Proxy| |formatNdef| |int,byte[]|
|android.nfc.INfcTag$Stub| |formatNdef| |int,byte[]|
|android.nfc.INfcTag$Stub$Proxy| |getTechList| |int|
|android.nfc.INfcTag$Stub| |getTechList| |int|
|android.nfc.INfcTag$Stub$Proxy| |getTimeout| |int|
|android.nfc.INfcTag$Stub| |getTimeout| |int|
|android.nfc.INfcTag$Stub$Proxy| |ndefMakeReadOnly| |int|
|android.nfc.INfcTag$Stub| |ndefMakeReadOnly| |int|
|android.nfc.INfcTag$Stub$Proxy| |ndefWrite| |int,android.nfc.NdefMessage|
|android.nfc.INfcTag$Stub| |ndefWrite| |int,android.nfc.NdefMessage|
|android.nfc.INfcTag$Stub$Proxy| |reconnect| |int|
|android.nfc.INfcTag$Stub| |reconnect| |int|
|android.nfc.INfcTag$Stub$Proxy| |setTimeout| |int,int|
|android.nfc.INfcTag$Stub| |setTimeout| |int,int|
|android.nfc.INfcTag$Stub$Proxy| |resetTimeouts| ||
|android.nfc.INfcTag$Stub| |resetTimeouts| ||
|android.nfc.INfcCardEmulation| |unsetPreferredService| ||
|android.nfc.INfcAdapter$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.INfcAdapter| |invokeBeam| ||
|android.nfc.INfcAdapter| |setAppCallback| |android.nfc.IAppCallback|
|android.nfc.INfcAdapter| |setForegroundDispatch| |android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel|
|android.nfc.INfcAdapter| |verifyNfcPermission| ||
|android.nfc.INfcTag| |ndefRead| |int|
|android.nfc.INfcTag$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.INfcTag| |rediscover| |int|
|android.nfc.INfcTag| |transceive| |int,byte[],boolean|
|android.nfc.INfcTag| |isNdef| |int|
|android.nfc.INfcTag| |close| |int|
|android.nfc.INfcTag| |connect| |int,int|
|android.nfc.INfcTag| |formatNdef| |int,byte[]|
|android.nfc.INfcTag| |getTechList| |int|
|android.nfc.INfcTag| |getTimeout| |int|
|android.nfc.INfcTag| |ndefMakeReadOnly| |int|
|android.nfc.INfcTag| |ndefWrite| |int,android.nfc.NdefMessage|
|android.nfc.INfcTag| |reconnect| |int|
|android.nfc.INfcTag| |setTimeout| |int,int|
|android.nfc.INfcTag| |resetTimeouts| ||
|android.nfc.cardemulation.CardEmulation| |unsetPreferredService| |android.app.Activity|
|com.android.nfc.NfcService$NfcAdapterService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.NfcAdapter| |invokeBeam| |android.app.Activity|
|android.nfc.NfcActivityManager| |requestNfcServiceCallback| ||
|android.nfc.NfcAdapter| |disableForegroundDispatchInternal| |android.app.Activity,boolean|
|android.nfc.NfcAdapter| |enableForegroundDispatch| |android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][]|
|android.nfc.NfcActivityManager| |verifyNfcPermission| ||
|android.nfc.tech.Ndef| |getNdefMessage| ||
|com.android.nfc.NfcService$TagService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.Tag| |rediscover| ||
|android.nfc.tech.BasicTagTechnology| |transceive| |byte[],boolean|
|android.nfc.tech.Ndef| |makeReadOnly| ||
|android.nfc.tech.NdefFormatable| |format| |android.nfc.NdefMessage,boolean|
|android.nfc.tech.Ndef| |writeNdefMessage| |android.nfc.NdefMessage|
|android.nfc.tech.BasicTagTechnology| |connect| ||
|android.nfc.tech.IsoDep| |getTimeout| ||
|android.nfc.tech.MifareClassic| |getTimeout| ||
|android.nfc.tech.MifareUltralight| |getTimeout| ||
|android.nfc.tech.NfcA| |getTimeout| ||
|android.nfc.tech.NfcF| |getTimeout| ||
|android.nfc.tech.BasicTagTechnology| |close| ||
|android.nfc.tech.BasicTagTechnology| |reconnect| ||
|android.nfc.tech.IsoDep| |setTimeout| |int|
|android.nfc.tech.MifareClassic| |setTimeout| |int|
|android.nfc.tech.MifareUltralight| |setTimeout| |int|
|android.nfc.tech.NfcA| |setTimeout| |int|
|android.nfc.tech.NfcF| |setTimeout| |int|
|android.nfc.NfcActivityManager| |setNdefPushContentUri| |android.app.Activity,android.net.Uri[]|
|android.nfc.NfcActivityManager| |setNdefPushContentUriCallback| |android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback|
|android.nfc.NfcActivityManager| |setNdefPushMessage| |android.app.Activity,android.nfc.NdefMessage,int|
|android.nfc.NfcActivityManager| |setNdefPushMessageCallback| |android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int|
|android.nfc.NfcActivityManager| |setOnNdefPushCompleteCallback| |android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback|
|android.nfc.NfcAdapter$1| |onPaused| |android.app.Activity|
|android.nfc.NfcAdapter| |disableForegroundDispatch| |android.app.Activity|
|android.nfc.tech.IsoDep| |transceive| |byte[],boolean|
|android.nfc.tech.MifareClassic| |transceive| |byte[],boolean|
|android.nfc.tech.MifareUltralight| |transceive| |byte[],boolean|
|android.nfc.tech.Ndef| |transceive| |byte[],boolean|
|android.nfc.tech.NdefFormatable| |transceive| |byte[],boolean|
|android.nfc.tech.NfcA| |transceive| |byte[],boolean|
|android.nfc.tech.NfcBarcode| |transceive| |byte[],boolean|
|android.nfc.tech.NfcB| |transceive| |byte[],boolean|
|android.nfc.tech.NfcF| |transceive| |byte[],boolean|
|android.nfc.tech.NfcV| |transceive| |byte[],boolean|
|android.nfc.tech.NdefFormatable| |format| |android.nfc.NdefMessage|
|android.nfc.tech.NdefFormatable| |formatReadOnly| |android.nfc.NdefMessage|
|android.nfc.tech.IsoDep| |connect| ||
|android.nfc.tech.MifareClassic| |connect| ||
|android.nfc.tech.MifareUltralight| |connect| ||
|android.nfc.tech.NdefFormatable| |connect| ||
|android.nfc.tech.Ndef| |connect| ||
|android.nfc.tech.NfcA| |connect| ||
|android.nfc.tech.NfcBarcode| |connect| ||
|android.nfc.tech.NfcB| |connect| ||
|android.nfc.tech.NfcF| |connect| ||
|android.nfc.tech.NfcV| |connect| ||
|android.nfc.tech.IsoDep| |close| ||
|android.nfc.tech.MifareClassic| |close| ||
|android.nfc.tech.MifareUltralight| |close| ||
|android.nfc.tech.NdefFormatable| |close| ||
|android.nfc.tech.Ndef| |close| ||
|android.nfc.tech.NfcA| |close| ||
|android.nfc.tech.NfcBarcode| |close| ||
|android.nfc.tech.NfcB| |close| ||
|android.nfc.tech.NfcF| |close| ||
|android.nfc.tech.NfcV| |close| ||
|android.nfc.tech.IsoDep| |reconnect| ||
|android.nfc.tech.MifareClassic| |reconnect| ||
|android.nfc.tech.MifareUltralight| |reconnect| ||
|android.nfc.tech.NdefFormatable| |reconnect| ||
|android.nfc.tech.Ndef| |reconnect| ||
|android.nfc.tech.NfcA| |reconnect| ||
|android.nfc.tech.NfcBarcode| |reconnect| ||
|android.nfc.tech.NfcB| |reconnect| ||
|android.nfc.tech.NfcF| |reconnect| ||
|android.nfc.tech.NfcV| |reconnect| ||
|android.nfc.NfcAdapter| |setBeamPushUris| |android.net.Uri[],android.app.Activity|
|android.nfc.NfcAdapter| |setBeamPushUrisCallback| |android.nfc.NfcAdapter$CreateBeamUrisCallback,android.app.Activity|
|android.nfc.NfcAdapter| |disableForegroundNdefPush| |android.app.Activity|
|android.nfc.NfcAdapter| |enableForegroundNdefPush| |android.app.Activity,android.nfc.NdefMessage|
|android.nfc.NfcAdapter| |setNdefPushMessage| |android.nfc.NdefMessage,android.app.Activity,android.app.Activity[]|
|android.nfc.NfcAdapter| |setNdefPushMessage| |android.nfc.NdefMessage,android.app.Activity,int|
|android.nfc.NfcAdapter| |setNdefPushMessageCallback| |android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[]|
|android.nfc.NfcAdapter| |setNdefPushMessageCallback| |android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,int|
|android.nfc.NfcAdapter| |setOnNdefPushCompleteCallback| |android.nfc.NfcAdapter$OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity[]|
|android.nfc.tech.IsoDep| |transceive| |byte[]|
|android.nfc.tech.MifareClassic| |authenticate| |int,byte[],boolean|
|android.nfc.tech.MifareClassic| |readBlock| |int|
|android.nfc.tech.MifareClassic| |transceive| |byte[]|
|android.nfc.tech.MifareClassic| |decrement| |int,int|
|android.nfc.tech.MifareClassic| |increment| |int,int|
|android.nfc.tech.MifareClassic| |restore| |int|
|android.nfc.tech.MifareClassic| |transfer| |int|
|android.nfc.tech.MifareClassic| |writeBlock| |int,byte[]|
|android.nfc.tech.MifareUltralight| |readPages| |int|
|android.nfc.tech.MifareUltralight| |transceive| |byte[]|
|android.nfc.tech.MifareUltralight| |writePage| |int,byte[]|
|android.nfc.tech.NfcA| |transceive| |byte[]|
|android.nfc.tech.NfcB| |transceive| |byte[]|
|android.nfc.tech.NfcF| |transceive| |byte[]|
|android.nfc.tech.NfcV| |transceive| |byte[]|
|android.nfc.tech.MifareClassic| |authenticateSectorWithKeyA| |int,byte[]|
|android.nfc.tech.MifareClassic| |authenticateSectorWithKeyB| |int,byte[]|
|com.android.server.LocationManagerService| |getAllowedResolutionLevel| |int,int|
|com.android.server.LocationManagerService| |access$600| |com.android.server.LocationManagerService,int,int|
|com.android.server.LocationManagerService| |getCallerAllowedResolutionLevel| ||
|com.android.server.LocationManagerService$Receiver| |<init>| |com.android.server.LocationManagerService,android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|com.android.server.LocationManagerService| |getLastLocation| |android.location.LocationRequest,java.lang.String|
|com.android.server.LocationManagerService| |addGpsMeasurementsListener| |android.location.IGpsMeasurementsListener,java.lang.String|
|com.android.server.LocationManagerService| |addGpsNavigationMessageListener| |android.location.IGpsNavigationMessageListener,java.lang.String|
|com.android.server.LocationManagerService| |addGpsStatusListener| |android.location.IGpsStatusListener,java.lang.String|
|com.android.server.LocationManagerService| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|com.android.server.LocationManagerService| |getProviderProperties| |java.lang.String|
|com.android.server.LocationManagerService| |getProviders| |android.location.Criteria,boolean|
|com.android.server.LocationManagerService| |removeGeofence| |android.location.Geofence,android.app.PendingIntent,java.lang.String|
|com.android.server.LocationManagerService| |requestGeofence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String|
|com.android.server.LocationManagerService| |requestLocationUpdates| |android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.LocationManagerService| |getReceiverLocked| |android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|com.android.server.LocationManagerService| |getReceiverLocked| |android.location.ILocationListener,int,int,java.lang.String,android.os.WorkSource,boolean|
|android.location.ILocationManager$Stub$Proxy| |getLastLocation| |android.location.LocationRequest,java.lang.String|
|android.location.ILocationManager$Stub| |getLastLocation| |android.location.LocationRequest,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |addGpsMeasurementsListener| |android.location.IGpsMeasurementsListener,java.lang.String|
|android.location.ILocationManager$Stub| |addGpsMeasurementsListener| |android.location.IGpsMeasurementsListener,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |addGpsNavigationMessageListener| |android.location.IGpsNavigationMessageListener,java.lang.String|
|android.location.ILocationManager$Stub| |addGpsNavigationMessageListener| |android.location.IGpsNavigationMessageListener,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |addGpsStatusListener| |android.location.IGpsStatusListener,java.lang.String|
|android.location.ILocationManager$Stub| |addGpsStatusListener| |android.location.IGpsStatusListener,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.ILocationManager$Stub| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.ILocationManager$Stub$Proxy| |getProviderProperties| |java.lang.String|
|android.location.ILocationManager$Stub| |getProviderProperties| |java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |getProviders| |android.location.Criteria,boolean|
|android.location.ILocationManager$Stub| |getProviders| |android.location.Criteria,boolean|
|com.android.server.LocationManagerService| |getBestProvider| |android.location.Criteria,boolean|
|android.location.ILocationManager$Stub$Proxy| |removeGeofence| |android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub| |removeGeofence| |android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |requestGeofence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub| |requestGeofence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub$Proxy| |requestLocationUpdates| |android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub| |requestLocationUpdates| |android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.LocationManagerService| |checkListenerOrIntentLocked| |android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean|
|android.location.ILocationManager| |getLastLocation| |android.location.LocationRequest,java.lang.String|
|android.location.ILocationManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.location.ILocationManager| |addGpsMeasurementsListener| |android.location.IGpsMeasurementsListener,java.lang.String|
|android.location.ILocationManager| |addGpsNavigationMessageListener| |android.location.IGpsNavigationMessageListener,java.lang.String|
|android.location.ILocationManager| |addGpsStatusListener| |android.location.IGpsStatusListener,java.lang.String|
|android.location.ILocationManager| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.ILocationManager| |getProviderProperties| |java.lang.String|
|android.location.ILocationManager| |getProviders| |android.location.Criteria,boolean|
|android.location.ILocationManager$Stub$Proxy| |getBestProvider| |android.location.Criteria,boolean|
|android.location.ILocationManager$Stub| |getBestProvider| |android.location.Criteria,boolean|
|android.location.ILocationManager| |removeGeofence| |android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager| |requestGeofence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager| |requestLocationUpdates| |android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.LocationManagerService| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|android.location.LocationManager| |getLastKnownLocation| |java.lang.String|
|android.location.LocationManager| |getLastLocation| ||
|com.android.server.LocationManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.location.GpsMeasurementListenerTransport| |registerWithServer| ||
|android.location.GpsNavigationMessageListenerTransport| |registerWithServer| ||
|android.location.LocationManager| |addGpsStatusListener| |android.location.GpsStatus$Listener|
|android.location.LocationManager| |addNmeaListener| |android.location.GpsStatus$NmeaListener|
|android.location.LocationManager| |sendExtraCommand| |java.lang.String,java.lang.String,android.os.Bundle|
|android.location.LocationManager| |getProvider| |java.lang.String|
|android.location.LocationManager| |getProviders| |android.location.Criteria,boolean|
|android.location.LocationManager| |getProviders| |boolean|
|android.location.ILocationManager| |getBestProvider| |android.location.Criteria,boolean|
|android.location.LocationManager| |removeAllGeofences| |android.app.PendingIntent|
|android.location.LocationManager| |removeGeofence| |android.location.Geofence,android.app.PendingIntent|
|android.location.LocationManager| |removeProximityAlert| |android.app.PendingIntent|
|android.location.LocationManager| |addGeofence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent|
|android.location.LocationManager| |addProximityAlert| |double,double,float,long,android.app.PendingIntent|
|android.location.LocationManager| |requestLocationUpdates| |android.location.LocationRequest,android.location.LocationListener,android.os.Looper,android.app.PendingIntent|
|android.location.ILocationManager$Stub$Proxy| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|android.location.ILocationManager$Stub| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.location.LocationBasedCountryDetector| |getLastKnownLocation| ||
|com.android.server.twilight.TwilightService$LocationHandler| |retrieveLocation| ||
|com.android.server.location.GeofenceManager| |getFreshLocationLocked| ||
|android.location.LocalListenerHelper| |registerWithServer| ||
|com.android.server.location.LocationBasedCountryDetector| |getEnabledProviders| ||
|android.location.LocationManager| |getBestProvider| |android.location.Criteria,boolean|
|android.location.LocationManager| |requestLocationUpdates| |android.location.LocationRequest,android.app.PendingIntent|
|android.location.LocationManager| |requestLocationUpdates| |android.location.LocationRequest,android.location.LocationListener,android.os.Looper|
|android.location.LocationManager| |requestLocationUpdates| |java.lang.String,long,float,android.app.PendingIntent|
|android.location.LocationManager| |requestLocationUpdates| |java.lang.String,long,float,android.location.LocationListener,android.os.Looper|
|android.location.LocationManager| |requestLocationUpdates| |java.lang.String,long,float,android.location.LocationListener|
|android.location.LocationManager| |requestLocationUpdates| |long,float,android.location.Criteria,android.app.PendingIntent|
|android.location.LocationManager| |requestLocationUpdates| |long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper|
|android.location.LocationManager| |requestSingleUpdate| |android.location.Criteria,android.app.PendingIntent|
|android.location.LocationManager| |requestSingleUpdate| |android.location.Criteria,android.location.LocationListener,android.os.Looper|
|android.location.LocationManager| |requestSingleUpdate| |java.lang.String,android.app.PendingIntent|
|android.location.LocationManager| |requestSingleUpdate| |java.lang.String,android.location.LocationListener,android.os.Looper|
|android.location.ILocationManager| |removeUpdates| |android.location.ILocationListener,android.app.PendingIntent,java.lang.String|
|com.android.server.location.LocationBasedCountryDetector$2| |run| ||
|com.android.server.location.LocationBasedCountryDetector| |detectCountry| ||
|com.android.server.twilight.TwilightService$LocationHandler| |enableLocationUpdates| ||
|com.android.server.twilight.TwilightService$LocationHandler| |requestLocationUpdate| ||
|com.android.server.location.GeofenceManager| |updateFences| ||
|android.location.LocalListenerHelper| |add| |java.lang.Object|
|com.android.server.location.FlpHardwareProvider| |<init>| |android.content.Context|
|com.android.server.location.GpsLocationProvider$4| |run| ||
|com.android.server.location.LocationBasedCountryDetector| |registerListener| |java.lang.String,android.location.LocationListener|
|android.location.LocationManager| |removeUpdates| |android.app.PendingIntent|
|android.location.LocationManager| |removeUpdates| |android.location.LocationListener|
|com.android.server.location.CountryDetectorBase| |detectCountry| ||
|com.android.server.twilight.TwilightService$1| |registerListener| |com.android.server.twilight.TwilightListener,android.os.Handler|
|com.android.server.twilight.TwilightService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.location.GeofenceManager| |access$000| |com.android.server.location.GeofenceManager|
|com.android.server.location.GeofenceManager| |onLocationChanged| |android.location.Location|
|android.location.GpsMeasurementListenerTransport| |add| |java.lang.Object|
|android.location.GpsNavigationMessageListenerTransport| |add| |java.lang.Object|
|com.android.server.location.FlpHardwareProvider| |getInstance| |android.content.Context|
|com.android.server.location.LocationBasedCountryDetector| |unregisterListener| |android.location.LocationListener|
|com.android.server.location.ComprehensiveCountryDetector| |startLocationBasedDetector| |android.location.CountryListener|
|com.android.server.twilight.TwilightManager| |registerListener| |com.android.server.twilight.TwilightListener,android.os.Handler|
|com.android.server.location.GeofenceManager| |scheduleUpdateFencesLocked| ||
|android.location.LocationManager| |addGpsMeasurementListener| |android.location.GpsMeasurementsEvent$Listener|
|android.location.LocationManager| |addGpsNavigationMessageListener| |android.location.GpsNavigationMessageEvent$Listener|
|com.android.server.LocationManagerService| |loadProvidersLocked| ||
|com.android.server.location.LocationBasedCountryDetector| |stop| ||
|com.android.server.location.ComprehensiveCountryDetector| |runAfterDetection| |android.location.Country,android.location.Country,boolean,boolean|
|com.android.server.display.AutomaticBrightnessController| |<init>| |com.android.server.display.AutomaticBrightnessController$Callbacks,android.os.Looper,android.hardware.SensorManager,android.util.Spline,int,int,int,float|
|com.android.server.UiModeManagerService| |onStart| ||
|com.android.server.location.GeofenceManager| |addFence| |android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,int,int,java.lang.String|
|com.android.server.location.GeofenceManager| |removeFence| |android.location.Geofence,android.app.PendingIntent|
|com.android.server.location.GeofenceManager| |removeFence| |java.lang.String|
|com.android.server.LocationManagerService| |systemRunning| ||
|com.android.server.location.CountryDetectorBase| |stop| ||
|com.android.server.location.LocationBasedCountryDetector$1| |onLocationChanged| |android.location.Location|
|com.android.server.location.ComprehensiveCountryDetector$2| |run| ||
|com.android.server.display.DisplayPowerController| |<init>| |android.content.Context,android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager,com.android.server.display.DisplayBlanker|
|com.android.server.SystemService| |onStart| ||
|com.android.server.location.GeofenceManager| |sendIntent| |android.app.PendingIntent,android.content.Intent|
|com.android.server.SystemServer$2| |run| ||
|com.android.server.location.ComprehensiveCountryDetector| |stopLocationBasedDetector| ||
|com.android.server.display.DisplayManagerService$LocalService| |initPowerManagement| |android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager|
|com.android.server.SystemServiceManager| |startService| |java.lang.Class|
|com.android.server.location.GeofenceManager| |sendIntentEnter| |android.app.PendingIntent|
|com.android.server.location.GeofenceManager| |sendIntentExit| |android.app.PendingIntent|
|com.android.server.location.ComprehensiveCountryDetector| |access$200| |com.android.server.location.ComprehensiveCountryDetector|
|com.android.server.location.ComprehensiveCountryDetector| |setCountryListener| |android.location.CountryListener|
|com.android.server.location.ComprehensiveCountryDetector| |stop| ||
|android.hardware.display.DisplayManagerInternal| |initPowerManagement| |android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager|
|com.android.server.SystemServer| |startBootstrapServices| ||
|com.android.server.SystemServer| |startCoreServices| ||
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.String|
|com.android.server.location.ComprehensiveCountryDetector$1| |onCountryDetected| |android.location.Country|
|com.android.server.CountryDetectorService$2| |run| ||
|com.android.server.location.CountryDetectorBase| |setCountryListener| |android.location.CountryListener|
|com.android.server.power.PowerManagerService| |systemReady| |com.android.internal.app.IAppOpsService|
|com.android.server.SystemServer| |run| ||
|com.android.server.location.LocationBasedCountryDetector| |setCountryListener| |android.location.CountryListener|
|com.android.server.SystemServer| |main| |java.lang.String[]|
|android.hardware.location.GeofenceHardwareImpl| |getAllowedResolutionLevel| |int,int|
|android.hardware.location.GeofenceHardwareService| |checkPermission| |int,int,int|
|android.hardware.location.GeofenceHardwareService| |access$200| |android.hardware.location.GeofenceHardwareService,int,int,int|
|android.hardware.location.GeofenceHardwareService$1| |addCircularFence| |int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback|
|android.hardware.location.GeofenceHardwareService$1| |pauseGeofence| |int,int|
|android.hardware.location.GeofenceHardwareService$1| |registerForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.GeofenceHardwareService$1| |removeGeofence| |int,int|
|android.hardware.location.GeofenceHardwareService$1| |resumeGeofence| |int,int,int|
|android.hardware.location.GeofenceHardwareService$1| |unregisterForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |addCircularFence| |int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback|
|android.hardware.location.IGeofenceHardware$Stub| |addCircularFence| |int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |pauseGeofence| |int,int|
|android.hardware.location.IGeofenceHardware$Stub| |pauseGeofence| |int,int|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |registerForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware$Stub| |registerForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |removeGeofence| |int,int|
|android.hardware.location.IGeofenceHardware$Stub| |removeGeofence| |int,int|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |resumeGeofence| |int,int,int|
|android.hardware.location.IGeofenceHardware$Stub| |resumeGeofence| |int,int,int|
|android.hardware.location.IGeofenceHardware$Stub$Proxy| |unregisterForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware$Stub| |unregisterForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware| |addCircularFence| |int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback|
|android.hardware.location.IGeofenceHardware$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.hardware.location.IGeofenceHardware| |pauseGeofence| |int,int|
|android.hardware.location.IGeofenceHardware| |registerForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.IGeofenceHardware| |removeGeofence| |int,int|
|android.hardware.location.IGeofenceHardware| |resumeGeofence| |int,int,int|
|android.hardware.location.IGeofenceHardware| |unregisterForMonitorStateChangeCallback| |int,android.hardware.location.IGeofenceHardwareMonitorCallback|
|android.hardware.location.GeofenceHardware| |addGeofence| |int,int,android.hardware.location.GeofenceHardwareRequest,android.hardware.location.GeofenceHardwareCallback|
|android.hardware.location.GeofenceHardwareService$1| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.hardware.location.GeofenceHardware| |pauseGeofence| |int,int|
|android.hardware.location.GeofenceHardware| |registerForMonitorStateChangeCallback| |int,android.hardware.location.GeofenceHardwareMonitorCallback|
|android.hardware.location.GeofenceHardware| |removeGeofence| |int,int|
|android.hardware.location.GeofenceHardware| |resumeGeofence| |int,int,int|
|android.hardware.location.GeofenceHardware| |unregisterForMonitorStateChangeCallback| |int,android.hardware.location.GeofenceHardwareMonitorCallback|
|android.app.ActivityManagerNative| |broadcastStickyIntent| |android.content.Intent,java.lang.String,int|
|com.android.internal.telephony.cdma.CDMAPhone| |sendEmergencyCallbackModeChange| ||
|com.android.internal.telephony.imsphone.ImsPhone| |sendEmergencyCallbackModeChange| ||
|com.android.internal.telephony.PhoneProxy| |phoneObjectUpdater| |int|
|com.android.internal.telephony.SubscriptionInfoUpdater| |broadcastSimStateChanged| |int,java.lang.String,java.lang.String|
|com.android.internal.telephony.uicc.IccCardProxy| |broadcastIccStateChangedIntent| |java.lang.String,java.lang.String|
|com.android.internal.telephony.uicc.IccCardProxy| |broadcastInternalIccStateChangedIntent| |java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |broadcastStickyIntent| |android.content.Intent,java.lang.String,int|
|com.android.server.BatteryService$8| |run| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |sendEmergencyCallbackModeChange| ||
|com.android.internal.telephony.cdma.CDMAPhone| |handleEnterEmergencyCallbackMode| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |handleExitEmergencyCallbackMode| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |handleEnterEmergencyCallbackMode| ||
|com.android.internal.telephony.imsphone.ImsPhone| |handleExitEmergencyCallbackMode| ||
|com.android.internal.telephony.PhoneProxy| |updatePhoneObject| |int|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLoaded| |int|
|com.android.internal.telephony.uicc.IccCardProxy| |setExternalState| |com.android.internal.telephony.IccCardConstants$State,boolean|
|com.android.internal.telephony.uicc.IccCardProxy| |updateQuietMode| ||
|com.android.internal.telephony.uicc.IccCardProxy| |onRecordsLoaded| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |handleEnterEmergencyCallbackMode| |android.os.Message|
|com.android.internal.telephony.cdma.CDMAPhone| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |handleExitEmergencyCallbackMode| |android.os.Message|
|com.android.internal.telephony.imsphone.ImsPhone| |access$000| |com.android.internal.telephony.imsphone.ImsPhone|
|com.android.internal.telephony.imsphone.ImsPhone| |access$100| |com.android.internal.telephony.imsphone.ImsPhone|
|com.android.internal.telephony.Phone| |updatePhoneObject| |int|
|com.android.internal.telephony.SubscriptionInfoUpdater$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.uicc.IccCardProxy| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,int|
|com.android.internal.telephony.uicc.IccCardProxy| |setExternalState| |com.android.internal.telephony.IccCardConstants$State|
|com.android.internal.telephony.uicc.IccCardProxy| |setVoiceRadioTech| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.imsphone.ImsPhone$2| |onECBMEntered| ||
|com.android.internal.telephony.imsphone.ImsPhone$2| |onECBMExited| ||
|com.android.internal.telephony.PhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.PhoneProxy| |<init>| |com.android.internal.telephony.PhoneBase|
|com.android.internal.telephony.uicc.IccCardProxy| |processLockedState| ||
|com.android.internal.telephony.uicc.IccCardProxy| |updateExternalState| ||
|com.android.ims.ImsEcbmStateListener| |onECBMEntered| ||
|com.android.ims.ImsEcbmStateListener| |onECBMExited| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.gsm.GSMPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.ServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.sip.SipPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.sip.SipPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhone| |android.content.Context|
|com.android.internal.telephony.uicc.IccCardProxy| |updateIccAvailability| ||
|com.android.ims.ImsEcbm$ImsEcbmListenerProxy| |enteredECBM| ||
|com.android.ims.ImsEcbm$ImsEcbmListenerProxy| |exitedECBM| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhones| |android.content.Context|
|com.android.internal.telephony.uicc.IccCardProxy| |onSubscriptionActivated| ||
|com.android.internal.telephony.uicc.IccCardProxy| |onSubscriptionDeactivated| ||
|com.android.ims.internal.IImsEcbmListener$Stub$Proxy| |enteredECBM| ||
|com.android.ims.internal.IImsEcbmListener$Stub| |enteredECBM| ||
|com.android.ims.internal.IImsEcbmListener$Stub$Proxy| |exitedECBM| ||
|com.android.ims.internal.IImsEcbmListener$Stub| |exitedECBM| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.ims.internal.IImsEcbmListener$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.ims.internal.IImsEcbmListener| |enteredECBM| ||
|com.android.ims.internal.IImsEcbmListener| |exitedECBM| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollState| ||
|com.android.ims.ImsEcbm$ImsEcbmListenerProxy| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.ServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CDMAPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.gsm.GSMPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.Phone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.Phone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneProxy| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.PhoneProxy| |setOperatorBrandOverride| |java.lang.String|
|android.app.ContextImpl| |sendStickyBroadcast| |android.content.Intent|
|android.content.Context| |sendStickyBroadcast| |android.content.Intent|
|android.content.ContextWrapper| |sendStickyBroadcast| |android.content.Intent|
|android.accessibilityservice.AccessibilityService| |sendStickyBroadcast| |android.content.Intent|
|android.accounts.AccountAuthenticatorActivity| |sendStickyBroadcast| |android.content.Intent|
|android.accounts.CantAddAccountActivity| |sendStickyBroadcast| |android.content.Intent|
|android.accounts.ChooseAccountActivity| |sendStickyBroadcast| |android.content.Intent|
|android.accounts.ChooseAccountTypeActivity| |sendStickyBroadcast| |android.content.Intent|
|android.accounts.ChooseTypeAndAccountActivity| |sendStickyBroadcast| |android.content.Intent|
|android.accounts.GrantCredentialsPermissionActivity| |sendStickyBroadcast| |android.content.Intent|
|android.app.ActivityGroup| |sendStickyBroadcast| |android.content.Intent|
|android.app.Activity| |sendStickyBroadcast| |android.content.Intent|
|android.app.AliasActivity| |sendStickyBroadcast| |android.content.Intent|
|android.app.Application| |sendStickyBroadcast| |android.content.Intent|
|android.app.backup.BackupAgentHelper| |sendStickyBroadcast| |android.content.Intent|
|android.app.backup.BackupAgent| |sendStickyBroadcast| |android.content.Intent|
|android.app.backup.FullBackupAgent| |sendStickyBroadcast| |android.content.Intent|
|android.app.ExpandableListActivity| |sendStickyBroadcast| |android.content.Intent|
|android.app.IntentService| |sendStickyBroadcast| |android.content.Intent|
|android.app.job.JobService| |sendStickyBroadcast| |android.content.Intent|
|android.app.LauncherActivity| |sendStickyBroadcast| |android.content.Intent|
|android.app.ListActivity| |sendStickyBroadcast| |android.content.Intent|
|android.app.NativeActivity| |sendStickyBroadcast| |android.content.Intent|
|android.app.Presentation$1| |sendStickyBroadcast| |android.content.Intent|
|android.app.ReceiverRestrictedContext| |sendStickyBroadcast| |android.content.Intent|
|android.app.Service| |sendStickyBroadcast| |android.content.Intent|
|android.app.TabActivity| |sendStickyBroadcast| |android.content.Intent|
|android.content.MutableContextWrapper| |sendStickyBroadcast| |android.content.Intent|
|android.content.SyncActivityTooManyDeletes| |sendStickyBroadcast| |android.content.Intent|
|android.hardware.location.GeofenceHardwareService| |sendStickyBroadcast| |android.content.Intent|
|android.inputmethodservice.AbstractInputMethodService| |sendStickyBroadcast| |android.content.Intent|
|android.inputmethodservice.InputMethodService| |sendStickyBroadcast| |android.content.Intent|
|android.location.SettingInjectorService| |sendStickyBroadcast| |android.content.Intent|
|android.media.tv.TvInputService| |sendStickyBroadcast| |android.content.Intent|
|android.nfc.cardemulation.HostApduService| |sendStickyBroadcast| |android.content.Intent|
|android.nfc.cardemulation.OffHostApduService| |sendStickyBroadcast| |android.content.Intent|
|android.preference.PreferenceActivity| |sendStickyBroadcast| |android.content.Intent|
|android.printservice.PrintService| |sendStickyBroadcast| |android.content.Intent|
|android.service.carrier.CarrierMessagingService| |sendStickyBroadcast| |android.content.Intent|
|android.service.dreams.DreamService| |sendStickyBroadcast| |android.content.Intent|
|android.service.media.MediaBrowserService| |sendStickyBroadcast| |android.content.Intent|
|android.service.notification.ConditionProviderService| |sendStickyBroadcast| |android.content.Intent|
|android.service.notification.NotificationListenerService| |sendStickyBroadcast| |android.content.Intent|
|android.service.textservice.SpellCheckerService| |sendStickyBroadcast| |android.content.Intent|
|android.service.trust.TrustAgentService| |sendStickyBroadcast| |android.content.Intent|
|android.service.voice.VoiceInteractionService| |sendStickyBroadcast| |android.content.Intent|
|android.service.voice.VoiceInteractionSessionService| |sendStickyBroadcast| |android.content.Intent|
|android.service.wallpaper.WallpaperService| |sendStickyBroadcast| |android.content.Intent|
|android.service.wallpaper.WallpaperSettingsActivity| |sendStickyBroadcast| |android.content.Intent|
|android.speech.RecognitionService| |sendStickyBroadcast| |android.content.Intent|
|android.speech.tts.TextToSpeechService| |sendStickyBroadcast| |android.content.Intent|
|android.telecom.ConnectionService| |sendStickyBroadcast| |android.content.Intent|
|android.telecom.InCallService| |sendStickyBroadcast| |android.content.Intent|
|android.test.ActivityUnitTestCase$MockParent| |sendStickyBroadcast| |android.content.Intent|
|android.test.IsolatedContext| |sendStickyBroadcast| |android.content.Intent|
|android.test.mock.MockApplication| |sendStickyBroadcast| |android.content.Intent|
|android.test.RenamingDelegatingContext| |sendStickyBroadcast| |android.content.Intent|
|android.view.ContextThemeWrapper| |sendStickyBroadcast| |android.content.Intent|
|android.widget.RemoteViews$2| |sendStickyBroadcast| |android.content.Intent|
|android.widget.RemoteViewsService| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.AlertActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.ChooserActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.DisableCarModeActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.ExternalMediaFormatActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.HeavyWeightSwitcherActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.IntentForwarderActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.NetInitiatedActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.PlatLogoActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.ResolverActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.RestrictionsPinActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.app.ShutdownActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.backup.LocalTransportService| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.os.storage.ExternalStorageFormatter| |sendStickyBroadcast| |android.content.Intent|
|com.android.internal.util.AsyncService| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.beam.BeamReceiveService| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.beam.BeamSendService| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.BeamShareActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.cardemulation.AppChooserActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.cardemulation.DefaultRemovedActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.cardemulation.TapAgainDialog| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.handover.ConfirmConnectActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.handover.PeripheralHandoverService| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.NfcApplication| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.NfcBackupAgent| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.NfcRootActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.nfc.TechListChooserActivity| |sendStickyBroadcast| |android.content.Intent|
|com.android.server.backup.FullBackupJob| |sendStickyBroadcast| |android.content.Intent|
|com.android.server.backup.PackageManagerBackupAgent| |sendStickyBroadcast| |android.content.Intent|
|com.android.server.backup.SystemBackupAgent| |sendStickyBroadcast| |android.content.Intent|
|com.android.server.MountServiceIdler| |sendStickyBroadcast| |android.content.Intent|
|com.android.server.notification.CountdownConditionProvider| |sendStickyBroadcast| |android.content.Intent|
|com.android.server.notification.DowntimeConditionProvider| |sendStickyBroadcast| |android.content.Intent|
|com.android.server.notification.NextAlarmConditionProvider| |sendStickyBroadcast| |android.content.Intent|
|com.android.server.pm.BackgroundDexOptService| |sendStickyBroadcast| |android.content.Intent|
|android.app.ContextImpl| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.content.Context| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.content.ContextWrapper| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.policy.impl.PhoneWindowManager| |setHdmiPlugged| |boolean|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setAndBroadcastNetworkSetTime| |long|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setAndBroadcastNetworkSetTimeZone| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateSpnDisplay| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setAndBroadcastNetworkSetTime| |long|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setAndBroadcastNetworkSetTimeZone| |java.lang.String|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateSpnDisplay| ||
|com.android.internal.telephony.PhoneFactory| |setDefaultSubscription| |int|
|com.android.internal.telephony.SubscriptionController| |broadcastDefaultDataSubIdChanged| |int|
|com.android.internal.telephony.SubscriptionController| |broadcastDefaultSmsSubIdChanged| |int|
|com.android.internal.telephony.SubscriptionController| |broadcastDefaultVoiceSubIdChanged| |int|
|com.android.internal.telephony.SubscriptionController| |setDefaultFallbackSubId| |int|
|com.android.server.connectivity.Tethering| |sendTetherStateChangedBroadcast| ||
|com.android.server.DockObserver| |handleDockStateChange| ||
|com.android.server.NsdService| |sendNsdStateChangeBroadcast| |boolean|
|com.android.server.storage.DeviceStorageMonitorService| |sendFullNotification| ||
|com.android.server.storage.DeviceStorageMonitorService| |sendNotification| ||
|com.android.server.TelephonyRegistry| |broadcastDataConnectionFailed| |java.lang.String,java.lang.String,int|
|com.android.server.TelephonyRegistry| |broadcastDataConnectionStateChanged| |int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,boolean,int|
|com.android.server.TelephonyRegistry| |broadcastServiceStateChanged| |android.telephony.ServiceState,int|
|com.android.server.TelephonyRegistry| |broadcastSignalStrengthChanged| |android.telephony.SignalStrength,int|
|com.android.server.usb.UsbAudioManager| |sendDeviceNotification| |com.android.server.usb.UsbAudioManager$AudioDevice,boolean|
|com.android.server.usb.UsbDeviceManager$UsbHandler| |updateAudioSourceFunction| ||
|com.android.server.usb.UsbDeviceManager$UsbHandler| |updateUsbState| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |sendP2pConnectionChangedBroadcast| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |sendP2pDiscoveryChangedBroadcast| |boolean|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |sendP2pPersistentGroupsChangedBroadcast| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |sendP2pStateChangedBroadcast| |boolean|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |sendThisDeviceChangedBroadcast| ||
|com.android.server.wifi.SupplicantStateTracker| |sendSupplicantStateChangedBroadcast| |android.net.wifi.SupplicantState,boolean|
|com.android.server.wifi.WifiStateMachine$DriverStartedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStartedState| |exit| ||
|com.android.server.wifi.WifiStateMachine| |<init>| |android.content.Context,java.lang.String,com.android.server.wifi.WifiTrafficPoller|
|com.android.server.wifi.WifiStateMachine| |retrieveBatchedScanData| ||
|com.android.server.wifi.WifiStateMachine| |sendNetworkStateChangeBroadcast| |java.lang.String|
|com.android.server.wifi.WifiStateMachine| |sendRssiChangeBroadcast| |int|
|com.android.server.wifi.WifiStateMachine| |setWifiApState| |int|
|com.android.server.wifi.WifiStateMachine| |setWifiState| |int|
|android.accessibilityservice.AccessibilityService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.AccountAuthenticatorActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.CantAddAccountActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.ChooseAccountActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.ChooseAccountTypeActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.ChooseTypeAndAccountActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.GrantCredentialsPermissionActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.ActivityGroup| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.Activity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.AliasActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.Application| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.backup.BackupAgentHelper| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.backup.BackupAgent| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.backup.FullBackupAgent| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.ExpandableListActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.IntentService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.job.JobService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.LauncherActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.ListActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.NativeActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.Presentation$1| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.ReceiverRestrictedContext| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.Service| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.TabActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.content.MutableContextWrapper| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.content.SyncActivityTooManyDeletes| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.hardware.location.GeofenceHardwareService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.inputmethodservice.AbstractInputMethodService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.inputmethodservice.InputMethodService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.location.SettingInjectorService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.media.tv.TvInputService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.nfc.cardemulation.HostApduService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.nfc.cardemulation.OffHostApduService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.preference.PreferenceActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.printservice.PrintService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.carrier.CarrierMessagingService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.dreams.DreamService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.media.MediaBrowserService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.notification.ConditionProviderService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.notification.NotificationListenerService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.textservice.SpellCheckerService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.trust.TrustAgentService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.voice.VoiceInteractionService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.voice.VoiceInteractionSessionService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.wallpaper.WallpaperService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.wallpaper.WallpaperSettingsActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.speech.RecognitionService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.speech.tts.TextToSpeechService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.telecom.ConnectionService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.telecom.InCallService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.test.ActivityUnitTestCase$MockParent| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.test.IsolatedContext| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.test.mock.MockApplication| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.test.RenamingDelegatingContext| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.view.ContextThemeWrapper| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.widget.RemoteViews$2| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.widget.RemoteViewsService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.AlertActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.ChooserActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.DisableCarModeActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.ExternalMediaFormatActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.HeavyWeightSwitcherActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.IntentForwarderActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.NetInitiatedActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.PlatLogoActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.ResolverActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.RestrictionsPinActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.ShutdownActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.backup.LocalTransportService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.os.storage.ExternalStorageFormatter| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.util.AsyncService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.beam.BeamReceiveService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.beam.BeamSendService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.BeamShareActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.cardemulation.AppChooserActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.cardemulation.DefaultRemovedActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.cardemulation.TapAgainDialog| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.handover.ConfirmConnectActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.handover.PeripheralHandoverService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.NfcApplication| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.NfcBackupAgent| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.NfcRootActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.TechListChooserActivity| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.backup.FullBackupJob| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.backup.PackageManagerBackupAgent| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.backup.SystemBackupAgent| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.MountServiceIdler| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.notification.CountdownConditionProvider| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.notification.DowntimeConditionProvider| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.notification.NextAlarmConditionProvider| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.pm.BackgroundDexOptService| |sendStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.policy.impl.PhoneWindowManager$3| |onUEvent| |android.os.UEventObserver$UEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |initializeHdmiState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setAndBroadcastNetworkSetTime| |long|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |fixTimeZone| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |revertToNitzTime| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setAndBroadcastNetworkSetTimeZone| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |revertToNitzTimeZone| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateSpnDisplay| ||
|com.android.internal.telephony.ServiceStateTracker| |updateSpnDisplay| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |revertToNitzTime| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |revertToNitzTimeZone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SubscriptionController| |setDefaultDataSubId| |int|
|com.android.internal.telephony.SubscriptionController| |setDefaultSmsSubId| |int|
|com.android.internal.telephony.SubscriptionController| |setDefaultVoiceSubId| |int|
|com.android.internal.telephony.SubscriptionController| |addSubInfoRecord| |java.lang.String,int|
|com.android.server.connectivity.Tethering| |access$900| |com.android.server.connectivity.Tethering|
|com.android.server.DockObserver| |access$100| |com.android.server.DockObserver|
|com.android.server.NsdService| |access$900| |com.android.server.NsdService,boolean|
|com.android.server.storage.DeviceStorageMonitorService| |checkMemory| |boolean|
|com.android.server.TelephonyRegistry| |notifyDataConnectionFailedForSubscriber| |int,java.lang.String,java.lang.String|
|com.android.server.TelephonyRegistry| |notifyDataConnectionForSubscriber| |int,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean|
|com.android.server.TelephonyRegistry| |notifyServiceStateForPhoneId| |int,int,android.telephony.ServiceState|
|com.android.server.TelephonyRegistry| |notifySignalStrengthForSubscriber| |int,android.telephony.SignalStrength|
|com.android.server.usb.UsbAudioManager| |deviceAdded| |android.hardware.usb.UsbDevice|
|com.android.server.usb.UsbAudioManager| |deviceRemoved| |android.hardware.usb.UsbDevice|
|com.android.server.usb.UsbDeviceManager| |systemReady| ||
|com.android.server.usb.UsbDeviceManager$UsbHandler| |updateState| |java.lang.String|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$2800| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |handleGroupCreationFailure| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$3900| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,boolean|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$300| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |updatePersistentNetworks| |boolean|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$2600| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,boolean|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |setAndPersistDeviceName| |java.lang.String|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |setWfdInfo| |android.net.wifi.p2p.WifiP2pWfdInfo|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |updateThisDevice| |int|
|com.android.server.wifi.SupplicantStateTracker| |access$300| |com.android.server.wifi.SupplicantStateTracker,android.net.wifi.SupplicantState,boolean|
|com.android.internal.util.State| |enter| ||
|com.android.internal.util.State| |exit| ||
|com.android.server.wifi.WifiServiceImpl| |<init>| |android.content.Context|
|com.android.server.wifi.WifiStateMachine| |startBatchedScan| ||
|com.android.server.wifi.WifiStateMachine| |startNextBatchedScan| ||
|com.android.server.wifi.WifiStateMachine| |stopBatchedScan| ||
|com.android.server.wifi.WifiStateMachine| |setNetworkDetailedState| |android.net.NetworkInfo$DetailedState|
|com.android.server.wifi.WifiStateMachine| |access$16600| |com.android.server.wifi.WifiStateMachine,java.lang.String|
|com.android.server.wifi.WifiStateMachine| |handleNetworkDisconnect| ||
|com.android.server.wifi.WifiStateMachine| |sendConnectedState| ||
|com.android.server.wifi.WifiStateMachine| |access$19500| |com.android.server.wifi.WifiStateMachine,int|
|com.android.server.wifi.WifiStateMachine| |fetchRssiLinkSpeedAndFrequencyNative| ||
|com.android.server.wifi.WifiStateMachine| |access$4300| |com.android.server.wifi.WifiStateMachine,int|
|com.android.server.wifi.WifiStateMachine| |access$4000| |com.android.server.wifi.WifiStateMachine,int|
|com.android.server.wifi.WifiStateMachine| |handleSupplicantConnectionLoss| ||
|com.android.internal.policy.impl.PhoneWindowManager| |init| |android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |fixTimeZone| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |revertToNitzTime| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |access$000| |com.android.internal.telephony.cdma.CdmaServiceStateTracker|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |revertToNitzTimeZone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |access$100| |com.android.internal.telephony.cdma.CdmaServiceStateTracker|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |access$200| |com.android.internal.telephony.gsm.GsmServiceStateTracker|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |access$300| |com.android.internal.telephony.gsm.GsmServiceStateTracker|
|com.android.internal.telephony.ISub$Stub$Proxy| |setDefaultDataSubId| |int|
|com.android.internal.telephony.ISub$Stub| |setDefaultDataSubId| |int|
|com.android.internal.telephony.SubscriptionController| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |setDefaultSmsSubId| |int|
|com.android.internal.telephony.ISub$Stub| |setDefaultSmsSubId| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |setDefaultVoiceSubId| |int|
|com.android.internal.telephony.ISub$Stub| |setDefaultVoiceSubId| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |addSubInfoRecord| |java.lang.String,int|
|com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState| |enter| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState| |enter| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState| |processMessage| |android.os.Message|
|com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState| |enter| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState| |enter| ||
|com.android.server.DockObserver| |updateLocked| ||
|com.android.server.NsdService$NsdStateMachine$DisabledState| |enter| ||
|com.android.server.NsdService$NsdStateMachine$EnabledState| |enter| ||
|com.android.server.storage.DeviceStorageMonitorService| |onStart| ||
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |notifyDataConnectionFailedForSubscriber| |int,java.lang.String,java.lang.String|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |notifyDataConnectionFailedForSubscriber| |int,java.lang.String,java.lang.String|
|com.android.server.TelephonyRegistry| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |notifyDataConnectionForSubscriber| |int,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |notifyDataConnectionForSubscriber| |int,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean|
|com.android.server.TelephonyRegistry| |notifyDataConnection| |int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |notifyServiceStateForPhoneId| |int,int,android.telephony.ServiceState|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |notifyServiceStateForPhoneId| |int,int,android.telephony.ServiceState|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |notifySignalStrengthForSubscriber| |int,android.telephony.SignalStrength|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |notifySignalStrengthForSubscriber| |int,android.telephony.SignalStrength|
|com.android.server.TelephonyRegistry| |notifySignalStrength| |android.telephony.SignalStrength|
|com.android.server.usb.UsbHostManager| |endUsbDeviceAdded| ||
|com.android.server.usb.UsbHostManager| |usbDeviceRemoved| |java.lang.String|
|com.android.server.usb.UsbService| |systemReady| ||
|com.android.server.usb.UsbDeviceManager$1| |onUEvent| |android.os.UEventObserver$UEvent|
|com.android.server.usb.UsbDeviceManager$UsbHandler| |<init>| |com.android.server.usb.UsbDeviceManager,android.os.Looper|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatedState| |processMessage| |android.os.Message|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatedState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatedState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pEnabledState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$7100| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pEnabledState| |processMessage| |android.os.Message|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pEnabledState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$1| |onDeleteGroup| |int|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |reinvokePersistentGroup| |android.net.wifi.p2p.WifiP2pConfig|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$8900| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,boolean|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |initializeP2pSettings| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$3400| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,java.lang.String|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$3600| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,android.net.wifi.p2p.WifiP2pWfdInfo|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$10800| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,int|
|com.android.server.wifi.SupplicantStateTracker$CompletedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DefaultState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$HandshakeState| |processMessage| |android.os.Message|
|android.net.DhcpStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady| |enter| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateStart| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectingState| |enter| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectionErrorCreatingConnection| |enter| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$DefaultState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$StartupState| |enter| ||
|com.android.internal.telephony.InboundSmsHandler$WaitingState| |enter| ||
|com.android.internal.telephony.WakeLockStateMachine$DefaultState| |enter| ||
|com.android.internal.telephony.WakeLockStateMachine$WaitingState| |enter| ||
|com.android.internal.util.IState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler$HaltingState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler$QuittingState| |enter| ||
|com.android.internal.util.StateMachine$SmHandler| |invokeEnterMethods| |int|
|com.android.server.connectivity.NetworkMonitor$DefaultState| |enter| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState| |enter| ||
|com.android.server.NsdService$NsdStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pNotSupportedState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$EnabledState| |enter| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$RequestPendingState| |enter| ||
|com.android.server.wifi.WifiApConfigStore$DefaultState| |enter| ||
|com.android.server.wifi.WifiApConfigStore$InactiveState| |enter| ||
|com.android.server.wifi.WifiController$ApEnabledState| |enter| ||
|com.android.server.wifi.WifiController$DefaultState| |enter| ||
|com.android.server.wifi.WifiController$DeviceInactiveState| |enter| ||
|com.android.server.wifi.WifiStateMachine$ConnectModeState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DefaultState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppingState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SoftApStartedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$SupplicantStartingState| |enter| ||
|com.android.server.wifi.WifiStateMachine$TetheredState| |enter| ||
|android.net.DhcpStateMachine$RunningState| |exit| ||
|android.net.DhcpStateMachine$StoppedState| |exit| ||
|android.net.DhcpStateMachine$WaitBeforeStartState| |exit| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady| |exit| ||
|com.android.internal.telephony.cat.RilMessageDecoder$StateStart| |exit| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState| |exit| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectingState| |exit| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectionErrorCreatingConnection| |exit| ||
|com.android.internal.telephony.dataconnection.DataConnection$DcRetryingState| |exit| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachedState| |exit| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachingState| |exit| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DefaultState| |exit| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DetachingState| |exit| ||
|com.android.internal.telephony.dataconnection.DcSwitchStateMachine$IdleState| |exit| ||
|com.android.internal.telephony.InboundSmsHandler$DefaultState| |exit| ||
|com.android.internal.telephony.InboundSmsHandler$StartupState| |exit| ||
|com.android.internal.telephony.InboundSmsHandler$WaitingState| |exit| ||
|com.android.internal.telephony.WakeLockStateMachine$DefaultState| |exit| ||
|com.android.internal.telephony.WakeLockStateMachine$WaitingState| |exit| ||
|com.android.internal.util.IState| |exit| ||
|com.android.internal.util.StateMachine$SmHandler$HaltingState| |exit| ||
|com.android.internal.util.StateMachine$SmHandler$QuittingState| |exit| ||
|com.android.internal.util.StateMachine$SmHandler| |invokeExitMethods| |com.android.internal.util.StateMachine$SmHandler$StateInfo|
|com.android.server.connectivity.NetworkMonitor$DefaultState| |exit| ||
|com.android.server.connectivity.NetworkMonitor$ValidatedState| |exit| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState| |exit| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState| |exit| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState| |exit| ||
|com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState| |exit| ||
|com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState| |exit| ||
|com.android.server.NsdService$NsdStateMachine$DefaultState| |exit| ||
|com.android.server.NsdService$NsdStateMachine$DisabledState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatingState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupNegotiationState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$InactiveState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$OngoingGroupRemovalState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pDisabledState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pEnablingState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pNotSupportedState| |exit| ||
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$ProvisionDiscoveryState| |exit| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$EnabledState| |exit| ||
|com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$RequestPendingState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$CompletedState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$DefaultState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$DormantState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$HandshakeState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$ScanState| |exit| ||
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |exit| ||
|com.android.server.wifi.WifiApConfigStore$ActiveState| |exit| ||
|com.android.server.wifi.WifiApConfigStore$DefaultState| |exit| ||
|com.android.server.wifi.WifiApConfigStore$InactiveState| |exit| ||
|com.android.server.wifi.WifiController$ApEnabledState| |exit| ||
|com.android.server.wifi.WifiController$ApStaDisabledState| |exit| ||
|com.android.server.wifi.WifiController$DefaultState| |exit| ||
|com.android.server.wifi.WifiController$DeviceActiveState| |exit| ||
|com.android.server.wifi.WifiController$DeviceInactiveState| |exit| ||
|com.android.server.wifi.WifiController$EcmState| |exit| ||
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |exit| ||
|com.android.server.wifi.WifiController$FullLockHeldState| |exit| ||
|com.android.server.wifi.WifiController$NoLockHeldState| |exit| ||
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |exit| ||
|com.android.server.wifi.WifiController$StaDisabledWithScanState| |exit| ||
|com.android.server.wifi.WifiController$StaEnabledState| |exit| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$StationaryState| |exit| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine$PausedState| |exit| ||
|com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine$StartedState| |exit| ||
|com.android.server.wifi.WifiStateMachine$ConnectModeState| |exit| ||
|com.android.server.wifi.WifiStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.WifiStateMachine$DisconnectingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$DriverStartingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppedState| |exit| ||
|com.android.server.wifi.WifiStateMachine$DriverStoppingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$InitialState| |exit| ||
|com.android.server.wifi.WifiStateMachine$ObtainingIpState| |exit| ||
|com.android.server.wifi.WifiStateMachine$ScanModeState| |exit| ||
|com.android.server.wifi.WifiStateMachine$SoftApStartedState| |exit| ||
|com.android.server.wifi.WifiStateMachine$SoftApStartingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$SupplicantStartingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$SupplicantStoppingState| |exit| ||
|com.android.server.wifi.WifiStateMachine$TetheredState| |exit| ||
|com.android.server.wifi.WifiStateMachine$TetheringState| |exit| ||
|com.android.server.wifi.WifiStateMachine$UntetheringState| |exit| ||
|com.android.server.wifi.WifiStateMachine$VerifyingLinkState| |exit| ||
|com.android.server.wifi.WifiStateMachine$WaitForP2pDisableState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$ConnectedState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$DefaultState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$LinkMonitoringState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$OnlineState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$OnlineWatchState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$VerifyingLinkState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$WatchdogDisabledState| |exit| ||
|com.android.server.wifi.WifiWatchdogStateMachine$WatchdogEnabledState| |exit| ||
|com.android.server.wifi.WifiService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiStateMachine| |access$10300| |com.android.server.wifi.WifiStateMachine|
|com.android.server.wifi.WifiStateMachine| |handlePostDhcpSetup| ||
|com.android.server.wifi.WifiStateMachine| |access$2300| |com.android.server.wifi.WifiStateMachine|
|com.android.server.wifi.WifiStateMachine| |handleBatchedScanPollRequest| ||
|com.android.server.wifi.WifiStateMachine| |access$11200| |com.android.server.wifi.WifiStateMachine|
|com.android.server.wifi.WifiStateMachine| |handlePreDhcpSetup| ||
|com.android.server.wifi.WifiStateMachine| |access$10000| |com.android.server.wifi.WifiStateMachine,android.net.NetworkInfo$DetailedState|
|com.android.server.wifi.WifiStateMachine$ConnectModeState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$VerifyingLinkState| |enter| ||
|com.android.server.wifi.WifiStateMachine| |access$7100| |com.android.server.wifi.WifiStateMachine|
|com.android.server.wifi.WifiStateMachine| |access$17600| |com.android.server.wifi.WifiStateMachine|
|com.android.server.wifi.WifiStateMachine$L2ConnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine| |access$19300| |com.android.server.wifi.WifiStateMachine|
|com.android.server.wifi.WifiStateMachine$InitialState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SoftApStartedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SoftApStartingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SupplicantStartedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$TetheredState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$ScanModeState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SupplicantStartingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SupplicantStoppingState| |enter| ||
|com.android.server.wifi.WifiStateMachine| |access$7000| |com.android.server.wifi.WifiStateMachine|
|android.view.WindowManagerPolicy| |init| |android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |access$000| |com.android.internal.telephony.cdma.CdmaServiceStateTracker|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker$1| |onChange| |boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |access$100| |com.android.internal.telephony.cdma.CdmaServiceStateTracker|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker$2| |onChange| |boolean|
|com.android.internal.telephony.gsm.GsmServiceStateTracker$2| |onChange| |boolean|
|com.android.internal.telephony.gsm.GsmServiceStateTracker$3| |onChange| |boolean|
|com.android.internal.telephony.ISub$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ISub| |setDefaultDataSubId| |int|
|com.android.internal.telephony.ISub$Stub$Proxy| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.ISub$Stub| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.ISub| |setDefaultSmsSubId| |int|
|com.android.internal.telephony.ISub| |setDefaultVoiceSubId| |int|
|com.android.internal.telephony.ISub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.util.State| |processMessage| |android.os.Message|
|com.android.server.DockObserver| |onBootPhase| |int|
|com.android.server.DockObserver| |setDockStateLocked| |int|
|com.android.server.SystemService| |onStart| ||
|com.android.internal.telephony.ITelephonyRegistry$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.ITelephonyRegistry| |notifyDataConnectionFailedForSubscriber| |int,java.lang.String,java.lang.String|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.ITelephonyRegistry| |notifyDataConnectionForSubscriber| |int,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |notifyDataConnection| |int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |notifyDataConnection| |int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean|
|com.android.internal.telephony.ITelephonyRegistry| |notifyServiceStateForPhoneId| |int,int,android.telephony.ServiceState|
|com.android.internal.telephony.ITelephonyRegistry| |notifySignalStrengthForSubscriber| |int,android.telephony.SignalStrength|
|com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy| |notifySignalStrength| |android.telephony.SignalStrength|
|com.android.internal.telephony.ITelephonyRegistry$Stub| |notifySignalStrength| |android.telephony.SignalStrength|
|com.android.server.usb.UsbService$Lifecycle| |onBootPhase| |int|
|com.android.server.usb.UsbDeviceManager| |<init>| |android.content.Context|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$FrequencyConflictState| |processMessage| |android.os.Message|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatingState| |processMessage| |android.os.Message|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupNegotiationState| |processMessage| |android.os.Message|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$ProvisionDiscoveryState| |processMessage| |android.os.Message|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$5300| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,android.net.wifi.p2p.WifiP2pConfig|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine| |access$2900| |com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine|
|com.android.internal.util.StateMachine$SmHandler| |performTransitions| |com.android.internal.util.State,android.os.Message|
|com.android.server.SystemService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiStateMachine$DriverStartedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine| |stopDhcp| ||
|com.android.server.wifi.WifiStateMachine$DefaultState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine| |access$2200| |com.android.server.wifi.WifiStateMachine|
|com.android.server.wifi.WifiStateMachine$L2ConnectedState| |enter| ||
|com.android.server.wifi.WifiStateMachine$ObtainingIpState| |enter| ||
|com.android.server.wifi.WifiStateMachine$DisconnectingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$L2ConnectedState| |exit| ||
|com.android.server.wifi.WifiStateMachine$RoamingState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$WpsRunningState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$VerifyingLinkState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiStateMachine$SupplicantStoppingState| |processMessage| |android.os.Message|
|com.android.server.wm.WindowManagerService$3| |run| ||
|com.android.internal.telephony.SubscriptionController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.telephony.SubscriptionManager| |setDefaultDataSubId| |int|
|com.android.internal.telephony.ISub| |clearDefaultsForInactiveSubIds| ||
|android.telephony.SubscriptionManager| |setDefaultSmsSubId| |int|
|android.telephony.SubscriptionManager| |setDefaultVoiceSubId| |int|
|android.telephony.SubscriptionManager| |addSubscriptionInfoRecord| |java.lang.String,int|
|com.android.internal.util.IState| |processMessage| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |processMsg| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DormantState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$ScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$NoLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |processMessage| |android.os.Message|
|com.android.server.SystemService| |onBootPhase| |int|
|com.android.server.DockObserver| |access$900| |com.android.server.DockObserver,int|
|com.android.server.DockObserver| |setActualDockStateLocked| |int|
|com.android.server.SystemServiceManager| |startService| |java.lang.Class|
|com.android.server.TelephonyRegistry| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.DefaultPhoneNotifier| |notifyDataConnectionFailed| |com.android.internal.telephony.Phone,java.lang.String,java.lang.String|
|com.android.internal.telephony.ITelephonyRegistry| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.DefaultPhoneNotifier| |doNotifyDataConnection| |com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.ITelephonyRegistry| |notifyDataConnection| |int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean|
|com.android.internal.telephony.DefaultPhoneNotifier| |notifyServiceState| |com.android.internal.telephony.Phone|
|com.android.internal.telephony.DefaultPhoneNotifier| |notifySignalStrength| |com.android.internal.telephony.Phone|
|com.android.internal.telephony.ITelephonyRegistry| |notifySignalStrength| |android.telephony.SignalStrength|
|com.android.server.usb.UsbService| |<init>| |android.content.Context|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$UserAuthorizingInviteRequestState| |processMessage| |android.os.Message|
|com.android.server.AlarmManagerService| |<init>| |android.content.Context|
|com.android.server.am.ActivityManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.appwidget.AppWidgetService| |<init>| |android.content.Context|
|com.android.server.backup.BackupManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.BatteryService| |<init>| |android.content.Context|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.display.DisplayManagerService| |<init>| |android.content.Context|
|com.android.server.DockObserver| |<init>| |android.content.Context|
|com.android.server.dreams.DreamManagerService| |<init>| |android.content.Context|
|com.android.server.ethernet.EthernetService| |<init>| |android.content.Context|
|com.android.server.fingerprint.FingerprintService| |<init>| |android.content.Context|
|com.android.server.hdmi.HdmiControlService| |<init>| |android.content.Context|
|com.android.server.job.JobSchedulerService| |<init>| |android.content.Context|
|com.android.server.lights.LightsService| |<init>| |android.content.Context|
|com.android.server.media.MediaSessionService| |<init>| |android.content.Context|
|com.android.server.media.projection.MediaProjectionManagerService| |<init>| |android.content.Context|
|com.android.server.MmsServiceBroker| |<init>| |android.content.Context|
|com.android.server.notification.NotificationManagerService| |<init>| |android.content.Context|
|com.android.server.PersistentDataBlockService| |<init>| |android.content.Context|
|com.android.server.pm.Installer| |<init>| |android.content.Context|
|com.android.server.pm.LauncherAppsService| |<init>| |android.content.Context|
|com.android.server.power.PowerManagerService| |<init>| |android.content.Context|
|com.android.server.print.PrintManagerService| |<init>| |android.content.Context|
|com.android.server.restrictions.RestrictionsManagerService| |<init>| |android.content.Context|
|com.android.server.storage.DeviceStorageMonitorService| |<init>| |android.content.Context|
|com.android.server.telecom.TelecomLoaderService| |<init>| |android.content.Context|
|com.android.server.trust.TrustManagerService| |<init>| |android.content.Context|
|com.android.server.tv.TvInputManagerService| |<init>| |android.content.Context|
|com.android.server.twilight.TwilightService| |<init>| |android.content.Context|
|com.android.server.UiModeManagerService| |<init>| |android.content.Context|
|com.android.server.usage.UsageStatsService| |<init>| |android.content.Context|
|com.android.server.usb.UsbService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |<init>| |android.content.Context|
|com.android.server.webkit.WebViewUpdateService| |<init>| |android.content.Context|
|com.android.server.wifi.p2p.WifiP2pService| |<init>| |android.content.Context|
|com.android.server.wifi.RttService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiScanningService| |<init>| |android.content.Context|
|android.telephony.SubscriptionManager| |clearDefaultsForInactiveSubIds| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |updateSubscriptionInfoByIccId| ||
|com.android.server.AlarmManagerService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.fingerprint.FingerprintService| |onBootPhase| |int|
|com.android.server.lights.LightsService| |onBootPhase| |int|
|com.android.server.media.MediaSessionService| |onBootPhase| |int|
|com.android.server.media.projection.MediaProjectionManagerService| |onBootPhase| |int|
|com.android.server.MmsServiceBroker| |onBootPhase| |int|
|com.android.server.PersistentDataBlockService| |onBootPhase| |int|
|com.android.server.pm.Installer| |onBootPhase| |int|
|com.android.server.pm.LauncherAppsService| |onBootPhase| |int|
|com.android.server.print.PrintManagerService| |onBootPhase| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onBootPhase| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onBootPhase| |int|
|com.android.server.SystemServiceManager| |startBootPhase| |int|
|com.android.server.twilight.TwilightService| |onBootPhase| |int|
|com.android.server.usage.UsageStatsService| |onBootPhase| |int|
|com.android.server.webkit.WebViewUpdateService| |onBootPhase| |int|
|com.android.server.DockObserver| |access$400| |com.android.server.DockObserver,int|
|com.android.server.DockObserver| |init| ||
|com.android.server.SystemServer| |startBootstrapServices| ||
|com.android.server.SystemServer| |startCoreServices| ||
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.String|
|com.android.internal.telephony.PhoneNotifier| |notifyDataConnectionFailed| |com.android.internal.telephony.Phone,java.lang.String,java.lang.String|
|com.android.internal.telephony.DefaultPhoneNotifier| |notifyDataConnection| |com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.PhoneNotifier| |notifyServiceState| |com.android.internal.telephony.Phone|
|com.android.internal.telephony.PhoneNotifier| |notifySignalStrength| |com.android.internal.telephony.Phone|
|com.android.server.usb.UsbService$Lifecycle| |onStart| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimAbsent| |int|
|com.android.server.am.ActivityManagerService| |finishBooting| ||
|com.android.server.SystemServer$2| |run| ||
|com.android.server.DockObserver$2| |onUEvent| |android.os.UEventObserver$UEvent|
|com.android.server.SystemServer| |run| ||
|com.android.internal.telephony.PhoneBase| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.PhoneNotifier| |notifyDataConnection| |com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.PhoneBase| |notifyServiceStateChangedP| |android.telephony.ServiceState|
|com.android.internal.telephony.PhoneBase| |notifySignalStrength| ||
|com.android.server.am.ActivityManagerService| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |ensureBootCompleted| ||
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.internal.telephony.cdma.CDMALTEPhone| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |trySetupData| |com.android.internal.telephony.dataconnection.ApnContext,java.util.ArrayList|
|com.android.internal.telephony.dataconnection.DcTracker| |notifyNoData| |com.android.internal.telephony.dataconnection.DcFailCause,com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.gsm.GSMPhone| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |notifyDataConnectionFailed| |java.lang.String,java.lang.String|
|com.android.internal.telephony.PhoneBase| |notifyDataConnection| |java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.PhoneBase| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.PhoneBase| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |notifyServiceStateChangedP| |android.telephony.ServiceState|
|com.android.internal.telephony.cdma.CDMAPhone| |notifyServiceStateChanged| |android.telephony.ServiceState|
|com.android.internal.telephony.cdma.CDMAPhone| |notifyServiceStateChangedP| |android.telephony.ServiceState|
|com.android.internal.telephony.gsm.GSMPhone| |notifyServiceStateChanged| |android.telephony.ServiceState|
|com.android.internal.telephony.gsm.GSMPhone| |notifyServiceStateChangedP| |android.telephony.ServiceState|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |notifyServiceStateChanged| |android.telephony.ServiceState|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |notifyServiceStateChangedP| |android.telephony.ServiceState|
|com.android.internal.telephony.imsphone.ImsPhone| |notifyServiceStateChangedP| |android.telephony.ServiceState|
|com.android.internal.telephony.sip.SipPhoneBase| |notifyServiceStateChanged| |android.telephony.ServiceState|
|com.android.internal.telephony.sip.SipPhoneBase| |notifyServiceStateChangedP| |android.telephony.ServiceState|
|com.android.internal.telephony.sip.SipPhone| |notifyServiceStateChangedP| |android.telephony.ServiceState|
|com.android.internal.telephony.cdma.CDMALTEPhone| |notifySignalStrength| ||
|com.android.internal.telephony.cdma.CDMAPhone| |notifySignalStrength| ||
|com.android.internal.telephony.gsm.GSMPhone| |notifySignalStrength| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |notifySignalStrength| ||
|com.android.internal.telephony.imsphone.ImsPhone| |notifySignalStrength| ||
|com.android.internal.telephony.ServiceStateTracker| |notifySignalStrength| ||
|com.android.internal.telephony.sip.SipPhoneBase| |notifySignalStrength| ||
|com.android.internal.telephony.sip.SipPhone| |notifySignalStrength| ||
|android.app.ActivityManagerNative| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |appNotResponding| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |systemReady| |java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |crashApplication| |com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo|
|com.android.internal.telephony.dataconnection.DcTracker| |trySetupData| |com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |setupDataOnConnectableApns| |java.lang.String,com.android.internal.telephony.dataconnection.DcTracker$RetryFailures|
|com.android.internal.telephony.cdma.CDMALTEPhone| |notifyDataConnection| |java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.cdma.CDMAPhone| |notifyDataConnection| |java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |notifyApnIdDisconnected| |java.lang.String,int|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |notifyApnIdUpToCurrent| |java.lang.String,int|
|com.android.internal.telephony.dataconnection.DcTracker| |notifyOffApnsOfAvailability| |java.lang.String|
|com.android.internal.telephony.gsm.GSMPhone| |notifyDataConnection| |java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |notifyDataConnection| |java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.imsphone.ImsPhone| |notifyDataConnection| |java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.sip.SipPhoneBase| |notifyDataConnection| |java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.sip.SipPhone| |notifyDataConnection| |java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState|
|com.android.internal.telephony.cdma.CDMALTEPhone| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.dataconnection.DcController$DccDefaultState| |onDataStateChanged| |java.util.ArrayList|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |setupData| |com.android.internal.telephony.dataconnection.ApnContext,int|
|com.android.internal.telephony.dataconnection.DcTracker| |cleanUpConnection| |boolean,com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |completeConnection| |com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onDataSetupCompleteError| |android.os.AsyncResult|
|com.android.internal.telephony.dataconnection.DcTracker| |onDisconnectDcRetrying| |int,android.os.AsyncResult|
|com.android.internal.telephony.dataconnection.DcTracker| |onDisconnectDone| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GSMPhone| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |notifyDataConnection| |java.lang.String,java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.gsm.GSMPhone| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |notifyDataConnection| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |notifyServiceStateChanged| |android.telephony.ServiceState|
|com.android.internal.telephony.imsphone.ImsPhone| |notifyServiceStateChanged| |android.telephony.ServiceState|
|com.android.internal.telephony.sip.SipPhone| |notifyServiceStateChanged| |android.telephony.ServiceState|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |notifySignalStrength| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |notifySignalStrength| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |notifySignalStrength| ||
|com.android.internal.telephony.ServiceStateTracker| |onSignalStrengthResult| |android.os.AsyncResult,boolean|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |bootAnimationComplete| ||
|com.android.server.am.ActiveServices| |serviceTimeout| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService$10| |run| ||
|com.android.server.am.BroadcastQueue$AppNotResponding| |run| ||
|com.android.server.am.ActivityManagerService$14| |run| ||
|com.android.server.am.ActivityManagerService| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrashInner| |java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo|
|com.android.internal.telephony.dataconnection.DcTracker| |onTrySetupData| |com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |applyNewState| |com.android.internal.telephony.dataconnection.ApnContext,boolean,boolean|
|com.android.internal.telephony.dataconnection.DcTracker$ApnChangeObserver| |onChange| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |setupDataOnConnectableApns| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |cleanUpAllConnections| |java.lang.String,android.os.Message|
|com.android.internal.telephony.dataconnection.DcTracker| |setInternalDataEnabled| |boolean,android.os.Message|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |notifyOffApnsOfAvailability| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onEnableApn| |int,int|
|com.android.internal.telephony.dataconnection.DcTracker| |notifyApnIdDisconnected| |java.lang.String,int|
|com.android.internal.telephony.dataconnection.DcTracker| |notifyApnIdUpToCurrent| |java.lang.String,int|
|com.android.internal.telephony.dataconnection.DcTracker| |onDataConnectionAttached| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onRadioAvailable| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onRadioOffOrNotAvailable| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onRecordsLoaded| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onRoamingOff| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onRoamingOn| ||
|com.android.internal.telephony.dataconnection.DcController$DccDefaultState| |processMessage| |android.os.Message|
|com.android.internal.telephony.dataconnection.DcTracker| |cleanUpAllConnections| |boolean,java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |cleanUpConnectionsOnUpdatedApns| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |onCleanUpConnection| |boolean,int,java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |completeConnection| |com.android.internal.telephony.dataconnection.ApnContext|
|com.android.internal.telephony.dataconnection.DcTracker| |onDataSetupComplete| |android.os.AsyncResult|
|com.android.internal.telephony.dataconnection.DcTracker| |gotoIdleAndNotifyDataConnection| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onDataConnectionDetached| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onVoiceCallEnded| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onVoiceCallStarted| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onDataSetupCompleteError| |android.os.AsyncResult|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onDisconnectDcRetrying| |int,android.os.AsyncResult|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onDisconnectDone| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |onSignalStrengthResult| |android.os.AsyncResult,boolean|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |onSignalStrengthResult| |android.os.AsyncResult,boolean|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.wm.WindowManagerService| |performEnableScreen| ||
|android.app.ActivityManagerNative| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener$NativeCrashReporter| |run| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onEnableApn| |int,int|
|com.android.internal.telephony.dataconnection.DcTracker| |onSetDependencyMet| |java.lang.String,boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |onTrySetupData| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onApnChanged| ||
|com.android.internal.telephony.dataconnection.DcTracker| |cleanUpAllConnections| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onSetInternalDataEnabled| |boolean,android.os.Message|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setInternalDataEnabled| |boolean,android.os.Message|
|com.android.internal.telephony.dataconnection.DcTracker| |setInternalDataEnabled| |boolean|
|com.android.internal.telephony.gsm.GSMPhone| |setInternalDataEnabled| |boolean,android.os.Message|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onSetUserDataEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onRadioAvailable| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onRadioOffOrNotAvailable| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onRoamingOff| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onRoamingOn| ||
|com.android.internal.telephony.dataconnection.DcTracker| |dispose| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onCleanUpAllConnections| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |restartRadio| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onCleanUpConnection| |boolean,int,java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onDataSetupComplete| |android.os.AsyncResult|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |gotoIdleAndNotifyDataConnection| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onVoiceCallEnded| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onVoiceCallStarted| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |onSignalStrengthResult| |android.os.AsyncResult,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenAfterBoot| ||
|com.android.server.wm.WindowManagerService| |performBootTimeout| ||
|com.android.server.wm.WindowManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeededLocked| ||
|com.android.server.wm.WindowManagerService| |checkBootAnimationCompleteLocked| ||
|android.app.IActivityManager| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |consumeNativeCrashData| |java.io.FileDescriptor|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onSetDependencyMet| |java.lang.String,boolean|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onTrySetupData| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |cleanUpAllConnections| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTracker| |onSetInternalDataEnabled| |boolean|
|com.android.internal.telephony.PhoneProxy| |setInternalDataEnabled| |boolean,android.os.Message|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |setInternalDataEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |onSetUserDataEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |dispose| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onCleanUpAllConnections| |java.lang.String|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |restartRadio| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onResetDone| |android.os.AsyncResult|
|com.android.server.am.ActivityManagerService| |enableScreenAfterBoot| ||
|com.android.server.am.ActivityManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedInner| |boolean|
|com.android.server.wm.WindowStateAnimator| |performShowLocked| ||
|com.android.server.wm.WindowStateAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$1100| |com.android.server.wm.WindowManagerService|
|com.android.internal.os.RuntimeInit| |wtf| |java.lang.String,java.lang.Throwable,boolean|
|android.app.IActivityManager| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |run| ||
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onSetInternalDataEnabled| |boolean|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |onSetPolicyDataEnabled| |boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |doRecovery| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.PhoneBase| |dispose| ||
|com.android.internal.telephony.ServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.PhoneProxy| |setInternalDataEnabled| |boolean|
|com.android.internal.telephony.ProxyController| |disableDataConnectivity| |int,android.os.Message|
|com.android.internal.telephony.cdma.CdmaCallTracker| |checkAndEnableDataCallAfterEmergencyCallDropped| ||
|com.android.internal.telephony.cdma.CdmaCallTracker| |disableDataCallInEmergencyCall| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |dispose| ||
|com.android.internal.telephony.gsm.GSMPhone| |dispose| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onResetDone| |android.os.AsyncResult|
|android.app.ActivityManagerNative| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub$Proxy| |enableScreenIfNeeded| ||
|android.view.IWindowManager$Stub| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedLoop| ||
|com.android.server.wm.AppWindowAnimator| |showAllWindowsLocked| ||
|com.android.server.wm.WindowAnimator| |updateWindowsLocked| |int|
|com.android.server.wm.WindowStateAnimator| |commitFinishDrawingLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean|
|com.android.server.wm.WindowState| |setAppOpVisibilityLw| |boolean|
|android.util.Log$1| |onTerribleFailure| |java.lang.String,android.util.Log$TerribleFailure,boolean|
|com.android.internal.os.RuntimeInit$UncaughtHandler| |uncaughtException| |java.lang.Thread,java.lang.Throwable|
|com.android.server.am.ActivityManagerService| |startObservingNativeCrashes| ||
|com.android.internal.telephony.dataconnection.DcTracker| |onSetPolicyDataEnabled| |boolean|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |powerOffRadioSafely| |com.android.internal.telephony.dataconnection.DcTrackerBase|
|com.android.internal.telephony.dataconnection.DcTracker| |doRecovery| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setPowerStateToDesired| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |dispose| ||
|com.android.internal.telephony.Phone| |dispose| ||
|com.android.internal.telephony.sip.SipPhoneBase| |dispose| ||
|com.android.internal.telephony.sip.SipPhone| |dispose| ||
|com.android.internal.telephony.ProxyController| |enableDataConnectivity| |int|
|com.android.internal.telephony.cdma.CdmaCallTracker| |handlePollCalls| |android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaCallTracker| |dial| |java.lang.String,int|
|com.android.internal.telephony.cdma.CdmaCallTracker| |dialThreeWay| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |dispose| ||
|android.app.IActivityManager| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowManager| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLocked| ||
|com.android.server.wm.WindowAnimator| |testTokenMayBeDrawnLocked| |int|
|com.android.server.wm.WindowManagerService| |handleAppTransitionReadyLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowAnimator| |animateLocked| ||
|android.view.WindowManagerPolicy$WindowState| |hideLw| |boolean|
|com.android.server.wm.DisplayContent| |switchUserStacks| |int|
|com.android.server.wm.WindowManagerService| |updateAppOpsState| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setPowerStateToDesired| ||
|com.android.internal.telephony.ServiceStateTracker| |setPowerStateToDesired| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.PhoneProxy| |deleteAndCreatePhone| |int|
|com.android.internal.telephony.CallTracker| |handlePollCalls| |android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaCallTracker| |dial| |java.lang.String|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| |android.content.pm.PackageParser$Package,int,int|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| ||
|com.android.server.wm.WindowManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.policy.impl.PhoneWindowManager| |finishScreenTurningOn| ||
|com.android.server.wm.WindowManagerService| |computeNewConfiguration| ||
|com.android.server.wm.WindowManagerService| |setTokenVisibilityLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$400| |com.android.server.wm.WindowManagerService|
|com.android.server.wm.WindowManagerService| |addTask| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |moveStackWindowsLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reconfigureDisplayLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.WindowManagerService| |removeWindowInnerLocked| |com.android.server.wm.Session,com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |resizeStack| |int,android.graphics.Rect|
|com.android.server.wm.WindowManagerService| |setCurrentUser| |int,int[]|
|com.android.server.wm.WindowManagerService| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |setUniverseTransformLocked| |com.android.server.wm.WindowState,float,float,float,float,float,float,float|
|com.android.server.wm.WindowManagerService| |unsetAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken,boolean,boolean|
|com.android.server.wm.WindowAnimator| |access$000| |com.android.server.wm.WindowAnimator|
|com.android.internal.policy.impl.BarController| |setBarShowingLw| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |finishPostLayoutPolicyLw| ||
|com.android.internal.policy.impl.PhoneWindowManager| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|com.android.server.wm.WindowManagerService$5| |onOpChanged| |int,java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setPowerStateToDesired| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.ServiceStateTracker| |requestShutdown| ||
|com.android.internal.telephony.ServiceStateTracker| |setRadioPower| |boolean|
|com.android.internal.telephony.ServiceStateTracker| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|android.content.pm.IPackageManager$Stub$Proxy| |performBootDexOpt| ||
|android.content.pm.IPackageManager$Stub| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishKeyguardDrawn| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishWindowsDrawn| ||
|com.android.server.am.ActivityManagerService| |updateConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |prepareAppTransition| |int,boolean|
|com.android.server.wm.WindowManagerService| |updateRotationUncheckedLocked| |boolean|
|com.android.server.wm.WindowManagerService| |makeWindowFreezingScreenIfNeededLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |requestTraversalLocked| ||
|com.android.server.am.ActivityStackSupervisor| |moveTaskToStackLocked| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |setForcedDisplayDensityLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.WindowManagerService| |setForcedDisplaySizeLocked| |com.android.server.wm.DisplayContent,int,int|
|com.android.server.wm.WindowManagerService| |setOverscanLocked| |com.android.server.wm.DisplayContent,int,int,int,int|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.TaskStack| |detachDisplay| ||
|android.view.IWindowManager$Stub$Proxy| |setNewConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |updateConfigurationLocked| |android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean|
|com.android.server.wm.WindowManagerService| |startAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken|
|com.android.server.wm.WindowAnimator$1| |run| ||
|com.android.internal.policy.impl.BarController| |checkHiddenLw| ||
|com.android.internal.policy.impl.BarController| |adjustSystemUiVisibilityLw| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |beginLayoutLw| |boolean,int,int,int|
|android.view.WindowManagerPolicy| |finishPostLayoutPolicyLw| ||
|android.view.WindowManagerPolicy| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |requestShutdown| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |requestShutdown| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |requestShutdown| ||
|com.android.internal.telephony.PhoneBase| |shutdownRadio| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setRadioPower| |boolean|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setRadioPower| |boolean|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setRadioPower| |boolean|
|com.android.internal.telephony.dataconnection.DcTracker| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.PhoneProxy| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.cdma.CDMAPhone| |dial| |java.lang.String,int|
|com.android.internal.telephony.PhoneBase| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|android.content.pm.IPackageManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$300| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$400| |com.android.internal.policy.impl.PhoneWindowManager|
|android.app.ActivityManagerNative| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub$Proxy| |prepareAppTransition| |int,boolean|
|android.view.IWindowManager$Stub| |prepareAppTransition| |int,boolean|
|com.android.server.am.ActivityManagerService| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStack| |moveTaskToBackLocked| |int|
|com.android.server.am.ActivityStack| |moveTaskToFrontLocked| |com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle,java.lang.String|
|com.android.server.am.ActivityStack| |updateTransitLocked| |int,android.os.Bundle|
|com.android.server.wm.WindowManagerService| |resumeRotationLocked| ||
|com.android.server.wm.WindowManagerService| |stopFreezingDisplayLocked| ||
|com.android.server.wm.WindowManagerService| |updateResizingWindows| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |createSurfaceLocked| ||
|com.android.server.wm.WindowManagerService$LocalService| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.wm.WindowManagerService| |handleDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayChangedLocked| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayRemovedLocked| |int|
|com.android.server.wm.WindowManagerService| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |requestTraversal| ||
|com.android.server.wm.WindowManagerService| |setAppFullscreen| |android.os.IBinder,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$9| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |clearClearableFlagsLw| ||
|com.android.server.wm.WindowManagerService| |detachStackLocked| |com.android.server.wm.DisplayContent,com.android.server.wm.TaskStack|
|android.view.IWindowManager| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |retrieveSettings| ||
|com.android.server.wm.WindowManagerService| |updateOrientationFromAppTokensLocked| |android.content.res.Configuration,android.os.IBinder|
|com.android.internal.policy.impl.PhoneWindowManager| |adjustSystemUiVisibilityLw| |int|
|android.view.WindowManagerPolicy| |beginLayoutLw| |boolean,int,int,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |shutdownRadio| ||
|com.android.internal.telephony.cdma.CDMAPhone| |shutdownRadio| ||
|com.android.internal.telephony.gsm.GSMPhone| |shutdownRadio| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |shutdownRadio| ||
|com.android.internal.telephony.imsphone.ImsPhone| |shutdownRadio| ||
|com.android.internal.telephony.Phone| |shutdownRadio| ||
|com.android.internal.telephony.sip.SipPhoneBase| |shutdownRadio| ||
|com.android.internal.telephony.sip.SipPhone| |shutdownRadio| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setRadioPower| |boolean|
|com.android.internal.telephony.gsm.GSMPhone| |setRadioPower| |boolean|
|com.android.internal.telephony.dataconnection.DcTrackerBase| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.Phone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |dial| |java.lang.String,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.imsphone.ImsPhone| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.sip.SipPhoneBase| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.internal.telephony.sip.SipPhone| |dialInternal| |java.lang.String,com.android.internal.telephony.UUSInfo,int|
|com.android.server.pm.PackageManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.WindowManagerPolicy| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |systemBooted| ||
|com.android.internal.policy.impl.PhoneWindowManager$1| |run| ||
|android.app.IActivityManager| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager| |prepareAppTransition| |int,boolean|
|android.app.ActivityManagerNative| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |findTaskToMoveToFrontLocked| |com.android.server.am.TaskRecord,int,android.os.Bundle,java.lang.String|
|com.android.server.wm.DragState| |unregister| ||
|com.android.server.wm.WindowManagerService| |access$500| |com.android.server.wm.WindowManagerService|
|android.view.WindowManagerInternal| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay| |<init>| |com.android.server.am.ActivityStackSupervisor,int,int,int|
|com.android.server.wm.WindowManagerService| |onDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |access$1000| |com.android.server.wm.WindowManagerService,int|
|com.android.server.wm.WindowManagerService| |access$900| |com.android.server.wm.WindowManagerService,int|
|android.view.IWindowManager$Stub$Proxy| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager$Stub| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService$LocalService| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemBarsLw| |android.view.WindowManagerPolicy$WindowState,int,int|
|com.android.server.wm.DisplayContent| |checkForDeferredActions| ||
|com.android.server.wm.WindowManagerService| |detachStack| |int|
|android.view.WindowManagerPolicy| |adjustSystemUiVisibilityLw| |int|
|com.android.server.wm.WindowManagerService| |performLayoutLockedInner| |com.android.server.wm.DisplayContent,boolean,boolean|
|com.android.internal.telephony.PhoneProxy| |shutdownRadio| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRadioPower| |boolean|
|com.android.internal.telephony.PhoneBase| |setImsRegistrationState| |boolean|
|com.android.server.power.Notifier$2| |run| ||
|android.view.WindowManagerPolicy| |systemBooted| ||
|com.android.internal.app.LocalePicker| |updateLocale| |java.util.Locale|
|com.android.internal.telephony.MccTable| |setSystemLocale| |android.content.Context,java.lang.String,java.lang.String|
|com.android.internal.telephony.MccTable| |updateMccMncConfiguration| |android.content.Context,java.lang.String,boolean|
|com.android.server.MountService| |copyLocaleFromMountService| ||
|com.android.server.UiModeManagerService| |sendConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |displayReady| ||
|com.android.server.wm.WindowManagerService| |sendNewConfiguration| ||
|android.app.IActivityManager| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |setLockTaskModeLocked| |com.android.server.am.TaskRecord,boolean,java.lang.String|
|com.android.server.wm.DragState| |endDragLw| ||
|com.android.server.wm.Session| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.WindowManagerService| |prepareDragSurface| |android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface|
|com.android.server.wm.WindowManagerService| |startFreezingScreen| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |setSurfaceLocked| |android.view.Surface,int,int,int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayAddedLocked| |int|
|com.android.server.wm.WindowManagerService| |onDisplayChanged| |int|
|com.android.server.wm.WindowManagerService| |onDisplayRemoved| |int|
|android.view.IWindowManager| |keyguardGoingAway| |boolean,boolean|
|android.view.WindowManagerInternal| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemUiVisibilityLw| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |detachLocked| ||
|com.android.server.wm.WindowManagerService| |statusBarVisibilityChanged| |int|
|com.android.server.wm.WindowManagerService| |updateFocusedWindowLocked| |int,boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.gsm.GSMPhone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.imsphone.ImsPhone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.sip.SipPhoneBase| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.sip.SipPhone| |setImsRegistrationState| |boolean|
|com.android.internal.telephony.PhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |setLocaleFromCsim| ||
|com.android.internal.telephony.uicc.SIMRecords| |setLocaleFromUsim| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setProperties| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.ServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.server.MountService| |access$2000| |com.android.server.MountService|
|com.android.server.UiModeManagerService| |sendConfigurationAndStartDreamOrDockAppLocked| |java.lang.String|
|com.android.server.wm.WindowManagerService$DragInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|android.view.IWindowSession$Stub$Proxy| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.Session| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager$Stub$Proxy| |startFreezingScreen| |int,int|
|android.view.IWindowManager$Stub| |startFreezingScreen| |int,int|
|android.view.WindowManagerPolicy| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |onDisplayAdded| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayChangedLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayRemovedLocked| |int|
|com.android.server.display.DisplayManagerService| |scheduleTraversalLocked| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1900| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |requestTransientBars| |android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |detachLocked| ||
|android.view.IWindowManager$Stub$Proxy| |statusBarVisibilityChanged| |int|
|android.view.IWindowManager$Stub| |statusBarVisibilityChanged| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.gsm.GSMPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.sip.SipPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.server.MountService$3| |run| ||
|com.android.server.UiModeManagerService| |updateAfterBroadcastLocked| |java.lang.String,int,int|
|com.android.server.UiModeManagerService| |updateLocked| |int,int|
|android.view.IWindowSession| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession$Stub$Proxy| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowSession$Stub| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager| |startFreezingScreen| |int,int|
|com.android.server.display.DisplayPowerController| |setScreenState| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayRemoved| |int|
|com.android.server.display.DisplayManagerService| |access$1600| |com.android.server.display.DisplayManagerService,boolean|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAddedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceChanged| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemovedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |requestGlobalDisplayStateInternal| |int|
|com.android.server.display.DisplayManagerService| |setDisplayInfoOverrideFromWindowManagerInternal| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |setDisplayPropertiesInternal| |int,boolean,float,boolean|
|com.android.server.display.DisplayManagerService| |windowManagerAndInputReady| ||
|com.android.internal.policy.impl.PhoneWindowManager$17| |onReceive| |android.content.Context,android.content.Intent|
|android.view.WindowManagerPolicy| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1700| |com.android.internal.policy.impl.PhoneWindowManager,android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTaskListEmptyLocked| ||
|android.view.IWindowManager| |statusBarVisibilityChanged| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.uicc.IccRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.RuimRecords| |onRecordLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onRecordLoaded| ||
|com.android.server.MountService| |onDaemonConnected| ||
|com.android.server.UiModeManagerService| |access$000| |com.android.server.UiModeManagerService,java.lang.String,int,int|
|com.android.server.UiModeManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |updateDockState| |int|
|com.android.server.UiModeManagerService| |updateTwilight| ||
|android.view.View| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.wm.Session| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|com.android.server.display.DisplayPowerController| |animateScreenStateChange| |int,boolean|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |createVirtualDisplayInternal| |android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAdded| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$1400| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemoved| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |releaseVirtualDisplayInternal| |android.os.IBinder|
|com.android.server.display.DisplayManagerService| |access$3700| |com.android.server.display.DisplayManagerService,int|
|com.android.server.display.DisplayManagerService| |access$4100| |com.android.server.display.DisplayManagerService,int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |access$4300| |com.android.server.display.DisplayManagerService,int,boolean,float,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$18| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromRight| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromTop| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTaskListEmptyLocked| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.uicc.IccRecords| |onRecordLoaded| ||
|com.android.server.INativeDaemonConnectorCallbacks| |onDaemonConnected| ||
|com.android.server.UiModeManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |access$100| |com.android.server.UiModeManagerService,int|
|com.android.server.UiModeManagerService$4| |onTwilightStateChanged| ||
|android.app.ActivityView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.FragmentBreadCrumbs| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.MediaRouteButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.NativeActivity$NativeContentView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.SearchDialog$SearchBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.appwidget.AppWidgetHostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.filterfw.core.FilterSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.gesture.GestureOverlayView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.KeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLineBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.TtmlRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView$3| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$CueLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$RegionLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$SpanLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.opengl.GLSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.preference.PreferenceFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSTextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.GhostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.LayoutInflater$BlinkLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.SurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.TextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewOverlay$OverlayViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewStub| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.webkit.WebView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsoluteLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSpinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuPresenter$OverflowMenuButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActivityChooserView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AnalogClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AppSecurityPermissions$PermissionItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Button| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarViewLegacyDelegate$WeekView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckedTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Chronometer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CompoundButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DatePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DateTimeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DayPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DialerFilter| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DigitalClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$HandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$InsertionHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionEndHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionStartHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.EditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ExpandableListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.FrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Gallery| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.HorizontalScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.LinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListPopupWindow$DropDownListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MediaController| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MultiAutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker$CustomEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.PopupWindow$PopupViewContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.QuickContactBadge| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadialTimePickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RatingBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RelativeLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView$SearchAutoComplete| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SimpleMonthView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SlidingDrawer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Space| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Spinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView$StackFrame| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Switch| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabHost| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableRow| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextViewWithCircularIndicator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TimePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ToggleButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Toolbar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TwoLineListItem| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.VideoView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.YearPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButtonsController$Container| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomControls| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.AlertController$RecycleListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.PlatLogoActivity$1| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.RecentApplicationsBackground| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ActionMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ExpandedMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ListMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AbsActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccessibleDateAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccountItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarOverlayLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView$HomeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.DialogTitle| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.FaceUnlockView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LockPatternView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PasswordEntryKeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PointerLocationView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PreferenceImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ResolverDrawerLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.RotarySelector| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView$TabView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SizeAdaptiveLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SlidingTab| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SubtitleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SwipeDismissLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.TextProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WaveView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WeightedLinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.display.DisplayPowerController| |updatePowerState| ||
|com.android.server.display.DisplayAdapter$Listener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |access$3200| |com.android.server.display.DisplayManagerService,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |access$1300| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayManagerService| |access$1500| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$3500| |com.android.server.display.DisplayManagerService,android.os.IBinder|
|com.android.server.display.DisplayManagerService$LocalService$1| |requestDisplayState| |int|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromRight| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromTop| ||
|com.android.server.am.ActivityStack| |finishAllActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |removeTask| |com.android.server.am.TaskRecord,java.lang.String|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |release| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.PhoneFactory| |getGsmPhone| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.server.NativeDaemonConnector| |listenToSocket| ||
|com.android.server.UiModeManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.twilight.TwilightListener| |onTwilightStateChanged| ||
|android.widget.Editor| |performLongClick| |boolean|
|com.android.server.display.DisplayPowerController| |access$400| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |debounceProximitySensor| ||
|com.android.server.display.DisplayAdapter$2| |run| ||
|com.android.server.display.DisplayAdapter$Listener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayBlanker| |requestDisplayState| |int|
|android.hardware.display.DisplayManagerInternal| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|android.hardware.display.DisplayManagerInternal| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener| |onPointerEvent| |android.view.MotionEvent|
|com.android.server.am.ActivityRecord| |setTask| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord|
|android.app.IActivityContainer$Stub$Proxy| |release| ||
|android.app.IActivityContainer$Stub| |release| ||
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |release| ||
|com.android.internal.telephony.PhoneFactory| |getCdmaPhone| |int|
|com.android.internal.telephony.imsphone.ImsPhoneFactory| |makePhone| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.sip.SipPhoneFactory| |makePhone| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.server.NativeDaemonConnector| |run| ||
|com.android.server.twilight.TwilightService$TwilightListenerRecord| |run| ||
|android.widget.TextView| |performLongClick| ||
|com.android.server.display.DisplayPowerController$ScreenOnUnblocker| |onScreenOn| ||
|com.android.server.display.DisplayPowerController| |sendUpdatePowerStateLocked| ||
|com.android.server.display.DisplayPowerController| |access$500| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |handleProximitySensorEvent| |long,boolean|
|com.android.server.display.DisplayAdapter$1| |run| ||
|com.android.server.display.DisplayPowerState$PhotonicModulator| |requestDisplayState| |int|
|com.android.server.wm.WindowManagerService| |computeScreenConfigurationLocked| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |newDisplayContentLocked| |android.view.Display|
|com.android.server.am.ActivityStack| |resetTargetTaskIfNeededLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.am.ActivityStack| |resetAffinityTaskIfNeededLocked| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int|
|android.app.IActivityContainer$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityContainer| |release| ||
|com.android.internal.telephony.PhoneFactory| |makeImsPhone| |com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.PhoneFactory| |makeSipPhone| |java.lang.String|
|android.inputmethodservice.ExtractButton| |performLongClick| ||
|android.inputmethodservice.ExtractEditText| |performLongClick| ||
|android.media.ClosedCaptionWidget$CCLineBox| |performLongClick| ||
|android.widget.AutoCompleteTextView| |performLongClick| ||
|android.widget.Button| |performLongClick| ||
|android.widget.CheckBox| |performLongClick| ||
|android.widget.CheckedTextView| |performLongClick| ||
|android.widget.Chronometer| |performLongClick| ||
|android.widget.CompoundButton| |performLongClick| ||
|android.widget.DateTimeView| |performLongClick| ||
|android.widget.DigitalClock| |performLongClick| ||
|android.widget.EditText| |performLongClick| ||
|android.widget.MultiAutoCompleteTextView| |performLongClick| ||
|android.widget.NumberPicker$CustomEditText| |performLongClick| ||
|android.widget.RadioButton| |performLongClick| ||
|android.widget.SearchView$SearchAutoComplete| |performLongClick| ||
|android.widget.Switch| |performLongClick| ||
|android.widget.TextClock| |performLongClick| ||
|android.widget.TextViewWithCircularIndicator| |performLongClick| ||
|android.widget.ToggleButton| |performLongClick| ||
|com.android.internal.view.menu.ActionMenuItemView| |performLongClick| ||
|com.android.internal.view.menu.IconMenuItemView| |performLongClick| ||
|com.android.internal.widget.DialogTitle| |performLongClick| ||
|com.android.server.display.DisplayPowerController| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |sendUpdatePowerState| ||
|com.android.server.display.DisplayPowerController| |access$1000| |com.android.server.display.DisplayPowerController,long,boolean|
|com.android.server.display.DisplayPowerState$PhotonicModulator| |run| ||
|com.android.server.wm.WindowManagerService| |computeNewConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |getDisplayContentLocked| |int|
|com.android.server.am.ActivityStack| |resetTaskIfNeededLocked| |com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityView$ActivityContainerWrapper| |release| ||
|com.android.internal.telephony.PhoneBase| |updateImsPhone| ||
|com.android.server.display.DisplayManagerService$LocalService| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |access$000| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |updateBrightness| ||
|com.android.server.display.DisplayPowerController$8| |onSensorChanged| |android.hardware.SensorEvent|
|com.android.server.display.DisplayPowerState| |<init>| |com.android.server.display.DisplayBlanker,com.android.server.lights.Light,com.android.server.display.ColorFade|
|com.android.server.wm.WindowAnimator| |getPendingLayoutChanges| |int|
|com.android.server.wm.WindowAnimator| |setPendingLayoutChanges| |int,int|
|com.android.server.wm.WindowAnimator| |updateAppWindowsLocked| |int|
|com.android.server.wm.WindowAnimator| |updateWallpaperLocked| |int|
|com.android.server.wm.WindowManagerService| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayContentLocked| ||
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |int|
|com.android.server.wm.WindowManagerService| |addWindow| |com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.WindowManagerService| |getBaseDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |getInitialDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |createDisplayContentLocked| |android.view.Display|
|com.android.server.wm.WindowManagerService| |displayReady| |int|
|com.android.server.wm.WindowManagerService| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.wm.WindowManagerService| |getInitialDisplaySize| |int,android.graphics.Point|
|android.app.ActivityView$ActivityContainerWrapper| |finalize| ||
|android.app.ActivityView| |release| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateImsPhone| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateImsPhone| ||
|com.android.internal.telephony.gsm.GSMPhone| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhone| |updateImsPhone| ||
|com.android.internal.telephony.PhoneBase$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.sip.SipPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.sip.SipPhone| |updateImsPhone| ||
|android.hardware.display.DisplayManagerInternal| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController$1| |onAnimationEnd| |android.animation.Animator|
|com.android.server.display.DisplayPowerController$2| |onAnimationEnd| ||
|com.android.server.display.DisplayPowerController$3| |run| ||
|com.android.server.display.AutomaticBrightnessController$Callbacks| |updateBrightness| ||
|com.android.server.display.DisplayPowerController| |initialize| ||
|com.android.server.wm.WindowAnimator| |setAppLayoutChanges| |com.android.server.wm.AppWindowAnimator,int,java.lang.String|
|com.android.server.wm.WindowAnimator| |hideWallpapersLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |prepareSurfaceLocked| |boolean|
|com.android.server.wm.WindowStateAnimator| |setSurfaceBoundariesLocked| |boolean|
|android.view.IWindowManager$Stub$Proxy| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|android.view.IWindowManager$Stub| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |screenshotActivities| |com.android.server.am.ActivityRecord|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |populateWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |populateVisibleWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayInfoLocked| ||
|com.android.server.wm.WindowManagerService| |getDefaultWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |adjustWallpaperWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |getOrientationFromAppTokensLocked| ||
|com.android.server.wm.WindowManagerService| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |handleAnimatingStoppedAndTransitionLocked| ||
|com.android.server.wm.WindowManagerService| |createWatermarkInTransaction| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean|
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |saveLastInputMethodWindowForTransition| ||
|com.android.server.wm.WindowManagerService| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.wm.WindowManagerService| |showCircularMask| |boolean|
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlay| ||
|com.android.server.wm.WindowManagerService| |showStrictModeViolation| |int,int|
|com.android.server.wm.WindowManagerService| |startFreezingDisplayLocked| |boolean,int,int|
|com.android.server.wm.WindowManagerService| |updateWallpaperVisibilityLocked| ||
|com.android.server.wm.WindowAnimator| |dumpLocked| |java.io.PrintWriter,java.lang.String,boolean|
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |android.view.Display|
|com.android.server.wm.Session| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.am.ProcessList| |applyDisplaySize| |com.android.server.wm.WindowManagerService|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.server.power.PowerManagerService| |updateDisplayPowerStateLocked| |int|
|com.android.server.display.RampAnimator$Listener| |onAnimationEnd| ||
|com.android.server.display.AutomaticBrightnessController| |updateAutoBrightness| |boolean|
|com.android.server.wm.AppWindowAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowStateAnimator| |destroyDeferredSurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |destroySurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |finishExit| ||
|android.view.IWindowManager| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |startPausingLocked| |boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |handleLaunchTaskBehindCompleteLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.TaskRecord| |getTaskThumbnailLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |recomputeBoundsLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |computeChangedWindows| ||
|com.android.server.wm.WindowManagerService| |applyAnimationLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |checkWaitingForWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.server.wm.WindowManagerService| |moveInputMethodWindowsIfNeededLocked| |boolean|
|com.android.server.wm.WindowManagerService| |findDesiredInputMethodWindowIndexLocked| |boolean|
|com.android.server.wm.WindowManagerService| |getOrientationFromWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |addInputMethodWindowToListLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |moveInputMethodDialogsLocked| |int|
|com.android.server.wm.WindowManagerService| |updateStatusBarVisibilityLocked| |int|
|android.view.IWindowManager$Stub$Proxy| |getPreferredOptionsPanelGravity| ||
|android.view.IWindowManager$Stub| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1|
|com.android.server.InputMethodManagerService| |unbindCurrentMethodLocked| |boolean,boolean|
|android.view.IWindowManager$Stub$Proxy| |setAppVisibility| |android.os.IBinder,boolean|
|android.view.IWindowManager$Stub| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityStackSupervisor| |processStoppingActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |setVisibile| |com.android.server.am.ActivityRecord,boolean|
|com.android.server.wm.WindowManagerService| |updateCircularDisplayMaskIfNeeded| ||
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlayIfNeeded| ||
|com.android.server.wm.WindowManagerService| |access$800| |com.android.server.wm.WindowManagerService,int,int|
|com.android.server.wm.WindowManagerService| |dumpAnimatorLocked| |java.io.PrintWriter,java.lang.String[],boolean|
|com.android.server.wm.DragState| |getTouchedWinAtPointLw| |float,float|
|com.android.server.wm.DragState| |broadcastDragStartedLw| |float,float|
|android.view.IWindowSession$Stub$Proxy| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|com.android.server.wm.Session| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager| |getBaseDisplayDensity| |int|
|android.view.IWindowManager| |getInitialDisplayDensity| |int|
|android.view.IWindowManager| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.server.power.PowerManagerService| |updatePowerStateLocked| ||
|com.android.server.display.RampAnimator$1| |run| ||
|com.android.server.display.RampAnimator| |animateTo| |int,int|
|com.android.server.display.AutomaticBrightnessController| |access$300| |com.android.server.display.AutomaticBrightnessController,boolean|
|com.android.server.display.AutomaticBrightnessController| |configure| |boolean,float,boolean|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| |long|
|com.android.server.wm.WindowState| |removeLocked| ||
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowStateAnimator| |cancelExitAnimationForNextAnimationLocked| ||
|com.android.server.am.ActivityStack| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |pauseBackStacks| |boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |pauseChildStacks| |com.android.server.am.ActivityRecord,boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |drawWindowIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |<init>| |com.android.server.wm.AccessibilityController$DisplayMagnifier|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |onRotationChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |performComputeChangedWindowsNotLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |scheduleComputeChangedWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |updateTokenInPlaceLocked| |com.android.server.wm.AppWindowToken,int|
|android.view.IWindowManager$Stub$Proxy| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager$Stub| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService$2| |run| ||
|com.android.server.InputMethodManagerService| |startInputInnerLocked| ||
|com.android.server.InputMethodManagerService| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.InputMethodManagerService| |resetAllInternalStateLocked| |boolean,boolean|
|com.android.server.InputMethodManagerService| |updateInputMethodsFromSettingsLocked| |boolean|
|android.view.IWindowManager| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityRecord| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |activityIdleInternalLocked| |android.os.IBinder,boolean,android.content.res.Configuration|
|com.android.server.am.ActivityStack| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.wm.WindowManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.wm.WindowManagerService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wm.DragState| |notifyDropLw| |float,float|
|com.android.server.wm.DragState| |notifyMoveLw| |float,float|
|android.view.IWindowSession| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub$Proxy| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |runDisplayDensity| ||
|com.android.commands.wm.Wm| |runDisplaySize| ||
|com.android.internal.view.RotationPolicy| |getRotationLockOrientation| |android.content.Context|
|com.android.server.power.PowerManagerService| |access$1100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |acquireWakeLockInternal| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |boostScreenBrightnessInternal| |long,int|
|com.android.server.power.PowerManagerService| |goToSleepInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |handleBatteryStateChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleSandman| ||
|com.android.server.power.PowerManagerService| |handleScreenBrightnessBoostTimeout| ||
|com.android.server.power.PowerManagerService| |handleSettingsChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleUserActivityTimeout| ||
|com.android.server.power.PowerManagerService| |napInternal| |long,int|
|com.android.server.power.PowerManagerService| |onBootPhase| |int|
|com.android.server.power.PowerManagerService| |removeWakeLockLocked| |com.android.server.power.PowerManagerService$WakeLock,int|
|com.android.server.power.PowerManagerService| |setDozeOverrideFromDreamManagerInternal| |int,int|
|com.android.server.power.PowerManagerService| |setMaximumScreenOffTimeoutFromDeviceAdminInternal| |int|
|com.android.server.power.PowerManagerService| |setScreenBrightnessOverrideFromWindowManagerInternal| |int|
|com.android.server.power.PowerManagerService| |setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal| |float|
|com.android.server.power.PowerManagerService| |setTemporaryScreenBrightnessSettingOverrideInternal| |int|
|com.android.server.power.PowerManagerService| |setUserActivityTimeoutOverrideFromWindowManagerInternal| |long|
|com.android.server.power.PowerManagerService| |systemReady| |com.android.internal.app.IAppOpsService|
|com.android.server.power.PowerManagerService| |userActivityInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |wakeUpInternal| |long,int|
|com.android.server.display.DisplayPowerController| |animateScreenBrightness| |int,int|
|com.android.server.display.AutomaticBrightnessController$2| |onTwilightStateChanged| ||
|com.android.server.display.AutomaticBrightnessController| |handleLightSensorEvent| |long,float|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| ||
|com.android.server.am.ActivityStackSupervisor| |shutdownLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |checkReadyForSleepLocked| ||
|android.app.ActivityManagerNative| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController| |onWindowFocusChangedNotLocked| ||
|com.android.server.wm.AccessibilityController| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onSomeWindowResizedOrMovedLocked| ||
|com.android.server.wm.AccessibilityController| |onWindowTransitionLocked| |com.android.server.wm.WindowState,int|
|android.view.IWindowManager| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.internal.policy.impl.PhoneWindow| |getOptionsPanelGravity| ||
|com.android.server.InputMethodManagerService| |startInputUncheckedLocked| |com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.server.InputMethodManagerService| |systemRunning| |com.android.server.statusbar.StatusBarManagerService|
|com.android.server.InputMethodManagerService| |resetStateIfCurrentLocaleChangedLocked| ||
|com.android.server.InputMethodManagerService| |switchUserLocked| |int|
|com.android.server.InputMethodManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.InputMethodManagerService| |buildInputMethodListLocked| |java.util.ArrayList,java.util.HashMap,boolean|
|com.android.server.InputMethodManagerService| |updateFromSettingsLocked| |boolean|
|com.android.server.am.ActivityRecord$Token| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler| |activityIdleInternal| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.am.ActivityStack| |goToSleep| ||
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |android.content.pm.ApplicationInfo,int|
|android.service.wallpaper.WallpaperService$Engine| |updateSurface| |boolean,boolean,boolean|
|android.view.ViewRootImpl| |setView| |android.view.View,android.view.WindowManager$LayoutParams,android.view.View|
|android.view.IWindowSession| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.SurfaceView| |updateWindow| |boolean,boolean|
|android.view.IWindowSession| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |onRun| ||
|com.android.server.power.PowerManagerService$2| |onProximityNegative| ||
|com.android.server.power.PowerManagerService$2| |onProximityPositive| ||
|com.android.server.power.PowerManagerService$2| |onStateChanged| ||
|com.android.server.power.PowerManagerService$DockReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |access$3200| |com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |access$5000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |access$3900| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |access$1900| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2400| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2500| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2300| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$4000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |handleWakeLockDeath| |com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |releaseWakeLockInternal| |android.os.IBinder,int|
|com.android.server.power.PowerManagerService| |access$5300| |com.android.server.power.PowerManagerService,int,int|
|com.android.server.power.PowerManagerService| |access$5500| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5200| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$4800| |com.android.server.power.PowerManagerService,float|
|com.android.server.power.PowerManagerService| |access$4700| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5400| |com.android.server.power.PowerManagerService,long|
|com.android.server.power.PowerManagerService| |access$3700| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |userActivityFromNative| |long,int,int|
|com.android.server.power.PowerManagerService| |access$3800| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.display.AutomaticBrightnessController| |access$200| |com.android.server.display.AutomaticBrightnessController,long,float|
|com.android.server.display.AutomaticBrightnessController| |access$000| |com.android.server.display.AutomaticBrightnessController|
|com.android.server.am.ActivityManagerService| |shutdown| |int|
|com.android.server.am.ActivityStackSupervisor| |activitySleptLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |goingToSleepLocked| ||
|com.android.server.am.ActivityStack| |completePauseLocked| |boolean|
|com.android.server.am.ActivityStackSupervisor| |scheduleSleepTimeout| ||
|android.app.IActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationCallbacksLocked| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.WindowManagerService| |assignLayersLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.wm.WindowManagerService$LocalService| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.WindowState| |reportResized| ||
|com.android.server.wm.WindowStateAnimator| |applyEnterAnimationLocked| ||
|com.android.server.InputMethodManagerService| |startInputLocked| |com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.internal.policy.impl.PhoneWindow| |onOptionsPanelRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.KeyEvent|
|com.android.server.InputMethodManagerService| |access$1100| |com.android.server.InputMethodManagerService|
|com.android.server.InputMethodManagerService| |access$1000| |com.android.server.InputMethodManagerService,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.InputMethodManagerService| |<init>| |android.content.Context,com.android.server.wm.WindowManagerService|
|android.view.IApplicationToken$Stub$Proxy| |windowsVisible| ||
|android.view.IApplicationToken$Stub| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleTimeoutLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleLocked| ||
|com.android.server.am.ActivityManagerService| |handleAppDiedLocked| |com.android.server.am.ProcessRecord,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |attachApplicationLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.CompatModePackages| |setFrontActivityScreenCompatModeLocked| |int|
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |java.lang.String,int|
|android.service.wallpaper.WallpaperService$Engine| |attach| |android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper|
|android.service.wallpaper.WallpaperService$Engine| |doDisplayPaddingChanged| |android.graphics.Rect|
|android.service.wallpaper.WallpaperService$Engine| |reportVisibility| ||
|android.service.wallpaper.WallpaperService$Engine| |setOffsetNotificationsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |setTouchEventsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper| |executeMessage| |android.os.Message|
|android.view.WindowManagerGlobal| |addView| |android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window|
|com.android.internal.os.BaseCommand| |onRun| ||
|com.android.server.power.PowerManagerService$BatteryReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |scheduleSandmanLocked| ||
|com.android.server.power.PowerManagerService| |updateScreenBrightnessBoostLocked| |int|
|com.android.server.power.PowerManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.power.PowerManagerService$UserSwitchedReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |updateUserActivitySummaryLocked| |long,int|
|com.android.server.power.PowerManagerService| |access$2700| |com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |access$3300| |com.android.server.power.PowerManagerService,android.os.IBinder,int|
|com.android.server.power.PowerManagerService$LocalService| |setDozeOverrideFromDreamManager| |int,int|
|com.android.server.power.PowerManagerService$LocalService| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|com.android.server.power.PowerManagerService$LocalService| |setScreenBrightnessOverrideFromWindowManager| |int|
|com.android.server.power.PowerManagerService$LocalService| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|com.android.server.display.AutomaticBrightnessController$1| |onSensorChanged| |android.hardware.SensorEvent|
|android.app.ActivityManagerNative| |shutdown| |int|
|com.android.server.am.ActivityManagerService$12| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |updateSleepIfNeededLocked| ||
|com.android.server.am.ActivityStack| |activityPausedLocked| |android.os.IBinder,boolean|
|android.app.ActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|android.view.WindowManagerInternal| |setMagnificationSpec| |android.view.MagnificationSpec|
|android.view.WindowManagerInternal| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher| |dispatchRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUpPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanelsAfterRestore| ||
|com.android.internal.policy.impl.PhoneWindow| |reopenMenu| |boolean|
|com.android.internal.policy.impl.PhoneWindow| |togglePanel| |int,android.view.KeyEvent|
|com.android.server.InputMethodManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$3| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.content.PackageMonitor| |onSomePackagesChanged| ||
|android.view.IApplicationToken$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IApplicationToken| |windowsVisible| ||
|com.android.server.am.ActivityStack| |backgroundResourcesReleased| ||
|com.android.server.am.ActivityStack| |clearLaunchTime| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStack| |completeResumeLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |attachApplicationLocked| |android.app.IApplicationThread,int|
|com.android.server.am.ActivityManagerService| |removeProcessLocked| |com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord,int,android.app.IApplicationThread|
|com.android.server.am.ActivityManagerService| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.am.CompatModeDialog$1| |onCheckedChanged| |android.widget.CompoundButton,boolean|
|android.service.wallpaper.WallpaperService$Engine$3| |onDisplayChanged| |int|
|android.service.wallpaper.WallpaperService$Engine| |doVisibilityChanged| |boolean|
|android.view.WindowManagerImpl| |addView| |android.view.View,android.view.ViewGroup$LayoutParams|
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|com.android.server.power.PowerManagerService| |access$2000| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |updateDreamLocked| |int,boolean|
|com.android.server.power.PowerManagerService$WakeLock| |binderDied| ||
|android.os.PowerManagerInternal| |setDozeOverrideFromDreamManager| |int,int|
|android.os.PowerManagerInternal| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|android.os.PowerManagerInternal| |setScreenBrightnessOverrideFromWindowManager| |int|
|android.os.PowerManagerInternal| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|android.app.IActivityManager| |shutdown| |int|
|com.android.server.am.ActivityManagerService| |finishRunningVoiceLocked| ||
|com.android.server.am.ActivityManagerService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityManagerService| |startRunningVoiceLocked| ||
|com.android.server.am.ActivityStack| |awakeFromSleepingLocked| ||
|android.view.WindowManagerInternal| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.accessibility.AccessibilityManagerService| |updateWindowsForAccessibilityCallbackLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher$1| |run| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUp| |int,int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |access$2200| |com.android.internal.policy.impl.PhoneWindow|
|com.android.internal.policy.impl.PhoneWindow| |onConfigurationChanged| |android.content.res.Configuration|
|com.android.internal.policy.impl.PhoneWindow| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.app.IUserSwitchObserver$Stub$Proxy| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.content.PackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.LocationManagerService$4| |onSomePackagesChanged| ||
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onSomePackagesChanged| ||
|com.android.server.ServiceWatcher$2| |onSomePackagesChanged| ||
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.am.ActivityRecord$Token| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStack| |releaseBackgroundResources| ||
|com.android.server.am.ActivityManagerService| |access$400| |com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |broadcastIntentLocked| |com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |finishInstrumentationLocked| |com.android.server.am.ProcessRecord,int,android.os.Bundle|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |forceStopUserLocked| |int,java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppCrashLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killPackageProcessesLocked| |java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActivityManagerService$AppDeathRecipient| |binderDied| ||
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord|
|android.app.ActivityManagerNative| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|com.android.server.power.PowerManagerService$DreamReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.dreams.DreamManagerService| |startDozingInternal| |android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |stopDozingInternal| |android.os.IBinder|
|com.android.server.power.ShutdownThread| |run| ||
|com.android.server.am.ActivityManagerService$LocalService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |comeOutOfSleepIfNeededLocked| ||
|com.android.server.accessibility.ScreenMagnifier| |<init>| |android.content.Context,int,com.android.server.accessibility.AccessibilityManagerService|
|com.android.server.accessibility.ScreenMagnifier| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |offsetMagnifiedRegionCenter| |float,float|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |reset| |boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScaleAndMagnifiedRegionCenter| |float,float,float,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |onUserStateChangedLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |dispatchKeyEvent| |android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |onAttachedToWindow| ||
|com.android.internal.view.menu.MenuBuilder$Callback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.app.ResolverActivity$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.ServiceWatcher$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.trust.TrustManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.tv.TvInputManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService$7| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |deliverPreBootCompleted| |java.lang.Runnable,java.util.ArrayList,int|
|com.android.server.am.ActivityManagerService| |access$200| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |closeSystemDialogsLocked| |java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserBoot| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserStop| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |makeAppCrashingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killAppAtUsersRequest| |com.android.server.am.ProcessRecord,android.app.Dialog|
|com.android.server.am.ActivityManagerService| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |bringUpServiceLocked| |com.android.server.am.ServiceRecord,int,boolean,boolean|
|com.android.server.am.ActivityManagerService| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |processNextBroadcast| |boolean|
|com.android.server.am.ActivityManagerService$LocalService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |realStartServiceLocked| |com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean|
|android.app.IActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|com.android.server.dreams.DreamManagerService| |access$1800| |com.android.server.dreams.DreamManagerService,android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |access$1900| |com.android.server.dreams.DreamManagerService,android.os.IBinder|
|com.android.server.power.ShutdownThread| |beginShutdownSequence| |android.content.Context|
|com.android.server.accessibility.AccessibilityInputFilter| |enableFeatures| ||
|com.android.server.accessibility.AccessibilityInputFilter| |disableFeatures| ||
|com.android.server.accessibility.EventStreamTransformation| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScroll| |android.view.MotionEvent,android.view.MotionEvent,float,float|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRectangleOnScreenRequested| |int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |handleOnScreenStateChange| |java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |resetMagnificationIfNeeded| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTapAndHold| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnifiedRegionCenter| |float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScale| |float,float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier| |handleOnMagnifiedBoundsChanged| |android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService| |access$500| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |ensureWindowsAvailableTimed| ||
|com.android.server.accessibility.AccessibilityManagerService| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |switchUser| |int|
|com.android.server.accessibility.AccessibilityManagerService| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuView$MenuBuilderCallback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|com.android.internal.view.menu.MenuBuilder| |changeMenuMode| ||
|android.app.ActivityManagerNative| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService$29| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |finishUserSwitch| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService$28| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceInnerLocked| |com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |performServiceRestartLocked| |com.android.server.am.ServiceRecord|
|android.app.ActivityManagerNative| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |broadcastTimeoutLocked| |boolean|
|com.android.server.am.BroadcastQueue| |scheduleBroadcastsLocked| ||
|android.app.ActivityManagerInternal| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |attachApplicationLocked| |com.android.server.am.ProcessRecord,java.lang.String|
|android.app.ActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |runScreenCompat| ||
|com.android.server.power.ShutdownThread| |access$000| |android.content.Context|
|com.android.server.power.ShutdownThread| |shutdownInner| |android.content.Context,boolean|
|com.android.server.accessibility.AccessibilityInputFilter| |onInstalled| ||
|com.android.server.accessibility.AccessibilityInputFilter| |setEnabledFeatures| |int|
|com.android.server.accessibility.AccessibilityInputFilter| |onUninstalled| ||
|com.android.server.accessibility.AccessibilityManagerService| |updateInputFilter| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |access$100| |com.android.server.accessibility.ScreenMagnifier,int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |access$2900| |com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver,java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |access$600| |com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRotationChanged| |int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnUserContextChanged| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1700| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScale| |android.view.ScaleGestureDetector|
|com.android.server.accessibility.ScreenMagnifier| |access$000| |com.android.server.accessibility.ScreenMagnifier,android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$1| |onSomePackagesChanged| ||
|com.android.server.accessibility.AccessibilityManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$4| |onClick| |android.content.DialogInterface,int|
|com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.accessibility.AccessibilityManagerService$Service| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accessibility.AccessibilityManagerService| |access$3300| |com.android.server.accessibility.AccessibilityManagerService|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager$Stub| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |access$800| |com.android.server.accessibility.AccessibilityManagerService,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.view.accessibility.IAccessibilityManager$Stub| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuPresenter$OpenOverflowRunnable| |run| ||
|com.android.internal.view.menu.ContextMenuBuilder| |changeMenuMode| ||
|com.android.internal.view.menu.IconMenuView$1| |onClick| |android.view.View|
|com.android.internal.view.menu.SubMenuBuilder| |changeMenuMode| ||
|android.app.IActivityManager| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub$Proxy| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.content.IIntentReceiver$Stub| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |keyDispatchingTimedOut| |java.lang.String|
|android.app.IActivityManager| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceLocked| |android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int|
|com.android.server.am.ActiveServices$ServiceMap| |rescheduleDelayedStarts| ||
|com.android.server.am.ActiveServices$ServiceRestarter| |run| ||
|android.app.IActivityManager| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.ActivityManagerService| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |setBroadcastTimeoutLocked| |long|
|com.android.server.am.ActivityManagerService| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.BroadcastQueue| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |createRelroFile| |boolean,java.lang.String[]|
|com.android.commands.am.Am| |onRun| ||
|com.android.server.power.ShutdownThread$1| |onClick| |android.content.DialogInterface,int|
|com.android.server.power.ShutdownThread| |reboot| |android.content.Context,java.lang.String,boolean|
|com.android.server.power.ShutdownThread| |rebootSafeMode| |android.content.Context,boolean|
|com.android.server.power.ShutdownThread| |shutdown| |android.content.Context,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |access$2100| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |access$300| |com.android.server.accessibility.ScreenMagnifier,int|
|com.android.server.accessibility.ScreenMagnifier| |access$200| |com.android.server.accessibility.ScreenMagnifier|
|com.android.internal.content.PackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.content.PackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$UserState$1| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$UserState| |onSwitchToAnotherUser| ||
|com.android.server.accessibility.AccessibilityManagerService| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.accessibility.AccessibilityManagerService$Service$2| |run| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindow| |int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindows| ||
|android.view.accessibility.IAccessibilityManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.IAccessibilityManager| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|com.android.server.pm.PackageManagerService| |killApplication| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IIntentReceiver| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.IActivityManager| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|android.view.IApplicationToken$Stub$Proxy| |keyDispatchingTimedOut| |java.lang.String|
|android.view.IApplicationToken$Stub| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActiveServices$ServiceMap| |ensureNotStartingBackground| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService| |bindToAgentSynchronous| |android.content.pm.ApplicationInfo,int|
|android.app.ActivityManagerNative| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| |java.lang.String[]|
|com.android.server.power.PowerManagerService$3| |run| ||
|com.android.server.wm.WindowManagerService| |rebootSafeMode| |boolean|
|com.android.server.wm.WindowManagerService| |shutdown| |boolean|
|com.android.server.accessibility.EventStreamTransformation| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |sendDelayedMotionEvents| ||
|com.android.server.accessibility.ScreenMagnifier| |onUserContextChanged| ||
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.app.ResolverActivity$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.LocationManagerService$4| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.ServiceWatcher$2| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.trust.TrustManagerService$3| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.tv.TvInputManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.app.ResolverActivity$1| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.LocationManagerService$4| |onPackageRemoved| |java.lang.String,int|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.trust.TrustManagerService$3| |onPackageRemoved| |java.lang.String,int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.view.accessibility.IAccessibilityManager$Stub| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindows| ||
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindows| ||
|com.android.server.accessibility.AccessibilityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomationConnection| |registerUiTestAutomationServiceLocked| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |enableAccessibility| ||
|com.android.server.pm.PackageManagerService| |scanPackageDirtyLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageLI| |java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |replaceSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|android.app.LoadedApk$ReceiverDispatcher$InnerReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.PendingIntent$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IntentSender$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.am.Am$IntentReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.monkey.MonkeyNetworkMonitor| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$13| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$15| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$24| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$25| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$28| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$29| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$8| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService$12| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.BroadcastQueue| |performReceiveLocked| |com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.wm.InputMonitor| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.view.IApplicationToken| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActiveServices| |bringDownServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$FullBackupEngine| |backupOnePackage| |android.content.pm.PackageInfo|
|com.android.server.backup.BackupManagerService$FullRestoreEngine| |restoreOneFile| |java.io.InputStream|
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |restoreOneFile| |java.io.InputStream,byte[]|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeNextAgent| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreKeyValue| ||
|android.app.IActivityManager| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |cleanUpApplicationRecordLocked| |com.android.server.am.ProcessRecord,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |startAppProblemLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|android.webkit.WebViewFactory| |onWebViewUpdateInstalled| ||
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| ||
|android.view.WindowManagerPolicy$WindowManagerFuncs| |rebootSafeMode| |boolean|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |shutdown| |boolean|
|com.android.server.accessibility.AccessibilityInputFilter| |handleMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleMotionEventStateDelegating| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendMotionEvent| |android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1800| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |transitionToDelegatingStateAndClear| ||
|android.view.accessibility.IAccessibilityManager| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindows| ||
|android.app.UiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |access$200| |com.android.internal.policy.impl.EnableAccessibilityController|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |java.io.File,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageX| |java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installNewPackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |replaceNonSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |unloadMediaPackages| |android.util.ArrayMap,int[],boolean|
|com.android.server.pm.PackageManagerService| |replacePackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.am.BroadcastQueue| |deliverToRegisteredReceiverLocked| |com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices| |forceStopLocked| |java.lang.String,int,boolean,boolean|
|com.android.server.am.ActiveServices| |bringDownServiceIfNeededLocked| |com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |killServicesLocked| |com.android.server.am.ProcessRecord,boolean|
|com.android.server.am.ActiveServices| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|com.android.server.backup.BackupManagerService$PerformAdbBackupTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$EngineThread| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |execute| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |execute| ||
|com.android.commands.monkey.MonkeyNetworkMonitor| |register| |android.app.IActivityManager|
|com.android.server.am.ActivityManagerService| |trimApplications| ||
|com.android.server.am.ActivityManagerService| |makeAppNotRespondingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |access$300| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord|
|com.android.server.webkit.WebViewUpdateService| |onWebViewUpdateInstalled| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |powerLongPress| ||
|com.android.server.accessibility.AccessibilityInputFilter| |processBatchedEvents| |long|
|com.android.server.accessibility.TouchExplorer| |access$2800| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDelegating| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDragging| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateTouchExploring| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendActionDownAndUp| |android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |sendDownForAllNotInjectedPointers| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendHoverExitAndTouchExplorationGestureEndIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendTouchExplorationGestureStartAndHoverEnterIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendUpForInjectedDownPointers| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |unregisterUiTestAutomationServiceLocked| ||
|android.view.accessibility.AccessibilityInteractionClient| |getWindow| |int,int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.AccessibilityInteractionClient| |getWindows| |int|
|android.app.IUiAutomationConnection$Stub$Proxy| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|android.app.IUiAutomationConnection$Stub| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |onInterceptTouchEvent| |android.view.MotionEvent|
|com.android.server.pm.PackageManagerService| |deleteSystemPackageLI| |com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |<init>| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService| |loadMediaPackages| |android.util.ArrayMap,int[]|
|com.android.server.pm.PackageManagerService| |scanDirLI| |java.io.File,int,int,long|
|com.android.server.pm.PackageManagerService| |access$4000| |com.android.server.pm.PackageManagerService,java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installPackageLI| |com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |updateExternalMediaStatusInner| |boolean,boolean,boolean|
|com.android.server.input.InputManagerService| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices| |removeConnectionLocked| |com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActiveServices| |stopServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |execute| ||
|com.android.commands.monkey.Monkey| |getSystemInterfaces| ||
|com.android.server.am.ActivityManagerService| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]|
|com.android.server.webkit.WebViewUpdateService| |access$000| |com.android.server.webkit.WebViewUpdateService|
|com.android.internal.policy.impl.GlobalActions$LongPressAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$Action| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$SinglePressAction| |onPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$800| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.server.accessibility.AccessibilityInputFilter| |access$100| |com.android.server.accessibility.AccessibilityInputFilter,long|
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$1700| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |access$2600| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$2400| |com.android.server.accessibility.TouchExplorer,int|
|com.android.server.accessibility.TouchExplorer| |clear| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |disconnect| ||
|android.view.accessibility.AccessibilityNodeInfo| |getWindow| ||
|android.view.accessibility.AccessibilityWindowInfo| |getChild| |int|
|android.view.accessibility.AccessibilityWindowInfo| |getParent| ||
|android.accessibilityservice.AccessibilityService| |getWindows| ||
|android.app.UiAutomation| |getWindows| ||
|android.app.IUiAutomationConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IUiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |dispatchTouchEvent| |android.view.MotionEvent|
|com.android.server.pm.PackageManagerService| |main| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService$14| |run| ||
|com.android.server.pm.PackageManagerService$8| |run| ||
|com.android.server.pm.PackageManagerService| |access$2300| |com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |access$4500| |com.android.server.pm.PackageManagerService,boolean,boolean,boolean|
|com.android.server.pm.PackageManagerService| |scanAvailableAsecs| ||
|com.android.server.am.ActiveServices| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |executeNextState| |com.android.server.backup.BackupManagerService$BackupState|
|com.android.commands.monkey.Monkey| |run| |java.lang.String[]|
|android.app.ActivityManagerNative| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |addAppLocked| |android.content.pm.ApplicationInfo,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String|
|com.android.server.webkit.WebViewUpdateService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.policy.impl.GlobalActions$2| |onItemLongClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.internal.policy.impl.GlobalActions| |onClick| |android.content.DialogInterface,int|
|com.android.internal.policy.impl.GlobalActions| |handleShow| ||
|com.android.server.accessibility.AccessibilityInputFilter$1| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onDoubleTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |clear| ||
|com.android.server.accessibility.TouchExplorer| |handleMotionEventGestureDetecting| |android.view.MotionEvent,int|
|android.app.IUiAutomationConnection$Stub$Proxy| |disconnect| ||
|android.app.IUiAutomationConnection$Stub| |disconnect| ||
|android.app.UiAutomationConnection| |shutdown| ||
|android.app.UiAutomationConnection| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomation| |connect| ||
|com.android.server.pm.PackageManagerService$6| |run| ||
|com.android.server.pm.PackageManagerService$11| |run| ||
|com.android.server.am.ActivityManagerService| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |agentErrorCleanup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |beginBackup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |operationComplete| ||
|com.android.commands.monkey.Monkey| |main| |java.lang.String[]|
|android.app.IActivityManager| |setProcessLimit| |int|
|com.android.internal.policy.impl.GlobalActions| |access$1800| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.GlobalActions| |showDialog| |boolean,boolean|
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.EventStreamTransformation| |clear| ||
|com.android.server.accessibility.TouchExplorer$ExitGestureDetectionModeDelayed| |run| ||
|android.app.IUiAutomationConnection| |disconnect| ||
|android.app.IUiAutomationConnection$Stub$Proxy| |shutdown| ||
|android.app.IUiAutomationConnection$Stub| |shutdown| ||
|android.app.Instrumentation| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetworkViews| |setup| ||
|com.android.uiautomator.core.UiAutomationShellWrapper| |connect| ||
|com.android.server.am.ActivityManagerService| |removeTaskByIdLocked| |int,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeAgentForBackup| |java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |operationComplete| ||
|com.android.internal.policy.impl.PhoneWindowManager| |showGlobalActionsInternal| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |clear| ||
|android.app.UiAutomation| |disconnect| ||
|android.app.IUiAutomationConnection| |shutdown| ||
|android.test.InstrumentationCoreTestRunner| |getUiAutomation| ||
|android.test.InstrumentationTestRunner| |getUiAutomation| ||
|android.test.LaunchPerformanceBase| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetwork| |startServer| ||
|com.android.commands.uiautomator.DumpCommand| |run| |java.lang.String[]|
|com.android.commands.uiautomator.EventsCommand| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |start| ||
|com.android.server.am.ActivityManagerService| |access$1400| |com.android.server.am.ActivityManagerService,int,boolean|
|com.android.server.am.ActivityManagerService| |removeTasksByPackageNameLocked| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |removeTasksByRemovedPackageComponentsLocked| |java.lang.String,int|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService| |opComplete| |int|
|com.android.internal.policy.impl.PhoneWindowManager$4| |run| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onInputEvent| |android.view.InputEvent,int|
|android.app.Instrumentation| |finish| |int,android.os.Bundle|
|com.android.uiautomator.core.UiAutomationShellWrapper| |disconnect| ||
|com.android.commands.monkey.MonkeySourceNetwork| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher$Command| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |run| |java.util.List,android.os.Bundle,boolean,boolean|
|com.android.server.backup.BackupManagerService| |handleTimeout| |int,java.lang.Object|
|com.android.server.backup.Trampoline| |opComplete| |int|
|android.test.InstrumentationCoreTestRunner| |finish| |int,android.os.Bundle|
|android.test.InstrumentationTestRunner| |finish| |int,android.os.Bundle|
|android.test.LaunchPerformanceBase| |finish| |int,android.os.Bundle|
|com.android.commands.monkey.MonkeyEventSource| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher| |main| |java.lang.String[]|
|com.android.commands.uiautomator.RunTestCommand| |run| |java.lang.String[]|
|com.android.server.backup.BackupManagerService| |prepareOperationTimeout| |int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask|
|android.app.backup.IBackupManager$Stub$Proxy| |opComplete| |int|
|android.app.backup.IBackupManager$Stub| |opComplete| |int|
|android.test.InstrumentationTestRunner| |onStart| ||
|com.android.commands.monkey.Monkey| |runMonkeyCycles| ||
|com.android.server.backup.BackupManagerService$FullBackupEngine$FullBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$FullBackupObbConnection| |backupObbs| |android.content.pm.PackageInfo,java.io.OutputStream|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |initiateOneRestore| |android.content.pm.PackageInfo,int|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreFinished| ||
|android.app.backup.IBackupManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.IBackupManager| |opComplete| |int|
|android.test.InstrumentationCoreTestRunner| |onStart| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |startRestore| ||
|com.android.server.backup.Trampoline| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.BackupAgent$BackupServiceBinder| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IBackupAgent| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreFileRunnable| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable| |run| ||
|android.app.ContextImpl| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.content.Context| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.content.ContextWrapper| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accessibilityservice.AccessibilityService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.AccountAuthenticatorActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.CantAddAccountActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.ChooseAccountActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.ChooseAccountTypeActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.ChooseTypeAndAccountActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.GrantCredentialsPermissionActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.ActivityGroup| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.Activity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.AliasActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.Application| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.backup.BackupAgentHelper| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.backup.BackupAgent| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.backup.FullBackupAgent| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.ExpandableListActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.IntentService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.job.JobService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.LauncherActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.ListActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.NativeActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.Presentation$1| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.ReceiverRestrictedContext| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.Service| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.TabActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.content.MutableContextWrapper| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.content.SyncActivityTooManyDeletes| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.hardware.location.GeofenceHardwareService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.inputmethodservice.AbstractInputMethodService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.inputmethodservice.InputMethodService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.location.SettingInjectorService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.media.tv.TvInputService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.nfc.cardemulation.HostApduService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.nfc.cardemulation.OffHostApduService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.preference.PreferenceActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.printservice.PrintService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.carrier.CarrierMessagingService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.dreams.DreamService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.media.MediaBrowserService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.notification.ConditionProviderService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.notification.NotificationListenerService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.textservice.SpellCheckerService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.trust.TrustAgentService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.voice.VoiceInteractionService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.voice.VoiceInteractionSessionService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.wallpaper.WallpaperService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.wallpaper.WallpaperSettingsActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.speech.RecognitionService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.speech.tts.TextToSpeechService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.telecom.ConnectionService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.telecom.InCallService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.test.ActivityUnitTestCase$MockParent| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.test.IsolatedContext| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.test.mock.MockApplication| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.test.RenamingDelegatingContext| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.view.ContextThemeWrapper| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.widget.RemoteViews$2| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.widget.RemoteViewsService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.AlertActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.ChooserActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.DisableCarModeActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.ExternalMediaFormatActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.HeavyWeightSwitcherActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.IntentForwarderActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.NetInitiatedActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.PlatLogoActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.ResolverActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.RestrictionsPinActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.ShutdownActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.backup.LocalTransportService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.os.storage.ExternalStorageFormatter| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.util.AsyncService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.beam.BeamReceiveService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.beam.BeamSendService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.BeamShareActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.cardemulation.AppChooserActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.cardemulation.DefaultRemovedActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.cardemulation.TapAgainDialog| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.handover.ConfirmConnectActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.handover.PeripheralHandoverService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.NfcApplication| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.NfcBackupAgent| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.NfcRootActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.TechListChooserActivity| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.backup.FullBackupJob| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.backup.PackageManagerBackupAgent| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.backup.SystemBackupAgent| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.MountServiceIdler| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.notification.CountdownConditionProvider| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.notification.DowntimeConditionProvider| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.notification.NextAlarmConditionProvider| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.pm.BackgroundDexOptService| |sendStickyOrderedBroadcast| |android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.ContextImpl| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.content.Context| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.content.ContextWrapper| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accessibilityservice.AccessibilityService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.AccountAuthenticatorActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.CantAddAccountActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.ChooseAccountActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.ChooseAccountTypeActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.ChooseTypeAndAccountActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.accounts.GrantCredentialsPermissionActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.ActivityGroup| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.Activity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.AliasActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.Application| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.backup.BackupAgentHelper| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.backup.BackupAgent| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.backup.FullBackupAgent| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.ExpandableListActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.IntentService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.job.JobService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.LauncherActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.ListActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.NativeActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.Presentation$1| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.ReceiverRestrictedContext| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.Service| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.app.TabActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.content.MutableContextWrapper| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.content.SyncActivityTooManyDeletes| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.hardware.location.GeofenceHardwareService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.inputmethodservice.AbstractInputMethodService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.inputmethodservice.InputMethodService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.location.SettingInjectorService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.media.tv.TvInputService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.nfc.cardemulation.HostApduService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.nfc.cardemulation.OffHostApduService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.preference.PreferenceActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.printservice.PrintService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.carrier.CarrierMessagingService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.dreams.DreamService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.media.MediaBrowserService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.notification.ConditionProviderService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.notification.NotificationListenerService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.textservice.SpellCheckerService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.trust.TrustAgentService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.voice.VoiceInteractionService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.voice.VoiceInteractionSessionService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.wallpaper.WallpaperService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.service.wallpaper.WallpaperSettingsActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.speech.RecognitionService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.speech.tts.TextToSpeechService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.telecom.ConnectionService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.telecom.InCallService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.test.ActivityUnitTestCase$MockParent| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.test.IsolatedContext| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.test.mock.MockApplication| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.test.RenamingDelegatingContext| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.view.ContextThemeWrapper| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.widget.RemoteViews$2| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|android.widget.RemoteViewsService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.AlertActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.ChooserActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.DisableCarModeActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.ExternalMediaFormatActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.HeavyWeightSwitcherActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.IntentForwarderActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.NetInitiatedActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.PlatLogoActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.ResolverActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.RestrictionsPinActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.app.ShutdownActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.backup.LocalTransportService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.os.storage.ExternalStorageFormatter| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.internal.util.AsyncService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.beam.BeamReceiveService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.beam.BeamSendService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.BeamShareActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.cardemulation.AppChooserActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.cardemulation.DefaultRemovedActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.cardemulation.TapAgainDialog| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.handover.ConfirmConnectActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.handover.PeripheralHandoverService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.NfcApplication| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.NfcBackupAgent| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.NfcRootActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.nfc.TechListChooserActivity| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.backup.FullBackupJob| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.backup.PackageManagerBackupAgent| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.backup.SystemBackupAgent| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.MountServiceIdler| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.notification.CountdownConditionProvider| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.notification.DowntimeConditionProvider| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.notification.NextAlarmConditionProvider| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.pm.BackgroundDexOptService| |sendStickyOrderedBroadcastAsUser| |android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle|
|com.android.server.am.ActivityManagerService| |unbroadcastIntent| |android.app.IApplicationThread,android.content.Intent,int|
|android.app.ActivityManagerNative| |unbroadcastIntent| |android.app.IApplicationThread,android.content.Intent,int|
|android.app.IActivityManager| |unbroadcastIntent| |android.app.IApplicationThread,android.content.Intent,int|
|android.app.ContextImpl| |removeStickyBroadcast| |android.content.Intent|
|android.app.ContextImpl| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.content.Context| |removeStickyBroadcast| |android.content.Intent|
|android.content.Context| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.content.ContextWrapper| |removeStickyBroadcast| |android.content.Intent|
|android.content.ContextWrapper| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.storage.DeviceStorageMonitorService| |cancelFullNotification| ||
|com.android.server.storage.DeviceStorageMonitorService| |cancelNotification| ||
|android.accessibilityservice.AccessibilityService| |removeStickyBroadcast| |android.content.Intent|
|android.accounts.AccountAuthenticatorActivity| |removeStickyBroadcast| |android.content.Intent|
|android.accounts.CantAddAccountActivity| |removeStickyBroadcast| |android.content.Intent|
|android.accounts.ChooseAccountActivity| |removeStickyBroadcast| |android.content.Intent|
|android.accounts.ChooseAccountTypeActivity| |removeStickyBroadcast| |android.content.Intent|
|android.accounts.ChooseTypeAndAccountActivity| |removeStickyBroadcast| |android.content.Intent|
|android.accounts.GrantCredentialsPermissionActivity| |removeStickyBroadcast| |android.content.Intent|
|android.app.ActivityGroup| |removeStickyBroadcast| |android.content.Intent|
|android.app.Activity| |removeStickyBroadcast| |android.content.Intent|
|android.app.AliasActivity| |removeStickyBroadcast| |android.content.Intent|
|android.app.Application| |removeStickyBroadcast| |android.content.Intent|
|android.app.backup.BackupAgentHelper| |removeStickyBroadcast| |android.content.Intent|
|android.app.backup.BackupAgent| |removeStickyBroadcast| |android.content.Intent|
|android.app.backup.FullBackupAgent| |removeStickyBroadcast| |android.content.Intent|
|android.app.ExpandableListActivity| |removeStickyBroadcast| |android.content.Intent|
|android.app.IntentService| |removeStickyBroadcast| |android.content.Intent|
|android.app.job.JobService| |removeStickyBroadcast| |android.content.Intent|
|android.app.LauncherActivity| |removeStickyBroadcast| |android.content.Intent|
|android.app.ListActivity| |removeStickyBroadcast| |android.content.Intent|
|android.app.NativeActivity| |removeStickyBroadcast| |android.content.Intent|
|android.app.Presentation$1| |removeStickyBroadcast| |android.content.Intent|
|android.app.ReceiverRestrictedContext| |removeStickyBroadcast| |android.content.Intent|
|android.app.Service| |removeStickyBroadcast| |android.content.Intent|
|android.app.TabActivity| |removeStickyBroadcast| |android.content.Intent|
|android.content.MutableContextWrapper| |removeStickyBroadcast| |android.content.Intent|
|android.content.SyncActivityTooManyDeletes| |removeStickyBroadcast| |android.content.Intent|
|android.hardware.location.GeofenceHardwareService| |removeStickyBroadcast| |android.content.Intent|
|android.inputmethodservice.AbstractInputMethodService| |removeStickyBroadcast| |android.content.Intent|
|android.inputmethodservice.InputMethodService| |removeStickyBroadcast| |android.content.Intent|
|android.location.SettingInjectorService| |removeStickyBroadcast| |android.content.Intent|
|android.media.tv.TvInputService| |removeStickyBroadcast| |android.content.Intent|
|android.nfc.cardemulation.HostApduService| |removeStickyBroadcast| |android.content.Intent|
|android.nfc.cardemulation.OffHostApduService| |removeStickyBroadcast| |android.content.Intent|
|android.preference.PreferenceActivity| |removeStickyBroadcast| |android.content.Intent|
|android.printservice.PrintService| |removeStickyBroadcast| |android.content.Intent|
|android.service.carrier.CarrierMessagingService| |removeStickyBroadcast| |android.content.Intent|
|android.service.dreams.DreamService| |removeStickyBroadcast| |android.content.Intent|
|android.service.media.MediaBrowserService| |removeStickyBroadcast| |android.content.Intent|
|android.service.notification.ConditionProviderService| |removeStickyBroadcast| |android.content.Intent|
|android.service.notification.NotificationListenerService| |removeStickyBroadcast| |android.content.Intent|
|android.service.textservice.SpellCheckerService| |removeStickyBroadcast| |android.content.Intent|
|android.service.trust.TrustAgentService| |removeStickyBroadcast| |android.content.Intent|
|android.service.voice.VoiceInteractionService| |removeStickyBroadcast| |android.content.Intent|
|android.service.voice.VoiceInteractionSessionService| |removeStickyBroadcast| |android.content.Intent|
|android.service.wallpaper.WallpaperService| |removeStickyBroadcast| |android.content.Intent|
|android.service.wallpaper.WallpaperSettingsActivity| |removeStickyBroadcast| |android.content.Intent|
|android.speech.RecognitionService| |removeStickyBroadcast| |android.content.Intent|
|android.speech.tts.TextToSpeechService| |removeStickyBroadcast| |android.content.Intent|
|android.telecom.ConnectionService| |removeStickyBroadcast| |android.content.Intent|
|android.telecom.InCallService| |removeStickyBroadcast| |android.content.Intent|
|android.test.ActivityUnitTestCase$MockParent| |removeStickyBroadcast| |android.content.Intent|
|android.test.IsolatedContext| |removeStickyBroadcast| |android.content.Intent|
|android.test.mock.MockApplication| |removeStickyBroadcast| |android.content.Intent|
|android.test.RenamingDelegatingContext| |removeStickyBroadcast| |android.content.Intent|
|android.view.ContextThemeWrapper| |removeStickyBroadcast| |android.content.Intent|
|android.widget.RemoteViews$2| |removeStickyBroadcast| |android.content.Intent|
|android.widget.RemoteViewsService| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.AlertActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.ChooserActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.DisableCarModeActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.ExternalMediaFormatActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.HeavyWeightSwitcherActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.IntentForwarderActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.NetInitiatedActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.PlatLogoActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.ResolverActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.RestrictionsPinActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.app.ShutdownActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.backup.LocalTransportService| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.os.storage.ExternalStorageFormatter| |removeStickyBroadcast| |android.content.Intent|
|com.android.internal.util.AsyncService| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.beam.BeamReceiveService| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.beam.BeamSendService| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.BeamShareActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.cardemulation.AppChooserActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.cardemulation.DefaultRemovedActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.cardemulation.TapAgainDialog| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.handover.ConfirmConnectActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.handover.PeripheralHandoverService| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.NfcApplication| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.NfcBackupAgent| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.NfcRootActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.nfc.TechListChooserActivity| |removeStickyBroadcast| |android.content.Intent|
|com.android.server.backup.FullBackupJob| |removeStickyBroadcast| |android.content.Intent|
|com.android.server.backup.PackageManagerBackupAgent| |removeStickyBroadcast| |android.content.Intent|
|com.android.server.backup.SystemBackupAgent| |removeStickyBroadcast| |android.content.Intent|
|com.android.server.MountServiceIdler| |removeStickyBroadcast| |android.content.Intent|
|com.android.server.notification.CountdownConditionProvider| |removeStickyBroadcast| |android.content.Intent|
|com.android.server.notification.DowntimeConditionProvider| |removeStickyBroadcast| |android.content.Intent|
|com.android.server.notification.NextAlarmConditionProvider| |removeStickyBroadcast| |android.content.Intent|
|com.android.server.pm.BackgroundDexOptService| |removeStickyBroadcast| |android.content.Intent|
|android.accessibilityservice.AccessibilityService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.AccountAuthenticatorActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.CantAddAccountActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.ChooseAccountActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.ChooseAccountTypeActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.ChooseTypeAndAccountActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.accounts.GrantCredentialsPermissionActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.ActivityGroup| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.Activity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.AliasActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.Application| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.backup.BackupAgentHelper| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.backup.BackupAgent| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.backup.FullBackupAgent| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.ExpandableListActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.IntentService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.job.JobService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.LauncherActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.ListActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.NativeActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.Presentation$1| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.ReceiverRestrictedContext| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.Service| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.app.TabActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.content.MutableContextWrapper| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.content.SyncActivityTooManyDeletes| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.hardware.location.GeofenceHardwareService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.inputmethodservice.AbstractInputMethodService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.inputmethodservice.InputMethodService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.location.SettingInjectorService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.media.tv.TvInputService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.nfc.cardemulation.HostApduService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.nfc.cardemulation.OffHostApduService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.preference.PreferenceActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.printservice.PrintService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.carrier.CarrierMessagingService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.dreams.DreamService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.media.MediaBrowserService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.notification.ConditionProviderService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.notification.NotificationListenerService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.textservice.SpellCheckerService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.trust.TrustAgentService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.voice.VoiceInteractionService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.voice.VoiceInteractionSessionService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.wallpaper.WallpaperService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.service.wallpaper.WallpaperSettingsActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.speech.RecognitionService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.speech.tts.TextToSpeechService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.telecom.ConnectionService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.telecom.InCallService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.test.ActivityUnitTestCase$MockParent| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.test.IsolatedContext| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.test.mock.MockApplication| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.test.RenamingDelegatingContext| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.view.ContextThemeWrapper| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.widget.RemoteViews$2| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|android.widget.RemoteViewsService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.AlertActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.ChooserActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.DisableCarModeActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.ExternalMediaFormatActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.HeavyWeightSwitcherActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.IntentForwarderActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.NetInitiatedActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.PlatLogoActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.ResolverActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.RestrictionsPinActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.app.ShutdownActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.backup.LocalTransportService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.os.storage.ExternalStorageFormatter| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.internal.util.AsyncService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.beam.BeamReceiveService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.beam.BeamSendService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.BeamShareActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.cardemulation.AppChooserActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.cardemulation.DefaultRemovedActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.cardemulation.TapAgainDialog| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.ConfirmConnectToWifiNetworkActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.handover.ConfirmConnectActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.handover.PeripheralHandoverService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.NfcApplication| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.NfcBackupAgent| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.NfcRootActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.nfc.TechListChooserActivity| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.backup.FullBackupJob| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.backup.PackageManagerBackupAgent| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.backup.SystemBackupAgent| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.MountServiceIdler| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.notification.CountdownConditionProvider| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.notification.DowntimeConditionProvider| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.notification.NextAlarmConditionProvider| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.pm.BackgroundDexOptService| |removeStickyBroadcastAsUser| |android.content.Intent,android.os.UserHandle|
|com.android.server.ethernet.EthernetServiceImpl| |enforceChangePermission| ||
|com.android.server.ethernet.EthernetServiceImpl| |setConfiguration| |android.net.IpConfiguration|
|android.net.IEthernetManager$Stub$Proxy| |setConfiguration| |android.net.IpConfiguration|
|android.net.IEthernetManager$Stub| |setConfiguration| |android.net.IpConfiguration|
|android.net.IEthernetManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.IEthernetManager| |setConfiguration| |android.net.IpConfiguration|
|com.android.server.ethernet.EthernetServiceImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.EthernetManager| |setConfiguration| |android.net.IpConfiguration|
|com.android.server.BluetoothManagerService| |unregisterAdapter| |android.bluetooth.IBluetoothManagerCallback|
|android.bluetooth.IBluetoothManager$Stub$Proxy| |unregisterAdapter| |android.bluetooth.IBluetoothManagerCallback|
|android.bluetooth.IBluetoothManager$Stub| |unregisterAdapter| |android.bluetooth.IBluetoothManagerCallback|
|android.bluetooth.IBluetoothManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.bluetooth.IBluetoothManager| |unregisterAdapter| |android.bluetooth.IBluetoothManagerCallback|
|com.android.server.BluetoothManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.bluetooth.BluetoothAdapter| |finalize| ||
|com.android.server.BluetoothManagerService| |registerStateChangeCallback| |android.bluetooth.IBluetoothStateChangeCallback|
|android.bluetooth.IBluetoothManager$Stub$Proxy| |registerStateChangeCallback| |android.bluetooth.IBluetoothStateChangeCallback|
|android.bluetooth.IBluetoothManager$Stub| |registerStateChangeCallback| |android.bluetooth.IBluetoothStateChangeCallback|
|android.bluetooth.IBluetoothManager| |registerStateChangeCallback| |android.bluetooth.IBluetoothStateChangeCallback|
|android.bluetooth.BluetoothA2dpSink| |<init>| |android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener|
|android.bluetooth.BluetoothA2dp| |<init>| |android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener|
|android.bluetooth.BluetoothAvrcpController| |<init>| |android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener|
|android.bluetooth.BluetoothHeadsetClient| |<init>| |android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener|
|android.bluetooth.BluetoothHeadset| |<init>| |android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener|
|android.bluetooth.BluetoothHealth| |<init>| |android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener|
|android.bluetooth.BluetoothInputDevice| |<init>| |android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener|
|android.bluetooth.BluetoothMap| |<init>| |android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener|
|android.bluetooth.BluetoothPan| |<init>| |android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener|
|android.bluetooth.BluetoothPbap| |<init>| |android.content.Context,android.bluetooth.BluetoothPbap$ServiceListener|
|android.bluetooth.BluetoothAdapter| |getProfileProxy| |android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int|
|android.media.AudioService| |getBluetoothHeadset| ||
|android.media.AudioService| |onSystemReady| ||
|com.android.nfc.handover.BluetoothPeripheralHandover| |getProfileProxys| ||
|com.android.server.am.BatteryStatsService| |noteBluetoothOn| ||
|android.media.AudioService| |access$3200| |android.media.AudioService|
|android.media.AudioService| |disconnectBluetoothSco| |int|
|com.android.nfc.handover.BluetoothPeripheralHandover| |nextStepInit| ||
|com.android.internal.app.IBatteryStats$Stub$Proxy| |noteBluetoothOn| ||
|com.android.internal.app.IBatteryStats$Stub| |noteBluetoothOn| ||
|android.media.AudioService$ScoClient| |requestScoState| |int,int|
|android.media.AudioService| |access$1500| |android.media.AudioService,int|
|android.media.AudioService| |setMode| |int,android.os.IBinder|
|com.android.nfc.handover.BluetoothPeripheralHandover| |nextStep| ||
|com.android.internal.app.IBatteryStats$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.app.IBatteryStats| |noteBluetoothOn| ||
|android.media.AudioService$ScoClient| |clearCount| |boolean|
|android.media.AudioService$ScoClient| |decCount| ||
|android.media.AudioService$ScoClient| |incCount| |int|
|android.media.IAudioService$Stub$Proxy| |setMode| |int,android.os.IBinder|
|android.media.IAudioService$Stub| |setMode| |int,android.os.IBinder|
|com.android.nfc.handover.BluetoothPeripheralHandover| |start| ||
|com.android.nfc.handover.BluetoothPeripheralHandover| |handleIntent| |android.content.Intent|
|com.android.nfc.handover.BluetoothPeripheralHandover| |onServiceConnected| |int,android.bluetooth.BluetoothProfile|
|com.android.server.am.BatteryStatsService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.media.AudioService$ScoClient| |binderDied| ||
|android.media.AudioService| |clearAllScoClients| |int,boolean|
|android.media.IAudioService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.media.IAudioService| |setMode| |int,android.os.IBinder|
|com.android.nfc.handover.PeripheralHandoverService| |doPeripheralHandover| |android.os.Bundle|
|com.android.nfc.handover.PeripheralHandoverService| |handleBluetoothStateChanged| |android.content.Intent|
|com.android.nfc.handover.BluetoothPeripheralHandover$2| |onReceive| |android.content.Context,android.content.Intent|
|android.media.AudioService$AudioServiceBroadcastReceiver| |onReceive| |android.content.Context,android.content.Intent|
|android.media.AudioService| |resetBluetoothSco| ||
|android.media.AudioService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.media.AudioManager| |setMode| |int|
|com.android.nfc.handover.PeripheralHandoverService| |onStartCommand| |android.content.Intent,int,int|
|com.android.nfc.handover.PeripheralHandoverService| |access$000| |com.android.nfc.handover.PeripheralHandoverService,android.content.Intent|
|android.media.AudioService| |access$7800| |android.media.AudioService|
|com.android.nfc.handover.PeripheralHandoverService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.BluetoothManagerService| |unregisterStateChangeCallback| |android.bluetooth.IBluetoothStateChangeCallback|
|android.bluetooth.IBluetoothManager$Stub$Proxy| |unregisterStateChangeCallback| |android.bluetooth.IBluetoothStateChangeCallback|
|android.bluetooth.IBluetoothManager$Stub| |unregisterStateChangeCallback| |android.bluetooth.IBluetoothStateChangeCallback|
|android.bluetooth.IBluetoothManager| |unregisterStateChangeCallback| |android.bluetooth.IBluetoothStateChangeCallback|
|android.bluetooth.BluetoothA2dpSink| |close| ||
|android.bluetooth.BluetoothA2dp| |close| ||
|android.bluetooth.BluetoothAvrcpController| |close| ||
|android.bluetooth.BluetoothHeadsetClient| |close| ||
|android.bluetooth.BluetoothHeadset| |close| ||
|android.bluetooth.BluetoothHealth| |close| ||
|android.bluetooth.BluetoothInputDevice| |close| ||
|android.bluetooth.BluetoothMap| |close| ||
|android.bluetooth.BluetoothPan| |close| ||
|android.bluetooth.BluetoothPbap| |close| ||
|android.bluetooth.BluetoothA2dpSink| |finalize| ||
|android.bluetooth.BluetoothAdapter| |closeProfileProxy| |int,android.bluetooth.BluetoothProfile|
|android.bluetooth.BluetoothA2dp| |finalize| ||
|android.bluetooth.BluetoothAvrcpController| |finalize| ||
|android.bluetooth.BluetoothMap| |finalize| ||
|android.bluetooth.BluetoothPan| |finalize| ||
|android.bluetooth.BluetoothPbap| |finalize| ||
|com.android.nfc.handover.BluetoothPeripheralHandover| |complete| |boolean|
|com.android.nfc.handover.BluetoothPeripheralHandover| |nextStepConnect| ||
|com.android.nfc.handover.BluetoothPeripheralHandover| |nextStepDisconnect| ||
|com.android.nfc.handover.BluetoothPeripheralHandover| |startBonding| ||
|com.android.server.BluetoothManagerService| |getAddress| ||
|android.bluetooth.IBluetoothManager$Stub$Proxy| |getAddress| ||
|android.bluetooth.IBluetoothManager$Stub| |getAddress| ||
|android.bluetooth.IBluetoothManager| |getAddress| ||
|android.bluetooth.BluetoothAdapter| |getAddress| ||
|android.bluetooth.BluetoothSocket| |<init>| |int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid|
|com.android.nfc.handover.HandoverDataParser| |createBluetoothOobDataRecord| ||
|android.bluetooth.BluetoothDevice| |createInsecureRfcommSocket| |int|
|android.bluetooth.BluetoothDevice| |createInsecureRfcommSocketToServiceRecord| |java.util.UUID|
|android.bluetooth.BluetoothDevice| |createRfcommSocket| |int|
|android.bluetooth.BluetoothDevice| |createRfcommSocketToServiceRecord| |java.util.UUID|
|android.bluetooth.BluetoothDevice| |createScoSocket| ||
|android.bluetooth.BluetoothServerSocket| |<init>| |int,boolean,boolean,android.os.ParcelUuid|
|android.bluetooth.BluetoothServerSocket| |<init>| |int,boolean,boolean,int|
|android.bluetooth.BluetoothSocket| |<init>| |int,int,boolean,boolean,java.lang.String,int|
|com.android.nfc.handover.HandoverDataParser| |createBluetoothHandoverSelectMessage| |boolean|
|com.android.nfc.handover.HandoverDataParser| |createHandoverRequestMessage| ||
|android.bluetooth.BluetoothAdapter| |createNewRfcommSocketAndRecord| |java.lang.String,java.util.UUID,boolean,boolean|
|android.bluetooth.BluetoothAdapter| |listenUsingEncryptedRfcommOn| |int|
|android.bluetooth.BluetoothAdapter| |listenUsingInsecureRfcommOn| |int|
|android.bluetooth.BluetoothAdapter| |listenUsingRfcommOn| |int|
|android.bluetooth.BluetoothAdapter| |listenUsingScoOn| ||
|com.android.nfc.handover.HandoverDataParser| |tryBluetoothHandoverRequest| |com.android.nfc.handover.HandoverDataParser$BluetoothHandoverData|
|com.android.nfc.P2pLinkManager$SendTask| |doHandover| |android.net.Uri[],android.os.UserHandle|
|android.bluetooth.BluetoothAdapter| |listenUsingEncryptedRfcommWithServiceRecord| |java.lang.String,java.util.UUID|
|android.bluetooth.BluetoothAdapter| |listenUsingInsecureRfcommWithServiceRecord| |java.lang.String,java.util.UUID|
|android.bluetooth.BluetoothAdapter| |listenUsingRfcommWithServiceRecord| |java.lang.String,java.util.UUID|
|com.android.nfc.handover.HandoverDataParser| |getIncomingHandoverData| |android.nfc.NdefMessage|
|com.android.nfc.P2pLinkManager$SendTask| |doInBackground| |java.lang.Void[]|
|com.android.nfc.handover.HandoverServer$ConnectionThread| |run| ||
|com.android.nfc.P2pLinkManager$3| |doGet| |int,android.nfc.NdefMessage|
|com.android.nfc.P2pLinkManager$SendTask| |doInBackground| |java.lang.Object[]|
|com.android.nfc.handover.HandoverServer$ServerThread| |run| ||
|com.android.nfc.snep.SnepServer$Callback| |doGet| |int,android.nfc.NdefMessage|
|com.android.nfc.handover.HandoverServer| |start| ||
|com.android.nfc.snep.SnepServer| |handleRequest| |com.android.nfc.snep.SnepMessenger,com.android.nfc.snep.SnepServer$Callback|
|com.android.nfc.P2pLinkManager| |enableDisable| |boolean,boolean|
|com.android.nfc.snep.SnepServer$ConnectionThread| |run| ||
|com.android.nfc.NfcService$EnableDisableTask| |disableInternal| ||
|com.android.nfc.NfcService$EnableDisableTask| |enableInternal| ||
|com.android.nfc.NfcService$NfcAdapterService| |disableNdefPush| ||
|com.android.nfc.NfcService$NfcAdapterService| |enableNdefPush| ||
|com.android.nfc.snep.SnepServer$ServerThread| |run| ||
|com.android.nfc.NfcService$EnableDisableTask| |doInBackground| |java.lang.Integer[]|
|android.nfc.INfcAdapter$Stub$Proxy| |disableNdefPush| ||
|android.nfc.INfcAdapter$Stub| |disableNdefPush| ||
|android.nfc.INfcAdapter$Stub$Proxy| |enableNdefPush| ||
|android.nfc.INfcAdapter$Stub| |enableNdefPush| ||
|com.android.nfc.snep.SnepServer| |start| ||
|com.android.nfc.NfcService$EnableDisableTask| |doInBackground| |java.lang.Object[]|
|android.nfc.INfcAdapter| |disableNdefPush| ||
|android.nfc.INfcAdapter$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.INfcAdapter| |enableNdefPush| ||
|android.nfc.NfcAdapter| |disableNdefPush| ||
|com.android.nfc.NfcService$NfcAdapterService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.nfc.NfcAdapter| |enableNdefPush| ||
|com.android.server.BluetoothManagerService| |getName| ||
|android.bluetooth.IBluetoothManager$Stub$Proxy| |getName| ||
|android.bluetooth.IBluetoothManager$Stub| |getName| ||
|android.bluetooth.IBluetoothManager| |getName| ||
|android.bluetooth.BluetoothAdapter| |getName| ||
|android.bluetooth.le.BluetoothLeAdvertiser| |totalBytes| |android.bluetooth.le.AdvertiseData,boolean|
|android.bluetooth.le.BluetoothLeAdvertiser| |startAdvertising| |android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback|
|android.bluetooth.le.BluetoothLeAdvertiser| |startAdvertising| |android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback|
|com.android.nfc.beam.BeamReceiveService| |onCreate| ||
|com.android.nfc.handover.PeripheralHandoverService| |onCreate| ||
|com.android.nfc.beam.BeamSendService| |onCreate| ||
|android.bluetooth.BluetoothSocket| |initSocketFromFdNative| |int|
|android.bluetooth.BluetoothSocket| |initSocketNative| ||
|com.android.server.am.ActivityManagerService| |killBackgroundProcesses| |java.lang.String,int|
|android.app.ActivityManagerNative| |killBackgroundProcesses| |java.lang.String,int|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |killBackgroundProcesses| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityManager| |killBackgroundProcesses| |java.lang.String|
|com.android.commands.am.Am| |runKill| ||
|android.app.ActivityManager| |restartPackage| |java.lang.String|
|com.android.commands.am.Am| |onRun| ||
|com.android.internal.os.BaseCommand| |onRun| ||
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|com.android.server.am.ActivityManagerService| |killAllBackgroundProcesses| ||
|android.app.ActivityManagerNative| |killAllBackgroundProcesses| ||
|android.app.IActivityManager| |killAllBackgroundProcesses| ||
|com.android.commands.am.Am| |runKillAll| ||
|com.android.server.ConsumerIrService| |transmit| |java.lang.String,int,int[]|
|android.hardware.IConsumerIrService$Stub$Proxy| |transmit| |java.lang.String,int,int[]|
|android.hardware.IConsumerIrService$Stub| |transmit| |java.lang.String,int,int[]|
|android.hardware.IConsumerIrService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.hardware.IConsumerIrService| |transmit| |java.lang.String,int,int[]|
|com.android.server.ConsumerIrService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.hardware.ConsumerIrManager| |transmit| |int,int[]|
|com.android.server.ConsumerIrService| |getCarrierFrequencies| ||
|android.hardware.IConsumerIrService$Stub$Proxy| |getCarrierFrequencies| ||
|android.hardware.IConsumerIrService$Stub| |getCarrierFrequencies| ||
|android.hardware.IConsumerIrService| |getCarrierFrequencies| ||
|android.hardware.ConsumerIrManager| |getCarrierFrequencies| ||
|android.hardware.Camera| |open| ||
|android.hardware.Camera| |native_setup| |java.lang.Object|
|android.media.MediaRecorder| |setVideoSource| |int|
|android.filterpacks.videosink.MediaEncoderFilter| |updateMediaRecorderParams| ||
|android.filterpacks.videosink.MediaEncoderFilter| |startRecording| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |process| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |open| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |process| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |open| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |performOpen| |android.filterfw.core.FilterContext|
|android.filterfw.core.FilterFunction| |execute| |android.filterfw.core.KeyValueMap|
|android.filterfw.core.SyncRunner| |processFilterNode| |android.filterfw.core.Filter|
|android.filterpacks.base.CallbackFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |performProcess| |android.filterfw.core.FilterContext|
|android.filterfw.core.FilterFunction| |executeWithArgList| |java.lang.Object[]|
|android.filterfw.core.SyncRunner| |performStep| ||
|android.media.effect.SingleFilterEffect| |apply| |int,int,int,int|
|android.media.effect.SizeChangeEffect| |apply| |int,int,int,int|
|android.filterfw.core.AsyncRunner$AsyncRunnerTask| |doInBackground| |android.filterfw.core.SyncRunner[]|
|android.filterfw.core.SyncRunner| |step| ||
|android.filterfw.core.SyncRunner| |run| ||
|android.media.effect.effects.AutoFixEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BitmapOverlayEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BlackWhiteEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BrightnessEffect| |apply| |int,int,int,int|
|android.media.effect.effects.ColorTemperatureEffect| |apply| |int,int,int,int|
|android.media.effect.effects.ContrastEffect| |apply| |int,int,int,int|
|android.media.effect.effects.CrossProcessEffect| |apply| |int,int,int,int|
|android.media.effect.effects.DocumentaryEffect| |apply| |int,int,int,int|
|android.media.effect.effects.DuotoneEffect| |apply| |int,int,int,int|
|android.media.effect.effects.FillLightEffect| |apply| |int,int,int,int|
|android.media.effect.effects.FisheyeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.FlipEffect| |apply| |int,int,int,int|
|android.media.effect.effects.GrainEffect| |apply| |int,int,int,int|
|android.media.effect.effects.GrayscaleEffect| |apply| |int,int,int,int|
|android.media.effect.effects.LomoishEffect| |apply| |int,int,int,int|
|android.media.effect.effects.NegativeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.PosterizeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.RedEyeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.SaturateEffect| |apply| |int,int,int,int|
|android.media.effect.effects.SepiaEffect| |apply| |int,int,int,int|
|android.media.effect.effects.SharpenEffect| |apply| |int,int,int,int|
|android.media.effect.effects.StraightenEffect| |apply| |int,int,int,int|
|android.media.effect.effects.TintEffect| |apply| |int,int,int,int|
|android.media.effect.effects.VignetteEffect| |apply| |int,int,int,int|
|android.media.effect.effects.CropEffect| |apply| |int,int,int,int|
|android.media.effect.effects.RotateEffect| |apply| |int,int,int,int|
|android.filterfw.core.AsyncRunner$AsyncRunnerTask| |doInBackground| |java.lang.Object[]|
|android.filterfw.core.GraphRunner| |run| ||
|android.media.effect.FilterGraphEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BackDropperEffect| |apply| |int,int,int,int|
|com.android.server.NsdService| |getMessenger| ||
|android.net.nsd.INsdManager$Stub$Proxy| |getMessenger| ||
|android.net.nsd.INsdManager$Stub| |getMessenger| ||
|android.net.nsd.INsdManager| |getMessenger| ||
|android.net.nsd.INsdManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.nsd.NsdManager| |getMessenger| ||
|com.android.server.NsdService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.nsd.NsdManager| |init| ||
|android.net.nsd.NsdManager| |<init>| |android.content.Context,android.net.nsd.INsdManager|
|android.app.DownloadManager| |getUriForDownloadedFile| |long|
|android.app.DownloadManager| |enqueue| |android.app.DownloadManager$Request|
|android.provider.Downloads| |removeAllDownloadsByPackage| |android.content.Context,java.lang.String,java.lang.String|
|com.android.server.BootReceiver| |removeOldUpdatePackages| |android.content.Context|
|com.android.server.BootReceiver| |access$100| |com.android.server.BootReceiver,android.content.Context|
|com.android.server.BootReceiver$1| |run| ||
|com.android.server.BootReceiver| |onReceive| |android.content.Context,android.content.Intent|
|android.app.DownloadManager| |addCompletedDownload| |java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,boolean|
|android.app.DownloadManager| |addCompletedDownload| |java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl| |startActivityAsUser| |android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle|
|android.content.pm.ILauncherApps$Stub$Proxy| |startActivityAsUser| |android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle|
|android.content.pm.ILauncherApps$Stub| |startActivityAsUser| |android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle|
|android.content.pm.ILauncherApps$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.ILauncherApps| |startActivityAsUser| |android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.LauncherApps| |startMainActivity| |android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle|
|com.android.internal.util.AsyncChannel| |connectSrcHandlerToPackageSync| |android.content.Context,android.os.Handler,java.lang.String,java.lang.String|
|com.android.internal.telephony.dataconnection.DcAsyncChannel| |connectSrcHandlerToPackageSync| |android.content.Context,android.os.Handler,java.lang.String,java.lang.String|
|com.android.internal.telephony.dataconnection.DcSwitchAsyncChannel| |connectSrcHandlerToPackageSync| |android.content.Context,android.os.Handler,java.lang.String,java.lang.String|
|com.android.internal.util.AsyncChannel$1ConnectAsync| |run| ||
|java.net.DatagramSocket| |<init>| |int|
|java.net.HttpURLConnection| |<init>| |int|
|java.net.HttpURLConnection| |connect| ||
|com.squareup.okhttp.internal.http.DelegatingHttpsURLConnection| |connect| ||
|com.squareup.okhttp.internal.http.HttpsURLConnectionImpl| |connect| ||
|com.squareup.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection| |connect| ||
|java.net.MulticastSocket| |<init>| |int|
|java.net.NetworkInterface| |<init>| |int|
|java.net.ServerSocket| |<init>| |int|
|java.net.ServerSocket| |bind| |java.net.SocketAddress|
|com.android.internal.telephony.test.ModelInterpreter| |<init>| |java.net.InetSocketAddress|
|java.net.Socket| |<init>| |int|
|java.net.URL| |getContent| ||
|java.net.URL| |openConnection| ||
|android.media.MediaHTTPConnection| |seekTo| |long|
|android.media.MediaHTTPConnection| |readAt| |long,byte[],int|
|android.media.MediaHTTPConnection| |getMIMEType| ||
|android.media.MediaHTTPConnection| |getSize| ||
|android.media.IMediaHTTPConnection$Stub$Proxy| |getMIMEType| ||
|android.media.IMediaHTTPConnection$Stub| |getMIMEType| ||
|android.media.IMediaHTTPConnection$Stub$Proxy| |getSize| ||
|android.media.IMediaHTTPConnection$Stub| |getSize| ||
|android.media.IMediaHTTPConnection| |getMIMEType| ||
|android.media.IMediaHTTPConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.media.IMediaHTTPConnection| |getSize| ||
|android.media.MediaHTTPConnection| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|java.net.URL| |openStream| ||
|java.net.URLConnection| |connect| ||
|java.net.URLConnection| |getInputStream| ||
|com.android.server.connectivity.PacManager| |get| |android.net.Uri|
|com.squareup.okhttp.internal.http.JavaApiConverter| |createOkResponse| |java.net.URI,java.net.URLConnection|
|com.android.server.connectivity.PacManager| |access$200| |android.net.Uri|
|com.squareup.okhttp.HttpResponseCache| |put| |java.net.URI,java.net.URLConnection|
|com.android.server.connectivity.PacManager$1| |run| ||
|org.apache.http.impl.client.DefaultHttpClient| |<init>| |int|
|org.apache.http.impl.client.DefaultHttpClient| |execute| |org.apache.http.client.methods.HttpUriRequest|
|com.android.server.job.JobSchedulerService$JobSchedulerStub| |canPersistJobs| |int,int|
|com.android.server.job.JobSchedulerService$JobSchedulerStub| |schedule| |android.app.job.JobInfo|
|android.app.job.IJobScheduler$Stub$Proxy| |schedule| |android.app.job.JobInfo|
|android.app.job.IJobScheduler$Stub| |schedule| |android.app.job.JobInfo|
|android.app.job.IJobScheduler| |schedule| |android.app.job.JobInfo|
|android.app.job.IJobScheduler$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.JobSchedulerImpl| |schedule| |android.app.job.JobInfo|
|com.android.server.job.JobSchedulerService$JobSchedulerStub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService| |finishUserBoot| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |finishUserSwitch| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityStackSupervisor| |activityIdleInternalLocked| |android.os.IBinder,boolean,android.content.res.Configuration|
|com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler| |activityIdleInternal| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleTimeoutLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleLocked| ||
|com.android.server.am.ActivityStack| |backgroundResourcesReleased| ||
|com.android.server.am.ActivityStack| |clearLaunchTime| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStack| |completeResumeLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityRecord| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStack| |completePauseLocked| |boolean|
|com.android.server.am.ActivityStack| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.am.ActivityStack| |releaseBackgroundResources| ||
|com.android.server.am.ActivityStack| |startPausingLocked| |boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |access$400| |com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |broadcastIntentLocked| |com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |finishInstrumentationLocked| |com.android.server.am.ProcessRecord,int,android.os.Bundle|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |forceStopUserLocked| |int,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |shutdownLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |activitySleptLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |goingToSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |scheduleSleepTimeout| ||
|com.android.server.am.ActivityStack| |activityPausedLocked| |android.os.IBinder,boolean|
|com.android.server.am.ActivityStackSupervisor| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.am.ActivityStack| |goToSleep| ||
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.ActivityStack| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |pauseBackStacks| |boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |setSurfaceLocked| |android.view.Surface,int,int,int|
|com.android.server.am.ActivityStackSupervisor| |pauseChildStacks| |com.android.server.am.ActivityRecord,boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService$7| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |deliverPreBootCompleted| |java.lang.Runnable,java.util.ArrayList,int|
|com.android.server.am.ActivityManagerService| |updateConfigurationLocked| |android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean|
|com.android.server.am.ActivityManagerService| |access$200| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |closeSystemDialogsLocked| |java.lang.String|
|com.android.server.am.ActivityManagerService| |finishBooting| ||
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppDiedLocked| |com.android.server.am.ProcessRecord,boolean,boolean|
|com.android.server.am.ActivityManagerService| |finishUserStop| |com.android.server.am.UserStartedState|
|android.view.IApplicationToken$Stub$Proxy| |windowsVisible| ||
|android.view.IApplicationToken$Stub| |windowsVisible| ||
|com.android.server.am.ActivityManagerService| |shutdown| |int|
|com.android.server.am.ActivityManagerService| |updateSleepIfNeededLocked| ||
|com.android.server.am.ActivityStack| |awakeFromSleepingLocked| ||
|com.android.server.am.ActivityStackSupervisor| |attachApplicationLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.CompatModePackages| |setFrontActivityScreenCompatModeLocked| |int|
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |java.lang.String,int|
|android.app.ActivityManagerNative| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |systemReady| |java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |retrieveSettings| ||
|com.android.server.am.ActivityManagerService$29| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |appNotResponding| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |ensureBootCompleted| ||
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |attachApplicationLocked| |android.app.IApplicationThread,int|
|com.android.server.am.ActivityManagerService| |removeProcessLocked| |com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord,int,android.app.IApplicationThread|
|com.android.server.am.ActivityManagerService$28| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.view.IApplicationToken$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IApplicationToken| |windowsVisible| ||
|android.app.ActivityManagerNative| |shutdown| |int|
|com.android.server.am.ActivityManagerService$12| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |finishRunningVoiceLocked| ||
|com.android.server.am.ActivityManagerService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityManagerService| |startRunningVoiceLocked| ||
|com.android.server.am.ActivityStackSupervisor| |comeOutOfSleepIfNeededLocked| ||
|com.android.server.am.ActivityManagerService| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.am.CompatModeDialog$1| |onCheckedChanged| |android.widget.CompoundButton,boolean|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService$14| |run| ||
|com.android.server.SystemServer| |startOtherServices| ||
|android.content.IIntentReceiver$Stub$Proxy| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.content.IIntentReceiver$Stub| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.am.ActiveServices| |serviceTimeout| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService$10| |run| ||
|com.android.server.am.BroadcastQueue$AppNotResponding| |run| ||
|android.app.ActivityManagerNative| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |crashApplication| |com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppCrashLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killPackageProcessesLocked| |java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActivityManagerService$AppDeathRecipient| |binderDied| ||
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityRecord$Token| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |shutdown| |int|
|com.android.server.am.ActivityManagerService$LocalService| |onWakefulnessChanged| |int|
|android.app.ActivityManagerNative| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService| |killApplication| |java.lang.String,int,java.lang.String|
|com.android.server.SystemServer| |run| ||
|android.content.IIntentReceiver$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IIntentReceiver| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.IActivityManager| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrashInner| |java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo|
|android.app.IActivityManager| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|android.view.IApplicationToken$Stub$Proxy| |keyDispatchingTimedOut| |java.lang.String|
|android.view.IApplicationToken$Stub| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService| |makeAppCrashingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killAppAtUsersRequest| |com.android.server.am.ProcessRecord,android.app.Dialog|
|com.android.server.am.ActivityManagerService| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |bringUpServiceLocked| |com.android.server.am.ServiceRecord,int,boolean,boolean|
|com.android.server.am.ActivityManagerService| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |processNextBroadcast| |boolean|
|com.android.server.am.ActivityManagerService$LocalService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |realStartServiceLocked| |com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean|
|com.android.server.power.ShutdownThread| |run| ||
|android.app.IActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.pm.PackageManagerService| |scanPackageDirtyLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageLI| |java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |replaceSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.SystemServer| |main| |java.lang.String[]|
|android.app.LoadedApk$ReceiverDispatcher$InnerReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.PendingIntent$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IntentSender$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.am.Am$IntentReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.monkey.MonkeyNetworkMonitor| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$13| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$15| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$24| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$25| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$28| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$29| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$8| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService$12| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.BroadcastQueue| |performReceiveLocked| |com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.wm.WindowManagerService| |performEnableScreen| ||
|android.app.ActivityManagerNative| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener$NativeCrashReporter| |run| ||
|com.android.server.wm.InputMonitor| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.view.IApplicationToken| |keyDispatchingTimedOut| |java.lang.String|
|android.app.ActivityManagerNative| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceInnerLocked| |com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |performServiceRestartLocked| |com.android.server.am.ServiceRecord|
|android.app.ActivityManagerNative| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |broadcastTimeoutLocked| |boolean|
|com.android.server.am.BroadcastQueue| |scheduleBroadcastsLocked| ||
|android.app.ActivityManagerInternal| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |attachApplicationLocked| |com.android.server.am.ProcessRecord,java.lang.String|
|com.android.server.power.ShutdownThread| |beginShutdownSequence| |android.content.Context|
|android.app.ActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |runScreenCompat| ||
|com.android.server.pm.PackageManagerService| |scanPackageLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |java.io.File,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageX| |java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installNewPackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |replaceNonSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |unloadMediaPackages| |android.util.ArrayMap,int[],boolean|
|com.android.server.pm.PackageManagerService| |replacePackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.am.BroadcastQueue| |deliverToRegisteredReceiverLocked| |com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenAfterBoot| ||
|com.android.server.wm.WindowManagerService| |performBootTimeout| ||
|com.android.server.wm.WindowManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeededLocked| ||
|com.android.server.wm.WindowManagerService| |checkBootAnimationCompleteLocked| ||
|android.app.IActivityManager| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |consumeNativeCrashData| |java.io.FileDescriptor|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.app.IActivityManager| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceLocked| |android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int|
|com.android.server.am.ActiveServices$ServiceMap| |rescheduleDelayedStarts| ||
|com.android.server.am.ActiveServices$ServiceRestarter| |run| ||
|android.app.IActivityManager| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.ActivityManagerService| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |setBroadcastTimeoutLocked| |long|
|com.android.server.am.ActivityManagerService| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.BroadcastQueue| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |createRelroFile| |boolean,java.lang.String[]|
|com.android.server.power.ShutdownThread| |access$000| |android.content.Context|
|com.android.server.power.ShutdownThread| |shutdownInner| |android.content.Context,boolean|
|com.android.commands.am.Am| |onRun| ||
|com.android.server.pm.PackageManagerService| |deleteSystemPackageLI| |com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |<init>| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService| |loadMediaPackages| |android.util.ArrayMap,int[]|
|com.android.server.pm.PackageManagerService| |scanDirLI| |java.io.File,int,int,long|
|com.android.server.pm.PackageManagerService| |access$4000| |com.android.server.pm.PackageManagerService,java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installPackageLI| |com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |updateExternalMediaStatusInner| |boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |enableScreenAfterBoot| ||
|com.android.server.am.ActivityManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedInner| |boolean|
|com.android.server.wm.WindowStateAnimator| |performShowLocked| ||
|com.android.server.wm.WindowStateAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$1100| |com.android.server.wm.WindowManagerService|
|com.android.internal.os.RuntimeInit| |wtf| |java.lang.String,java.lang.Throwable,boolean|
|android.app.IActivityManager| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |run| ||
|com.android.server.input.InputManagerService| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices$ServiceMap| |ensureNotStartingBackground| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService| |bindToAgentSynchronous| |android.content.pm.ApplicationInfo,int|
|android.app.ActivityManagerNative| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| |java.lang.String[]|
|com.android.server.power.ShutdownThread$1| |onClick| |android.content.DialogInterface,int|
|com.android.server.power.ShutdownThread| |reboot| |android.content.Context,java.lang.String,boolean|
|com.android.server.power.ShutdownThread| |rebootSafeMode| |android.content.Context,boolean|
|com.android.server.power.ShutdownThread| |shutdown| |android.content.Context,boolean|
|com.android.internal.os.BaseCommand| |onRun| ||
|com.android.server.pm.PackageManagerService| |main| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService$14| |run| ||
|com.android.server.pm.PackageManagerService$8| |run| ||
|com.android.server.pm.PackageManagerService| |access$2300| |com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |access$4500| |com.android.server.pm.PackageManagerService,boolean,boolean,boolean|
|com.android.server.pm.PackageManagerService| |scanAvailableAsecs| ||
|android.app.ActivityManagerNative| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub$Proxy| |enableScreenIfNeeded| ||
|android.view.IWindowManager$Stub| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedLoop| ||
|com.android.server.wm.AppWindowAnimator| |showAllWindowsLocked| ||
|com.android.server.wm.WindowAnimator| |updateWindowsLocked| |int|
|com.android.server.wm.WindowStateAnimator| |commitFinishDrawingLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean|
|com.android.server.wm.WindowState| |setAppOpVisibilityLw| |boolean|
|android.util.Log$1| |onTerribleFailure| |java.lang.String,android.util.Log$TerribleFailure,boolean|
|com.android.internal.os.RuntimeInit$UncaughtHandler| |uncaughtException| |java.lang.Thread,java.lang.Throwable|
|com.android.server.am.ActivityManagerService| |startObservingNativeCrashes| ||
|com.android.server.am.ActiveServices| |bringDownServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$FullBackupEngine| |backupOnePackage| |android.content.pm.PackageInfo|
|com.android.server.backup.BackupManagerService$FullRestoreEngine| |restoreOneFile| |java.io.InputStream|
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |restoreOneFile| |java.io.InputStream,byte[]|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeNextAgent| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreKeyValue| ||
|android.app.IActivityManager| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |cleanUpApplicationRecordLocked| |com.android.server.am.ProcessRecord,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |startAppProblemLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|android.webkit.WebViewFactory| |onWebViewUpdateInstalled| ||
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| ||
|com.android.server.power.PowerManagerService$3| |run| ||
|com.android.server.wm.WindowManagerService| |rebootSafeMode| |boolean|
|com.android.server.wm.WindowManagerService| |shutdown| |boolean|
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|com.android.server.SystemServer| |startBootstrapServices| ||
|com.android.server.pm.PackageManagerService$6| |run| ||
|com.android.server.pm.PackageManagerService$11| |run| ||
|com.android.server.MountService$3| |run| ||
|android.app.IActivityManager| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowManager| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLocked| ||
|com.android.server.wm.WindowAnimator| |testTokenMayBeDrawnLocked| |int|
|com.android.server.wm.WindowManagerService| |handleAppTransitionReadyLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowAnimator| |animateLocked| ||
|android.view.WindowManagerPolicy$WindowState| |hideLw| |boolean|
|com.android.server.wm.DisplayContent| |switchUserStacks| |int|
|com.android.server.wm.WindowManagerService| |updateAppOpsState| ||
|com.android.server.SystemServer$2| |run| ||
|com.android.server.am.ActiveServices| |forceStopLocked| |java.lang.String,int,boolean,boolean|
|com.android.server.am.ActiveServices| |bringDownServiceIfNeededLocked| |com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |killServicesLocked| |com.android.server.am.ProcessRecord,boolean|
|com.android.server.am.ActiveServices| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|com.android.server.backup.BackupManagerService$PerformAdbBackupTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$EngineThread| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |execute| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |execute| ||
|com.android.commands.monkey.MonkeyNetworkMonitor| |register| |android.app.IActivityManager|
|com.android.server.am.ActivityManagerService| |trimApplications| ||
|com.android.server.am.ActivityManagerService| |makeAppNotRespondingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |access$300| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord|
|com.android.server.webkit.WebViewUpdateService| |onWebViewUpdateInstalled| ||
|android.view.WindowManagerPolicy$WindowManagerFuncs| |rebootSafeMode| |boolean|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |shutdown| |boolean|
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|com.android.server.MountService| |onDaemonConnected| ||
|com.android.server.pm.PackageManagerService| |performBootDexOpt| |android.content.pm.PackageParser$Package,int,int|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| ||
|com.android.server.wm.WindowManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.policy.impl.PhoneWindowManager| |finishScreenTurningOn| ||
|com.android.server.wm.WindowManagerService| |computeNewConfiguration| ||
|com.android.server.wm.WindowManagerService| |setTokenVisibilityLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$400| |com.android.server.wm.WindowManagerService|
|com.android.server.wm.WindowManagerService| |addTask| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |moveStackWindowsLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reconfigureDisplayLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.WindowManagerService| |removeWindowInnerLocked| |com.android.server.wm.Session,com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |resizeStack| |int,android.graphics.Rect|
|com.android.server.wm.WindowManagerService| |setCurrentUser| |int,int[]|
|com.android.server.wm.WindowManagerService| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |setUniverseTransformLocked| |com.android.server.wm.WindowState,float,float,float,float,float,float,float|
|com.android.server.wm.WindowManagerService| |unsetAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken,boolean,boolean|
|com.android.server.wm.WindowAnimator| |access$000| |com.android.server.wm.WindowAnimator|
|com.android.internal.policy.impl.BarController| |setBarShowingLw| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |finishPostLayoutPolicyLw| ||
|com.android.internal.policy.impl.PhoneWindowManager| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|com.android.server.wm.WindowManagerService$5| |onOpChanged| |int,java.lang.String|
|com.android.server.am.ActiveServices| |removeConnectionLocked| |com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActiveServices| |stopServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |execute| ||
|com.android.commands.monkey.Monkey| |getSystemInterfaces| ||
|com.android.server.am.ActivityManagerService| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]|
|com.android.server.webkit.WebViewUpdateService| |access$000| |com.android.server.webkit.WebViewUpdateService|
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |powerLongPress| ||
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|com.android.server.INativeDaemonConnectorCallbacks| |onDaemonConnected| ||
|android.content.pm.IPackageManager$Stub$Proxy| |performBootDexOpt| ||
|android.content.pm.IPackageManager$Stub| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishKeyguardDrawn| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishWindowsDrawn| ||
|com.android.server.am.ActivityManagerService| |updateConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |prepareAppTransition| |int,boolean|
|com.android.server.wm.WindowManagerService| |updateRotationUncheckedLocked| |boolean|
|com.android.server.wm.WindowManagerService| |makeWindowFreezingScreenIfNeededLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |requestTraversalLocked| ||
|com.android.server.am.ActivityStackSupervisor| |moveTaskToStackLocked| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |setForcedDisplayDensityLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.WindowManagerService| |setForcedDisplaySizeLocked| |com.android.server.wm.DisplayContent,int,int|
|com.android.server.wm.WindowManagerService| |setOverscanLocked| |com.android.server.wm.DisplayContent,int,int,int,int|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.TaskStack| |detachDisplay| ||
|android.view.IWindowManager$Stub$Proxy| |setNewConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |startAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken|
|com.android.server.wm.WindowAnimator$1| |run| ||
|com.android.internal.policy.impl.BarController| |checkHiddenLw| ||
|com.android.internal.policy.impl.BarController| |adjustSystemUiVisibilityLw| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |beginLayoutLw| |boolean,int,int,int|
|android.view.WindowManagerPolicy| |finishPostLayoutPolicyLw| ||
|android.view.WindowManagerPolicy| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActiveServices| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |executeNextState| |com.android.server.backup.BackupManagerService$BackupState|
|com.android.commands.monkey.Monkey| |run| |java.lang.String[]|
|android.app.ActivityManagerNative| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |addAppLocked| |android.content.pm.ApplicationInfo,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String|
|com.android.server.webkit.WebViewUpdateService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.policy.impl.GlobalActions$LongPressAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$Action| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$SinglePressAction| |onPress| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$800| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.server.NativeDaemonConnector| |listenToSocket| ||
|android.content.pm.IPackageManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$300| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$400| |com.android.internal.policy.impl.PhoneWindowManager|
|android.app.ActivityManagerNative| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub$Proxy| |prepareAppTransition| |int,boolean|
|android.view.IWindowManager$Stub| |prepareAppTransition| |int,boolean|
|com.android.server.am.ActivityManagerService| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStack| |moveTaskToBackLocked| |int|
|com.android.server.am.ActivityStack| |moveTaskToFrontLocked| |com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle,java.lang.String|
|com.android.server.am.ActivityStack| |updateTransitLocked| |int,android.os.Bundle|
|com.android.server.wm.WindowManagerService| |resumeRotationLocked| ||
|com.android.server.wm.WindowManagerService| |stopFreezingDisplayLocked| ||
|com.android.server.wm.WindowManagerService| |updateResizingWindows| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |createSurfaceLocked| ||
|com.android.server.wm.WindowManagerService$LocalService| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.wm.WindowManagerService| |handleDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayChangedLocked| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayRemovedLocked| |int|
|com.android.server.wm.WindowManagerService| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |requestTraversal| ||
|com.android.server.wm.WindowManagerService| |setAppFullscreen| |android.os.IBinder,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$9| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |clearClearableFlagsLw| ||
|com.android.server.wm.WindowManagerService| |detachStackLocked| |com.android.server.wm.DisplayContent,com.android.server.wm.TaskStack|
|android.view.IWindowManager| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |updateOrientationFromAppTokensLocked| |android.content.res.Configuration,android.os.IBinder|
|com.android.internal.policy.impl.PhoneWindowManager| |adjustSystemUiVisibilityLw| |int|
|android.view.WindowManagerPolicy| |beginLayoutLw| |boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |agentErrorCleanup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |beginBackup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |operationComplete| ||
|com.android.commands.monkey.Monkey| |main| |java.lang.String[]|
|android.app.IActivityManager| |setProcessLimit| |int|
|com.android.internal.policy.impl.GlobalActions$2| |onItemLongClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.internal.policy.impl.GlobalActions| |onClick| |android.content.DialogInterface,int|
|com.android.internal.policy.impl.GlobalActions| |handleShow| ||
|com.android.server.NativeDaemonConnector| |run| ||
|com.android.server.pm.PackageManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.WindowManagerPolicy| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |systemBooted| ||
|com.android.internal.policy.impl.PhoneWindowManager$1| |run| ||
|android.app.IActivityManager| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager| |prepareAppTransition| |int,boolean|
|android.app.ActivityManagerNative| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |findTaskToMoveToFrontLocked| |com.android.server.am.TaskRecord,int,android.os.Bundle,java.lang.String|
|com.android.server.wm.DragState| |unregister| ||
|com.android.server.wm.WindowManagerService| |access$500| |com.android.server.wm.WindowManagerService|
|android.view.WindowManagerInternal| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay| |<init>| |com.android.server.am.ActivityStackSupervisor,int,int,int|
|com.android.server.wm.WindowManagerService| |onDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |access$1000| |com.android.server.wm.WindowManagerService,int|
|com.android.server.wm.WindowManagerService| |access$900| |com.android.server.wm.WindowManagerService,int|
|android.view.IWindowManager$Stub$Proxy| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager$Stub| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService$LocalService| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemBarsLw| |android.view.WindowManagerPolicy$WindowState,int,int|
|com.android.server.wm.DisplayContent| |checkForDeferredActions| ||
|com.android.server.wm.WindowManagerService| |detachStack| |int|
|android.view.WindowManagerPolicy| |adjustSystemUiVisibilityLw| |int|
|com.android.server.wm.WindowManagerService| |performLayoutLockedInner| |com.android.server.wm.DisplayContent,boolean,boolean|
|com.android.server.am.ActivityManagerService| |removeTaskByIdLocked| |int,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeAgentForBackup| |java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |operationComplete| ||
|com.android.internal.policy.impl.GlobalActions| |access$1800| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.GlobalActions| |showDialog| |boolean,boolean|
|com.android.server.power.Notifier$2| |run| ||
|android.view.WindowManagerPolicy| |systemBooted| ||
|com.android.internal.app.LocalePicker| |updateLocale| |java.util.Locale|
|com.android.internal.telephony.MccTable| |setSystemLocale| |android.content.Context,java.lang.String,java.lang.String|
|com.android.internal.telephony.MccTable| |updateMccMncConfiguration| |android.content.Context,java.lang.String,boolean|
|com.android.server.MountService| |copyLocaleFromMountService| ||
|com.android.server.UiModeManagerService| |sendConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |displayReady| ||
|com.android.server.wm.WindowManagerService| |sendNewConfiguration| ||
|android.app.IActivityManager| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |setLockTaskModeLocked| |com.android.server.am.TaskRecord,boolean,java.lang.String|
|com.android.server.wm.DragState| |endDragLw| ||
|com.android.server.wm.Session| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.WindowManagerService| |prepareDragSurface| |android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface|
|com.android.server.wm.WindowManagerService| |startFreezingScreen| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayAddedLocked| |int|
|com.android.server.wm.WindowManagerService| |onDisplayChanged| |int|
|com.android.server.wm.WindowManagerService| |onDisplayRemoved| |int|
|android.view.IWindowManager| |keyguardGoingAway| |boolean,boolean|
|android.view.WindowManagerInternal| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemUiVisibilityLw| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |detachLocked| ||
|com.android.server.wm.WindowManagerService| |statusBarVisibilityChanged| |int|
|com.android.server.wm.WindowManagerService| |updateFocusedWindowLocked| |int,boolean|
|com.android.server.am.ActivityManagerService| |access$1400| |com.android.server.am.ActivityManagerService,int,boolean|
|com.android.server.am.ActivityManagerService| |removeTasksByPackageNameLocked| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |removeTasksByRemovedPackageComponentsLocked| |java.lang.String,int|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService| |opComplete| |int|
|com.android.internal.policy.impl.PhoneWindowManager| |showGlobalActionsInternal| ||
|com.android.internal.telephony.PhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |setLocaleFromCsim| ||
|com.android.internal.telephony.uicc.SIMRecords| |setLocaleFromUsim| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setProperties| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.PhoneFactory| |setDefaultSubscription| |int|
|com.android.internal.telephony.ServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |setDefaultFallbackSubId| |int|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLoaded| |int|
|com.android.server.MountService| |access$2000| |com.android.server.MountService|
|com.android.server.UiModeManagerService| |sendConfigurationAndStartDreamOrDockAppLocked| |java.lang.String|
|com.android.server.wm.WindowManagerService$DragInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|android.view.IWindowSession$Stub$Proxy| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.Session| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager$Stub$Proxy| |startFreezingScreen| |int,int|
|android.view.IWindowManager$Stub| |startFreezingScreen| |int,int|
|android.view.WindowManagerPolicy| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |onDisplayAdded| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayChangedLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayRemovedLocked| |int|
|com.android.server.display.DisplayManagerService| |scheduleTraversalLocked| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1900| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |requestTransientBars| |android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |detachLocked| ||
|android.view.IWindowManager$Stub$Proxy| |statusBarVisibilityChanged| |int|
|android.view.IWindowManager$Stub| |statusBarVisibilityChanged| |int|
|com.android.server.backup.BackupManagerService| |handleTimeout| |int,java.lang.Object|
|com.android.server.backup.Trampoline| |opComplete| |int|
|com.android.internal.policy.impl.PhoneWindowManager$4| |run| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.gsm.GSMPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.sip.SipPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionInfoUpdater$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |updateAfterBroadcastLocked| |java.lang.String,int,int|
|com.android.server.UiModeManagerService| |updateLocked| |int,int|
|android.view.IWindowSession| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession$Stub$Proxy| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowSession$Stub| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager| |startFreezingScreen| |int,int|
|com.android.server.display.DisplayPowerController| |setScreenState| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayRemoved| |int|
|com.android.server.display.DisplayManagerService| |access$1600| |com.android.server.display.DisplayManagerService,boolean|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAddedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceChanged| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemovedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |requestGlobalDisplayStateInternal| |int|
|com.android.server.display.DisplayManagerService| |setDisplayInfoOverrideFromWindowManagerInternal| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |setDisplayPropertiesInternal| |int,boolean,float,boolean|
|com.android.server.display.DisplayManagerService| |windowManagerAndInputReady| ||
|com.android.internal.policy.impl.PhoneWindowManager$17| |onReceive| |android.content.Context,android.content.Intent|
|android.view.WindowManagerPolicy| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1700| |com.android.internal.policy.impl.PhoneWindowManager,android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTaskListEmptyLocked| ||
|android.view.IWindowManager| |statusBarVisibilityChanged| |int|
|com.android.server.backup.BackupManagerService| |prepareOperationTimeout| |int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask|
|android.app.backup.IBackupManager$Stub$Proxy| |opComplete| |int|
|android.app.backup.IBackupManager$Stub| |opComplete| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.uicc.IccRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.RuimRecords| |onRecordLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onRecordLoaded| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |addSubInfoRecord| |java.lang.String,int|
|com.android.server.UiModeManagerService| |access$000| |com.android.server.UiModeManagerService,java.lang.String,int,int|
|com.android.server.UiModeManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |updateDockState| |int|
|com.android.server.UiModeManagerService| |updateTwilight| ||
|android.view.View| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.wm.Session| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|com.android.server.display.DisplayPowerController| |animateScreenStateChange| |int,boolean|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |createVirtualDisplayInternal| |android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAdded| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$1400| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemoved| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |releaseVirtualDisplayInternal| |android.os.IBinder|
|com.android.server.display.DisplayManagerService| |access$3700| |com.android.server.display.DisplayManagerService,int|
|com.android.server.display.DisplayManagerService| |access$4100| |com.android.server.display.DisplayManagerService,int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |access$4300| |com.android.server.display.DisplayManagerService,int,boolean,float,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$18| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromRight| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromTop| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTaskListEmptyLocked| ||
|com.android.server.backup.BackupManagerService$FullBackupEngine$FullBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$FullBackupObbConnection| |backupObbs| |android.content.pm.PackageInfo,java.io.OutputStream|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |initiateOneRestore| |android.content.pm.PackageInfo,int|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreFinished| ||
|android.app.backup.IBackupManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.IBackupManager| |opComplete| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.uicc.IccRecords| |onRecordLoaded| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollState| ||
|com.android.internal.telephony.ISub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.UiModeManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.SystemService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |access$100| |com.android.server.UiModeManagerService,int|
|com.android.server.UiModeManagerService$4| |onTwilightStateChanged| ||
|android.app.ActivityView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.FragmentBreadCrumbs| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.MediaRouteButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.NativeActivity$NativeContentView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.SearchDialog$SearchBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.appwidget.AppWidgetHostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.filterfw.core.FilterSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.gesture.GestureOverlayView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.KeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLineBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.TtmlRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView$3| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$CueLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$RegionLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$SpanLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.opengl.GLSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.preference.PreferenceFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSTextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.GhostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.LayoutInflater$BlinkLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.SurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.TextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewOverlay$OverlayViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewStub| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.webkit.WebView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsoluteLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSpinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuPresenter$OverflowMenuButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActivityChooserView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AnalogClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AppSecurityPermissions$PermissionItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Button| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarViewLegacyDelegate$WeekView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckedTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Chronometer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CompoundButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DatePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DateTimeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DayPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DialerFilter| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DigitalClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$HandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$InsertionHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionEndHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionStartHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.EditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ExpandableListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.FrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Gallery| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.HorizontalScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.LinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListPopupWindow$DropDownListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MediaController| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MultiAutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker$CustomEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.PopupWindow$PopupViewContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.QuickContactBadge| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadialTimePickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RatingBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RelativeLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView$SearchAutoComplete| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SimpleMonthView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SlidingDrawer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Space| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Spinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView$StackFrame| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Switch| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabHost| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableRow| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextViewWithCircularIndicator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TimePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ToggleButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Toolbar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TwoLineListItem| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.VideoView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.YearPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButtonsController$Container| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomControls| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.AlertController$RecycleListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.PlatLogoActivity$1| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.RecentApplicationsBackground| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ActionMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ExpandedMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ListMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AbsActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccessibleDateAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccountItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarOverlayLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView$HomeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.DialogTitle| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.FaceUnlockView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LockPatternView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PasswordEntryKeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PointerLocationView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PreferenceImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ResolverDrawerLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.RotarySelector| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView$TabView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SizeAdaptiveLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SlidingTab| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SubtitleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SwipeDismissLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.TextProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WaveView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WeightedLinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.display.DisplayPowerController| |updatePowerState| ||
|com.android.server.display.DisplayAdapter$Listener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |access$3200| |com.android.server.display.DisplayManagerService,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |access$1300| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayManagerService| |access$1500| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$3500| |com.android.server.display.DisplayManagerService,android.os.IBinder|
|com.android.server.display.DisplayManagerService$LocalService$1| |requestDisplayState| |int|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromRight| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromTop| ||
|com.android.server.am.ActivityStack| |finishAllActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |removeTask| |com.android.server.am.TaskRecord,java.lang.String|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |release| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |startRestore| ||
|com.android.server.backup.Trampoline| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.BackupAgent$BackupServiceBinder| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.PhoneFactory| |getGsmPhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhone| |android.content.Context|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.ServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.ServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.gsm.GSMPhone| |setOperatorBrandOverride| |java.lang.String|
|android.telephony.SubscriptionManager| |addSubscriptionInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.AlarmManagerService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.fingerprint.FingerprintService| |onBootPhase| |int|
|com.android.server.lights.LightsService| |onBootPhase| |int|
|com.android.server.media.MediaSessionService| |onBootPhase| |int|
|com.android.server.media.projection.MediaProjectionManagerService| |onBootPhase| |int|
|com.android.server.MmsServiceBroker| |onBootPhase| |int|
|com.android.server.PersistentDataBlockService| |onBootPhase| |int|
|com.android.server.pm.Installer| |onBootPhase| |int|
|com.android.server.pm.LauncherAppsService| |onBootPhase| |int|
|com.android.server.print.PrintManagerService| |onBootPhase| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onBootPhase| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onBootPhase| |int|
|com.android.server.SystemServiceManager| |startBootPhase| |int|
|com.android.server.twilight.TwilightService| |onBootPhase| |int|
|com.android.server.usage.UsageStatsService| |onBootPhase| |int|
|com.android.server.webkit.WebViewUpdateService| |onBootPhase| |int|
|com.android.server.UiModeManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.twilight.TwilightListener| |onTwilightStateChanged| ||
|android.widget.Editor| |performLongClick| |boolean|
|com.android.server.display.DisplayPowerController| |access$400| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |debounceProximitySensor| ||
|com.android.server.display.DisplayAdapter$2| |run| ||
|com.android.server.display.DisplayAdapter$Listener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayBlanker| |requestDisplayState| |int|
|android.hardware.display.DisplayManagerInternal| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|android.hardware.display.DisplayManagerInternal| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener| |onPointerEvent| |android.view.MotionEvent|
|com.android.server.am.ActivityRecord| |setTask| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord|
|android.app.IActivityContainer$Stub$Proxy| |release| ||
|android.app.IActivityContainer$Stub| |release| ||
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |release| ||
|android.app.IBackupAgent$Stub$Proxy| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.internal.telephony.PhoneFactory| |getCdmaPhone| |int|
|com.android.internal.telephony.PhoneProxy| |deleteAndCreatePhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhones| |android.content.Context|
|com.android.internal.telephony.imsphone.ImsPhoneFactory| |makePhone| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.sip.SipPhoneFactory| |makePhone| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.PhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |updateSubscriptionInfoByIccId| ||
|com.android.server.twilight.TwilightService$TwilightListenerRecord| |run| ||
|android.widget.TextView| |performLongClick| ||
|com.android.server.display.DisplayPowerController$ScreenOnUnblocker| |onScreenOn| ||
|com.android.server.display.DisplayPowerController| |sendUpdatePowerStateLocked| ||
|com.android.server.display.DisplayPowerController| |access$500| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |handleProximitySensorEvent| |long,boolean|
|com.android.server.display.DisplayAdapter$1| |run| ||
|com.android.server.display.DisplayPowerState$PhotonicModulator| |requestDisplayState| |int|
|com.android.server.wm.WindowManagerService| |computeScreenConfigurationLocked| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |newDisplayContentLocked| |android.view.Display|
|com.android.server.am.ActivityStack| |resetTargetTaskIfNeededLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.am.ActivityStack| |resetAffinityTaskIfNeededLocked| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int|
|android.app.IActivityContainer$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityContainer| |release| ||
|android.app.IBackupAgent$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IBackupAgent| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|com.android.internal.telephony.PhoneProxy| |phoneObjectUpdater| |int|
|com.android.internal.telephony.PhoneFactory| |makeImsPhone| |com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.PhoneFactory| |makeSipPhone| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.Phone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.Phone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimAbsent| |int|
|android.inputmethodservice.ExtractButton| |performLongClick| ||
|android.inputmethodservice.ExtractEditText| |performLongClick| ||
|android.media.ClosedCaptionWidget$CCLineBox| |performLongClick| ||
|android.widget.AutoCompleteTextView| |performLongClick| ||
|android.widget.Button| |performLongClick| ||
|android.widget.CheckBox| |performLongClick| ||
|android.widget.CheckedTextView| |performLongClick| ||
|android.widget.Chronometer| |performLongClick| ||
|android.widget.CompoundButton| |performLongClick| ||
|android.widget.DateTimeView| |performLongClick| ||
|android.widget.DigitalClock| |performLongClick| ||
|android.widget.EditText| |performLongClick| ||
|android.widget.MultiAutoCompleteTextView| |performLongClick| ||
|android.widget.NumberPicker$CustomEditText| |performLongClick| ||
|android.widget.RadioButton| |performLongClick| ||
|android.widget.SearchView$SearchAutoComplete| |performLongClick| ||
|android.widget.Switch| |performLongClick| ||
|android.widget.TextClock| |performLongClick| ||
|android.widget.TextViewWithCircularIndicator| |performLongClick| ||
|android.widget.ToggleButton| |performLongClick| ||
|com.android.internal.view.menu.ActionMenuItemView| |performLongClick| ||
|com.android.internal.view.menu.IconMenuItemView| |performLongClick| ||
|com.android.internal.widget.DialogTitle| |performLongClick| ||
|com.android.server.display.DisplayPowerController| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |sendUpdatePowerState| ||
|com.android.server.display.DisplayPowerController| |access$1000| |com.android.server.display.DisplayPowerController,long,boolean|
|com.android.server.display.DisplayPowerState$PhotonicModulator| |run| ||
|com.android.server.wm.WindowManagerService| |computeNewConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |getDisplayContentLocked| |int|
|com.android.server.am.ActivityStack| |resetTaskIfNeededLocked| |com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityView$ActivityContainerWrapper| |release| ||
|android.app.backup.BackupAgent$BackupServiceBinder| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreFileRunnable| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable| |run| ||
|com.android.internal.telephony.PhoneProxy| |updatePhoneObject| |int|
|com.android.internal.telephony.PhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.PhoneProxy| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.PhoneProxy| |setOperatorBrandOverride| |java.lang.String|
|com.android.server.display.DisplayManagerService$LocalService| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |access$000| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |updateBrightness| ||
|com.android.server.display.DisplayPowerController$8| |onSensorChanged| |android.hardware.SensorEvent|
|com.android.server.display.DisplayPowerState| |<init>| |com.android.server.display.DisplayBlanker,com.android.server.lights.Light,com.android.server.display.ColorFade|
|com.android.server.wm.WindowAnimator| |getPendingLayoutChanges| |int|
|com.android.server.wm.WindowAnimator| |setPendingLayoutChanges| |int,int|
|com.android.server.wm.WindowAnimator| |updateAppWindowsLocked| |int|
|com.android.server.wm.WindowAnimator| |updateWallpaperLocked| |int|
|com.android.server.wm.WindowManagerService| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayContentLocked| ||
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |int|
|com.android.server.wm.WindowManagerService| |addWindow| |com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.WindowManagerService| |getBaseDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |getInitialDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |createDisplayContentLocked| |android.view.Display|
|com.android.server.wm.WindowManagerService| |displayReady| |int|
|com.android.server.wm.WindowManagerService| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.wm.WindowManagerService| |getInitialDisplaySize| |int,android.graphics.Point|
|android.app.ActivityView$ActivityContainerWrapper| |finalize| ||
|android.app.ActivityView| |release| ||
|com.android.internal.telephony.Phone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateImsPhone| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateImsPhone| ||
|com.android.internal.telephony.gsm.GSMPhone| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhone| |updateImsPhone| ||
|com.android.internal.telephony.PhoneBase$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.sip.SipPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.sip.SipPhone| |updateImsPhone| ||
|android.hardware.display.DisplayManagerInternal| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController$1| |onAnimationEnd| |android.animation.Animator|
|com.android.server.display.DisplayPowerController$2| |onAnimationEnd| ||
|com.android.server.display.DisplayPowerController$3| |run| ||
|com.android.server.display.AutomaticBrightnessController$Callbacks| |updateBrightness| ||
|com.android.server.display.DisplayPowerController| |initialize| ||
|com.android.server.wm.WindowAnimator| |setAppLayoutChanges| |com.android.server.wm.AppWindowAnimator,int,java.lang.String|
|com.android.server.wm.WindowAnimator| |hideWallpapersLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |prepareSurfaceLocked| |boolean|
|com.android.server.wm.WindowStateAnimator| |setSurfaceBoundariesLocked| |boolean|
|android.view.IWindowManager$Stub$Proxy| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|android.view.IWindowManager$Stub| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |screenshotActivities| |com.android.server.am.ActivityRecord|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |populateWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |populateVisibleWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayInfoLocked| ||
|com.android.server.wm.WindowManagerService| |getDefaultWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |adjustWallpaperWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |getOrientationFromAppTokensLocked| ||
|com.android.server.wm.WindowManagerService| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |handleAnimatingStoppedAndTransitionLocked| ||
|com.android.server.wm.WindowManagerService| |createWatermarkInTransaction| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean|
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |saveLastInputMethodWindowForTransition| ||
|com.android.server.wm.WindowManagerService| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.wm.WindowManagerService| |showCircularMask| |boolean|
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlay| ||
|com.android.server.wm.WindowManagerService| |showStrictModeViolation| |int,int|
|com.android.server.wm.WindowManagerService| |startFreezingDisplayLocked| |boolean,int,int|
|com.android.server.wm.WindowManagerService| |updateWallpaperVisibilityLocked| ||
|com.android.server.wm.WindowAnimator| |dumpLocked| |java.io.PrintWriter,java.lang.String,boolean|
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |android.view.Display|
|com.android.server.wm.Session| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.am.ProcessList| |applyDisplaySize| |com.android.server.wm.WindowManagerService|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.internal.telephony.PhoneBase| |updatePhoneObject| |int|
|com.android.server.power.PowerManagerService| |updateDisplayPowerStateLocked| |int|
|com.android.server.display.RampAnimator$Listener| |onAnimationEnd| ||
|com.android.server.display.AutomaticBrightnessController| |updateAutoBrightness| |boolean|
|com.android.server.wm.AppWindowAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowStateAnimator| |destroyDeferredSurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |destroySurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |finishExit| ||
|android.view.IWindowManager| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStackSupervisor| |handleLaunchTaskBehindCompleteLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.TaskRecord| |getTaskThumbnailLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |recomputeBoundsLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |computeChangedWindows| ||
|com.android.server.wm.WindowManagerService| |applyAnimationLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |checkWaitingForWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.server.wm.WindowManagerService| |moveInputMethodWindowsIfNeededLocked| |boolean|
|com.android.server.wm.WindowManagerService| |findDesiredInputMethodWindowIndexLocked| |boolean|
|com.android.server.wm.WindowManagerService| |getOrientationFromWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |addInputMethodWindowToListLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |moveInputMethodDialogsLocked| |int|
|com.android.server.wm.WindowManagerService| |updateStatusBarVisibilityLocked| |int|
|android.view.IWindowManager$Stub$Proxy| |getPreferredOptionsPanelGravity| ||
|android.view.IWindowManager$Stub| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1|
|com.android.server.InputMethodManagerService| |unbindCurrentMethodLocked| |boolean,boolean|
|android.view.IWindowManager$Stub$Proxy| |setAppVisibility| |android.os.IBinder,boolean|
|android.view.IWindowManager$Stub| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityStackSupervisor| |processStoppingActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |setVisibile| |com.android.server.am.ActivityRecord,boolean|
|com.android.server.wm.WindowManagerService| |updateCircularDisplayMaskIfNeeded| ||
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlayIfNeeded| ||
|com.android.server.wm.WindowManagerService| |access$800| |com.android.server.wm.WindowManagerService,int,int|
|com.android.server.wm.WindowManagerService| |dumpAnimatorLocked| |java.io.PrintWriter,java.lang.String[],boolean|
|com.android.server.wm.DragState| |getTouchedWinAtPointLw| |float,float|
|com.android.server.wm.DragState| |broadcastDragStartedLw| |float,float|
|android.view.IWindowSession$Stub$Proxy| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|com.android.server.wm.Session| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager| |getBaseDisplayDensity| |int|
|android.view.IWindowManager| |getInitialDisplayDensity| |int|
|android.view.IWindowManager| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.gsm.GSMPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.ServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.sip.SipPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.sip.SipPhone| |updatePhoneObject| |int|
|com.android.server.power.PowerManagerService| |updatePowerStateLocked| ||
|com.android.server.display.RampAnimator$1| |run| ||
|com.android.server.display.RampAnimator| |animateTo| |int,int|
|com.android.server.display.AutomaticBrightnessController| |access$300| |com.android.server.display.AutomaticBrightnessController,boolean|
|com.android.server.display.AutomaticBrightnessController| |configure| |boolean,float,boolean|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| |long|
|com.android.server.wm.WindowState| |removeLocked| ||
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowStateAnimator| |cancelExitAnimationForNextAnimationLocked| ||
|com.android.server.am.ActivityManagerService| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |drawWindowIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |<init>| |com.android.server.wm.AccessibilityController$DisplayMagnifier|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |onRotationChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |performComputeChangedWindowsNotLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |scheduleComputeChangedWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |updateTokenInPlaceLocked| |com.android.server.wm.AppWindowToken,int|
|android.view.IWindowManager$Stub$Proxy| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager$Stub| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService$2| |run| ||
|com.android.server.InputMethodManagerService| |startInputInnerLocked| ||
|com.android.server.InputMethodManagerService| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.InputMethodManagerService| |resetAllInternalStateLocked| |boolean,boolean|
|com.android.server.InputMethodManagerService| |updateInputMethodsFromSettingsLocked| |boolean|
|android.view.IWindowManager| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.wm.WindowManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.wm.WindowManagerService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wm.DragState| |notifyDropLw| |float,float|
|com.android.server.wm.DragState| |notifyMoveLw| |float,float|
|android.view.IWindowSession| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub$Proxy| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |runDisplayDensity| ||
|com.android.commands.wm.Wm| |runDisplaySize| ||
|com.android.internal.view.RotationPolicy| |getRotationLockOrientation| |android.content.Context|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.server.power.PowerManagerService| |access$1100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |acquireWakeLockInternal| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |boostScreenBrightnessInternal| |long,int|
|com.android.server.power.PowerManagerService| |goToSleepInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |handleBatteryStateChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleSandman| ||
|com.android.server.power.PowerManagerService| |handleScreenBrightnessBoostTimeout| ||
|com.android.server.power.PowerManagerService| |handleSettingsChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleUserActivityTimeout| ||
|com.android.server.power.PowerManagerService| |napInternal| |long,int|
|com.android.server.power.PowerManagerService| |onBootPhase| |int|
|com.android.server.power.PowerManagerService| |removeWakeLockLocked| |com.android.server.power.PowerManagerService$WakeLock,int|
|com.android.server.power.PowerManagerService| |setDozeOverrideFromDreamManagerInternal| |int,int|
|com.android.server.power.PowerManagerService| |setMaximumScreenOffTimeoutFromDeviceAdminInternal| |int|
|com.android.server.power.PowerManagerService| |setScreenBrightnessOverrideFromWindowManagerInternal| |int|
|com.android.server.power.PowerManagerService| |setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal| |float|
|com.android.server.power.PowerManagerService| |setTemporaryScreenBrightnessSettingOverrideInternal| |int|
|com.android.server.power.PowerManagerService| |setUserActivityTimeoutOverrideFromWindowManagerInternal| |long|
|com.android.server.power.PowerManagerService| |systemReady| |com.android.internal.app.IAppOpsService|
|com.android.server.power.PowerManagerService| |userActivityInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |wakeUpInternal| |long,int|
|com.android.server.display.DisplayPowerController| |animateScreenBrightness| |int,int|
|com.android.server.display.AutomaticBrightnessController$2| |onTwilightStateChanged| ||
|com.android.server.display.AutomaticBrightnessController| |handleLightSensorEvent| |long,float|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| ||
|android.app.ActivityManagerNative| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController| |onWindowFocusChangedNotLocked| ||
|com.android.server.wm.AccessibilityController| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onSomeWindowResizedOrMovedLocked| ||
|com.android.server.wm.AccessibilityController| |onWindowTransitionLocked| |com.android.server.wm.WindowState,int|
|android.view.IWindowManager| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.internal.policy.impl.PhoneWindow| |getOptionsPanelGravity| ||
|com.android.server.InputMethodManagerService| |startInputUncheckedLocked| |com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.server.InputMethodManagerService| |systemRunning| |com.android.server.statusbar.StatusBarManagerService|
|com.android.server.InputMethodManagerService| |resetStateIfCurrentLocaleChangedLocked| ||
|com.android.server.InputMethodManagerService| |switchUserLocked| |int|
|com.android.server.InputMethodManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.InputMethodManagerService| |buildInputMethodListLocked| |java.util.ArrayList,java.util.HashMap,boolean|
|com.android.server.InputMethodManagerService| |updateFromSettingsLocked| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |updateSurface| |boolean,boolean,boolean|
|android.view.ViewRootImpl| |setView| |android.view.View,android.view.WindowManager$LayoutParams,android.view.View|
|android.view.IWindowSession| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.SurfaceView| |updateWindow| |boolean,boolean|
|android.view.IWindowSession| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |onRun| ||
|com.android.server.power.PowerManagerService$2| |onProximityNegative| ||
|com.android.server.power.PowerManagerService$2| |onProximityPositive| ||
|com.android.server.power.PowerManagerService$2| |onStateChanged| ||
|com.android.server.power.PowerManagerService$DockReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |access$3200| |com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |access$5000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |access$3900| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |access$1900| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2400| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2500| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2300| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$4000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |handleWakeLockDeath| |com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |releaseWakeLockInternal| |android.os.IBinder,int|
|com.android.server.power.PowerManagerService| |access$5300| |com.android.server.power.PowerManagerService,int,int|
|com.android.server.power.PowerManagerService| |access$5500| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5200| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$4800| |com.android.server.power.PowerManagerService,float|
|com.android.server.power.PowerManagerService| |access$4700| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5400| |com.android.server.power.PowerManagerService,long|
|com.android.server.power.PowerManagerService| |access$3700| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |userActivityFromNative| |long,int,int|
|com.android.server.power.PowerManagerService| |access$3800| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.display.AutomaticBrightnessController| |access$200| |com.android.server.display.AutomaticBrightnessController,long,float|
|com.android.server.display.AutomaticBrightnessController| |access$000| |com.android.server.display.AutomaticBrightnessController|
|android.app.IActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationCallbacksLocked| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.WindowManagerService| |assignLayersLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.wm.WindowManagerService$LocalService| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.WindowState| |reportResized| ||
|com.android.server.wm.WindowStateAnimator| |applyEnterAnimationLocked| ||
|com.android.server.InputMethodManagerService| |startInputLocked| |com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.internal.policy.impl.PhoneWindow| |onOptionsPanelRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.KeyEvent|
|com.android.server.InputMethodManagerService| |access$1100| |com.android.server.InputMethodManagerService|
|com.android.server.InputMethodManagerService| |access$1000| |com.android.server.InputMethodManagerService,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.InputMethodManagerService| |<init>| |android.content.Context,com.android.server.wm.WindowManagerService|
|android.service.wallpaper.WallpaperService$Engine| |attach| |android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper|
|android.service.wallpaper.WallpaperService$Engine| |doDisplayPaddingChanged| |android.graphics.Rect|
|android.service.wallpaper.WallpaperService$Engine| |reportVisibility| ||
|android.service.wallpaper.WallpaperService$Engine| |setOffsetNotificationsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |setTouchEventsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper| |executeMessage| |android.os.Message|
|android.view.WindowManagerGlobal| |addView| |android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window|
|com.android.server.power.PowerManagerService$BatteryReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |scheduleSandmanLocked| ||
|com.android.server.power.PowerManagerService| |updateScreenBrightnessBoostLocked| |int|
|com.android.server.power.PowerManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.power.PowerManagerService$UserSwitchedReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |updateUserActivitySummaryLocked| |long,int|
|com.android.server.power.PowerManagerService| |access$2700| |com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |access$3300| |com.android.server.power.PowerManagerService,android.os.IBinder,int|
|com.android.server.power.PowerManagerService$LocalService| |setDozeOverrideFromDreamManager| |int,int|
|com.android.server.power.PowerManagerService$LocalService| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|com.android.server.power.PowerManagerService$LocalService| |setScreenBrightnessOverrideFromWindowManager| |int|
|com.android.server.power.PowerManagerService$LocalService| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|com.android.server.display.AutomaticBrightnessController$1| |onSensorChanged| |android.hardware.SensorEvent|
|android.app.ActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|android.view.WindowManagerInternal| |setMagnificationSpec| |android.view.MagnificationSpec|
|android.view.WindowManagerInternal| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher| |dispatchRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUpPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanelsAfterRestore| ||
|com.android.internal.policy.impl.PhoneWindow| |reopenMenu| |boolean|
|com.android.internal.policy.impl.PhoneWindow| |togglePanel| |int,android.view.KeyEvent|
|com.android.server.InputMethodManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$3| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.content.PackageMonitor| |onSomePackagesChanged| ||
|android.service.wallpaper.WallpaperService$Engine$3| |onDisplayChanged| |int|
|android.service.wallpaper.WallpaperService$Engine| |doVisibilityChanged| |boolean|
|android.view.WindowManagerImpl| |addView| |android.view.View,android.view.ViewGroup$LayoutParams|
|com.android.server.power.PowerManagerService| |access$2000| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |updateDreamLocked| |int,boolean|
|com.android.server.power.PowerManagerService$WakeLock| |binderDied| ||
|android.os.PowerManagerInternal| |setDozeOverrideFromDreamManager| |int,int|
|android.os.PowerManagerInternal| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|android.os.PowerManagerInternal| |setScreenBrightnessOverrideFromWindowManager| |int|
|android.os.PowerManagerInternal| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|android.view.WindowManagerInternal| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.accessibility.AccessibilityManagerService| |updateWindowsForAccessibilityCallbackLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher$1| |run| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUp| |int,int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |access$2200| |com.android.internal.policy.impl.PhoneWindow|
|com.android.internal.policy.impl.PhoneWindow| |onConfigurationChanged| |android.content.res.Configuration|
|com.android.internal.policy.impl.PhoneWindow| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.app.IUserSwitchObserver$Stub$Proxy| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.content.PackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.LocationManagerService$4| |onSomePackagesChanged| ||
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onSomePackagesChanged| ||
|com.android.server.ServiceWatcher$2| |onSomePackagesChanged| ||
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.power.PowerManagerService$DreamReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.dreams.DreamManagerService| |startDozingInternal| |android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |stopDozingInternal| |android.os.IBinder|
|com.android.server.accessibility.ScreenMagnifier| |<init>| |android.content.Context,int,com.android.server.accessibility.AccessibilityManagerService|
|com.android.server.accessibility.ScreenMagnifier| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |offsetMagnifiedRegionCenter| |float,float|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |reset| |boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScaleAndMagnifiedRegionCenter| |float,float,float,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |onUserStateChangedLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |dispatchKeyEvent| |android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |onAttachedToWindow| ||
|com.android.internal.view.menu.MenuBuilder$Callback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.app.ResolverActivity$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.ServiceWatcher$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.trust.TrustManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.tv.TvInputManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.dreams.DreamManagerService| |access$1800| |com.android.server.dreams.DreamManagerService,android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |access$1900| |com.android.server.dreams.DreamManagerService,android.os.IBinder|
|com.android.server.accessibility.AccessibilityInputFilter| |enableFeatures| ||
|com.android.server.accessibility.AccessibilityInputFilter| |disableFeatures| ||
|com.android.server.accessibility.EventStreamTransformation| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScroll| |android.view.MotionEvent,android.view.MotionEvent,float,float|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRectangleOnScreenRequested| |int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |handleOnScreenStateChange| |java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |resetMagnificationIfNeeded| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTapAndHold| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnifiedRegionCenter| |float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScale| |float,float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier| |handleOnMagnifiedBoundsChanged| |android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService| |access$500| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |ensureWindowsAvailableTimed| ||
|com.android.server.accessibility.AccessibilityManagerService| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |switchUser| |int|
|com.android.server.accessibility.AccessibilityManagerService| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuView$MenuBuilderCallback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|com.android.internal.view.menu.MenuBuilder| |changeMenuMode| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onInstalled| ||
|com.android.server.accessibility.AccessibilityInputFilter| |setEnabledFeatures| |int|
|com.android.server.accessibility.AccessibilityInputFilter| |onUninstalled| ||
|com.android.server.accessibility.AccessibilityManagerService| |updateInputFilter| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |access$100| |com.android.server.accessibility.ScreenMagnifier,int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |access$2900| |com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver,java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |access$600| |com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRotationChanged| |int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnUserContextChanged| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1700| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScale| |android.view.ScaleGestureDetector|
|com.android.server.accessibility.ScreenMagnifier| |access$000| |com.android.server.accessibility.ScreenMagnifier,android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$1| |onSomePackagesChanged| ||
|com.android.server.accessibility.AccessibilityManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$4| |onClick| |android.content.DialogInterface,int|
|com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.accessibility.AccessibilityManagerService$Service| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accessibility.AccessibilityManagerService| |access$3300| |com.android.server.accessibility.AccessibilityManagerService|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager$Stub| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |access$800| |com.android.server.accessibility.AccessibilityManagerService,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.view.accessibility.IAccessibilityManager$Stub| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuPresenter$OpenOverflowRunnable| |run| ||
|com.android.internal.view.menu.ContextMenuBuilder| |changeMenuMode| ||
|com.android.internal.view.menu.IconMenuView$1| |onClick| |android.view.View|
|com.android.internal.view.menu.SubMenuBuilder| |changeMenuMode| ||
|com.android.server.accessibility.AccessibilityManagerService| |access$2100| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |access$300| |com.android.server.accessibility.ScreenMagnifier,int|
|com.android.server.accessibility.ScreenMagnifier| |access$200| |com.android.server.accessibility.ScreenMagnifier|
|com.android.internal.content.PackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.content.PackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$UserState$1| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$UserState| |onSwitchToAnotherUser| ||
|com.android.server.accessibility.AccessibilityManagerService| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.accessibility.AccessibilityManagerService$Service$2| |run| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindow| |int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindows| ||
|android.view.accessibility.IAccessibilityManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.IAccessibilityManager| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|com.android.server.accessibility.EventStreamTransformation| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |sendDelayedMotionEvents| ||
|com.android.server.accessibility.ScreenMagnifier| |onUserContextChanged| ||
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.app.ResolverActivity$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.LocationManagerService$4| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.ServiceWatcher$2| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.trust.TrustManagerService$3| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.tv.TvInputManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.app.ResolverActivity$1| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.LocationManagerService$4| |onPackageRemoved| |java.lang.String,int|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.trust.TrustManagerService$3| |onPackageRemoved| |java.lang.String,int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.view.accessibility.IAccessibilityManager$Stub| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindows| ||
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindows| ||
|com.android.server.accessibility.AccessibilityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomationConnection| |registerUiTestAutomationServiceLocked| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |enableAccessibility| ||
|com.android.server.accessibility.AccessibilityInputFilter| |handleMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleMotionEventStateDelegating| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendMotionEvent| |android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1800| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |transitionToDelegatingStateAndClear| ||
|android.view.accessibility.IAccessibilityManager| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindows| ||
|android.app.UiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |access$200| |com.android.internal.policy.impl.EnableAccessibilityController|
|com.android.server.accessibility.AccessibilityInputFilter| |processBatchedEvents| |long|
|com.android.server.accessibility.TouchExplorer| |access$2800| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDelegating| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDragging| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateTouchExploring| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendActionDownAndUp| |android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |sendDownForAllNotInjectedPointers| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendHoverExitAndTouchExplorationGestureEndIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendTouchExplorationGestureStartAndHoverEnterIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendUpForInjectedDownPointers| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |unregisterUiTestAutomationServiceLocked| ||
|android.view.accessibility.AccessibilityInteractionClient| |getWindow| |int,int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.AccessibilityInteractionClient| |getWindows| |int|
|android.app.IUiAutomationConnection$Stub$Proxy| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|android.app.IUiAutomationConnection$Stub| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |onInterceptTouchEvent| |android.view.MotionEvent|
|com.android.server.accessibility.AccessibilityInputFilter| |access$100| |com.android.server.accessibility.AccessibilityInputFilter,long|
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$1700| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |access$2600| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$2400| |com.android.server.accessibility.TouchExplorer,int|
|com.android.server.accessibility.TouchExplorer| |clear| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |disconnect| ||
|android.view.accessibility.AccessibilityNodeInfo| |getWindow| ||
|android.view.accessibility.AccessibilityWindowInfo| |getChild| |int|
|android.view.accessibility.AccessibilityWindowInfo| |getParent| ||
|android.accessibilityservice.AccessibilityService| |getWindows| ||
|android.app.UiAutomation| |getWindows| ||
|android.app.IUiAutomationConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IUiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |dispatchTouchEvent| |android.view.MotionEvent|
|com.android.server.accessibility.AccessibilityInputFilter$1| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onDoubleTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |clear| ||
|com.android.server.accessibility.TouchExplorer| |handleMotionEventGestureDetecting| |android.view.MotionEvent,int|
|android.app.IUiAutomationConnection$Stub$Proxy| |disconnect| ||
|android.app.IUiAutomationConnection$Stub| |disconnect| ||
|android.app.UiAutomationConnection| |shutdown| ||
|android.app.UiAutomationConnection| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomation| |connect| ||
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.EventStreamTransformation| |clear| ||
|com.android.server.accessibility.TouchExplorer$ExitGestureDetectionModeDelayed| |run| ||
|android.app.IUiAutomationConnection| |disconnect| ||
|android.app.IUiAutomationConnection$Stub$Proxy| |shutdown| ||
|android.app.IUiAutomationConnection$Stub| |shutdown| ||
|android.app.Instrumentation| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetworkViews| |setup| ||
|com.android.uiautomator.core.UiAutomationShellWrapper| |connect| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |clear| ||
|android.app.UiAutomation| |disconnect| ||
|android.app.IUiAutomationConnection| |shutdown| ||
|android.test.InstrumentationCoreTestRunner| |getUiAutomation| ||
|android.test.InstrumentationTestRunner| |getUiAutomation| ||
|android.test.LaunchPerformanceBase| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetwork| |startServer| ||
|com.android.commands.uiautomator.DumpCommand| |run| |java.lang.String[]|
|com.android.commands.uiautomator.EventsCommand| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |start| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onInputEvent| |android.view.InputEvent,int|
|android.app.Instrumentation| |finish| |int,android.os.Bundle|
|com.android.uiautomator.core.UiAutomationShellWrapper| |disconnect| ||
|com.android.commands.monkey.MonkeySourceNetwork| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher$Command| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |run| |java.util.List,android.os.Bundle,boolean,boolean|
|android.test.InstrumentationCoreTestRunner| |finish| |int,android.os.Bundle|
|android.test.InstrumentationTestRunner| |finish| |int,android.os.Bundle|
|android.test.LaunchPerformanceBase| |finish| |int,android.os.Bundle|
|com.android.commands.monkey.MonkeyEventSource| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher| |main| |java.lang.String[]|
|com.android.commands.uiautomator.RunTestCommand| |run| |java.lang.String[]|
|android.test.InstrumentationTestRunner| |onStart| ||
|com.android.commands.monkey.Monkey| |runMonkeyCycles| ||
|android.test.InstrumentationCoreTestRunner| |onStart| ||
|com.android.server.content.SyncManager| |<init>| |android.content.Context,boolean|
|com.android.server.content.ContentService| |getSyncManager| ||
|com.android.server.content.ContentService| |systemReady| ||
|com.android.server.search.SearchManagerService| |<init>| |android.content.Context|
|com.android.server.usb.UsbDeviceManager$UsbHandler| |<init>| |com.android.server.usb.UsbDeviceManager,android.os.Looper|
|com.android.server.usb.UsbDeviceManager| |<init>| |android.content.Context|
|com.android.server.usb.UsbService| |<init>| |android.content.Context|
|com.android.server.usb.UsbService$Lifecycle| |onStart| ||
|com.android.server.SystemService| |onStart| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.Class|
|com.android.server.SystemServer| |startCoreServices| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.String|
|com.android.server.wifi.WifiStateMachine| |<init>| |android.content.Context,java.lang.String,com.android.server.wifi.WifiTrafficPoller|
|com.android.server.wifi.WifiServiceImpl| |<init>| |android.content.Context|
|com.android.server.wifi.WifiService| |<init>| |android.content.Context|
|com.android.server.SystemService| |<init>| |android.content.Context|
|com.android.server.AlarmManagerService| |<init>| |android.content.Context|
|com.android.server.am.ActivityManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.appwidget.AppWidgetService| |<init>| |android.content.Context|
|com.android.server.backup.BackupManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.BatteryService| |<init>| |android.content.Context|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.display.DisplayManagerService| |<init>| |android.content.Context|
|com.android.server.DockObserver| |<init>| |android.content.Context|
|com.android.server.dreams.DreamManagerService| |<init>| |android.content.Context|
|com.android.server.ethernet.EthernetService| |<init>| |android.content.Context|
|com.android.server.fingerprint.FingerprintService| |<init>| |android.content.Context|
|com.android.server.hdmi.HdmiControlService| |<init>| |android.content.Context|
|com.android.server.job.JobSchedulerService| |<init>| |android.content.Context|
|com.android.server.lights.LightsService| |<init>| |android.content.Context|
|com.android.server.media.MediaSessionService| |<init>| |android.content.Context|
|com.android.server.media.projection.MediaProjectionManagerService| |<init>| |android.content.Context|
|com.android.server.MmsServiceBroker| |<init>| |android.content.Context|
|com.android.server.notification.NotificationManagerService| |<init>| |android.content.Context|
|com.android.server.PersistentDataBlockService| |<init>| |android.content.Context|
|com.android.server.pm.Installer| |<init>| |android.content.Context|
|com.android.server.pm.LauncherAppsService| |<init>| |android.content.Context|
|com.android.server.power.PowerManagerService| |<init>| |android.content.Context|
|com.android.server.print.PrintManagerService| |<init>| |android.content.Context|
|com.android.server.restrictions.RestrictionsManagerService| |<init>| |android.content.Context|
|com.android.server.storage.DeviceStorageMonitorService| |<init>| |android.content.Context|
|com.android.server.telecom.TelecomLoaderService| |<init>| |android.content.Context|
|com.android.server.trust.TrustManagerService| |<init>| |android.content.Context|
|com.android.server.tv.TvInputManagerService| |<init>| |android.content.Context|
|com.android.server.twilight.TwilightService| |<init>| |android.content.Context|
|com.android.server.UiModeManagerService| |<init>| |android.content.Context|
|com.android.server.usage.UsageStatsService| |<init>| |android.content.Context|
|com.android.server.usb.UsbService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |<init>| |android.content.Context|
|com.android.server.webkit.WebViewUpdateService| |<init>| |android.content.Context|
|com.android.server.wifi.p2p.WifiP2pService| |<init>| |android.content.Context|
|com.android.server.wifi.RttService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiScanningService| |<init>| |android.content.Context|
|android.provider.CalendarContract$CalendarAlerts| |insert| |android.content.ContentResolver,long,long,long,long,int|
|com.android.calendar.AgendaWindowAdapter| |buildQueryUri| |int,int|
|com.android.internal.telephony.WapPushOverSms| |dispatchWapPdu| |byte[],android.content.BroadcastReceiver,com.android.internal.telephony.InboundSmsHandler|
|com.android.internal.telephony.InboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler$DeliveringState| |processMessage| |android.os.Message|
|com.android.internal.util.State| |processMessage| |android.os.Message|
|com.android.internal.util.IState| |processMessage| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |processMsg| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DormantState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$ScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$NoLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |processMessage| |android.os.Message|
|android.provider.Browser| |getAllVisitedUrls| |android.content.ContentResolver|
|android.provider.Browser| |canClearHistory| |android.content.ContentResolver|
|android.provider.BrowserContract$Settings| |isSyncEnabled| |android.content.Context|
|android.provider.Browser| |getAllBookmarks| |android.content.ContentResolver|
|android.provider.Browser| |getVisitedLike| |android.content.ContentResolver,java.lang.String|
|android.provider.Browser| |updateVisitedHistory| |android.content.ContentResolver,java.lang.String,boolean|
|android.provider.BrowserContract$Bookmarks| |buildFolderUri| |long|
|android.provider.Browser| |getVisitedHistory| |android.content.ContentResolver|
|android.provider.Browser| |deleteHistoryWhere| |android.content.ContentResolver,java.lang.String|
|android.provider.Browser| |clearHistory| |android.content.ContentResolver|
|android.provider.Browser| |deleteHistoryTimeFrame| |android.content.ContentResolver,long,long|
|android.provider.Browser| |truncateHistory| |android.content.ContentResolver|
|com.android.server.wifi.WifiServiceImpl| |enforceMulticastChangePermission| ||
|com.android.server.wifi.WifiServiceImpl| |acquireMulticastLock| |android.os.IBinder,java.lang.String|
|com.android.server.wifi.WifiServiceImpl| |initializeMulticastFiltering| ||
|com.android.server.wifi.WifiServiceImpl| |releaseMulticastLock| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |acquireMulticastLock| |android.os.IBinder,java.lang.String|
|android.net.wifi.IWifiManager$Stub| |acquireMulticastLock| |android.os.IBinder,java.lang.String|
|android.net.wifi.IWifiManager$Stub$Proxy| |initializeMulticastFiltering| ||
|android.net.wifi.IWifiManager$Stub| |initializeMulticastFiltering| ||
|android.net.wifi.IWifiManager$Stub$Proxy| |releaseMulticastLock| ||
|android.net.wifi.IWifiManager$Stub| |releaseMulticastLock| ||
|android.net.wifi.IWifiManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.IWifiManager| |acquireMulticastLock| |android.os.IBinder,java.lang.String|
|android.net.wifi.IWifiManager| |initializeMulticastFiltering| ||
|android.net.wifi.IWifiManager| |releaseMulticastLock| ||
|com.android.server.wifi.WifiServiceImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.net.wifi.WifiManager$MulticastLock| |acquire| ||
|android.net.wifi.WifiManager| |initializeMulticastFiltering| ||
|android.net.wifi.WifiManager$MulticastLock| |release| ||
|android.net.wifi.WifiManager$MulticastLock| |finalize| ||
|com.android.server.am.ActivityManagerService| |moveTaskToFront| |int,int,android.os.Bundle|
|android.app.ActivityManagerNative| |moveTaskToFront| |int,int,android.os.Bundle|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |moveTaskToFront| |int,int,android.os.Bundle|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityManager| |moveTaskToFront| |int,int,android.os.Bundle|
|com.android.internal.app.HeavyWeightSwitcherActivity$1| |onClick| |android.view.View|
|android.app.ActivityManager| |moveTaskToFront| |int,int|
|com.android.server.am.ActivityManagerService| |moveTaskToBack| |int|
|android.app.ActivityManagerNative| |moveTaskToBack| |int|
|android.app.IActivityManager| |moveTaskToBack| |int|
|com.android.server.am.ActivityManagerService| |moveTaskBackwards| |int|
|android.app.ActivityManagerNative| |moveTaskBackwards| |int|
|android.app.IActivityManager| |moveTaskBackwards| |int|
|com.android.server.AlarmManagerService$2| |setTimeZone| |java.lang.String|
|android.app.IAlarmManager$Stub$Proxy| |setTimeZone| |java.lang.String|
|android.app.IAlarmManager$Stub| |setTimeZone| |java.lang.String|
|android.app.IAlarmManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IAlarmManager| |setTimeZone| |java.lang.String|
|com.android.server.AlarmManagerService$2| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.AlarmManager| |setTimeZone| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setAndBroadcastNetworkSetTimeZone| |java.lang.String|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setAndBroadcastNetworkSetTimeZone| |java.lang.String|
|com.android.internal.telephony.MccTable| |setTimezoneFromMccIfNeeded| |android.content.Context,int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setAndBroadcastNetworkSetTimeZone| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |fixTimeZone| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |revertToNitzTimeZone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |revertToNitzTimeZone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.MccTable| |updateMccMncConfiguration| |android.content.Context,java.lang.String,boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |fixTimeZone| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |revertToNitzTimeZone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |access$100| |com.android.internal.telephony.cdma.CdmaServiceStateTracker|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |setTimeFromNITZString| |java.lang.String,long|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |access$300| |com.android.internal.telephony.gsm.GsmServiceStateTracker|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setProperties| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.PhoneFactory| |setDefaultSubscription| |int|
|com.android.internal.telephony.ServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |setDefaultFallbackSubId| |int|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLoaded| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |access$100| |com.android.internal.telephony.cdma.CdmaServiceStateTracker|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker$2| |onChange| |boolean|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.ServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GSMPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.ServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker$3| |onChange| |boolean|
|com.android.internal.telephony.cdma.CDMALTEPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionInfoUpdater$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CDMAPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.PhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.ISub$Stub$Proxy| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.Phone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.Phone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.ISub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.PhoneProxy| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneProxy| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|android.telephony.SubscriptionManager| |addSubscriptionInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.PhoneFactory| |getCdmaPhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhone| |android.content.Context|
|com.android.internal.telephony.SubscriptionInfoUpdater| |updateSubscriptionInfoByIccId| ||
|com.android.internal.telephony.PhoneProxy| |deleteAndCreatePhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhones| |android.content.Context|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimAbsent| |int|
|com.android.internal.telephony.PhoneProxy| |phoneObjectUpdater| |int|
|com.android.internal.telephony.PhoneProxy| |updatePhoneObject| |int|
|com.android.internal.telephony.Phone| |updatePhoneObject| |int|
|com.android.internal.telephony.PhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.gsm.GSMPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.ServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.sip.SipPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.sip.SipPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updatePhoneObject| ||
|com.android.server.content.ContentService| |getSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService$Stub$Proxy| |getSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService$Stub| |getSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,int|
|com.android.server.content.ContentService| |getSyncAutomatically| |android.accounts.Account,java.lang.String|
|android.content.IContentService| |getSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IContentService$Stub$Proxy| |getSyncAutomatically| |android.accounts.Account,java.lang.String|
|android.content.IContentService$Stub| |getSyncAutomatically| |android.accounts.Account,java.lang.String|
|android.content.ContentResolver| |getSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,int|
|com.android.server.content.ContentService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IContentService| |getSyncAutomatically| |android.accounts.Account,java.lang.String|
|android.app.ContextImpl$ApplicationContentResolver| |getSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,int|
|android.test.mock.MockContentResolver| |getSyncAutomaticallyAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.ContentResolver| |getSyncAutomatically| |android.accounts.Account,java.lang.String|
|android.app.ContextImpl$ApplicationContentResolver| |getSyncAutomatically| |android.accounts.Account,java.lang.String|
|android.test.mock.MockContentResolver| |getSyncAutomatically| |android.accounts.Account,java.lang.String|
|com.android.server.content.ContentService| |getPeriodicSyncs| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService$Stub$Proxy| |getPeriodicSyncs| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService$Stub| |getPeriodicSyncs| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.IContentService| |getPeriodicSyncs| |android.accounts.Account,java.lang.String,android.content.ComponentName|
|android.content.ContentResolver| |getPeriodicSyncs| |android.accounts.Account,java.lang.String|
|android.app.ContextImpl$ApplicationContentResolver| |getPeriodicSyncs| |android.accounts.Account,java.lang.String|
|android.test.mock.MockContentResolver| |getPeriodicSyncs| |android.accounts.Account,java.lang.String|
|com.android.server.content.ContentService| |getIsSyncableAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService$Stub$Proxy| |getIsSyncableAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService$Stub| |getIsSyncableAsUser| |android.accounts.Account,java.lang.String,int|
|com.android.server.content.ContentService| |getIsSyncable| |android.accounts.Account,java.lang.String|
|android.content.IContentService| |getIsSyncableAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService$Stub$Proxy| |getIsSyncable| |android.accounts.Account,java.lang.String|
|android.content.IContentService$Stub| |getIsSyncable| |android.accounts.Account,java.lang.String|
|android.content.ContentResolver| |getIsSyncableAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.IContentService| |getIsSyncable| |android.accounts.Account,java.lang.String|
|android.app.ContextImpl$ApplicationContentResolver| |getIsSyncableAsUser| |android.accounts.Account,java.lang.String,int|
|android.test.mock.MockContentResolver| |getIsSyncableAsUser| |android.accounts.Account,java.lang.String,int|
|android.content.ContentResolver| |getIsSyncable| |android.accounts.Account,java.lang.String|
|android.app.ContextImpl$ApplicationContentResolver| |getIsSyncable| |android.accounts.Account,java.lang.String|
|android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl| |startSync| |android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle|
|android.test.mock.MockContentResolver| |getIsSyncable| |android.accounts.Account,java.lang.String|
|android.content.ISyncAdapter$Stub$Proxy| |startSync| |android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle|
|android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl| |initialize| |android.accounts.Account,java.lang.String|
|android.content.ISyncAdapter$Stub| |startSync| |android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle|
|android.content.ISyncAdapter$Stub$Proxy| |initialize| |android.accounts.Account,java.lang.String|
|android.content.ISyncAdapter$Stub| |initialize| |android.accounts.Account,java.lang.String|
|android.content.ISyncAdapter$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.ISyncAdapter| |startSync| |android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle|
|android.content.ISyncAdapter| |initialize| |android.accounts.Account,java.lang.String|
|android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.content.SyncManager$SyncHandler| |runBoundToAdapter| |com.android.server.content.SyncManager$ActiveSyncContext,android.os.IBinder|
|com.android.server.content.SyncManager$ActiveSyncContext| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.content.ContentService| |getMasterSyncAutomaticallyAsUser| |int|
|android.content.IContentService$Stub$Proxy| |getMasterSyncAutomaticallyAsUser| |int|
|android.content.IContentService$Stub| |getMasterSyncAutomaticallyAsUser| |int|
|com.android.server.content.ContentService| |getMasterSyncAutomatically| ||
|android.content.IContentService| |getMasterSyncAutomaticallyAsUser| |int|
|android.content.IContentService$Stub$Proxy| |getMasterSyncAutomatically| ||
|android.content.IContentService$Stub| |getMasterSyncAutomatically| ||
|android.content.ContentResolver| |getMasterSyncAutomaticallyAsUser| |int|
|android.content.IContentService| |getMasterSyncAutomatically| ||
|android.app.ContextImpl$ApplicationContentResolver| |getMasterSyncAutomaticallyAsUser| |int|
|android.test.mock.MockContentResolver| |getMasterSyncAutomaticallyAsUser| |int|
|android.content.ContentResolver| |getMasterSyncAutomatically| ||
|android.app.ContextImpl$ApplicationContentResolver| |getMasterSyncAutomatically| ||
|android.test.mock.MockContentResolver| |getMasterSyncAutomatically| ||
|com.android.server.accounts.AccountManagerService| |checkReadAccountsPermission| ||
|com.android.server.accounts.AccountManagerService| |getAccountsAsUser| |java.lang.String,int,java.lang.String,int|
|com.android.server.accounts.AccountManagerService| |getAccounts| |int|
|com.android.server.accounts.AccountManagerService| |getAccountsByFeatures| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[]|
|com.android.server.accounts.AccountManagerService| |hasFeatures| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[]|
|com.android.server.accounts.AccountManagerService| |getAccountsAsUser| |java.lang.String,int|
|com.android.server.accounts.AccountManagerService| |getAccountsByTypeForPackage| |java.lang.String,java.lang.String|
|com.android.server.accounts.AccountManagerService| |getAccountsForPackage| |java.lang.String,int|
|com.android.server.accounts.AccountManagerService$4| |run| ||
|com.android.server.content.SyncManager| |doDatabaseCleanup| ||
|com.android.server.content.SyncManager| |onUserStarting| |int|
|android.accounts.IAccountManager$Stub$Proxy| |getAccountsByFeatures| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[]|
|android.accounts.IAccountManager$Stub| |getAccountsByFeatures| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[]|
|android.accounts.IAccountManager$Stub$Proxy| |hasFeatures| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[]|
|android.accounts.IAccountManager$Stub| |hasFeatures| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[]|
|android.accounts.IAccountManager$Stub$Proxy| |getAccountsAsUser| |java.lang.String,int|
|android.accounts.IAccountManager$Stub| |getAccountsAsUser| |java.lang.String,int|
|com.android.server.accounts.AccountManagerService| |getAccounts| |java.lang.String|
|com.android.server.accounts.AccountManagerService| |onUserStarted| |android.content.Intent|
|android.accounts.IAccountManager$Stub$Proxy| |getAccountsByTypeForPackage| |java.lang.String,java.lang.String|
|android.accounts.IAccountManager$Stub| |getAccountsByTypeForPackage| |java.lang.String,java.lang.String|
|android.accounts.IAccountManager$Stub$Proxy| |getAccountsForPackage| |java.lang.String,int|
|android.accounts.IAccountManager$Stub| |getAccountsForPackage| |java.lang.String,int|
|com.android.server.accounts.AccountManagerService$Session| |run| ||
|com.android.server.content.SyncManager| |access$2000| |com.android.server.content.SyncManager|
|com.android.server.content.SyncManager| |updateRunningAccounts| ||
|com.android.server.content.SyncManager| |access$800| |com.android.server.content.SyncManager,int|
|android.accounts.IAccountManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accounts.IAccountManager| |getAccountsByFeatures| |android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[]|
|android.accounts.IAccountManager| |hasFeatures| |android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[]|
|android.accounts.IAccountManager| |getAccountsAsUser| |java.lang.String,int|
|android.accounts.IAccountManager$Stub$Proxy| |getAccounts| |java.lang.String|
|android.accounts.IAccountManager$Stub| |getAccounts| |java.lang.String|
|com.android.server.accounts.AccountManagerService| |access$200| |com.android.server.accounts.AccountManagerService,android.content.Intent|
|android.accounts.IAccountManager| |getAccountsByTypeForPackage| |java.lang.String,java.lang.String|
|android.accounts.IAccountManager| |getAccountsForPackage| |java.lang.String,int|
|com.android.server.accounts.AccountManagerService$Session| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.content.SyncManager$SyncHandler| |onBootCompleted| ||
|com.android.server.content.SyncManager$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.SyncManager| |onUserRemoved| |int|
|com.android.server.content.SyncManager| |onUserStopping| |int|
|com.android.server.content.SyncManager$6| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accounts.AccountManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accounts.AccountManager$3| |doWork| ||
|android.accounts.AccountManager$2| |doWork| ||
|android.accounts.AccountManager| |getAccountsAsUser| |int|
|android.accounts.AccountManager| |getAccountsByTypeAsUser| |java.lang.String,android.os.UserHandle|
|android.accounts.IAccountManager| |getAccounts| |java.lang.String|
|com.android.server.accounts.AccountManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|android.accounts.AccountManager| |getAccountsByTypeForPackage| |java.lang.String,java.lang.String|
|android.accounts.AccountManager| |getAccountsForPackage| |java.lang.String,int|
|com.android.server.accounts.AccountManagerService$10| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$11| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$3| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$4| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$5| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$6| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$7| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$8| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$9| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$RemoveAccountSession| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accounts.AccountManagerService$TestFeaturesSession| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.content.SyncManager$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.SyncManager| |access$700| |com.android.server.content.SyncManager,int|
|com.android.server.content.SyncManager| |access$900| |com.android.server.content.SyncManager,int|
|android.accounts.AccountManager$BaseFutureTask| |doWork| ||
|android.test.IsolatedContext$MockAccountManager| |getAccountsAsUser| |int|
|android.accounts.AccountManager| |getAccountsByType| |java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |getAccountsByTypeAsUser| |java.lang.String,android.os.UserHandle|
|android.accounts.AccountManager| |getAccounts| ||
|android.test.IsolatedContext$MockAccountManager| |getAccountsByTypeForPackage| |java.lang.String,java.lang.String|
|android.accounts.ChooseTypeAndAccountActivity| |getAcceptableAccountChoices| |android.accounts.AccountManager|
|android.accounts.ChooseTypeAndAccountActivity| |run| |android.accounts.AccountManagerFuture|
|android.test.IsolatedContext$MockAccountManager| |getAccountsForPackage| |java.lang.String,int|
|com.android.server.content.SyncManager$SyncHandler| |maybeStartNextSyncLocked| ||
|android.accounts.AccountManager$BaseFutureTask| |startTask| ||
|android.test.IsolatedContext$MockAccountManager| |getAccountsByType| |java.lang.String|
|android.accounts.AccountManager$19| |onReceive| |android.content.Context,android.content.Intent|
|android.accounts.AccountManager| |addOnAccountsUpdatedListener| |android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean|
|com.android.server.devicepolicy.DevicePolicyManagerService| |allowedToSetDeviceOwnerOnDevice| ||
|android.accounts.ChooseTypeAndAccountActivity| |onCreate| |android.os.Bundle|
|android.accounts.ChooseTypeAndAccountActivity| |onResume| ||
|com.android.server.content.SyncManager$ActiveSyncContext| |onServiceDisconnected| |android.content.ComponentName|
|com.android.server.content.SyncManager| |sendSyncAlarmMessage| ||
|com.android.server.content.SyncManager| |sendCheckAlarmsMessage| ||
|com.android.server.content.SyncManager| |sendCancelSyncsMessage| |com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle|
|com.android.server.content.SyncManager| |postSyncExpiryMessage| |com.android.server.content.SyncManager$ActiveSyncContext|
|android.accounts.AccountManager$13| |startTask| ||
|android.accounts.AccountManager$1| |startTask| ||
|android.accounts.AccountManager$2| |startTask| ||
|android.accounts.AccountManager$3| |startTask| ||
|android.accounts.AccountManager$4| |startTask| ||
|android.accounts.AccountManager$5| |startTask| ||
|android.accounts.AccountManager$7| |startTask| ||
|android.accounts.AccountManager$Future2Task| |startTask| ||
|com.android.server.devicepolicy.DevicePolicyManagerService| |setDeviceOwner| |java.lang.String,java.lang.String|
|com.android.server.content.SyncManager| |access$1100| |com.android.server.content.SyncManager|
|com.android.server.content.SyncManager| |access$100| |com.android.server.content.SyncManager|
|com.android.server.content.SyncManager| |scheduleSyncOperation| |com.android.server.content.SyncOperation|
|com.android.server.content.SyncManager| |cancelActiveSync| |com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle|
|com.android.server.content.SyncManager| |access$3400| |com.android.server.content.SyncManager,com.android.server.content.SyncManager$ActiveSyncContext|
|android.accounts.AccountManager$Future2Task| |start| ||
|android.app.admin.IDevicePolicyManager$Stub$Proxy| |setDeviceOwner| |java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |setDeviceOwner| |java.lang.String,java.lang.String|
|com.android.server.content.SyncManager$SyncAlarmIntentReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.SyncManager$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.SyncManager$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.content.SyncManager$9| |onStatusChanged| |int|
|com.android.server.content.SyncManager$SyncHandler| |scheduleReadyPeriodicSyncs| ||
|com.android.server.content.SyncManager$SyncHandler| |runBoundToAdapter| |com.android.server.content.SyncManager$ActiveSyncContext,android.os.IBinder|
|com.android.server.content.SyncManager$SyncHandler| |runSyncFinishedOrCanceledLocked| |android.content.SyncResult,com.android.server.content.SyncManager$ActiveSyncContext|
|com.android.server.content.SyncManager| |maybeRescheduleSync| |android.content.SyncResult,com.android.server.content.SyncOperation|
|com.android.server.content.SyncManager| |scheduleSync| |android.accounts.Account,int,int,java.lang.String,android.os.Bundle,long,long,boolean|
|com.android.server.content.SyncManager| |scheduleSync| |android.content.ComponentName,int,int,android.os.Bundle,long,long|
|com.android.server.content.SyncManager$SyncHandler| |dispatchSyncOperation| |com.android.server.content.SyncOperation|
|android.accounts.AccountManager$13| |start| ||
|android.accounts.AccountManager$1| |start| ||
|android.accounts.AccountManager$2| |start| ||
|android.accounts.AccountManager$3| |start| ||
|android.accounts.AccountManager$4| |start| ||
|android.accounts.AccountManager$5| |start| ||
|android.accounts.AccountManager$7| |start| ||
|android.app.admin.IDevicePolicyManager| |setDeviceOwner| |java.lang.String,java.lang.String|
|android.app.admin.IDevicePolicyManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.ISyncStatusObserver$Stub$Proxy| |onStatusChanged| |int|
|com.android.server.content.SyncManager$ActiveSyncContext| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.content.SyncManager| |sendSyncFinishedOrCanceledMessage| |com.android.server.content.SyncManager$ActiveSyncContext,android.content.SyncResult|
|com.android.server.content.SyncManager$SyncHandler| |cancelActiveSyncLocked| |com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle|
|com.android.server.content.SyncManager$7| |onSyncRequest| |com.android.server.content.SyncStorageEngine$EndPoint,int,android.os.Bundle|
|com.android.server.content.SyncManager$8| |onServiceChanged| |android.content.SyncAdapterType,int,boolean|
|com.android.server.content.SyncManager| |scheduleLocalSync| |android.accounts.Account,int,int,java.lang.String|
|android.accounts.AccountManager| |copyAccountToUser| |android.accounts.Account,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAuthTokenLabel| |java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |hasFeatures| |android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAccountsByTypeAndFeatures| |java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |renameAccount| |android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccount| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccountAsUser| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|com.android.commands.dpm.Dpm| |runSetDeviceOwner| ||
|com.android.server.devicepolicy.DevicePolicyManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.content.SyncManager| |access$1300| |com.android.server.content.SyncManager,com.android.server.content.SyncManager$ActiveSyncContext,android.content.SyncResult|
|com.android.server.content.SyncStorageEngine$OnSyncRequestListener| |onSyncRequest| |com.android.server.content.SyncStorageEngine$EndPoint,int,android.os.Bundle|
|com.android.server.content.SyncManager$8| |onServiceChanged| |java.lang.Object,int,boolean|
|android.test.IsolatedContext$MockAccountManager| |copyAccountToUser| |android.accounts.Account,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.GrantCredentialsPermissionActivity| |onCreate| |android.os.Bundle|
|android.test.IsolatedContext$MockAccountManager| |getAuthTokenLabel| |java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |hasFeatures| |android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |doWork| ||
|android.test.IsolatedContext$MockAccountManager| |renameAccount| |android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccount| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccountAsUser| |android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|com.android.commands.dpm.Dpm| |onRun| ||
|com.android.server.content.SyncManager$ActiveSyncContext| |binderDied| ||
|com.android.server.content.SyncManager$ActiveSyncContext| |onFinished| |android.content.SyncResult|
|com.android.server.content.SyncStorageEngine| |requestSync| |android.accounts.Account,int,int,java.lang.String,android.os.Bundle|
|com.android.server.content.SyncStorageEngine| |requestSync| |com.android.server.content.SyncStorageEngine$AuthorityInfo,int,android.os.Bundle|
|android.accounts.AccountManager$AmsTask| |doWork| ||
|com.android.internal.os.BaseCommand| |onRun| ||
|android.content.ISyncContext$Stub$Proxy| |onFinished| |android.content.SyncResult|
|com.android.server.content.SyncStorageEngine| |setMasterSyncAutomatically| |boolean,int|
|com.android.server.content.SyncStorageEngine| |setSyncAutomatically| |android.accounts.Account,int,java.lang.String,boolean|
|com.android.server.content.SyncStorageEngine| |setSyncableStateForEndPoint| |com.android.server.content.SyncStorageEngine$EndPoint,int|
|android.accounts.AccountManager$AmsTask| |start| ||
|android.accounts.AccountManager$AmsTask$Response| |onResult| |android.os.Bundle|
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|com.android.server.content.SyncStorageEngine| |readAndDeleteLegacyAccountInfoLocked| ||
|com.android.server.content.SyncStorageEngine| |setIsSyncable| |android.accounts.Account,int,java.lang.String,int|
|com.android.server.content.SyncStorageEngine| |setIsTargetServiceActive| |android.content.ComponentName,int,boolean|
|android.accounts.AccountManager$10| |start| ||
|android.accounts.AccountManager$11| |start| ||
|android.accounts.AccountManager$12| |start| ||
|android.accounts.AccountManager$14| |start| ||
|android.accounts.AccountManager$15| |start| ||
|android.accounts.AccountManager$16| |start| ||
|android.accounts.AccountManager$6| |start| ||
|android.accounts.AccountManager$8| |start| ||
|android.accounts.AccountManager$9| |start| ||
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |start| ||
|android.accounts.IAccountManagerResponse$Stub$Proxy| |onResult| |android.os.Bundle|
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|com.android.server.content.SyncStorageEngine| |clearAndReadState| ||
|com.android.server.content.SyncStorageEngine| |<init>| |android.content.Context,java.io.File|
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |addAccount| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |addAccountAsUser| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |confirmCredentialsAsUser| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |updateCredentials| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |editProperties| |java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccount| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |removeAccountAsUser| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager| |getAuthTokenByFeatures| |java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler|
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|com.android.server.content.SyncStorageEngine| |newTestInstance| |android.content.Context|
|com.android.server.content.SyncStorageEngine| |init| |android.content.Context|
|android.accounts.AccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1| |run| |android.accounts.AccountManagerFuture|
|android.accounts.ChooseTypeAndAccountActivity| |runAddAccountForAuthenticator| |java.lang.String|
|android.test.IsolatedContext$MockAccountManager| |addAccount| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |addAccountAsUser| |java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager| |confirmCredentials| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |confirmCredentialsAsUser| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.test.IsolatedContext$MockAccountManager| |updateCredentials| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |editProperties| |java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccount| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |removeAccountAsUser| |android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1| |onResult| |android.os.Bundle|
|android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask| |run| |android.accounts.AccountManagerFuture|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |getAuthTokenByFeatures| |java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler|
|com.android.server.content.SyncManager| |<init>| |android.content.Context,boolean|
|android.accounts.AccountManager| |blockingGetAuthToken| |android.accounts.Account,java.lang.String,boolean|
|android.test.IsolatedContext$MockAccountManager| |getAuthToken| |android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler|
|android.test.IsolatedContext$MockAccountManager| |confirmCredentials| |android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler|
|com.android.server.content.ContentService| |getSyncManager| ||
|com.android.server.content.ContentService| |systemReady| ||
|com.android.server.SystemServer| |startOtherServices| ||
|com.android.server.SystemServer| |run| ||
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.server.am.ActivityManagerService| |updatePersistentConfiguration| |android.content.res.Configuration|
|android.app.ActivityManagerNative| |updatePersistentConfiguration| |android.content.res.Configuration|
|android.app.ActivityManagerNative| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityManager| |updatePersistentConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.power.PowerManagerService$BinderService| |setStayOnSetting| |int|
|android.os.IPowerManager$Stub$Proxy| |setStayOnSetting| |int|
|android.os.IPowerManager$Stub| |setStayOnSetting| |int|
|android.os.IPowerManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.os.IPowerManager| |setStayOnSetting| |int|
|com.android.server.power.PowerManagerService$BinderService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.svc.PowerCommand| |run| |java.lang.String[]|
|com.android.commands.svc.Svc$Command| |run| |java.lang.String[]|
|com.android.commands.svc.Svc| |main| |java.lang.String[]|
|android.provider.Settings$System| |getUriFor| |java.lang.String|
|android.media.AudioService$SettingsObserver| |<init>| |android.media.AudioService|
|android.preference.SeekBarVolumizer| |start| ||
|android.widget.DateTimeView$ReceiverInfo| |register| |android.content.Context|
|com.android.commands.settings.SettingsCmd| |deleteForUser| |android.content.IContentProvider,int,java.lang.String,java.lang.String|
|com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver| |observe| ||
|com.android.internal.view.RotationPolicy| |registerRotationPolicyListener| |android.content.Context,com.android.internal.view.RotationPolicy$RotationPolicyListener,int|
|com.android.server.am.CoreSettingsObserver| |beginObserveCoreSettings| ||
|com.android.server.input.InputManagerService| |registerPointerSpeedSettingObserver| ||
|com.android.server.input.InputManagerService| |registerShowTouchesSettingObserver| ||
|com.android.server.notification.NotificationManagerService$SettingsObserver| |<init>| |com.android.server.notification.NotificationManagerService,android.os.Handler|
|com.android.server.power.PowerManagerService| |systemReady| |com.android.internal.app.IAppOpsService|
|com.android.server.VibratorService| |systemReady| ||
|android.media.AudioService| |<init>| |android.content.Context|
|android.preference.VolumePreference| |onBindDialogView| |android.view.View|
|android.widget.DateTimeView$ReceiverInfo| |addView| |android.widget.DateTimeView|
|com.android.commands.settings.SettingsCmd| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager| |init| |android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs|
|com.android.internal.view.RotationPolicy| |registerRotationPolicyListener| |android.content.Context,com.android.internal.view.RotationPolicy$RotationPolicyListener|
|com.android.server.am.CoreSettingsObserver| |<init>| |com.android.server.am.ActivityManagerService|
|com.android.server.input.InputManagerService| |start| ||
|com.android.server.notification.NotificationManagerService| |onStart| ||
|com.android.server.SystemServer| |startOtherServices| ||
|android.widget.DateTimeView| |onAttachedToWindow| ||
|com.android.commands.settings.SettingsCmd| |main| |java.lang.String[]|
|android.view.WindowManagerPolicy| |init| |android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs|
|com.android.server.am.ActivityManagerService| |installSystemProviders| ||
|com.android.server.SystemService| |onStart| ||
|com.android.server.SystemServer| |run| ||
|com.android.server.wm.WindowManagerService$3| |run| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.Class|
|com.android.server.SystemServer| |main| |java.lang.String[]|
|com.android.server.SystemServer| |startBootstrapServices| ||
|com.android.server.SystemServer| |startCoreServices| ||
|com.android.server.SystemServiceManager| |startService| |java.lang.String|
|android.provider.Settings$Secure| |getUriFor| |java.lang.String|
|android.media.MediaFocusControl$NotificationListenerObserver| |<init>| |android.media.MediaFocusControl|
|android.view.accessibility.CaptioningManager| |registerObserver| |java.lang.String|
|com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver| |<init>| |com.android.server.accessibility.AccessibilityManagerService,android.os.Handler|
|com.android.server.CertBlacklister| |registerObservers| |android.content.ContentResolver|
|com.android.server.devicepolicy.DevicePolicyManagerService$SetupContentObserver| |<init>| |com.android.server.devicepolicy.DevicePolicyManagerService,android.os.Handler|
|com.android.server.InputMethodManagerService$SettingsObserver| |<init>| |com.android.server.InputMethodManagerService,android.os.Handler|
|com.android.server.InputMethodManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.location.LocationBlacklist| |init| ||
|com.android.server.location.LocationFudger| |<init>| |android.content.Context,android.os.Handler|
|com.android.server.LocationManagerService| |systemRunning| ||
|com.android.server.media.MediaSessionService$SettingsObserver| |<init>| |com.android.server.media.MediaSessionService|
|com.android.server.notification.ManagedServices$SettingsObserver| |<init>| |com.android.server.notification.ManagedServices,android.os.Handler|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |registerContentObservers| ||
|com.android.server.search.SearchManagerService$GlobalSearchProviderObserver| |<init>| |com.android.server.search.SearchManagerService,android.content.ContentResolver|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver| |<init>| |com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub,android.os.Handler|
|com.android.server.wm.WindowManagerService$SettingsObserver| |<init>| |com.android.server.wm.WindowManagerService|
|android.media.MediaFocusControl| |<init>| |android.os.Looper,android.content.Context,android.media.AudioService$VolumeController,android.media.AudioService|
|android.view.accessibility.CaptioningManager| |addCaptioningChangeListener| |android.view.accessibility.CaptioningManager$CaptioningChangeListener|
|com.android.server.accessibility.AccessibilityManagerService| |<init>| |android.content.Context|
|com.android.server.CertBlacklister| |<init>| |android.content.Context|
|com.android.server.devicepolicy.DevicePolicyManagerService| |systemReady| ||
|com.android.server.InputMethodManagerService| |<init>| |android.content.Context,com.android.server.wm.WindowManagerService|
|com.android.server.SystemServer$2| |run| ||
|com.android.server.media.MediaSessionService$SettingsObserver| |<init>| |com.android.server.media.MediaSessionService,com.android.server.media.MediaSessionService$1|
|com.android.server.notification.ManagedServices$SettingsObserver| |<init>| |com.android.server.notification.ManagedServices,android.os.Handler,com.android.server.notification.ManagedServices$1|
|com.android.server.print.PrintManagerService$PrintManagerImpl| |<init>| |com.android.server.print.PrintManagerService,android.content.Context|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub| |systemRunning| |boolean|
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean|
|android.media.ClosedCaptionWidget| |manageChangeListener| ||
|android.media.SubtitleController| |addTrack| |android.media.MediaFormat|
|android.media.WebVttRenderingWidget| |manageChangeListener| ||
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.media.MediaSessionService| |onStart| ||
|com.android.server.notification.ManagedServices| |<init>| |android.content.Context,android.os.Handler,java.lang.Object,com.android.server.notification.ManagedServices$UserProfiles|
|com.android.server.print.PrintManagerService| |<init>| |android.content.Context|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |onBootPhase| |int|
|com.android.server.wm.WindowManagerService| |<init>| |android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1|
|android.media.ClosedCaptionWidget| |onAttachedToWindow| ||
|android.media.ClosedCaptionWidget| |onDetachedFromWindow| ||
|android.media.ClosedCaptionWidget| |setVisible| |boolean|
|android.media.MediaPlayer$2| |addTrack| ||
|android.media.MediaPlayer| |addTimedTextSource| |java.io.FileDescriptor,long,long,java.lang.String|
|android.media.MediaPlayer| |scanInternalSubtitleTracks| ||
|android.media.MediaPlayer| |selectOrDeselectTrack| |int,boolean|
|android.media.WebVttRenderingWidget| |onAttachedToWindow| ||
|android.media.WebVttRenderingWidget| |onDetachedFromWindow| ||
|android.media.WebVttRenderingWidget| |setVisible| |boolean|
|com.android.server.SystemService| |onBootPhase| |int|
|com.android.server.notification.ConditionProviders| |<init>| |android.content.Context,android.os.Handler,com.android.server.notification.ManagedServices$UserProfiles,com.android.server.notification.ZenModeHelper|
|com.android.server.notification.ConditionProviders| |<init>| |android.content.Context,android.os.Handler,java.lang.Object,com.android.server.notification.ManagedServices$UserProfiles|
|com.android.server.notification.NotificationManagerService$NotificationListeners| |<init>| |android.content.Context,android.os.Handler,java.lang.Object,com.android.server.notification.ManagedServices$UserProfiles|
|com.android.server.notification.NotificationManagerService$NotificationListeners| |<init>| |com.android.server.notification.NotificationManagerService|
|com.android.server.SystemService| |<init>| |android.content.Context|
|com.android.server.wm.WindowManagerService$2| |run| ||
|android.media.SubtitleTrack$RenderingWidget| |setVisible| |boolean|
|android.media.MediaPlayer$2| |run| ||
|android.media.MediaPlayer| |addTimedTextSource| |java.io.FileDescriptor,java.lang.String|
|android.media.MediaPlayer| |access$600| |android.media.MediaPlayer|
|android.media.MediaPlayer| |prepare| ||
|android.media.MediaPlayer| |deselectTrack| |int|
|android.media.MediaPlayer| |selectTrack| |int|
|com.android.server.AlarmManagerService| |onBootPhase| |int|
|com.android.server.am.ActivityManagerService$Lifecycle| |onBootPhase| |int|
|com.android.server.fingerprint.FingerprintService| |onBootPhase| |int|
|com.android.server.lights.LightsService| |onBootPhase| |int|
|com.android.server.media.MediaSessionService| |onBootPhase| |int|
|com.android.server.media.projection.MediaProjectionManagerService| |onBootPhase| |int|
|com.android.server.MmsServiceBroker| |onBootPhase| |int|
|com.android.server.PersistentDataBlockService| |onBootPhase| |int|
|com.android.server.pm.Installer| |onBootPhase| |int|
|com.android.server.pm.LauncherAppsService| |onBootPhase| |int|
|com.android.server.print.PrintManagerService| |onBootPhase| |int|
|com.android.server.restrictions.RestrictionsManagerService| |onBootPhase| |int|
|com.android.server.storage.DeviceStorageMonitorService| |onBootPhase| |int|
|com.android.server.SystemServiceManager| |startBootPhase| |int|
|com.android.server.twilight.TwilightService| |onBootPhase| |int|
|com.android.server.usage.UsageStatsService| |onBootPhase| |int|
|com.android.server.webkit.WebViewUpdateService| |onBootPhase| |int|
|com.android.server.AlarmManagerService| |<init>| |android.content.Context|
|com.android.server.am.ActivityManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.appwidget.AppWidgetService| |<init>| |android.content.Context|
|com.android.server.backup.BackupManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.BatteryService| |<init>| |android.content.Context|
|com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.display.DisplayManagerService| |<init>| |android.content.Context|
|com.android.server.DockObserver| |<init>| |android.content.Context|
|com.android.server.dreams.DreamManagerService| |<init>| |android.content.Context|
|com.android.server.ethernet.EthernetService| |<init>| |android.content.Context|
|com.android.server.fingerprint.FingerprintService| |<init>| |android.content.Context|
|com.android.server.hdmi.HdmiControlService| |<init>| |android.content.Context|
|com.android.server.job.JobSchedulerService| |<init>| |android.content.Context|
|com.android.server.lights.LightsService| |<init>| |android.content.Context|
|com.android.server.media.MediaSessionService| |<init>| |android.content.Context|
|com.android.server.media.projection.MediaProjectionManagerService| |<init>| |android.content.Context|
|com.android.server.MmsServiceBroker| |<init>| |android.content.Context|
|com.android.server.notification.NotificationManagerService| |<init>| |android.content.Context|
|com.android.server.PersistentDataBlockService| |<init>| |android.content.Context|
|com.android.server.pm.Installer| |<init>| |android.content.Context|
|com.android.server.pm.LauncherAppsService| |<init>| |android.content.Context|
|com.android.server.power.PowerManagerService| |<init>| |android.content.Context|
|com.android.server.restrictions.RestrictionsManagerService| |<init>| |android.content.Context|
|com.android.server.storage.DeviceStorageMonitorService| |<init>| |android.content.Context|
|com.android.server.telecom.TelecomLoaderService| |<init>| |android.content.Context|
|com.android.server.trust.TrustManagerService| |<init>| |android.content.Context|
|com.android.server.tv.TvInputManagerService| |<init>| |android.content.Context|
|com.android.server.twilight.TwilightService| |<init>| |android.content.Context|
|com.android.server.UiModeManagerService| |<init>| |android.content.Context|
|com.android.server.usage.UsageStatsService| |<init>| |android.content.Context|
|com.android.server.usb.UsbService$Lifecycle| |<init>| |android.content.Context|
|com.android.server.voiceinteraction.VoiceInteractionManagerService| |<init>| |android.content.Context|
|com.android.server.webkit.WebViewUpdateService| |<init>| |android.content.Context|
|com.android.server.wifi.p2p.WifiP2pService| |<init>| |android.content.Context|
|com.android.server.wifi.RttService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiScanningService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiService| |<init>| |android.content.Context|
|android.media.SubtitleTrack| |hide| ||
|android.media.SubtitleTrack| |show| ||
|android.media.MediaPlayer| |addTimedTextSource| |android.content.Context,android.net.Uri,java.lang.String|
|android.media.MediaPlayer| |addTimedTextSource| |java.lang.String,java.lang.String|
|android.media.MediaPlayer$4| |run| ||
|android.media.AsyncPlayer| |startSound| |android.media.AsyncPlayer$Command|
|android.media.AudioService$AudioHandler| |onPlaySoundEffect| |int,int|
|android.media.MediaPlayer| |create| |android.content.Context,android.net.Uri,android.view.SurfaceHolder,android.media.AudioAttributes,int|
|android.media.MediaPlayer| |create| |android.content.Context,int,android.media.AudioAttributes,int|
|android.media.Ringtone| |playFallbackRingtone| ||
|android.media.Ringtone| |setUri| |android.net.Uri|
|com.android.server.am.ActivityManagerService| |finishBooting| ||
|android.media.ClosedCaptionTrack| |hide| ||
|android.media.SRTTrack| |hide| ||
|android.media.SubtitleController| |doHide| ||
|android.media.SubtitleController| |doSelectTrack| |android.media.SubtitleTrack|
|android.media.TtmlTrack| |hide| ||
|android.media.WebVttTrack| |hide| ||
|android.media.ClosedCaptionTrack| |show| ||
|android.media.SRTTrack| |show| ||
|android.media.SubtitleController| |doShow| ||
|android.media.TtmlTrack| |show| ||
|android.media.WebVttTrack| |show| ||
|android.media.AsyncPlayer| |access$200| |android.media.AsyncPlayer,android.media.AsyncPlayer$Command|
|android.media.MediaPlayer| |create| |android.content.Context,android.net.Uri,android.view.SurfaceHolder|
|android.speech.tts.AudioPlaybackQueueItem| |run| ||
|android.media.MediaPlayer| |create| |android.content.Context,int|
|android.media.Ringtone| |play| ||
|android.media.RingtoneManager| |getRingtone| |android.content.Context,android.net.Uri,int|
|android.media.Ringtone| |setAudioAttributes| |android.media.AudioAttributes|
|com.android.server.am.ActivityManagerService| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |ensureBootCompleted| ||
|android.media.SubtitleController| |access$100| |android.media.SubtitleController|
|android.media.SubtitleController| |access$200| |android.media.SubtitleController,android.media.SubtitleTrack|
|android.media.SubtitleController| |access$000| |android.media.SubtitleController|
|android.media.AsyncPlayer$Thread| |run| ||
|android.media.MediaPlayer| |create| |android.content.Context,android.net.Uri|
|android.speech.tts.PlaybackQueueItem| |run| ||
|android.preference.SeekBarVolumizer| |onStartSample| ||
|com.android.internal.policy.impl.PhoneWindowManager| |performAuditoryFeedbackForAccessibilityIfNeed| ||
|com.android.server.DockObserver| |handleDockStateChange| ||
|com.android.server.power.Notifier| |playWirelessChargingStartedSound| ||
|com.android.internal.policy.impl.EnableAccessibilityController| |onInterceptTouchEvent| |android.view.MotionEvent|
|android.media.RingtoneManager| |getRingtone| |android.content.Context,android.net.Uri|
|android.media.RingtoneManager| |getRingtone| |int|
|android.media.Ringtone| |setStreamType| |int|
|android.app.ActivityManagerNative| |bootAnimationComplete| ||
|com.android.server.am.ActivityManagerService| |appNotResponding| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |systemReady| |java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |crashApplication| |com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo|
|android.media.AsyncPlayer| |enqueueLocked| |android.media.AsyncPlayer$Command|
|android.speech.tts.AudioPlaybackHandler$MessageLoop| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$1300| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |powerLongPress| ||
|com.android.server.DockObserver| |access$100| |com.android.server.DockObserver|
|com.android.server.power.Notifier| |access$500| |com.android.server.power.Notifier|
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |dispatchTouchEvent| |android.view.MotionEvent|
|android.preference.SeekBarVolumizer| |onInitSample| ||
|com.android.internal.policy.impl.EnableAccessibilityController| |<init>| |android.content.Context,java.lang.Runnable|
|android.app.IActivityManager| |bootAnimationComplete| ||
|com.android.server.am.ActiveServices| |serviceTimeout| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService$10| |run| ||
|com.android.server.am.BroadcastQueue$AppNotResponding| |run| ||
|com.android.server.am.ActivityManagerService$14| |run| ||
|com.android.server.am.ActivityManagerService| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrashInner| |java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo|
|android.media.AsyncPlayer| |play| |android.content.Context,android.net.Uri,boolean,int|
|android.media.AsyncPlayer| |stop| ||
|com.android.internal.policy.impl.PhoneWindowManager$4| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$800| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.server.DockObserver| |updateLocked| ||
|com.android.server.power.Notifier| |onWirelessChargingStarted| ||
|com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog| |onStart| ||
|com.android.server.wm.WindowManagerService| |performEnableScreen| ||
|android.app.ActivityManagerNative| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.ActivityManagerService| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener$NativeCrashReporter| |run| ||
|com.android.server.DockObserver| |onBootPhase| |int|
|com.android.server.DockObserver| |setDockStateLocked| |int|
|com.android.server.power.PowerManagerService| |updateIsPoweredLocked| |int|
|com.android.server.wm.WindowManagerService| |enableScreenAfterBoot| ||
|com.android.server.wm.WindowManagerService| |performBootTimeout| ||
|com.android.server.wm.WindowManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeededLocked| ||
|com.android.server.wm.WindowManagerService| |checkBootAnimationCompleteLocked| ||
|android.app.IActivityManager| |handleApplicationWtf| |android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo|
|android.app.ActivityManagerNative| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |consumeNativeCrashData| |java.io.FileDescriptor|
|com.android.server.DockObserver| |access$900| |com.android.server.DockObserver,int|
|com.android.server.DockObserver| |setActualDockStateLocked| |int|
|com.android.server.power.PowerManagerService| |updatePowerStateLocked| ||
|com.android.server.am.ActivityManagerService| |enableScreenAfterBoot| ||
|com.android.server.am.ActivityManagerService| |showBootMessage| |java.lang.CharSequence,boolean|
|com.android.server.wm.WindowManagerService| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedInner| |boolean|
|com.android.server.wm.WindowStateAnimator| |performShowLocked| ||
|com.android.server.wm.WindowStateAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$1100| |com.android.server.wm.WindowManagerService|
|com.android.internal.os.RuntimeInit| |wtf| |java.lang.String,java.lang.Throwable,boolean|
|android.app.IActivityManager| |handleApplicationCrash| |android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo|
|com.android.server.am.NativeCrashListener| |run| ||
|com.android.server.DockObserver| |access$400| |com.android.server.DockObserver,int|
|com.android.server.DockObserver| |init| ||
|com.android.server.power.PowerManagerService| |access$1100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |acquireWakeLockInternal| |android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |boostScreenBrightnessInternal| |long,int|
|com.android.server.power.PowerManagerService| |goToSleepInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |handleBatteryStateChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleSandman| ||
|com.android.server.power.PowerManagerService| |handleScreenBrightnessBoostTimeout| ||
|com.android.server.power.PowerManagerService| |handleSettingsChangedLocked| ||
|com.android.server.power.PowerManagerService| |handleUserActivityTimeout| ||
|com.android.server.power.PowerManagerService| |napInternal| |long,int|
|com.android.server.power.PowerManagerService| |onBootPhase| |int|
|com.android.server.power.PowerManagerService| |removeWakeLockLocked| |com.android.server.power.PowerManagerService$WakeLock,int|
|com.android.server.power.PowerManagerService| |setDozeOverrideFromDreamManagerInternal| |int,int|
|com.android.server.power.PowerManagerService| |setMaximumScreenOffTimeoutFromDeviceAdminInternal| |int|
|com.android.server.power.PowerManagerService| |setScreenBrightnessOverrideFromWindowManagerInternal| |int|
|com.android.server.power.PowerManagerService| |setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal| |float|
|com.android.server.power.PowerManagerService| |setTemporaryScreenBrightnessSettingOverrideInternal| |int|
|com.android.server.power.PowerManagerService| |setUserActivityTimeoutOverrideFromWindowManagerInternal| |long|
|com.android.server.power.PowerManagerService| |userActivityInternal| |long,int,int,int|
|com.android.server.power.PowerManagerService| |wakeUpInternal| |long,int|
|android.app.ActivityManagerNative| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub$Proxy| |enableScreenIfNeeded| ||
|android.view.IWindowManager$Stub| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLockedLoop| ||
|com.android.server.wm.AppWindowAnimator| |showAllWindowsLocked| ||
|com.android.server.wm.WindowAnimator| |updateWindowsLocked| |int|
|com.android.server.wm.WindowStateAnimator| |commitFinishDrawingLocked| |long|
|com.android.server.wm.WindowState| |hideLw| |boolean|
|com.android.server.wm.WindowState| |setAppOpVisibilityLw| |boolean|
|android.util.Log$1| |onTerribleFailure| |java.lang.String,android.util.Log$TerribleFailure,boolean|
|com.android.internal.os.RuntimeInit$UncaughtHandler| |uncaughtException| |java.lang.Thread,java.lang.Throwable|
|com.android.server.am.ActivityManagerService| |startObservingNativeCrashes| ||
|com.android.server.DockObserver$2| |onUEvent| |android.os.UEventObserver$UEvent|
|com.android.server.power.PowerManagerService$2| |onProximityNegative| ||
|com.android.server.power.PowerManagerService$2| |onProximityPositive| ||
|com.android.server.power.PowerManagerService$2| |onStateChanged| ||
|com.android.server.power.PowerManagerService$DockReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |access$3200| |com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int|
|com.android.server.power.PowerManagerService| |access$5000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |access$3900| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |access$1900| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2400| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2500| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2100| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$2300| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |access$4000| |com.android.server.power.PowerManagerService,long,int|
|com.android.server.power.PowerManagerService| |handleWakeLockDeath| |com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |releaseWakeLockInternal| |android.os.IBinder,int|
|com.android.server.power.PowerManagerService| |access$5300| |com.android.server.power.PowerManagerService,int,int|
|com.android.server.power.PowerManagerService| |access$5500| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5200| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$4800| |com.android.server.power.PowerManagerService,float|
|com.android.server.power.PowerManagerService| |access$4700| |com.android.server.power.PowerManagerService,int|
|com.android.server.power.PowerManagerService| |access$5400| |com.android.server.power.PowerManagerService,long|
|com.android.server.power.PowerManagerService| |access$3700| |com.android.server.power.PowerManagerService,long,int,int,int|
|com.android.server.power.PowerManagerService| |userActivityFromNative| |long,int,int|
|com.android.server.power.PowerManagerService| |access$3800| |com.android.server.power.PowerManagerService,long,int|
|android.app.IActivityManager| |showBootMessage| |java.lang.CharSequence,boolean|
|android.view.IWindowManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowManager| |enableScreenIfNeeded| ||
|com.android.server.wm.WindowManagerService| |performLayoutAndPlaceSurfacesLocked| ||
|com.android.server.wm.WindowAnimator| |testTokenMayBeDrawnLocked| |int|
|com.android.server.wm.WindowManagerService| |handleAppTransitionReadyLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowAnimator| |animateLocked| ||
|android.view.WindowManagerPolicy$WindowState| |hideLw| |boolean|
|com.android.server.wm.DisplayContent| |switchUserStacks| |int|
|com.android.server.wm.WindowManagerService| |updateAppOpsState| ||
|com.android.server.power.PowerManagerService$BatteryReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |scheduleSandmanLocked| ||
|com.android.server.power.PowerManagerService| |updateScreenBrightnessBoostLocked| |int|
|com.android.server.power.PowerManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.power.PowerManagerService$UserSwitchedReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.power.PowerManagerService| |updateUserActivitySummaryLocked| |long,int|
|com.android.server.power.PowerManagerService| |access$2700| |com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$WakeLock|
|com.android.server.power.PowerManagerService| |access$3300| |com.android.server.power.PowerManagerService,android.os.IBinder,int|
|com.android.server.power.PowerManagerService$LocalService| |setDozeOverrideFromDreamManager| |int,int|
|com.android.server.power.PowerManagerService$LocalService| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|com.android.server.power.PowerManagerService$LocalService| |setScreenBrightnessOverrideFromWindowManager| |int|
|com.android.server.power.PowerManagerService$LocalService| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| |android.content.pm.PackageParser$Package,int,int|
|com.android.server.pm.PackageManagerService| |performBootDexOpt| ||
|com.android.server.wm.WindowManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.policy.impl.PhoneWindowManager| |finishScreenTurningOn| ||
|com.android.server.wm.WindowManagerService| |computeNewConfiguration| ||
|com.android.server.wm.WindowManagerService| |setTokenVisibilityLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |access$400| |com.android.server.wm.WindowManagerService|
|com.android.server.wm.WindowManagerService| |addTask| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |moveStackWindowsLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reconfigureDisplayLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowManagerService| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.WindowManagerService| |removeWindowInnerLocked| |com.android.server.wm.Session,com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |resizeStack| |int,android.graphics.Rect|
|com.android.server.wm.WindowManagerService| |setCurrentUser| |int,int[]|
|com.android.server.wm.WindowManagerService| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |setUniverseTransformLocked| |com.android.server.wm.WindowState,float,float,float,float,float,float,float|
|com.android.server.wm.WindowManagerService| |unsetAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken,boolean,boolean|
|com.android.server.wm.WindowAnimator| |access$000| |com.android.server.wm.WindowAnimator|
|com.android.internal.policy.impl.BarController| |setBarShowingLw| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |finishPostLayoutPolicyLw| ||
|com.android.internal.policy.impl.PhoneWindowManager| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|com.android.server.wm.WindowManagerService$5| |onOpChanged| |int,java.lang.String|
|com.android.server.power.PowerManagerService| |access$2000| |com.android.server.power.PowerManagerService|
|com.android.server.power.PowerManagerService| |updateDreamLocked| |int,boolean|
|com.android.server.power.PowerManagerService$WakeLock| |binderDied| ||
|android.os.PowerManagerInternal| |setDozeOverrideFromDreamManager| |int,int|
|android.os.PowerManagerInternal| |setMaximumScreenOffTimeoutFromDeviceAdmin| |int|
|android.os.PowerManagerInternal| |setScreenBrightnessOverrideFromWindowManager| |int|
|android.os.PowerManagerInternal| |setUserActivityTimeoutOverrideFromWindowManager| |long|
|android.content.pm.IPackageManager$Stub$Proxy| |performBootDexOpt| ||
|android.content.pm.IPackageManager$Stub| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishKeyguardDrawn| ||
|com.android.internal.policy.impl.PhoneWindowManager| |finishWindowsDrawn| ||
|com.android.server.am.ActivityManagerService| |updateConfiguration| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |prepareAppTransition| |int,boolean|
|com.android.server.wm.WindowManagerService| |updateRotationUncheckedLocked| |boolean|
|com.android.server.wm.WindowManagerService| |makeWindowFreezingScreenIfNeededLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |requestTraversalLocked| ||
|com.android.server.am.ActivityStackSupervisor| |moveTaskToStackLocked| |int,int,boolean|
|com.android.server.wm.WindowManagerService| |setForcedDisplayDensityLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.WindowManagerService| |setForcedDisplaySizeLocked| |com.android.server.wm.DisplayContent,int,int|
|com.android.server.wm.WindowManagerService| |setOverscanLocked| |com.android.server.wm.DisplayContent,int,int,int,int|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |reevaluateStatusBarVisibility| ||
|com.android.server.wm.TaskStack| |detachDisplay| ||
|android.view.IWindowManager$Stub$Proxy| |setNewConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |updateConfigurationLocked| |android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean|
|com.android.server.wm.WindowManagerService| |startAppFreezingScreenLocked| |com.android.server.wm.AppWindowToken|
|com.android.server.wm.WindowAnimator$1| |run| ||
|com.android.internal.policy.impl.BarController| |checkHiddenLw| ||
|com.android.internal.policy.impl.BarController| |adjustSystemUiVisibilityLw| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |beginLayoutLw| |boolean,int,int,int|
|android.view.WindowManagerPolicy| |finishPostLayoutPolicyLw| ||
|android.view.WindowManagerPolicy| |applyPostLayoutPolicyLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState|
|com.android.server.power.PowerManagerService$DreamReceiver| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.dreams.DreamManagerService| |startDozingInternal| |android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |stopDozingInternal| |android.os.IBinder|
|android.content.pm.IPackageManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.pm.IPackageManager| |performBootDexOpt| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$300| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |access$400| |com.android.internal.policy.impl.PhoneWindowManager|
|android.app.ActivityManagerNative| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager$Stub$Proxy| |prepareAppTransition| |int,boolean|
|android.view.IWindowManager$Stub| |prepareAppTransition| |int,boolean|
|com.android.server.am.ActivityManagerService| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStack| |moveTaskToBackLocked| |int|
|com.android.server.am.ActivityStack| |moveTaskToFrontLocked| |com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle,java.lang.String|
|com.android.server.am.ActivityStack| |updateTransitLocked| |int,android.os.Bundle|
|com.android.server.wm.WindowManagerService| |resumeRotationLocked| ||
|com.android.server.wm.WindowManagerService| |stopFreezingDisplayLocked| ||
|com.android.server.wm.WindowManagerService| |updateResizingWindows| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |createSurfaceLocked| ||
|com.android.server.wm.WindowManagerService$LocalService| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.wm.WindowManagerService| |handleDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayChangedLocked| |int|
|com.android.server.wm.WindowManagerService| |handleDisplayRemovedLocked| |int|
|com.android.server.wm.WindowManagerService| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService| |requestTraversal| ||
|com.android.server.wm.WindowManagerService| |setAppFullscreen| |android.os.IBinder,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$9| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|com.android.internal.policy.impl.PhoneWindowManager| |clearClearableFlagsLw| ||
|com.android.server.wm.WindowManagerService| |detachStackLocked| |com.android.server.wm.DisplayContent,com.android.server.wm.TaskStack|
|android.view.IWindowManager| |setNewConfiguration| |android.content.res.Configuration|
|com.android.server.am.ActivityManagerService| |retrieveSettings| ||
|com.android.server.wm.WindowManagerService| |updateOrientationFromAppTokensLocked| |android.content.res.Configuration,android.os.IBinder|
|com.android.internal.policy.impl.PhoneWindowManager| |adjustSystemUiVisibilityLw| |int|
|android.view.WindowManagerPolicy| |beginLayoutLw| |boolean,int,int,int|
|com.android.server.dreams.DreamManagerService| |access$1800| |com.android.server.dreams.DreamManagerService,android.os.IBinder,int,int|
|com.android.server.dreams.DreamManagerService| |access$1900| |com.android.server.dreams.DreamManagerService,android.os.IBinder|
|com.android.server.pm.PackageManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.WindowManagerPolicy| |wakingUp| ||
|com.android.internal.policy.impl.PhoneWindowManager| |systemBooted| ||
|com.android.internal.policy.impl.PhoneWindowManager$1| |run| ||
|android.app.IActivityManager| |updateConfiguration| |android.content.res.Configuration|
|android.view.IWindowManager| |prepareAppTransition| |int,boolean|
|android.app.ActivityManagerNative| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |findTaskToMoveToFrontLocked| |com.android.server.am.TaskRecord,int,android.os.Bundle,java.lang.String|
|com.android.server.wm.DragState| |unregister| ||
|com.android.server.wm.WindowManagerService| |access$500| |com.android.server.wm.WindowManagerService|
|android.view.WindowManagerInternal| |waitForAllWindowsDrawn| |java.lang.Runnable,long|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay| |<init>| |com.android.server.am.ActivityStackSupervisor,int,int,int|
|com.android.server.wm.WindowManagerService| |onDisplayAdded| |int|
|com.android.server.wm.WindowManagerService| |access$1000| |com.android.server.wm.WindowManagerService,int|
|com.android.server.wm.WindowManagerService| |access$900| |com.android.server.wm.WindowManagerService,int|
|android.view.IWindowManager$Stub$Proxy| |keyguardGoingAway| |boolean,boolean|
|android.view.IWindowManager$Stub| |keyguardGoingAway| |boolean,boolean|
|com.android.server.wm.WindowManagerService$LocalService| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemBarsLw| |android.view.WindowManagerPolicy$WindowState,int,int|
|com.android.server.wm.DisplayContent| |checkForDeferredActions| ||
|com.android.server.wm.WindowManagerService| |detachStack| |int|
|android.view.WindowManagerPolicy| |adjustSystemUiVisibilityLw| |int|
|com.android.server.wm.WindowManagerService| |performLayoutLockedInner| |com.android.server.wm.DisplayContent,boolean,boolean|
|com.android.server.power.Notifier$2| |run| ||
|android.view.WindowManagerPolicy| |systemBooted| ||
|com.android.internal.app.LocalePicker| |updateLocale| |java.util.Locale|
|com.android.internal.telephony.MccTable| |setSystemLocale| |android.content.Context,java.lang.String,java.lang.String|
|com.android.internal.telephony.MccTable| |updateMccMncConfiguration| |android.content.Context,java.lang.String,boolean|
|com.android.server.MountService| |copyLocaleFromMountService| ||
|com.android.server.UiModeManagerService| |sendConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |displayReady| ||
|com.android.server.wm.WindowManagerService| |sendNewConfiguration| ||
|android.app.IActivityManager| |startInPlaceAnimationOnFrontMostApplication| |android.app.ActivityOptions|
|com.android.server.am.ActivityStackSupervisor| |setLockTaskModeLocked| |com.android.server.am.TaskRecord,boolean,java.lang.String|
|com.android.server.wm.DragState| |endDragLw| ||
|com.android.server.wm.Session| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.WindowManagerService| |prepareDragSurface| |android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface|
|com.android.server.wm.WindowManagerService| |startFreezingScreen| |int,int|
|com.android.internal.policy.impl.PhoneWindowManager| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |setSurfaceLocked| |android.view.Surface,int,int,int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayAddedLocked| |int|
|com.android.server.wm.WindowManagerService| |onDisplayChanged| |int|
|com.android.server.wm.WindowManagerService| |onDisplayRemoved| |int|
|android.view.IWindowManager| |keyguardGoingAway| |boolean,boolean|
|android.view.WindowManagerInternal| |requestTraversalFromDisplayManager| ||
|com.android.internal.policy.impl.PhoneWindowManager| |updateSystemUiVisibilityLw| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |detachLocked| ||
|com.android.server.wm.WindowManagerService| |statusBarVisibilityChanged| |int|
|com.android.server.wm.WindowManagerService| |updateFocusedWindowLocked| |int,boolean|
|com.android.internal.telephony.PhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |setLocaleFromCsim| ||
|com.android.internal.telephony.uicc.SIMRecords| |setLocaleFromUsim| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |setProperties| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.PhoneFactory| |setDefaultSubscription| |int|
|com.android.internal.telephony.ServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |setDefaultFallbackSubId| |int|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimLoaded| |int|
|com.android.server.MountService| |access$2000| |com.android.server.MountService|
|com.android.server.UiModeManagerService| |sendConfigurationAndStartDreamOrDockAppLocked| |java.lang.String|
|com.android.server.wm.WindowManagerService$DragInputEventReceiver| |onInputEvent| |android.view.InputEvent|
|android.view.IWindowSession$Stub$Proxy| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|com.android.server.wm.Session| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager$Stub$Proxy| |startFreezingScreen| |int,int|
|android.view.IWindowManager$Stub| |startFreezingScreen| |int,int|
|android.view.WindowManagerPolicy| |screenTurningOn| |android.view.WindowManagerPolicy$ScreenOnListener|
|com.android.server.am.ActivityStackSupervisor| |onDisplayAdded| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayChangedLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |handleDisplayRemovedLocked| |int|
|com.android.server.display.DisplayManagerService| |scheduleTraversalLocked| |boolean|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1900| |com.android.internal.policy.impl.PhoneWindowManager|
|com.android.internal.policy.impl.PhoneWindowManager| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |requestTransientBars| |android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |detachLocked| ||
|android.view.IWindowManager$Stub$Proxy| |statusBarVisibilityChanged| |int|
|android.view.IWindowManager$Stub| |statusBarVisibilityChanged| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.cdma.CDMAPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.gsm.GSMPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.imsphone.ImsPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhoneBase| |setPropertiesByCarrier| ||
|com.android.internal.telephony.sip.SipPhone| |setPropertiesByCarrier| ||
|com.android.internal.telephony.uicc.RuimRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateCurrentCarrierInProvider| |java.lang.String|
|com.android.internal.telephony.cdma.CDMAPhone| |init| |android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updateCarrierMccMncConfiguration| |java.lang.String,java.lang.String,android.content.Context|
|com.android.internal.telephony.SubscriptionController| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionInfoUpdater$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.MountService$3| |run| ||
|com.android.server.UiModeManagerService| |updateAfterBroadcastLocked| |java.lang.String,int,int|
|com.android.server.UiModeManagerService| |updateLocked| |int,int|
|android.view.IWindowSession| |performDrag| |android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData|
|android.view.IWindowSession$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession$Stub$Proxy| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowSession$Stub| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|android.view.IWindowManager| |startFreezingScreen| |int,int|
|com.android.server.display.DisplayPowerController| |setScreenState| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |onDisplayRemoved| |int|
|com.android.server.display.DisplayManagerService| |access$1600| |com.android.server.display.DisplayManagerService,boolean|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAddedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceChanged| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemovedLocked| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |requestGlobalDisplayStateInternal| |int|
|com.android.server.display.DisplayManagerService| |setDisplayInfoOverrideFromWindowManagerInternal| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |setDisplayPropertiesInternal| |int,boolean,float,boolean|
|com.android.server.display.DisplayManagerService| |windowManagerAndInputReady| ||
|com.android.internal.policy.impl.PhoneWindowManager$17| |onReceive| |android.content.Context,android.content.Intent|
|android.view.WindowManagerPolicy| |focusChangedLw| |android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState|
|com.android.internal.policy.impl.PhoneWindowManager| |access$1700| |com.android.internal.policy.impl.PhoneWindowManager,android.view.WindowManagerPolicy$WindowState|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTaskListEmptyLocked| ||
|android.view.IWindowManager| |statusBarVisibilityChanged| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int|
|com.android.internal.telephony.uicc.IccRecords| |onAllRecordsLoaded| ||
|com.android.internal.telephony.uicc.RuimRecords| |onRecordLoaded| ||
|com.android.internal.telephony.uicc.SIMRecords| |onRecordLoaded| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollStateDone| ||
|com.android.internal.telephony.ISub$Stub$Proxy| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |addSubInfoRecord| |java.lang.String,int|
|com.android.server.MountService| |onDaemonConnected| ||
|com.android.server.UiModeManagerService| |access$000| |com.android.server.UiModeManagerService,java.lang.String,int,int|
|com.android.server.UiModeManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |onBootPhase| |int|
|com.android.server.UiModeManagerService| |updateDockState| |int|
|com.android.server.UiModeManagerService| |updateTwilight| ||
|android.view.View| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.wm.Session| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IWindowSession| |prepareDrag| |android.view.IWindow,int,int,int,android.view.Surface|
|com.android.server.display.DisplayPowerController| |animateScreenStateChange| |int,boolean|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |createVirtualDisplayInternal| |android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceAdded| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$1400| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |handleDisplayDeviceRemoved| |com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |releaseVirtualDisplayInternal| |android.os.IBinder|
|com.android.server.display.DisplayManagerService| |access$3700| |com.android.server.display.DisplayManagerService,int|
|com.android.server.display.DisplayManagerService| |access$4100| |com.android.server.display.DisplayManagerService,int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService| |access$4300| |com.android.server.display.DisplayManagerService,int,boolean,float,boolean|
|com.android.internal.policy.impl.PhoneWindowManager$18| |run| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromRight| ||
|com.android.internal.policy.impl.PhoneWindowManager$7| |onSwipeFromTop| ||
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTaskListEmptyLocked| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.PhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean|
|com.android.internal.telephony.uicc.IccRecords| |onRecordLoaded| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |pollState| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |pollState| ||
|com.android.internal.telephony.ISub| |addSubInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.ISub$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.INativeDaemonConnectorCallbacks| |onDaemonConnected| ||
|com.android.server.UiModeManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.UiModeManagerService| |access$100| |com.android.server.UiModeManagerService,int|
|com.android.server.UiModeManagerService$4| |onTwilightStateChanged| ||
|android.app.ActivityView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.FragmentBreadCrumbs| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.MediaRouteButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.NativeActivity$NativeContentView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.app.SearchDialog$SearchBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.appwidget.AppWidgetHostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.filterfw.core.FilterSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.gesture.GestureOverlayView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.ExtractEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.inputmethodservice.KeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.ClosedCaptionWidget$CCLineBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.TtmlRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView$3| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.tv.TvView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$CueLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$RegionLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.media.WebVttRenderingWidget$SpanLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.opengl.GLSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.preference.PreferenceFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSSurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.renderscript.RSTextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.GhostView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.LayoutInflater$BlinkLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.SurfaceView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.TextureView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewOverlay$OverlayViewGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.view.ViewStub| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.webkit.WebView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsoluteLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AbsSpinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuPresenter$OverflowMenuButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActionMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ActivityChooserView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AdapterViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AnalogClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AppSecurityPermissions$PermissionItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.AutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Button| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CalendarViewLegacyDelegate$WeekView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckBox| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CheckedTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Chronometer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.CompoundButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DatePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DateTimeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DayPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DialerFilter| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.DigitalClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$HandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$InsertionHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionEndHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Editor$SelectionStartHandleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.EditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ExpandableListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.FrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Gallery| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.GridView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.HorizontalScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.LinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListPopupWindow$DropDownListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MediaController| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.MultiAutoCompleteTextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.NumberPicker$CustomEditText| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.PopupWindow$PopupViewContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.QuickContactBadge| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadialTimePickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RadioGroup| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RatingBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RelativeLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ScrollView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SearchView$SearchAutoComplete| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SeekBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SimpleMonthView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.SlidingDrawer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Space| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Spinner| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.StackView$StackFrame| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Switch| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabHost| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TableRow| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TabWidget| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextClock| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TextViewWithCircularIndicator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TimePicker| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ToggleButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.Toolbar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.TwoLineListItem| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.VideoView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewFlipper| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ViewSwitcher| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.YearPickerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButton| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomButtonsController$Container| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|android.widget.ZoomControls| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.AlertController$RecycleListView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.app.PlatLogoActivity$1| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.policy.impl.RecentApplicationsBackground| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ActionMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ExpandedMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.IconMenuView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.view.menu.ListMenuItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AbsActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccessibleDateAnimator| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.AccountItemView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContainer| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarContextView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarOverlayLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ActionBarView$HomeView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.DialogTitle| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.FaceUnlockView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.LockPatternView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.multiwaveview.GlowPadView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PasswordEntryKeyboardView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PointerLocationView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.PreferenceImageView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ResolverDrawerLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.RotarySelector| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.ScrollingTabContainerView$TabView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SizeAdaptiveLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SlidingTab| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SubtitleView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.SwipeDismissLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.TextProgressBar| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WaveView| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.internal.widget.WeightedLinearLayout| |startDrag| |android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int|
|com.android.server.display.DisplayPowerController| |updatePowerState| ||
|com.android.server.display.DisplayAdapter$Listener| |onTraversalRequested| ||
|com.android.server.display.DisplayManagerService| |access$3200| |com.android.server.display.DisplayManagerService,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int|
|com.android.server.display.DisplayManagerService| |access$1300| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService$DisplayAdapterListener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayManagerService| |access$1500| |com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice|
|com.android.server.display.DisplayManagerService| |access$3500| |com.android.server.display.DisplayManagerService,android.os.IBinder|
|com.android.server.display.DisplayManagerService$LocalService$1| |requestDisplayState| |int|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|com.android.server.display.DisplayManagerService$LocalService| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromBottom| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromRight| ||
|com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks| |onSwipeFromTop| ||
|com.android.server.am.ActivityStack| |finishAllActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |removeTask| |com.android.server.am.TaskRecord,java.lang.String|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |release| ||
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int|
|com.android.internal.telephony.PhoneFactory| |getGsmPhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhone| |android.content.Context|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.cdma.CDMALTEPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.cdma.CDMAPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.gsm.GSMPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.imsphone.ImsPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhoneBase| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface|
|com.android.internal.telephony.sip.SipPhone| |<init>| |android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile|
|com.android.internal.telephony.sip.SipPhone| |<init>| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.ServiceStateTracker| |pollState| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.ServiceStateTracker| |handlePollStateResult| |int,android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.gsm.GSMPhone| |setOperatorBrandOverride| |java.lang.String|
|android.telephony.SubscriptionManager| |addSubscriptionInfoRecord| |java.lang.String,int|
|com.android.internal.telephony.SubscriptionController| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.NativeDaemonConnector| |listenToSocket| ||
|com.android.server.UiModeManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.twilight.TwilightListener| |onTwilightStateChanged| ||
|android.widget.Editor| |performLongClick| |boolean|
|com.android.server.display.DisplayPowerController| |access$400| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |debounceProximitySensor| ||
|com.android.server.display.DisplayAdapter$2| |run| ||
|com.android.server.display.DisplayAdapter$Listener| |onDisplayDeviceEvent| |com.android.server.display.DisplayDevice,int|
|com.android.server.display.DisplayBlanker| |requestDisplayState| |int|
|android.hardware.display.DisplayManagerInternal| |setDisplayInfoOverrideFromWindowManager| |int,android.view.DisplayInfo|
|android.hardware.display.DisplayManagerInternal| |setDisplayProperties| |int,boolean,float,boolean|
|com.android.internal.policy.impl.SystemGesturesPointerEventListener| |onPointerEvent| |android.view.MotionEvent|
|com.android.server.am.ActivityRecord| |setTask| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord|
|android.app.IActivityContainer$Stub$Proxy| |release| ||
|android.app.IActivityContainer$Stub| |release| ||
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |release| ||
|com.android.internal.telephony.PhoneFactory| |getCdmaPhone| |int|
|com.android.internal.telephony.PhoneProxy| |deleteAndCreatePhone| |int|
|com.android.internal.telephony.PhoneFactory| |makeDefaultPhones| |android.content.Context|
|com.android.internal.telephony.imsphone.ImsPhoneFactory| |makePhone| |android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.sip.SipPhoneFactory| |makePhone| |java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier|
|com.android.internal.telephony.PhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |handleCdmaSubscriptionSource| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.PhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |getSubscriptionInfoAndStartPollingThreads| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.internal.telephony.SubscriptionInfoUpdater| |updateSubscriptionInfoByIccId| ||
|com.android.server.NativeDaemonConnector| |run| ||
|com.android.server.twilight.TwilightService$TwilightListenerRecord| |run| ||
|android.widget.TextView| |performLongClick| ||
|com.android.server.display.DisplayPowerController$ScreenOnUnblocker| |onScreenOn| ||
|com.android.server.display.DisplayPowerController| |sendUpdatePowerStateLocked| ||
|com.android.server.display.DisplayPowerController| |access$500| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |handleProximitySensorEvent| |long,boolean|
|com.android.server.display.DisplayAdapter$1| |run| ||
|com.android.server.display.DisplayPowerState$PhotonicModulator| |requestDisplayState| |int|
|com.android.server.wm.WindowManagerService| |computeScreenConfigurationLocked| |android.content.res.Configuration|
|com.android.server.wm.WindowManagerService| |newDisplayContentLocked| |android.view.Display|
|com.android.server.am.ActivityStack| |resetTargetTaskIfNeededLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.am.ActivityStack| |resetAffinityTaskIfNeededLocked| |com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int|
|android.app.IActivityContainer$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IActivityContainer| |release| ||
|com.android.internal.telephony.PhoneProxy| |phoneObjectUpdater| |int|
|com.android.internal.telephony.PhoneFactory| |makeImsPhone| |com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone|
|com.android.internal.telephony.PhoneFactory| |makeSipPhone| |java.lang.String|
|com.android.internal.telephony.cdma.CDMALTEPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.cdma.CDMAPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.gsm.GSMPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.Phone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhoneBase| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.sip.SipPhone| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.imsphone.ImsPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.Phone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhoneBase| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.sip.SipPhone| |setOperatorBrandOverride| |java.lang.String|
|com.android.internal.telephony.SubscriptionInfoUpdater| |handleSimAbsent| |int|
|android.inputmethodservice.ExtractButton| |performLongClick| ||
|android.inputmethodservice.ExtractEditText| |performLongClick| ||
|android.media.ClosedCaptionWidget$CCLineBox| |performLongClick| ||
|android.widget.AutoCompleteTextView| |performLongClick| ||
|android.widget.Button| |performLongClick| ||
|android.widget.CheckBox| |performLongClick| ||
|android.widget.CheckedTextView| |performLongClick| ||
|android.widget.Chronometer| |performLongClick| ||
|android.widget.CompoundButton| |performLongClick| ||
|android.widget.DateTimeView| |performLongClick| ||
|android.widget.DigitalClock| |performLongClick| ||
|android.widget.EditText| |performLongClick| ||
|android.widget.MultiAutoCompleteTextView| |performLongClick| ||
|android.widget.NumberPicker$CustomEditText| |performLongClick| ||
|android.widget.RadioButton| |performLongClick| ||
|android.widget.SearchView$SearchAutoComplete| |performLongClick| ||
|android.widget.Switch| |performLongClick| ||
|android.widget.TextClock| |performLongClick| ||
|android.widget.TextViewWithCircularIndicator| |performLongClick| ||
|android.widget.ToggleButton| |performLongClick| ||
|com.android.internal.view.menu.ActionMenuItemView| |performLongClick| ||
|com.android.internal.view.menu.IconMenuItemView| |performLongClick| ||
|com.android.internal.widget.DialogTitle| |performLongClick| ||
|com.android.server.display.DisplayPowerController| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |sendUpdatePowerState| ||
|com.android.server.display.DisplayPowerController| |access$1000| |com.android.server.display.DisplayPowerController,long,boolean|
|com.android.server.display.DisplayPowerState$PhotonicModulator| |run| ||
|com.android.server.wm.WindowManagerService| |computeNewConfigurationLocked| ||
|com.android.server.wm.WindowManagerService| |getDisplayContentLocked| |int|
|com.android.server.am.ActivityStack| |resetTaskIfNeededLocked| |com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor$ActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.ActivityView$ActivityContainerWrapper| |release| ||
|com.android.internal.telephony.PhoneProxy| |updatePhoneObject| |int|
|com.android.internal.telephony.PhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.PhoneProxy| |setRoamingOverride| |java.util.List,java.util.List,java.util.List,java.util.List|
|com.android.internal.telephony.PhoneProxy| |setOperatorBrandOverride| |java.lang.String|
|com.android.server.display.DisplayManagerService$LocalService| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController| |access$000| |com.android.server.display.DisplayPowerController|
|com.android.server.display.DisplayPowerController| |updateBrightness| ||
|com.android.server.display.DisplayPowerController$8| |onSensorChanged| |android.hardware.SensorEvent|
|com.android.server.display.DisplayPowerState| |<init>| |com.android.server.display.DisplayBlanker,com.android.server.lights.Light,com.android.server.display.ColorFade|
|com.android.server.wm.WindowAnimator| |getPendingLayoutChanges| |int|
|com.android.server.wm.WindowAnimator| |setPendingLayoutChanges| |int,int|
|com.android.server.wm.WindowAnimator| |updateAppWindowsLocked| |int|
|com.android.server.wm.WindowAnimator| |updateWallpaperLocked| |int|
|com.android.server.wm.WindowManagerService| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayContentLocked| ||
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |int|
|com.android.server.wm.WindowManagerService| |addWindow| |com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.WindowManagerService| |getBaseDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |getInitialDisplayDensity| |int|
|com.android.server.wm.WindowManagerService| |createDisplayContentLocked| |android.view.Display|
|com.android.server.wm.WindowManagerService| |displayReady| |int|
|com.android.server.wm.WindowManagerService| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.wm.WindowManagerService| |getInitialDisplaySize| |int,android.graphics.Point|
|android.app.ActivityView$ActivityContainerWrapper| |finalize| ||
|android.app.ActivityView| |release| ||
|com.android.internal.telephony.Phone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updateImsPhone| ||
|com.android.internal.telephony.cdma.CDMAPhone| |updateImsPhone| ||
|com.android.internal.telephony.gsm.GSMPhone| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.imsphone.ImsPhone| |updateImsPhone| ||
|com.android.internal.telephony.PhoneBase$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.sip.SipPhoneBase| |updateImsPhone| ||
|com.android.internal.telephony.sip.SipPhone| |updateImsPhone| ||
|android.hardware.display.DisplayManagerInternal| |requestPowerState| |android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean|
|com.android.server.display.DisplayPowerController$1| |onAnimationEnd| |android.animation.Animator|
|com.android.server.display.DisplayPowerController$2| |onAnimationEnd| ||
|com.android.server.display.DisplayPowerController$3| |run| ||
|com.android.server.display.AutomaticBrightnessController$Callbacks| |updateBrightness| ||
|com.android.server.display.DisplayPowerController| |initialize| ||
|com.android.server.wm.WindowAnimator| |setAppLayoutChanges| |com.android.server.wm.AppWindowAnimator,int,java.lang.String|
|com.android.server.wm.WindowAnimator| |hideWallpapersLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowStateAnimator| |prepareSurfaceLocked| |boolean|
|com.android.server.wm.WindowStateAnimator| |setSurfaceBoundariesLocked| |boolean|
|android.view.IWindowManager$Stub$Proxy| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|android.view.IWindowManager$Stub| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |screenshotActivities| |com.android.server.am.ActivityRecord|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |populateWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |populateVisibleWindowsOnScreenLocked| |android.util.SparseArray|
|com.android.server.wm.WindowManagerService| |getDefaultDisplayInfoLocked| ||
|com.android.server.wm.WindowManagerService| |getDefaultWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |adjustWallpaperWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |getOrientationFromAppTokensLocked| ||
|com.android.server.wm.WindowManagerService| |getPreferredOptionsPanelGravity| ||
|com.android.server.wm.WindowManagerService| |handleAnimatingStoppedAndTransitionLocked| ||
|com.android.server.wm.WindowManagerService| |createWatermarkInTransaction| ||
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| ||
|com.android.server.wm.WindowManagerService| |saveLastInputMethodWindowForTransition| ||
|com.android.server.wm.WindowManagerService| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.wm.WindowManagerService| |showCircularMask| |boolean|
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlay| ||
|com.android.server.wm.WindowManagerService| |showStrictModeViolation| |int,int|
|com.android.server.wm.WindowManagerService| |startFreezingDisplayLocked| |boolean,int,int|
|com.android.server.wm.WindowManagerService| |updateWallpaperVisibilityLocked| ||
|com.android.server.wm.WindowAnimator| |dumpLocked| |java.io.PrintWriter,java.lang.String,boolean|
|com.android.server.wm.WindowManagerService| |getWindowListLocked| |android.view.Display|
|com.android.server.wm.Session| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getBaseDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub| |getInitialDisplayDensity| |int|
|android.view.IWindowManager$Stub$Proxy| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getBaseDisplaySize| |int,android.graphics.Point|
|com.android.server.am.ProcessList| |applyDisplaySize| |com.android.server.wm.WindowManagerService|
|android.view.IWindowManager$Stub$Proxy| |getInitialDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager$Stub| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.internal.telephony.PhoneBase| |updatePhoneObject| |int|
|com.android.server.power.PowerManagerService| |updateDisplayPowerStateLocked| |int|
|com.android.server.display.RampAnimator$Listener| |onAnimationEnd| ||
|com.android.server.display.AutomaticBrightnessController| |updateAutoBrightness| |boolean|
|com.android.server.wm.AppWindowAnimator| |stepAnimationLocked| |long|
|com.android.server.wm.WindowStateAnimator| |destroyDeferredSurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |destroySurfaceLocked| ||
|com.android.server.wm.WindowStateAnimator| |finishExit| ||
|android.view.IWindowManager| |screenshotApplications| |android.os.IBinder,int,int,int,boolean|
|com.android.server.am.ActivityStack| |startPausingLocked| |boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |handleLaunchTaskBehindCompleteLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.TaskRecord| |getTaskThumbnailLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |recomputeBoundsLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |computeChangedWindows| ||
|com.android.server.wm.WindowManagerService| |applyAnimationLocked| |com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,int,boolean,boolean|
|com.android.server.wm.WindowManagerService| |checkWaitingForWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.server.wm.WindowManagerService| |moveInputMethodWindowsIfNeededLocked| |boolean|
|com.android.server.wm.WindowManagerService| |findDesiredInputMethodWindowIndexLocked| |boolean|
|com.android.server.wm.WindowManagerService| |getOrientationFromWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |addInputMethodWindowToListLocked| |com.android.server.wm.WindowState|
|com.android.server.wm.WindowManagerService| |moveInputMethodDialogsLocked| |int|
|com.android.server.wm.WindowManagerService| |updateStatusBarVisibilityLocked| |int|
|android.view.IWindowManager$Stub$Proxy| |getPreferredOptionsPanelGravity| ||
|android.view.IWindowManager$Stub| |getPreferredOptionsPanelGravity| ||
|com.android.server.InputMethodManagerService| |unbindCurrentMethodLocked| |boolean,boolean|
|android.view.IWindowManager$Stub$Proxy| |setAppVisibility| |android.os.IBinder,boolean|
|android.view.IWindowManager$Stub| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityStackSupervisor| |processStoppingActivitiesLocked| |boolean|
|com.android.server.am.ActivityStack| |setVisibile| |com.android.server.am.ActivityRecord,boolean|
|com.android.server.wm.WindowManagerService| |updateCircularDisplayMaskIfNeeded| ||
|com.android.server.wm.WindowManagerService| |showEmulatorDisplayOverlayIfNeeded| ||
|com.android.server.wm.WindowManagerService| |access$800| |com.android.server.wm.WindowManagerService,int,int|
|com.android.server.wm.WindowManagerService| |dumpAnimatorLocked| |java.io.PrintWriter,java.lang.String[],boolean|
|com.android.server.wm.DragState| |getTouchedWinAtPointLw| |float,float|
|com.android.server.wm.DragState| |broadcastDragStartedLw| |float,float|
|android.view.IWindowSession$Stub$Proxy| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|com.android.server.wm.Session| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|com.android.server.wm.Session| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowManager| |getBaseDisplayDensity| |int|
|android.view.IWindowManager| |getInitialDisplayDensity| |int|
|android.view.IWindowManager| |getBaseDisplaySize| |int,android.graphics.Point|
|android.view.IWindowManager| |getInitialDisplaySize| |int,android.graphics.Point|
|com.android.internal.telephony.cdma.CDMALTEPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.cdma.CDMAPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.gsm.GSMPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.imsphone.ImsPhone| |updatePhoneObject| |int|
|com.android.internal.telephony.ServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.sip.SipPhoneBase| |updatePhoneObject| |int|
|com.android.internal.telephony.sip.SipPhone| |updatePhoneObject| |int|
|com.android.server.display.RampAnimator$1| |run| ||
|com.android.server.display.RampAnimator| |animateTo| |int,int|
|com.android.server.display.AutomaticBrightnessController| |access$300| |com.android.server.display.AutomaticBrightnessController,boolean|
|com.android.server.display.AutomaticBrightnessController| |configure| |boolean,float,boolean|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| |long|
|com.android.server.wm.WindowState| |removeLocked| ||
|com.android.server.wm.WindowManagerService| |rebuildAppWindowListLocked| |com.android.server.wm.DisplayContent|
|com.android.server.wm.WindowStateAnimator| |cancelExitAnimationForNextAnimationLocked| ||
|com.android.server.am.ActivityStack| |checkReadyForSleepLocked| ||
|com.android.server.am.ActivityStackSupervisor| |pauseBackStacks| |boolean,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |pauseChildStacks| |com.android.server.am.ActivityRecord,boolean,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |drawWindowIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |<init>| |com.android.server.wm.AccessibilityController$DisplayMagnifier|
|com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport| |onRotationChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |performComputeChangedWindowsNotLocked| ||
|com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver| |scheduleComputeChangedWindowsLocked| ||
|com.android.server.wm.WindowManagerService| |updateTokenInPlaceLocked| |com.android.server.wm.AppWindowToken,int|
|android.view.IWindowManager$Stub$Proxy| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager$Stub| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|android.view.IWindowManager| |getPreferredOptionsPanelGravity| ||
|com.android.server.InputMethodManagerService| |startInputInnerLocked| ||
|com.android.server.InputMethodManagerService| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.InputMethodManagerService| |resetAllInternalStateLocked| |boolean,boolean|
|com.android.server.InputMethodManagerService| |updateInputMethodsFromSettingsLocked| |boolean|
|android.view.IWindowManager| |setAppVisibility| |android.os.IBinder,boolean|
|com.android.server.am.ActivityRecord| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |activityIdleInternalLocked| |android.os.IBinder,boolean,android.content.res.Configuration|
|com.android.server.am.ActivityStack| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.wm.WindowManagerService$SettingsObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.wm.WindowManagerService| |dump| |java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]|
|com.android.server.wm.DragState| |notifyDropLw| |float,float|
|com.android.server.wm.DragState| |notifyMoveLw| |float,float|
|android.view.IWindowSession| |addToDisplay| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub$Proxy| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession$Stub| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.IWindowSession| |addToDisplayWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub$Proxy| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|android.view.IWindowSession$Stub| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |runDisplayDensity| ||
|com.android.commands.wm.Wm| |runDisplaySize| ||
|com.android.internal.view.RotationPolicy| |getRotationLockOrientation| |android.content.Context|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |updatePhoneObject| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |queueNextSignalStrengthPoll| ||
|com.android.server.display.DisplayPowerController| |animateScreenBrightness| |int,int|
|com.android.server.display.AutomaticBrightnessController$2| |onTwilightStateChanged| ||
|com.android.server.display.AutomaticBrightnessController| |handleLightSensorEvent| |long,float|
|com.android.server.display.AutomaticBrightnessController| |updateAmbientLux| ||
|com.android.server.am.ActivityStackSupervisor| |shutdownLocked| |int|
|com.android.server.am.ActivityStackSupervisor| |checkReadyForSleepLocked| ||
|android.app.ActivityManagerNative| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |<init>| |com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.AccessibilityController$DisplayMagnifier| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onWindowLayersChangedLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationSpecLocked| |android.view.MagnificationSpec|
|com.android.server.wm.AccessibilityController| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.AccessibilityController| |onWindowFocusChangedNotLocked| ||
|com.android.server.wm.AccessibilityController| |onRotationChangedLocked| |com.android.server.wm.DisplayContent,int|
|com.android.server.wm.AccessibilityController| |onSomeWindowResizedOrMovedLocked| ||
|com.android.server.wm.AccessibilityController| |onWindowTransitionLocked| |com.android.server.wm.WindowState,int|
|android.view.IWindowManager| |inputMethodClientHasFocus| |com.android.internal.view.IInputMethodClient|
|com.android.internal.policy.impl.PhoneWindow| |getOptionsPanelGravity| ||
|com.android.server.InputMethodManagerService| |startInputUncheckedLocked| |com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.server.InputMethodManagerService| |systemRunning| |com.android.server.statusbar.StatusBarManagerService|
|com.android.server.InputMethodManagerService| |resetStateIfCurrentLocaleChangedLocked| ||
|com.android.server.InputMethodManagerService| |switchUserLocked| |int|
|com.android.server.InputMethodManagerService| |buildInputMethodListLocked| |java.util.ArrayList,java.util.HashMap,boolean|
|com.android.server.InputMethodManagerService| |updateFromSettingsLocked| |boolean|
|com.android.server.am.ActivityRecord$Token| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler| |activityIdleInternal| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |ensureActivitiesVisibleLocked| |com.android.server.am.ActivityRecord,int|
|com.android.server.am.ActivityStack| |goToSleep| ||
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |android.content.pm.ApplicationInfo,int|
|android.service.wallpaper.WallpaperService$Engine| |updateSurface| |boolean,boolean,boolean|
|android.view.ViewRootImpl| |setView| |android.view.View,android.view.WindowManager$LayoutParams,android.view.View|
|android.view.IWindowSession| |add| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel|
|android.view.SurfaceView| |updateWindow| |boolean,boolean|
|android.view.IWindowSession| |addWithoutInputChannel| |android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect|
|com.android.commands.wm.Wm| |onRun| ||
|com.android.server.display.AutomaticBrightnessController| |access$200| |com.android.server.display.AutomaticBrightnessController,long,float|
|com.android.server.display.AutomaticBrightnessController| |access$000| |com.android.server.display.AutomaticBrightnessController|
|com.android.server.am.ActivityManagerService| |shutdown| |int|
|com.android.server.am.ActivityStackSupervisor| |activitySleptLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |goingToSleepLocked| ||
|com.android.server.am.ActivityStack| |completePauseLocked| |boolean|
|com.android.server.am.ActivityStackSupervisor| |scheduleSleepTimeout| ||
|android.app.IActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.AccessibilityController| |drawMagnifiedRegionBorderIfNeededLocked| ||
|com.android.server.wm.AccessibilityController| |setMagnificationCallbacksLocked| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.wm.WindowManagerService| |assignLayersLocked| |com.android.server.wm.WindowList|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.wm.WindowManagerService$LocalService| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.server.wm.WindowState| |reportResized| ||
|com.android.server.wm.WindowStateAnimator| |applyEnterAnimationLocked| ||
|com.android.server.InputMethodManagerService| |startInputLocked| |com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int|
|com.android.internal.policy.impl.PhoneWindow| |onOptionsPanelRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.KeyEvent|
|com.android.server.InputMethodManagerService| |access$1100| |com.android.server.InputMethodManagerService|
|com.android.server.InputMethodManagerService| |access$1000| |com.android.server.InputMethodManagerService,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onSomePackagesChanged| ||
|android.view.IApplicationToken$Stub$Proxy| |windowsVisible| ||
|android.view.IApplicationToken$Stub| |windowsVisible| ||
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleTimeoutLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStackSupervisor| |scheduleIdleLocked| ||
|com.android.server.am.ActivityManagerService| |handleAppDiedLocked| |com.android.server.am.ProcessRecord,boolean,boolean|
|com.android.server.am.ActivityStackSupervisor| |attachApplicationLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.CompatModePackages| |setFrontActivityScreenCompatModeLocked| |int|
|com.android.server.am.CompatModePackages| |setPackageScreenCompatModeLocked| |java.lang.String,int|
|android.service.wallpaper.WallpaperService$Engine| |attach| |android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper|
|android.service.wallpaper.WallpaperService$Engine| |doDisplayPaddingChanged| |android.graphics.Rect|
|android.service.wallpaper.WallpaperService$Engine| |reportVisibility| ||
|android.service.wallpaper.WallpaperService$Engine| |setOffsetNotificationsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$Engine| |setTouchEventsEnabled| |boolean|
|android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper| |executeMessage| |android.os.Message|
|android.view.WindowManagerGlobal| |addView| |android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window|
|com.android.internal.os.BaseCommand| |onRun| ||
|com.android.server.display.AutomaticBrightnessController$1| |onSensorChanged| |android.hardware.SensorEvent|
|android.app.ActivityManagerNative| |shutdown| |int|
|com.android.server.am.ActivityManagerService$12| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |updateSleepIfNeededLocked| ||
|com.android.server.am.ActivityStack| |activityPausedLocked| |android.os.IBinder,boolean|
|android.app.ActivityManager| |getTaskThumbnail| |int|
|com.android.server.wm.WindowManagerService$LocalService| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|android.view.WindowManagerInternal| |setMagnificationSpec| |android.view.MagnificationSpec|
|android.view.WindowManagerInternal| |setWindowsForAccessibilityCallback| |android.view.WindowManagerInternal$WindowsForAccessibilityCallback|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher| |dispatchRotationChanged| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUpPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanel| |int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |openPanelsAfterRestore| ||
|com.android.internal.policy.impl.PhoneWindow| |reopenMenu| |boolean|
|com.android.internal.policy.impl.PhoneWindow| |togglePanel| |int,android.view.KeyEvent|
|com.android.server.InputMethodManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$3| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.content.PackageMonitor| |onSomePackagesChanged| ||
|android.view.IApplicationToken$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.IApplicationToken| |windowsVisible| ||
|com.android.server.am.ActivityStack| |backgroundResourcesReleased| ||
|com.android.server.am.ActivityStack| |clearLaunchTime| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityStack| |completeResumeLocked| |com.android.server.am.ActivityRecord|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |attachApplicationLocked| |android.app.IApplicationThread,int|
|com.android.server.am.ActivityManagerService| |removeProcessLocked| |com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable|
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord,int,android.app.IApplicationThread|
|com.android.server.am.ActivityManagerService| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.server.am.CompatModeDialog$1| |onCheckedChanged| |android.widget.CompoundButton,boolean|
|android.service.wallpaper.WallpaperService$Engine$3| |onDisplayChanged| |int|
|android.service.wallpaper.WallpaperService$Engine| |doVisibilityChanged| |boolean|
|android.view.WindowManagerImpl| |addView| |android.view.View,android.view.ViewGroup$LayoutParams|
|com.android.internal.os.BaseCommand| |run| |java.lang.String[]|
|android.app.IActivityManager| |shutdown| |int|
|com.android.server.am.ActivityManagerService| |finishRunningVoiceLocked| ||
|com.android.server.am.ActivityManagerService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityManagerService| |startRunningVoiceLocked| ||
|com.android.server.am.ActivityStack| |awakeFromSleepingLocked| ||
|android.view.WindowManagerInternal| |setMagnificationCallbacks| |android.view.WindowManagerInternal$MagnificationCallbacks|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnificationSpec| |android.view.MagnificationSpec|
|com.android.server.accessibility.AccessibilityManagerService| |updateWindowsForAccessibilityCallbackLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$RotationWatcher$1| |run| ||
|com.android.internal.policy.impl.PhoneWindow| |onKeyUp| |int,int,android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow| |access$2200| |com.android.internal.policy.impl.PhoneWindow|
|com.android.internal.policy.impl.PhoneWindow| |onConfigurationChanged| |android.content.res.Configuration|
|com.android.internal.policy.impl.PhoneWindow| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.app.IUserSwitchObserver$Stub$Proxy| |onUserSwitching| |int,android.os.IRemoteCallback|
|com.android.internal.content.PackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.LocationManagerService$4| |onSomePackagesChanged| ||
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onSomePackagesChanged| ||
|com.android.server.ServiceWatcher$2| |onSomePackagesChanged| ||
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onSomePackagesChanged| ||
|com.android.server.am.ActivityRecord$Token| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityStack| |releaseBackgroundResources| ||
|com.android.server.am.ActivityManagerService| |access$400| |com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |broadcastIntentLocked| |com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |finishInstrumentationLocked| |com.android.server.am.ProcessRecord,int,android.os.Bundle|
|com.android.server.am.ActivityManagerService| |forceStopPackageLocked| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |forceStopUserLocked| |int,java.lang.String|
|com.android.server.am.ActivityManagerService| |handleAppCrashLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killPackageProcessesLocked| |java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean|
|com.android.server.am.ActivityManagerService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActivityManagerService$AppDeathRecipient| |binderDied| ||
|com.android.server.am.ActivityManagerService| |appDiedLocked| |com.android.server.am.ProcessRecord|
|android.app.ActivityManagerNative| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |run| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |run| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |run| |java.lang.String[]|
|com.android.commands.media.Media| |run| |java.lang.String[]|
|com.android.commands.wm.Wm| |run| |java.lang.String[]|
|com.android.server.power.ShutdownThread| |run| ||
|com.android.server.am.ActivityManagerService$LocalService| |onWakefulnessChanged| |int|
|com.android.server.am.ActivityStackSupervisor| |comeOutOfSleepIfNeededLocked| ||
|com.android.server.accessibility.ScreenMagnifier| |<init>| |android.content.Context,int,com.android.server.accessibility.AccessibilityManagerService|
|com.android.server.accessibility.ScreenMagnifier| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |offsetMagnifiedRegionCenter| |float,float|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |reset| |boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScaleAndMagnifiedRegionCenter| |float,float,float,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |onUserStateChangedLocked| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |dispatchKeyEvent| |android.view.KeyEvent|
|com.android.internal.policy.impl.PhoneWindow$DecorView| |onAttachedToWindow| ||
|com.android.internal.view.menu.MenuBuilder$Callback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.app.ResolverActivity$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.LocationManagerService$4| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.print.PrintManagerService$PrintManagerImpl$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.ServiceWatcher$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.trust.TrustManagerService$3| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.tv.TvInputManagerService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService$7| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.am.ActivityManagerService| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService| |deliverPreBootCompleted| |java.lang.Runnable,java.util.ArrayList,int|
|com.android.server.am.ActivityManagerService| |access$200| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int|
|com.android.server.am.ActivityManagerService| |closeSystemDialogsLocked| |java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserBoot| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |finishUserStop| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |makeAppCrashingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |killAppAtUsersRequest| |com.android.server.am.ProcessRecord,android.app.Dialog|
|com.android.server.am.ActivityManagerService| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |bringUpServiceLocked| |com.android.server.am.ServiceRecord,int,boolean,boolean|
|com.android.server.am.ActivityManagerService| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |processNextBroadcast| |boolean|
|com.android.server.am.ActivityManagerService$LocalService| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |realStartServiceLocked| |com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean|
|android.app.IActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |main| |java.lang.String[]|
|com.android.commands.appops.AppOpsCommand| |main| |java.lang.String[]|
|com.android.commands.dpm.Dpm| |main| |java.lang.String[]|
|com.android.commands.media.Media| |main| |java.lang.String[]|
|com.android.commands.wm.Wm| |main| |java.lang.String[]|
|com.android.server.power.ShutdownThread| |beginShutdownSequence| |android.content.Context|
|com.android.server.accessibility.AccessibilityInputFilter| |enableFeatures| ||
|com.android.server.accessibility.AccessibilityInputFilter| |disableFeatures| ||
|com.android.server.accessibility.EventStreamTransformation| |onDestroy| ||
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScroll| |android.view.MotionEvent,android.view.MotionEvent,float,float|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRectangleOnScreenRequested| |int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |handleOnScreenStateChange| |java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |resetMagnificationIfNeeded| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onActionTapAndHold| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setMagnifiedRegionCenter| |float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier$MagnificationController| |setScale| |float,float,float,boolean|
|com.android.server.accessibility.ScreenMagnifier| |handleOnMagnifiedBoundsChanged| |android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService| |access$500| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.AccessibilityManagerService| |ensureWindowsAvailableTimed| ||
|com.android.server.accessibility.AccessibilityManagerService| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |switchUser| |int|
|com.android.server.accessibility.AccessibilityManagerService| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuView$MenuBuilderCallback| |onMenuModeChange| |com.android.internal.view.menu.MenuBuilder|
|com.android.internal.view.menu.MenuBuilder| |changeMenuMode| ||
|android.app.ActivityManagerNative| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|com.android.server.am.ActivityManagerService$29| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |finishUserSwitch| |com.android.server.am.UserStartedState|
|com.android.server.am.ActivityManagerService| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActivityManagerService$28| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceInnerLocked| |com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |performServiceRestartLocked| |com.android.server.am.ServiceRecord|
|android.app.ActivityManagerNative| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.BroadcastQueue| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |broadcastTimeoutLocked| |boolean|
|com.android.server.am.BroadcastQueue| |scheduleBroadcastsLocked| ||
|android.app.ActivityManagerInternal| |startIsolatedProcess| |java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable|
|com.android.server.am.ActiveServices| |attachApplicationLocked| |com.android.server.am.ProcessRecord,java.lang.String|
|android.app.ActivityManager| |setPackageScreenCompatMode| |java.lang.String,int|
|com.android.commands.am.Am| |runScreenCompat| ||
|com.android.server.power.ShutdownThread| |access$000| |android.content.Context|
|com.android.server.power.ShutdownThread| |shutdownInner| |android.content.Context,boolean|
|com.android.server.accessibility.AccessibilityInputFilter| |onInstalled| ||
|com.android.server.accessibility.AccessibilityInputFilter| |setEnabledFeatures| |int|
|com.android.server.accessibility.AccessibilityInputFilter| |onUninstalled| ||
|com.android.server.accessibility.AccessibilityManagerService| |updateInputFilter| |com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |access$100| |com.android.server.accessibility.ScreenMagnifier,int,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver| |access$2900| |com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver,java.lang.String|
|com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler| |access$600| |com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnRotationChanged| |int|
|com.android.server.accessibility.ScreenMagnifier| |handleOnUserContextChanged| ||
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1700| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler| |onScale| |android.view.ScaleGestureDetector|
|com.android.server.accessibility.ScreenMagnifier| |access$000| |com.android.server.accessibility.ScreenMagnifier,android.graphics.Region|
|com.android.server.accessibility.AccessibilityManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.accessibility.AccessibilityManagerService$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$1| |onSomePackagesChanged| ||
|com.android.server.accessibility.AccessibilityManagerService$2| |onReceive| |android.content.Context,android.content.Intent|
|com.android.server.accessibility.AccessibilityManagerService$4| |onClick| |android.content.DialogInterface,int|
|com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver| |onChange| |boolean,android.net.Uri|
|com.android.server.accessibility.AccessibilityManagerService$Service| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |onServiceConnected| |android.content.ComponentName,android.os.IBinder|
|com.android.server.accessibility.AccessibilityManagerService| |access$3300| |com.android.server.accessibility.AccessibilityManagerService|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager$Stub| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|com.android.server.accessibility.AccessibilityManagerService| |access$800| |com.android.server.accessibility.AccessibilityManagerService,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.view.accessibility.IAccessibilityManager$Stub| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|android.widget.ActionMenuPresenter$OpenOverflowRunnable| |run| ||
|com.android.internal.view.menu.ContextMenuBuilder| |changeMenuMode| ||
|com.android.internal.view.menu.IconMenuView$1| |onClick| |android.view.View|
|com.android.internal.view.menu.SubMenuBuilder| |changeMenuMode| ||
|android.app.IActivityManager| |killApplicationWithAppId| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub$Proxy| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.content.IIntentReceiver$Stub| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.ActivityManagerNative| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|com.android.server.am.ActivityRecord$Token| |keyDispatchingTimedOut| |java.lang.String|
|android.app.IActivityManager| |killUid| |int,java.lang.String|
|com.android.server.am.ActiveServices| |startServiceLocked| |android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int|
|com.android.server.am.ActiveServices$ServiceMap| |rescheduleDelayedStarts| ||
|com.android.server.am.ActiveServices$ServiceRestarter| |run| ||
|android.app.IActivityManager| |bindBackupAgent| |android.content.pm.ApplicationInfo,int|
|com.android.server.am.ActivityManagerService| |backgroundServicesFinishedLocked| |int|
|com.android.server.am.BroadcastQueue| |setBroadcastTimeoutLocked| |long|
|com.android.server.am.ActivityManagerService| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.BroadcastQueue| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.BroadcastQueue| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |createRelroFile| |boolean,java.lang.String[]|
|com.android.commands.am.Am| |onRun| ||
|com.android.server.power.ShutdownThread$1| |onClick| |android.content.DialogInterface,int|
|com.android.server.power.ShutdownThread| |reboot| |android.content.Context,java.lang.String,boolean|
|com.android.server.power.ShutdownThread| |rebootSafeMode| |android.content.Context,boolean|
|com.android.server.power.ShutdownThread| |shutdown| |android.content.Context,boolean|
|com.android.server.accessibility.AccessibilityManagerService| |access$2100| |com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState|
|com.android.server.accessibility.ScreenMagnifier| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |access$300| |com.android.server.accessibility.ScreenMagnifier,int|
|com.android.server.accessibility.ScreenMagnifier| |access$200| |com.android.server.accessibility.ScreenMagnifier|
|com.android.internal.content.PackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.content.PackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.accessibility.AccessibilityManagerService$UserState$1| |binderDied| ||
|com.android.server.accessibility.AccessibilityManagerService$UserState| |onSwitchToAnotherUser| ||
|com.android.server.accessibility.AccessibilityManagerService| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.accessibility.AccessibilityManagerService$Service$2| |run| ||
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindow| |int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |getWindows| ||
|android.view.accessibility.IAccessibilityManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.IAccessibilityManager| |registerUiTestAutomationService| |android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo|
|android.view.accessibility.IAccessibilityManager| |temporaryEnableAccessibilityStateUntilKeyguardRemoved| |android.content.ComponentName,boolean|
|com.android.server.pm.PackageManagerService| |killApplication| |java.lang.String,int,java.lang.String|
|android.content.IIntentReceiver$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IIntentReceiver| |performReceive| |android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|android.app.IActivityManager| |inputDispatchingTimedOut| |int,boolean,java.lang.String|
|android.view.IApplicationToken$Stub$Proxy| |keyDispatchingTimedOut| |java.lang.String|
|android.view.IApplicationToken$Stub| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActiveServices$ServiceMap| |ensureNotStartingBackground| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService| |bindToAgentSynchronous| |android.content.pm.ApplicationInfo,int|
|android.app.ActivityManagerNative| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |sendPendingBroadcastsLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipCurrentReceiverLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |skipPendingBroadcastLocked| |int|
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| |java.lang.String[]|
|com.android.server.power.PowerManagerService$3| |run| ||
|com.android.server.wm.WindowManagerService| |rebootSafeMode| |boolean|
|com.android.server.wm.WindowManagerService| |shutdown| |boolean|
|com.android.server.accessibility.EventStreamTransformation| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |sendDelayedMotionEvents| ||
|com.android.server.accessibility.ScreenMagnifier| |onUserContextChanged| ||
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.app.ResolverActivity$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.LocationManagerService$4| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.ServiceWatcher$2| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.trust.TrustManagerService$3| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.tv.TvInputManagerService$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.usb.UsbSettingsManager$MyPackageMonitor| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onHandleForceStop| |android.content.Intent,java.lang.String[],int,boolean|
|android.widget.ActivityChooserModel$DataModelPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.app.ResolverActivity$1| |onPackageRemoved| |java.lang.String,int|
|com.android.internal.telephony.SmsApplication$SmsPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.InputMethodManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.LocationManagerService$4| |onPackageRemoved| |java.lang.String,int|
|com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.search.SearchManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.TextServicesManagerService$TextServicesMonitor| |onPackageRemoved| |java.lang.String,int|
|com.android.server.trust.TrustManagerService$3| |onPackageRemoved| |java.lang.String,int|
|com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1| |onPackageRemoved| |java.lang.String,int|
|com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor| |onPackageRemoved| |java.lang.String,int|
|android.view.accessibility.IAccessibilityManager$Stub$Proxy| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.view.accessibility.IAccessibilityManager$Stub| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy| |getWindows| ||
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |getWindows| ||
|com.android.server.accessibility.AccessibilityManagerService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomationConnection| |registerUiTestAutomationServiceLocked| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |enableAccessibility| ||
|com.android.server.pm.PackageManagerService| |scanPackageDirtyLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageLI| |java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |replaceSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|android.app.LoadedApk$ReceiverDispatcher$InnerReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.PendingIntent$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.content.IntentSender$FinishedDispatcher| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.am.Am$IntentReceiver| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.commands.monkey.MonkeyNetworkMonitor| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$13| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$15| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$24| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$25| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$28| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$29| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.ActivityManagerService$8| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.pm.PackageManagerService$12| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.am.BroadcastQueue| |performReceiveLocked| |com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int|
|com.android.server.wm.InputMonitor| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|android.view.IApplicationToken| |keyDispatchingTimedOut| |java.lang.String|
|com.android.server.am.ActiveServices| |bringDownServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$FullBackupEngine| |backupOnePackage| |android.content.pm.PackageInfo|
|com.android.server.backup.BackupManagerService$FullRestoreEngine| |restoreOneFile| |java.io.InputStream|
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |restoreOneFile| |java.io.InputStream,byte[]|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeNextAgent| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreKeyValue| ||
|android.app.IActivityManager| |registerReceiver| |android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int|
|com.android.server.am.ActivityManagerService| |cleanUpApplicationRecordLocked| |com.android.server.am.ProcessRecord,boolean,boolean,int|
|com.android.server.am.ActivityManagerService| |startAppProblemLocked| |com.android.server.am.ProcessRecord|
|com.android.server.am.ActivityManagerService| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|android.webkit.WebViewFactory| |onWebViewUpdateInstalled| ||
|android.webkit.WebViewFactory| |prepareWebViewInSystemServer| ||
|android.view.WindowManagerPolicy$WindowManagerFuncs| |rebootSafeMode| |boolean|
|android.view.WindowManagerPolicy$WindowManagerFuncs| |shutdown| |boolean|
|com.android.server.accessibility.AccessibilityInputFilter| |handleMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |handleMotionEventStateDelegating| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendMotionEvent| |android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |access$1800| |com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler|
|com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler| |transitionToDelegatingStateAndClear| ||
|android.view.accessibility.IAccessibilityManager| |unregisterUiTestAutomationService| |android.accessibilityservice.IAccessibilityServiceClient|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindow| |int|
|android.accessibilityservice.IAccessibilityServiceConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.accessibilityservice.IAccessibilityServiceConnection| |getWindows| ||
|android.app.UiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.internal.policy.impl.EnableAccessibilityController| |access$200| |com.android.internal.policy.impl.EnableAccessibilityController|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |scanPackageLI| |java.io.File,int,int,long,android.os.UserHandle|
|com.android.server.pm.PackageManagerService| |deletePackageX| |java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installNewPackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |replaceNonSystemPackageLI| |android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |unloadMediaPackages| |android.util.ArrayMap,int[],boolean|
|com.android.server.pm.PackageManagerService| |replacePackageLI| |android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.am.BroadcastQueue| |deliverToRegisteredReceiverLocked| |com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean|
|com.android.server.input.InputManagerService$WindowManagerCallbacks| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices| |forceStopLocked| |java.lang.String,int,boolean,boolean|
|com.android.server.am.ActiveServices| |bringDownServiceIfNeededLocked| |com.android.server.am.ServiceRecord,boolean,boolean|
|com.android.server.am.ActiveServices| |killServicesLocked| |com.android.server.am.ProcessRecord,boolean|
|com.android.server.am.ActiveServices| |processStartTimedOutLocked| |com.android.server.am.ProcessRecord|
|com.android.server.backup.BackupManagerService$PerformAdbBackupTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$EngineThread| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask| |run| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |execute| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |execute| ||
|com.android.commands.monkey.MonkeyNetworkMonitor| |register| |android.app.IActivityManager|
|com.android.server.am.ActivityManagerService| |trimApplications| ||
|com.android.server.am.ActivityManagerService| |makeAppNotRespondingLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String|
|com.android.server.am.ActivityManagerService| |access$300| |com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord|
|com.android.server.webkit.WebViewUpdateService| |onWebViewUpdateInstalled| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$PowerAction| |onPress| ||
|com.android.server.accessibility.AccessibilityInputFilter| |processBatchedEvents| |long|
|com.android.server.accessibility.TouchExplorer| |access$2800| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,int,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDelegating| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateDragging| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |handleMotionEventStateTouchExploring| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendActionDownAndUp| |android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |sendDownForAllNotInjectedPointers| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |sendHoverExitAndTouchExplorationGestureEndIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendTouchExplorationGestureStartAndHoverEnterIfNeeded| |int|
|com.android.server.accessibility.TouchExplorer| |sendUpForInjectedDownPointers| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |unregisterUiTestAutomationServiceLocked| ||
|android.view.accessibility.AccessibilityInteractionClient| |getWindow| |int,int|
|com.android.server.accessibility.AccessibilityManagerService$Service| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.view.accessibility.AccessibilityInteractionClient| |getWindows| |int|
|android.app.IUiAutomationConnection$Stub$Proxy| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|android.app.IUiAutomationConnection$Stub| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.pm.PackageManagerService| |deleteSystemPackageLI| |com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean|
|com.android.server.pm.PackageManagerService| |<init>| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService| |loadMediaPackages| |android.util.ArrayMap,int[]|
|com.android.server.pm.PackageManagerService| |scanDirLI| |java.io.File,int,int,long|
|com.android.server.pm.PackageManagerService| |access$4000| |com.android.server.pm.PackageManagerService,java.lang.String,int,int|
|com.android.server.pm.PackageManagerService| |installPackageLI| |com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |updateExternalMediaStatusInner| |boolean,boolean,boolean|
|com.android.server.input.InputManagerService| |notifyANR| |com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String|
|com.android.server.am.ActiveServices| |removeConnectionLocked| |com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord|
|com.android.server.am.ActiveServices| |stopServiceLocked| |com.android.server.am.ServiceRecord|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |execute| ||
|com.android.commands.monkey.Monkey| |getSystemInterfaces| ||
|com.android.server.am.ActivityManagerService| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]|
|com.android.server.webkit.WebViewUpdateService| |access$000| |com.android.server.webkit.WebViewUpdateService|
|com.android.internal.policy.impl.GlobalActions$LongPressAction| |onLongPress| ||
|com.android.internal.policy.impl.GlobalActions$Action| |onPress| ||
|com.android.internal.policy.impl.GlobalActions$SinglePressAction| |onPress| ||
|com.android.server.accessibility.AccessibilityInputFilter| |access$100| |com.android.server.accessibility.AccessibilityInputFilter,long|
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |onMotionEvent| |android.view.MotionEvent,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$1700| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,boolean|
|com.android.server.accessibility.TouchExplorer| |access$2600| |com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer| |access$2400| |com.android.server.accessibility.TouchExplorer,int|
|com.android.server.accessibility.TouchExplorer| |clear| |android.view.MotionEvent,int|
|android.app.UiAutomationConnection| |disconnect| ||
|android.view.accessibility.AccessibilityNodeInfo| |getWindow| ||
|android.view.accessibility.AccessibilityWindowInfo| |getChild| |int|
|android.view.accessibility.AccessibilityWindowInfo| |getParent| ||
|android.accessibilityservice.AccessibilityService| |getWindows| ||
|android.app.UiAutomation| |getWindows| ||
|android.app.IUiAutomationConnection$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IUiAutomationConnection| |connect| |android.accessibilityservice.IAccessibilityServiceClient|
|com.android.server.pm.PackageManagerService| |main| |android.content.Context,com.android.server.pm.Installer,boolean,boolean|
|com.android.server.pm.PackageManagerService$14| |run| ||
|com.android.server.pm.PackageManagerService$8| |run| ||
|com.android.server.pm.PackageManagerService| |access$2300| |com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo|
|com.android.server.pm.PackageManagerService| |access$4500| |com.android.server.pm.PackageManagerService,boolean,boolean,boolean|
|com.android.server.pm.PackageManagerService| |scanAvailableAsecs| ||
|com.android.server.am.ActiveServices| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |executeNextState| |com.android.server.backup.BackupManagerService$BackupState|
|com.android.commands.monkey.Monkey| |run| |java.lang.String[]|
|android.app.ActivityManagerNative| |setProcessLimit| |int|
|com.android.server.am.ActivityManagerService| |addAppLocked| |android.content.pm.ApplicationInfo,boolean,java.lang.String|
|com.android.server.am.ActivityManagerService| |startProcessLocked| |com.android.server.am.ProcessRecord,java.lang.String,java.lang.String|
|com.android.server.webkit.WebViewUpdateService$1| |onReceive| |android.content.Context,android.content.Intent|
|com.android.internal.policy.impl.GlobalActions$2| |onItemLongClick| |android.widget.AdapterView,android.view.View,int,long|
|com.android.internal.policy.impl.GlobalActions| |onClick| |android.content.DialogInterface,int|
|com.android.internal.policy.impl.GlobalActions| |handleShow| ||
|com.android.server.accessibility.AccessibilityInputFilter$1| |run| ||
|com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed| |forceSendAndRemove| ||
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onDoubleTap| |android.view.MotionEvent,int|
|com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed| |run| ||
|com.android.server.accessibility.TouchExplorer| |clear| ||
|com.android.server.accessibility.TouchExplorer| |handleMotionEventGestureDetecting| |android.view.MotionEvent,int|
|android.app.IUiAutomationConnection$Stub$Proxy| |disconnect| ||
|android.app.IUiAutomationConnection$Stub| |disconnect| ||
|android.app.UiAutomationConnection| |shutdown| ||
|android.app.UiAutomationConnection| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.UiAutomation| |connect| ||
|com.android.server.pm.PackageManagerService$6| |run| ||
|com.android.server.pm.PackageManagerService$11| |run| ||
|com.android.server.am.ActivityManagerService| |cleanUpRemovedTaskLocked| |com.android.server.am.TaskRecord,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |agentErrorCleanup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |beginBackup| ||
|com.android.server.backup.BackupManagerService$PerformBackupTask| |operationComplete| ||
|com.android.commands.monkey.Monkey| |main| |java.lang.String[]|
|android.app.IActivityManager| |setProcessLimit| |int|
|com.android.internal.policy.impl.GlobalActions| |access$1800| |com.android.internal.policy.impl.GlobalActions|
|com.android.internal.policy.impl.GlobalActions| |showDialog| |boolean,boolean|
|com.android.server.accessibility.TouchExplorer$DoubleTapDetector| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.EventStreamTransformation| |clear| ||
|com.android.server.accessibility.TouchExplorer$ExitGestureDetectionModeDelayed| |run| ||
|android.app.IUiAutomationConnection| |disconnect| ||
|android.app.IUiAutomationConnection$Stub$Proxy| |shutdown| ||
|android.app.IUiAutomationConnection$Stub| |shutdown| ||
|android.app.Instrumentation| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetworkViews| |setup| ||
|com.android.uiautomator.core.UiAutomationShellWrapper| |connect| ||
|com.android.server.am.ActivityManagerService| |removeTaskByIdLocked| |int,boolean|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |invokeAgentForBackup| |java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport|
|com.android.server.backup.BackupManagerService$PerformBackupTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |operationComplete| ||
|com.android.internal.policy.impl.PhoneWindowManager| |showGlobalActionsInternal| ||
|com.android.server.accessibility.AccessibilityInputFilter| |onMotionEvent| |android.view.MotionEvent,int|
|com.android.server.accessibility.ScreenMagnifier| |clear| ||
|android.app.UiAutomation| |disconnect| ||
|android.app.IUiAutomationConnection| |shutdown| ||
|android.test.InstrumentationCoreTestRunner| |getUiAutomation| ||
|android.test.InstrumentationTestRunner| |getUiAutomation| ||
|android.test.LaunchPerformanceBase| |getUiAutomation| ||
|com.android.commands.monkey.MonkeySourceNetwork| |startServer| ||
|com.android.commands.uiautomator.DumpCommand| |run| |java.lang.String[]|
|com.android.commands.uiautomator.EventsCommand| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |start| ||
|com.android.server.am.ActivityManagerService| |access$1400| |com.android.server.am.ActivityManagerService,int,boolean|
|com.android.server.am.ActivityManagerService| |removeTasksByPackageNameLocked| |java.lang.String,int|
|com.android.server.am.ActivityManagerService| |removeTasksByRemovedPackageComponentsLocked| |java.lang.String,int|
|com.android.server.backup.BackupManagerService$BackupRestoreTask| |handleTimeout| ||
|com.android.server.backup.BackupManagerService| |opComplete| |int|
|com.android.server.accessibility.AccessibilityInputFilter| |onInputEvent| |android.view.InputEvent,int|
|android.app.Instrumentation| |finish| |int,android.os.Bundle|
|com.android.uiautomator.core.UiAutomationShellWrapper| |disconnect| ||
|com.android.commands.monkey.MonkeySourceNetwork| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher$Command| |run| |java.lang.String[]|
|com.android.uiautomator.testrunner.UiAutomatorTestRunner| |run| |java.util.List,android.os.Bundle,boolean,boolean|
|com.android.server.backup.BackupManagerService| |handleTimeout| |int,java.lang.Object|
|com.android.server.backup.Trampoline| |opComplete| |int|
|android.test.InstrumentationCoreTestRunner| |finish| |int,android.os.Bundle|
|android.test.InstrumentationTestRunner| |finish| |int,android.os.Bundle|
|android.test.LaunchPerformanceBase| |finish| |int,android.os.Bundle|
|com.android.commands.monkey.MonkeyEventSource| |getNextEvent| ||
|com.android.commands.uiautomator.Launcher| |main| |java.lang.String[]|
|com.android.commands.uiautomator.RunTestCommand| |run| |java.lang.String[]|
|com.android.server.backup.BackupManagerService| |prepareOperationTimeout| |int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask|
|android.app.backup.IBackupManager$Stub$Proxy| |opComplete| |int|
|android.app.backup.IBackupManager$Stub| |opComplete| |int|
|android.test.InstrumentationTestRunner| |onStart| ||
|com.android.commands.monkey.Monkey| |runMonkeyCycles| ||
|com.android.server.backup.BackupManagerService$FullBackupEngine$FullBackupRunner| |run| ||
|com.android.server.backup.BackupManagerService$FullBackupObbConnection| |backupObbs| |android.content.pm.PackageInfo,java.io.OutputStream|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |initiateOneRestore| |android.content.pm.PackageInfo,int|
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |restoreFinished| ||
|android.app.backup.IBackupManager$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.IBackupManager| |opComplete| |int|
|android.test.InstrumentationCoreTestRunner| |onStart| ||
|com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask| |startRestore| ||
|com.android.server.backup.Trampoline| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.backup.BackupAgent$BackupServiceBinder| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub$Proxy| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.IBackupAgent$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.app.IBackupAgent| |doBackup| |android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doFullBackup| |android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestore| |android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFile| |android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager|
|android.app.IBackupAgent| |doRestoreFinished| |int,android.app.backup.IBackupManager|
|android.app.backup.BackupAgent$BackupServiceBinder| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreFileRunnable| |run| ||
|com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable| |run| ||
|android.provider.Settings$Global| |getUriFor| |java.lang.String|
|com.android.internal.policy.impl.GlobalActions| |<init>| |android.content.Context,android.view.WindowManagerPolicy$WindowManagerFuncs|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone,android.telephony.CellInfo|
|com.android.internal.telephony.dataconnection.DctController| |<init>| |com.android.internal.telephony.PhoneProxy[]|
|com.android.internal.telephony.dataconnection.DcTrackerBase$DataRoamingSettingObserver| |register| ||
|com.android.internal.telephony.gsm.GsmServiceStateTracker| |<init>| |com.android.internal.telephony.gsm.GSMPhone|
|com.android.internal.telephony.SMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher|
|com.android.internal.telephony.SmsUsageMonitor$SettingsObserverHandler| |<init>| |android.content.Context,java.util.concurrent.atomic.AtomicBoolean|
|com.android.server.backup.BackupManagerService| |<init>| |android.content.Context,com.android.server.backup.Trampoline|
|com.android.server.BatteryService| |onBootPhase| |int|
|com.android.server.ConnectivityService$SettingsObserver| |observe| |android.content.Context|
|com.android.server.display.OverlayDisplayAdapter$1| |run| ||
|com.android.server.display.WifiDisplayController| |<init>| |android.content.Context,android.os.Handler,com.android.server.display.WifiDisplayController$Listener|
|com.android.server.hdmi.HdmiControlService| |registerContentObserver| ||
|com.android.server.NetworkTimeUpdateService$SettingsObserver| |observe| |android.content.Context|
|com.android.server.notification.ZenModeHelper$SettingsObserver| |<init>| |com.android.server.notification.ZenModeHelper,android.os.Handler|
|com.android.server.NsdService$NsdStateMachine| |registerForNsdSetting| ||
|com.android.server.SamplingProfilerService| |registerSettingObserver| |android.content.Context|
|com.android.server.usb.UsbDeviceManager$UsbHandler| |<init>| |com.android.server.usb.UsbDeviceManager,android.os.Looper|
|com.android.server.wifi.WifiController| |registerForStayAwakeModeChange| |android.os.Handler|
|com.android.server.wifi.WifiController| |registerForWifiIdleTimeChange| |android.os.Handler|
|com.android.server.wifi.WifiController| |registerForWifiSleepPolicyChange| |android.os.Handler|
|com.android.server.wifi.WifiNotificationController$NotificationEnabledSettingObserver| |register| ||
|com.android.server.wifi.WifiServiceImpl| |registerForScanModeChange| ||
|com.android.server.wifi.WifiStateMachine| |<init>| |android.content.Context,java.lang.String,com.android.server.wifi.WifiTrafficPoller|
|com.android.server.wifi.WifiWatchdogStateMachine| |registerForSettingsChanges| ||
|com.android.server.wifi.WifiWatchdogStateMachine| |registerForWatchdogToggle| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMALTEPhone|
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone,android.telephony.CellInfo|
|com.android.internal.telephony.cdma.CdmaServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone|
|com.android.internal.telephony.dataconnection.DctController| |makeDctController| |com.android.internal.telephony.PhoneProxy[]|
|com.android.internal.telephony.dataconnection.DcTrackerBase$4| |onSubscriptionsChanged| ||
|com.android.internal.telephony.cdma.CdmaSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher,com.android.internal.telephony.gsm.GsmInboundSmsHandler|
|com.android.internal.telephony.gsm.GsmSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher|
|com.android.internal.telephony.ImsSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.SmsUsageMonitor|
|com.android.internal.telephony.ImsSMSDispatcher| |<init>| |com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher|
|com.android.internal.telephony.SmsUsageMonitor| |<init>| |android.content.Context|
|com.android.server.backup.Trampoline| |initialize| |int|
|com.android.server.backup.Trampoline| |setBackupServiceActive| |int,boolean|
|com.android.server.display.WifiDisplayAdapter$1| |run| ||
|com.android.server.hdmi.HdmiControlService| |onStart| ||
|com.android.server.NetworkTimeUpdateService| |systemRunning| ||
|com.android.server.notification.ZenModeHelper| |<init>| |android.content.Context,android.os.Looper|
|com.android.server.NsdService$NsdStateMachine| |<init>| |com.android.server.NsdService,java.lang.String|
|com.android.server.SamplingProfilerService| |<init>| |android.content.Context|
|com.android.server.usb.UsbDeviceManager| |<init>| |android.content.Context|
|com.android.server.wifi.WifiController| |initializeAndRegisterForSettingsChange| |android.os.Looper|
|com.android.server.wifi.WifiNotificationController| |<init>| |android.content.Context,com.android.server.wifi.WifiStateMachine|
|com.android.server.wifi.WifiServiceImpl| |checkAndStartWifi| ||
|com.android.server.wifi.WifiServiceImpl| |<init>| |android.content.Context|
|com.android.server.wifi.WifiWatchdogStateMachine| |<init>| |android.content.Context,android.os.Messenger|
|com.android.internal.telephony.cdma.CDMALTEPhone| |initSstIcc| ||
|com.android.internal.telephony.cdma.CdmaLteServiceStateTracker| |<init>| |com.android.internal.telephony.cdma.CDMAPhone|
|com.android.internal.telephony.cdma.CDMAPhone| |initSstIcc| ||
|com.android.internal.telephony.ProxyController| |<init>| |android.content.Context,com.android.internal.telephony.PhoneProxy[],com.android.internal.telephony.uicc.UiccController,com.android.internal.telephony.CommandsInterface[]|
|com.android.internal.telephony.IccSmsInterfaceManager| |<init>| |com.android.internal.telephony.PhoneBase|
|com.android.server.backup.BackupManagerService$Lifecycle| |onBootPhase| |int|
|android.app.backup.IBackupManager$Stub$Proxy| |setBackupServiceActive| |int,boolean|
|android.app.backup.IBackupManager$Stub| |setBackupServiceActive| |int,boolean|
|com.android.server.NsdService| |<init>| |android.content.Context|
|com.android.server.usb.UsbService| |<init>| |android.content.Context|
|com.android.server.wifi.WifiController| |<init>| |android.content.Context,com.android.server.wifi.WifiServiceImpl,android.os.Looper|
|com.android.server.wifi.WifiService| |onBootPhase| |int|
|com.android.server.wifi.WifiWatchdogStateMachine| |makeWifiWatchdogStateMachine| |android.content.Context,android.os.Messenger|
|com.android.internal.telephony.ProxyController| |getInstance| |android.content.Context,com.android.internal.telephony.PhoneProxy[],com.android.internal.telephony.uicc.UiccController,com.android.internal.telephony.CommandsInterface[]|
|com.android.internal.telephony.PhoneProxy| |<init>| |com.android.internal.telephony.PhoneBase|
|android.app.backup.IBackupManager| |setBackupServiceActive| |int,boolean|
|com.android.server.NsdService| |create| |android.content.Context|
|com.android.server.usb.UsbService$Lifecycle| |onStart| ||
|android.provider.Settings$Bookmarks| |add| |android.content.ContentResolver,android.content.Intent,java.lang.String,java.lang.String,char,int|
|android.speech.RecognitionService| |checkPermissions| |android.speech.IRecognitionListener|
|android.speech.RecognitionService| |access$700| |android.speech.RecognitionService,android.speech.IRecognitionListener|
|android.speech.RecognitionService$RecognitionServiceBinder| |cancel| |android.speech.IRecognitionListener|
|android.speech.RecognitionService$RecognitionServiceBinder| |startListening| |android.content.Intent,android.speech.IRecognitionListener|
|android.speech.RecognitionService$RecognitionServiceBinder| |stopListening| |android.speech.IRecognitionListener|
|android.speech.IRecognitionService$Stub$Proxy| |cancel| |android.speech.IRecognitionListener|
|android.speech.IRecognitionService$Stub| |cancel| |android.speech.IRecognitionListener|
|android.speech.IRecognitionService$Stub$Proxy| |startListening| |android.content.Intent,android.speech.IRecognitionListener|
|android.speech.IRecognitionService$Stub| |startListening| |android.content.Intent,android.speech.IRecognitionListener|
|android.speech.IRecognitionService$Stub$Proxy| |stopListening| |android.speech.IRecognitionListener|
|android.speech.IRecognitionService$Stub| |stopListening| |android.speech.IRecognitionListener|
|android.speech.IRecognitionService$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.speech.IRecognitionService| |cancel| |android.speech.IRecognitionListener|
|android.speech.IRecognitionService| |startListening| |android.content.Intent,android.speech.IRecognitionListener|
|android.speech.IRecognitionService| |stopListening| |android.speech.IRecognitionListener|
|android.speech.RecognitionService$RecognitionServiceBinder| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.speech.SpeechRecognizer| |destroy| ||
|android.speech.SpeechRecognizer| |handleCancelMessage| ||
|android.speech.SpeechRecognizer| |handleStartListening| |android.content.Intent|
|android.speech.SpeechRecognizer| |handleStopMessage| ||
|android.speech.SpeechRecognizer| |access$200| |android.speech.SpeechRecognizer|
|android.speech.SpeechRecognizer| |access$000| |android.speech.SpeechRecognizer,android.content.Intent|
|android.speech.SpeechRecognizer| |access$100| |android.speech.SpeechRecognizer|
|android.speech.SpeechRecognizer| |putMessage| |android.os.Message|
|android.speech.SpeechRecognizer| |cancel| ||
|android.speech.SpeechRecognizer| |setRecognitionListener| |android.speech.RecognitionListener|
|android.speech.SpeechRecognizer| |startListening| |android.content.Intent|
|android.speech.SpeechRecognizer| |stopListening| ||
|android.media.AudioRecord| |<init>| |int,int,int,int,int|
|android.media.MediaRecorder| |setAudioSource| |int|
|android.filterpacks.videosink.MediaEncoderFilter| |updateMediaRecorderParams| ||
|android.filterpacks.videosink.MediaEncoderFilter| |startRecording| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |process| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |open| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |process| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |open| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |open| |android.filterfw.core.FilterContext|
|android.filterfw.core.Filter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.CallbackFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |performOpen| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |performOpen| |android.filterfw.core.FilterContext|
|android.filterfw.core.FilterFunction| |execute| |android.filterfw.core.KeyValueMap|
|android.filterfw.core.SyncRunner| |processFilterNode| |android.filterfw.core.Filter|
|android.filterpacks.base.CallbackFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameBranch| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameFetch| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.FrameStore| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.GLTextureTarget| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.InputStreamSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.NullFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.ObjectSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.OutputStreamTarget| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.base.RetargetFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AlphaBlendFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.AutoFixFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapOverlayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BitmapSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlackWhiteFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BlendFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.BrightnessFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ColorTemperatureFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ContrastFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CropRectFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.CrossProcessFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DocumentaryFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawOverlayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DrawRectFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.DuotoneFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FillLightFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FisheyeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FixedRotationFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.FlipFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.GrainFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageCombineFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageEncoder| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageSlicer| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ImageStitcher| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.Invert| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.LomoishFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.NegativeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.PosterizeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RedEyeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ResizeFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.RotateFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SaturateFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SepiaFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SharpenFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.SimpleImageFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.StraightenFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.TintFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToGrayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToPackedGrayFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBAFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.ToRGBFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.imageproc.VignetteFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.numeric.SinWaveFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.performance.ThroughputFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringLogger| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.text.StringSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.text.ToUpperCase| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceRenderFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.ui.SurfaceTargetFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videoproc.BackDropperFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosink.MediaEncoderFilter| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.CameraSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.MediaSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureSource| |performProcess| |android.filterfw.core.FilterContext|
|android.filterpacks.videosrc.SurfaceTextureTarget| |performProcess| |android.filterfw.core.FilterContext|
|android.filterfw.core.FilterFunction| |executeWithArgList| |java.lang.Object[]|
|android.filterfw.core.SyncRunner| |performStep| ||
|android.media.effect.SingleFilterEffect| |apply| |int,int,int,int|
|android.media.effect.SizeChangeEffect| |apply| |int,int,int,int|
|android.filterfw.core.AsyncRunner$AsyncRunnerTask| |doInBackground| |android.filterfw.core.SyncRunner[]|
|android.filterfw.core.SyncRunner| |step| ||
|android.filterfw.core.SyncRunner| |run| ||
|android.media.effect.effects.AutoFixEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BitmapOverlayEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BlackWhiteEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BrightnessEffect| |apply| |int,int,int,int|
|android.media.effect.effects.ColorTemperatureEffect| |apply| |int,int,int,int|
|android.media.effect.effects.ContrastEffect| |apply| |int,int,int,int|
|android.media.effect.effects.CrossProcessEffect| |apply| |int,int,int,int|
|android.media.effect.effects.DocumentaryEffect| |apply| |int,int,int,int|
|android.media.effect.effects.DuotoneEffect| |apply| |int,int,int,int|
|android.media.effect.effects.FillLightEffect| |apply| |int,int,int,int|
|android.media.effect.effects.FisheyeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.FlipEffect| |apply| |int,int,int,int|
|android.media.effect.effects.GrainEffect| |apply| |int,int,int,int|
|android.media.effect.effects.GrayscaleEffect| |apply| |int,int,int,int|
|android.media.effect.effects.LomoishEffect| |apply| |int,int,int,int|
|android.media.effect.effects.NegativeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.PosterizeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.RedEyeEffect| |apply| |int,int,int,int|
|android.media.effect.effects.SaturateEffect| |apply| |int,int,int,int|
|android.media.effect.effects.SepiaEffect| |apply| |int,int,int,int|
|android.media.effect.effects.SharpenEffect| |apply| |int,int,int,int|
|android.media.effect.effects.StraightenEffect| |apply| |int,int,int,int|
|android.media.effect.effects.TintEffect| |apply| |int,int,int,int|
|android.media.effect.effects.VignetteEffect| |apply| |int,int,int,int|
|android.media.effect.effects.CropEffect| |apply| |int,int,int,int|
|android.media.effect.effects.RotateEffect| |apply| |int,int,int,int|
|android.filterfw.core.AsyncRunner$AsyncRunnerTask| |doInBackground| |java.lang.Object[]|
|android.filterfw.core.GraphRunner| |run| ||
|android.media.effect.FilterGraphEffect| |apply| |int,int,int,int|
|android.media.effect.effects.BackDropperEffect| |apply| |int,int,int,int|
|com.android.server.MmsServiceBroker| |access$1100| ||
|com.android.server.MmsServiceBroker$BinderService| |addMultimediaMessageDraft| |java.lang.String,android.net.Uri|
|com.android.internal.telephony.IMms$Stub$Proxy| |addMultimediaMessageDraft| |java.lang.String,android.net.Uri|
|com.android.internal.telephony.IMms$Stub| |addMultimediaMessageDraft| |java.lang.String,android.net.Uri|
|com.android.internal.telephony.IMms| |addMultimediaMessageDraft| |java.lang.String,android.net.Uri|
|com.android.internal.telephony.IMms$Stub| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|android.telephony.SmsManager| |addMultimediaMessageDraft| |android.net.Uri|
|com.android.server.MmsServiceBroker$BinderService| |onTransact| |int,android.os.Parcel,android.os.Parcel,int|
|com.android.internal.telephony.InboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |processMessagePart| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler$DeliveringState| |processMessage| |android.os.Message|
|com.android.internal.util.State| |processMessage| |android.os.Message|
|com.android.internal.util.IState| |processMessage| |android.os.Message|
|com.android.internal.util.StateMachine$SmHandler| |processMsg| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DisconnectedState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$DormantState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$InactiveState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$ScanState| |processMessage| |android.os.Message|
|com.android.server.wifi.SupplicantStateTracker$UninitializedState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullHighPerfLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$FullLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$NoLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiController$ScanOnlyLockHeldState| |processMessage| |android.os.Message|
|com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState| |processMessage| |android.os.Message|
|android.provider.Telephony$Sms$Inbox| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean|
|android.provider.Telephony$Sms$Outbox| |addMessage| |int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long|
|android.provider.Telephony$Mms| |query| |android.content.ContentResolver,java.lang.String[]|
|com.android.server.MmsServiceBroker| |access$1000| ||
|com.android.server.MmsServiceBroker$BinderService| |addTextMessageDraft| |java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IMms$Stub$Proxy| |addTextMessageDraft| |java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IMms$Stub| |addTextMessageDraft| |java.lang.String,java.lang.String,java.lang.String|
|com.android.internal.telephony.IMms| |addTextMessageDraft| |java.lang.String,java.lang.String,java.lang.String|
|android.telephony.SmsManager| |addTextMessageDraft| |java.lang.String,java.lang.String|
|android.provider.Telephony$Sms$Draft| |addMessage| |int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long|
|android.provider.Telephony$Sms| |query| |android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String|
|com.android.internal.telephony.InboundSmsHandler| |addTrackerToRawTable| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |addTrackerToRawTable| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |addTrackerToRawTable| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler| |addTrackerToRawTableAndSendMessage| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |addTrackerToRawTableAndSendMessage| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |addTrackerToRawTableAndSendMessage| |com.android.internal.telephony.InboundSmsTracker|
|com.android.internal.telephony.InboundSmsHandler| |dispatchNormalMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |processCdmaWapPdu| |byte[],int,java.lang.String,long|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |dispatchNormalMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dispatchNormalMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |dispatchMessageRadioSpecific| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dispatchMessageRadioSpecific| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.InboundSmsHandler| |dispatchMessageRadioSpecific| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.InboundSmsHandler| |dispatchMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |dispatchMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |dispatchMessage| |com.android.internal.telephony.SmsMessageBase|
|com.android.internal.telephony.InboundSmsHandler| |handleInjectSms| |android.os.AsyncResult|
|com.android.internal.telephony.InboundSmsHandler| |handleNewSms| |android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |handleInjectSms| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |handleInjectSms| |android.os.AsyncResult|
|com.android.internal.telephony.cdma.CdmaInboundSmsHandler| |handleNewSms| |android.os.AsyncResult|
|com.android.internal.telephony.gsm.GsmInboundSmsHandler| |handleNewSms| |android.os.AsyncResult|
|android.provider.Telephony$Threads| |getOrCreateThreadId| |android.content.Context,java.util.Set|
|android.provider.Telephony$Threads| |getOrCreateThreadId| |android.content.Context,java.lang.String|
|com.google.android.mms.pdu.PduPersister| |persist| |com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap|
|com.google.android.mms.pdu.PduPersister| |updateHeaders| |android.net.Uri,com.google.android.mms.pdu.SendReq|
|com.android.internal.telephony.WapPushOverSms| |writeInboxMessage| |int,byte[]|
|com.android.internal.telephony.WapPushOverSms| |dispatchWapPdu| |byte[],android.content.BroadcastReceiver,com.android.internal.telephony.InboundSmsHandler|
|android.provider.Telephony$Sms$Sent| |addMessage| |int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long|
|android.provider.Telephony$Sms$Inbox| |addMessage| |int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean|
|com.android.server.MmsServiceBroker| |access$800| ||
|com.android.server.MmsServiceBroker$BinderService| |importTextMessage| |java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms$Stub$Proxy| |importTextMessage| |java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms$Stub| |importTextMessage| |java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms| |importTextMessage| |java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean|
|android.telephony.SmsManager| |importTextMessage| |java.lang.String,int,java.lang.String,long,boolean,boolean|
|com.android.server.MmsServiceBroker| |access$900| ||
|com.android.server.MmsServiceBroker$BinderService| |importMultimediaMessage| |java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms$Stub$Proxy| |importMultimediaMessage| |java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms$Stub| |importMultimediaMessage| |java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean|
|com.android.internal.telephony.IMms| |importMultimediaMessage| |java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean|
|android.telephony.SmsManager| |importMultimediaMessage| |android.net.Uri,java.lang.String,long,boolean,boolean|
|android.provider.Telephony$Sms$Draft| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long|
|com.google.android.mms.util.PduCache| |normalizeKey| |android.net.Uri|
|com.google.android.mms.util.PduCache| |put| |android.net.Uri,com.google.android.mms.util.PduCacheEntry|
|com.google.android.mms.pdu.PduPersister| |load| |android.net.Uri|
|com.google.android.mms.util.PduCache| |put| |java.lang.Object,java.lang.Object|
|com.google.android.mms.util.AbstractCache| |put| |java.lang.Object,java.lang.Object|
|android.provider.Telephony$Mms| |query| |android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String|
|com.google.android.mms.pdu.PduPersister| |getPendingMessages| |long|
|com.android.internal.telephony.WapPushOverSms| |getDeliveryOrReadReportThreadId| |android.content.Context,com.google.android.mms.pdu.GenericPdu|
|android.provider.Telephony$Sms$Sent| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long|
|com.android.internal.telephony.WapPushOverSms| |isDuplicateNotification| |android.content.Context,com.google.android.mms.pdu.NotificationInd|
|android.provider.Telephony$Sms| |query| |android.content.ContentResolver,java.lang.String[]|
|com.android.internal.telephony.SmsBroadcastUndelivered| |scanRawTable| ||
|com.android.internal.telephony.SmsBroadcastUndelivered| |run| ||
|android.provider.Telephony$Sms$Outbox| |addMessage| |android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long|
