import os
from pathlib import Path
from androguard.core.analysis.analysis import MethodAnalysis
from androguard.misc import AnalyzeAPK
from collections import defaultdict

node_mapping = defaultdict(int)


def nodeConvert(node: MethodAnalysis):
    parameters = ""
    for x in str(node.method.get_descriptor()[1:].split(")")[0]).replace("/", ".").split(';'):
        x = x.strip()
        try:
            if x[0] == 'L':
                x = x[1:]
            parameters += f",{x}"
        except:
            continue

    return {
        "class_name": str(node.class_name)[1:-1].replace("/n", "").replace("/", "."),
        "method": node.method.name,
        "parameters": parameters[1:]
    }


def analyze_apk(apk_path: Path):
    a, _, dx = AnalyzeAPK(apk_path)
    for node in dx.get_call_graph().nodes():
        tmp = nodeConvert(node)
        node_mapping[str(tmp)] += 1


def get_files_in_dir(directory):
    files = []
    for dirpath, _, filenames in os.walk(directory):
        for filename in filenames[:10]:
            analyze_apk(os.path.join(dirpath, filename))
    sorted_dict = dict(sorted(node_mapping.items(), key=lambda x: x[1]))
    print(sorted_dict)
    return files


directory_path = 'dataset/raw/test'

get_files_in_dir(directory_path)
