import argparse
import requests
import joblib as J

from typing import Union
from pathlib import Path

SUPPORTED_MODE = ['train', 'test', 'all', 'custom']
TEST_SHA = 'pull_data/sha/test_old.sha256'
TRAIN_SHA = 'pull_data/sha/train_old.sha256'
TEST_DIR = 'dataset/raw/test/'
TRAIN_DIR = 'dataset/raw/train/'
APIKEY = ''

def pull_data(
        record: Union[str, Path],
        index: int,
        total_record: int,
        validation: bool,
        dest_dir: str
) -> None:
    try:
        [sha_code, name] = record.strip().split(' ') 
        msg = 'thành công'
        if not sha_code or not name:
            return

        res = requests.get(f'https://androzoo.uni.lu/api/download?apikey={APIKEY}&sha256={sha_code}',stream=True)
        if res.status_code == 200:
            with open(f'{dest_dir}{name}','wb') as file:
                file.write(res.content)
            
            if validation:
                with open('pull_data/sha/test_new.sha256', 'a') as file:
                    file.write(f'{sha_code} {name}\n')
        else:
            msg = f'thất bại ({res.status_code})'
        print(f'Tải {msg} file {name} {index}/{total_record}')
    except:
        pass
def pull_dataset(
        mode: str,
        path: Union[str, Path],
        n_count: int,
        validation = False,
) -> None:
    print(n_count)
    if mode == 'test':
        path = Path(TEST_SHA)
        dest = TEST_DIR
    elif mode == 'train':
        path = Path(TRAIN_SHA)
        dest = TRAIN_DIR
    else:
        path = Path(path)
        dest =''
    
    if not path.exists():
        raise FileNotFoundError(f'File {path} không tồn tại!')
    
    with open(path, 'r') as file:
        records = file.readlines()
        total_record = len(records)
    
    J.Parallel(n_jobs=4)(J.delayed(pull_data)(x, index, total_record, validation, dest) for index, x in enumerate(records))
    
    

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Pull dataset from SHA256'
    )

    # Định nghĩa các tham số đầu vào
    parser.add_argument(
        '-m', '--mode',
        help='Nhận các giá trị sau "train", "test", "all", "custom"',
        default='custom'
    )

    parser.add_argument(
        '-c', '--custom',
        help='Đường dẫn tự chọn',
        required=False,
    )

    parser.add_argument(
        '-n', '--n-count',
        help='Số luồng xử lý song song',
        default=4,
    )

    parser.add_argument(
        '-v', '--validation',
        help='Lọc và xóa các sha không khả dụng',
        default=True,
    )

    # Trích xuất tham số
    args = parser.parse_args()
    
    mode = args.mode
    custom_path = args.custom
    n_count = int(args.n_count),
    validation = args.validation,

    if mode is None or not mode in SUPPORTED_MODE:
        raise ValueError(f'Chế độ {mode} không được hỗ trợ')
    elif mode == 'custom' and args.custom is None:
        raise ValueError(f'Vui lòng nhập --custom hoặc -c để thêm đường dẫn')
    
    pull_dataset(
        mode,
        custom_path,
        n_count,
        validation
    )



