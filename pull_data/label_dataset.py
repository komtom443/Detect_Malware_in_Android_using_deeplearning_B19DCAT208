class NoLabelRecord:
    benign_count = 1
    malware_count = 1

    def __init__(self, record_str: str) -> None:
        tmp = record_str.strip().split(' ')
        self.sha_code = tmp[0]
        if 'Benig' in tmp[1]:
            self.label = 'Benign'
            self.index = NoLabelRecord.benign_count
            NoLabelRecord.benign_count += 1
        else:
            self.label = 'Malware'
            self.index = NoLabelRecord.malware_count
            NoLabelRecord.malware_count += 1

    def __hash__(self):
        return hash(self.sha_code)
    
    def __str__(self) -> str:
        return f'{self.sha_code} {self.label}{str(self.index).zfill(4)}.apk\n'
    
    def __lt__(self,other):
        if self.label != other.label:
            if self.label == 'Benign':
                return True
            return False
        return self.index < other.index

def label_dataset():
    with open('pull_data/android_zoo_sha/no-label/test-tmp.sha256', 'r') as file:
        records = list(set(NoLabelRecord(i) for i in file.readlines()))
        records.sort()
        for record in records:
            with open(f'pull_data/android_zoo_sha/label/{record.label}.sha256','a') as dest_file:
                dest_file.write(str(record))


if __name__ == '__main__':
    label_dataset()